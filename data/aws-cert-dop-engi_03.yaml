- en: 'Chapter 2: Fundamental AWS Services'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章：基础 AWS 服务
- en: Now that we have an understanding of the service principles and pillars that
    make up the best practices when using **Amazon Web Services** (**AWS**), it's
    time to look at some of the fundamental services that are used throughout the
    environments and accounts you will be working in. The fundamental services that
    we are referring to are compute services such as **Elastic Cloud Compute** (**EC2**),
    the global **Domain Name System** (**DNS**) service of **Route 53**, database
    services such as **RDS** and **Aurora**, and the advisory service of Trusted Advisor.
    This may seem like a review of services you are already familiar with if you have
    taken either the cloud practitioner, SysOps, or developer exams. However, since
    there is no longer a requirement to pass any of the lower associate exams before
    attempting (and passing) the DevOps professional test, it's not a bad idea to
    level-set on some of the basic services.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了构成最佳实践的服务原则和支柱，这些内容构成了使用**Amazon Web Services**（**AWS**）时的基本框架，是时候来看一些你将在环境和账户中使用的基础服务了。我们提到的基础服务包括计算服务，如**弹性云计算**（**EC2**）、全球**域名系统**（**DNS**）服务**Route
    53**、数据库服务，如**RDS**和**Aurora**，以及咨询服务**Trusted Advisor**。如果你已经参加过云从业者、SysOps 或开发者考试，这些服务可能会让你感觉像是在复习已知内容。然而，由于现在没有要求在参加（并通过）DevOps
    专业考试之前必须通过任何较低级别的关联考试，因此对一些基本服务进行复习也是一个不错的选择。
- en: This is not meant to be an exhaustive look at these services. The services mentioned
    will be brought into the context of the DevOps exam, so skipping over this chapter
    is not advised. However, if you feel that you have a strong grasp of the topics
    mentioned, then verify this by checking the review questions, along with the reference
    material. Likewise, you can review any topics that you feel that you already have
    a strong grasp of.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章并不打算全面介绍这些服务。所提到的服务将被引入到 DevOps 考试的背景中，因此不建议跳过本章。不过，如果你认为自己对这些话题有很强的掌握，可以通过检查复习题和参考资料来验证这一点。同样，你也可以复习任何你已经掌握的主题。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主要内容：
- en: Setting up and accessing your AWS account
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置和访问你的 AWS 账户
- en: Virtual Private Cloud networking and Route 53 networking
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟私有云网络和 Route 53 网络
- en: Cloud databases
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云数据库
- en: Message and queueing systems
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息和队列系统
- en: Trusted Advisor
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Trusted Advisor
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will need an AWS account to access the Management Console and CLI, which
    will be mentioned in the initial part of this chapter. If you need assistance
    with creating your account, then the [https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/](https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/)
    page will walk you through the steps of creating a new account. Basic knowledge
    of how to use a terminal to complete the shell commands is also required.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个 AWS 账户才能访问管理控制台和 CLI，这些内容将在本章的初始部分提到。如果你需要创建账户的帮助，访问[https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/](https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/)页面，它将指导你完成创建新账户的步骤。还需要具备基本的终端使用知识，以便完成
    shell 命令。
- en: Important Note
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: In this book, we will not be going over the geography, regions, Availability
    Zones, or edge locations of AWS. These are basic concepts that you should have
    a firm grasp of before attempting the DevOps exam.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们不会详细讨论 AWS 的地理位置、区域、可用区或边缘位置。这些是你在尝试 DevOps 考试之前应该牢牢掌握的基本概念。
- en: Setting up and accessing your AWS account
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置和访问你的 AWS 账户
- en: At this point, you most likely have an AWS account to work with; nevertheless,
    you may only have access through your workplace, where some of the permissions
    are restricted, so you would not be able to practice all of the skills that you
    need to feel confident in passing the DevOps professional exam.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你很可能已经拥有一个 AWS 账户来进行操作；然而，你可能只能通过你的工作场所访问该账户，其中一些权限被限制，因此你无法练习所有你需要掌握的技能，以便自信地通过
    DevOps 专业考试。
- en: If you don't already have a personal account for testing things, then this would
    be the perfect time to set one up. Even if you do have an account, you may want
    to take the time to set up a new account just for the exam to ensure that you
    are allowed to take advantage of the free tier (allocated for your first year
    in AWS) on a number of the provided services.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未为测试设置个人账户，那么现在是设置一个账户的完美时机。即使您已经有一个账户，您可能希望花时间设置一个新账户，专门用于考试，以确保您能够在提供的服务中利用首年的免费套餐（在
    AWS 上分配）。
- en: If you do already have an account, making the switch to **AWS Organizations**,
    especially using Control Tower, is an excellent exercise if you wish to create
    service control policies, organizational units, **Single Sign-On** (**SSO**),
    and cross-account roles.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经拥有账户，转换到 **AWS 组织** 特别是使用控制塔，是一个很好的练习，如果您希望创建服务控制策略、组织单位、**单点登录**（**SSO**）和跨账户角色。
- en: Important Note
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Control Tower takes a minimum of three distinct email accounts to get started
    for the three separate accounts that are created.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 控制塔需要至少三个不同的电子邮件账户来启动创建的三个独立账户。
- en: Once you have created your master account, you can send an invitation to the
    previous account that you created and allow it to join the organization.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 创建主账户后，您可以向之前创建的账户发送邀请，并允许其加入组织。
- en: Accessing the AWS Management Console
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进入 AWS 管理控制台
- en: The AWS Management Console is the front door (GUI) to accessing your AWS account.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 管理控制台是访问您的 AWS 账户的前门（GUI）。
- en: Start by opening any web browser and going to [https://aws.amazon.com/](https://aws.amazon.com/).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 首先打开任何网页浏览器并访问 [https://aws.amazon.com/](https://aws.amazon.com/)。
- en: 'On the start page, look for the **My Account** menu item. Hovering over this
    menu should give you the option of choosing **AWS Management Console**:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在起始页面上，查找 **我的账户** 菜单项。将鼠标悬停在此菜单项上，应该会给您选择 **AWS 管理控制台** 的选项：
- en: '![Figure 2.1 – Accessing the AWS Management Console'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.1 – 进入 AWS 管理控制台'
- en: '](img/Figure_2.1_B17405.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 2.1 – 进入 AWS 管理控制台'
- en: Figure 2.1 – Accessing the AWS Management Console
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 进入 AWS 管理控制台
- en: 'When following the link to log into AWS, so long as you are not going through
    an SSO portal, you will be presented with three fields: **Account ID or account
    alias**, **IAM user name**, and **Password**. Initially, when creating your account,
    you will only have the long account number to use, and this only has context to
    AWS. It is a good practice to create an account alias, enabling you to quickly
    associate the account ID with a logical name for the account. This becomes especially
    handy when adding multi-factor authentication to your accounts and seeing that
    logical names bring much more context than multiple rows of numbers.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当您按照链接登录 AWS 时，只要您没有通过 SSO 门户，您将看到三个字段：**账户 ID 或账户别名**，**IAM 用户名** 和 **密码**。最初在创建账户时，您只会有一个长账户号码可用，这只与
    AWS 有关。创建账户别名是个好习惯，使您能够快速将账户 ID 与账户的逻辑名称关联起来。特别是在为您的账户添加多因素身份验证并查看逻辑名称时，这比多行数字更具上下文。
- en: Once you have logged in, you can search for services, change regions, designate
    favorite services for quick access, and open support requests. If you have the
    correct permissions, you can also access the billing console.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，您可以搜索服务，更改区域，指定喜爱的服务以便快速访问，并打开支持请求。如果您拥有正确的权限，还可以访问计费控制台。
- en: As an initial step, to perform the exercises, we need to create a user, associate
    that user with a role containing permissions, and then create a set of keys that
    we will download and use later when we configure the CLI.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第一步，执行这些练习，我们需要创建一个用户，将该用户与包含权限的角色关联，然后创建一组密钥，稍后我们在配置 CLI 时会下载并使用这些密钥。
- en: 'Once you have logged into the AWS Management Console, follow these steps to
    create your user and a set of access keys:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 登录 AWS 管理控制台后，按照以下步骤创建您的用户和一组访问密钥：
- en: In the top search bar, type `IAM`.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部搜索栏中输入 `IAM`。
- en: Click on the **IAM** service; you will be taken to the IAM dashboard.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **IAM** 服务；您将进入 IAM 仪表板。
- en: In the left-hand navigation column, click on **Users**.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧导航栏中，点击 **用户**。
- en: Once you are in the user menu, click on the blue button at the top of the main
    screen, which is labeled **Add user**.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您进入用户菜单时，点击主屏幕顶部的蓝色按钮，标有 **添加用户**。
- en: For the username, you can choose anything, but for our user, we are going to
    name them `devops`.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于用户名，您可以选择任何名称，但对于我们的用户，我们将命名为 `devops`。
- en: We are going to enter a custom password in the field that meets our password
    requirements and leave the box that is labeled **Require password reset** unchecked:![Figure
    2.2 – Creating our user
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将输入一个符合密码要求的自定义密码，并保持**要求密码重置**框未勾选：![图2.2 - 创建我们的用户
- en: '](img/Figure_2.2_B17405.jpg)'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_2.2_B17405.jpg)'
- en: Figure 2.2 – Creating our user
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图2.2 - 创建我们的用户
- en: We can then click **Next** to move on to the permissions.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们可以点击**下一步**，继续设置权限。
- en: Under **Set permissions**, we want to choose **Attach existing policies** **directly**.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设置权限**下，我们要选择**直接附加现有策略**。
- en: 'For this initial user, we are going to use the **AdministratorAccess** job
    function policy. Select this policy so that the box on the left is checked, and
    then click the button at the bottom that says **Next: Tags**:![Figure 2.3 – Attaching
    the policy'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个初始用户，我们将使用**AdministratorAccess**职位功能策略。选择此策略，使左侧的框被选中，然后点击底部的**下一步：标签**按钮：![图2.3
    - 附加策略
- en: '](img/Figure_2.3_B17405.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_2.3_B17405.jpg)'
- en: Figure 2.3 – Attaching the policy
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图2.3 - 附加策略
- en: 'Just click the button at the bottom that says **Next: Review**.'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只需点击底部的**下一步：审查**按钮。
- en: If everything looks correct, click the blue button that is labeled **Create
    User**.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切看起来正常，点击底部的蓝色按钮，标记为**创建用户**。
- en: Because we said that we wanted programmatic access, once we have created our
    user, we will be given the opportunity to both see the secret access key and download
    the access key and secret key pair in a CSV file. Take note of your secret key
    for this user or download the file as this will be the only time that the secret
    access key will be available.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因为我们已经选择了程序访问权限，所以一旦我们创建了用户，就会有机会查看秘密访问密钥，并下载访问密钥和秘密密钥对的CSV文件。请记下此用户的秘密密钥，或下载该文件，因为这是唯一一次可以获取秘密访问密钥的机会。
- en: With that, we have set up our first user, along with their access policy, password,
    access key, and secret key. We will be referencing this user throughout other
    exercises in this book. You are free to set up any username you are comfortable
    with but for an administrative user account that is not using the root account,
    we will be using the *devops* user.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们已经设置了第一个用户及其访问策略、密码、访问密钥和秘密密钥。在本书的其他练习中，我们将引用此用户。你可以自由设置任何你喜欢的用户名，但对于一个不使用root账户的管理用户账户，我们将使用*devops*用户。
- en: Setting up and using the AWS CLI v2
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置和使用AWS CLI v2
- en: You can indeed perform most tasks using the graphical web-based interface of
    the Management Console. As a DevOps engineer, you will want to automate items
    in your environment, and the CLI gives you the power, via a set of scripting abilities,
    to do this. The CLI is one of the favorite tools of many for both its speed and
    powerful capabilities.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你确实可以使用基于图形的Web界面管理控制台执行大多数任务。作为DevOps工程师，你会希望在环境中自动化一些操作，CLI通过一系列脚本功能赋予你这种能力。CLI是许多人最喜爱的工具之一，因其速度和强大的功能。
- en: Note for Previous CLI v1 Users
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以前CLI v1用户注意
- en: If you have previously installed the AWS CLI v1, then it is strongly recommended
    that you uninstall v1 *before* installing CLI v2\. Both CLI commands use the same
    command name of `aws`. If you do not want to uninstall CLI v1, then you can put
    an alias in your path.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前安装过AWS CLI v1，强烈建议你在安装CLI v2之前先卸载v1。两个CLI命令都使用相同的命令名称`aws`。如果你不想卸载CLI v1，那么可以在你的路径中设置别名。
- en: Mac setup
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Mac设置
- en: 'So long as you have sudo privileges on your machine, you can easily install
    AWS CLI v2 on your Mac using the bundled installer:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 只要你的机器上有sudo权限，你就可以轻松使用捆绑安装程序在Mac上安装AWS CLI v2：
- en: Open a Terminal window.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端窗口。
- en: 'Run the following two commands to install the AWS CLI:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下两条命令来安装AWS CLI：
- en: '[PRE0]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Check that the correct version has been installed by running the following
    command:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令来检查是否已安装正确版本：
- en: '[PRE1]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output should be similar to the following:'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出应该类似于以下内容：
- en: '[PRE2]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: So long as the number after `cli` starts with a `2`, you have successfully installed
    AWS CLI v2.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 只要`cli`后面的数字以`2`开头，你就成功安装了AWS CLI v2。
- en: You can now skip to the Configuring the CLI section.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以跳到配置CLI的部分。
- en: PC setup
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PC设置
- en: Note for PC Users
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: PC用户注意
- en: To run CLI v2, you need to be running at least a 64-bit version of Windows XP
    or a later version of the Windows operating system.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行CLI v2，你的Windows XP或更高版本操作系统必须是64位版本。
- en: 'If you have administrative rights to install software on your machine, then
    you can follow these instructions to install AWS CLI v2:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有在计算机上安装软件的管理权限，您可以按照以下说明安装 AWS CLI v2：
- en: 'Download the AWS CLI MSI installer for Windows: [https://awscli.amazonaws.com/AWSCLIV2.msi](https://awscli.amazonaws.com/AWSCLIV2.msi).'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载适用于 Windows 的 AWS CLI MSI 安装程序：[https://awscli.amazonaws.com/AWSCLIV2.msi](https://awscli.amazonaws.com/AWSCLIV2.msi)。
- en: Run the downloaded MSI installer and follow the onscreen instructions.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行下载的 MSI 安装程序并按照屏幕上的指示进行操作。
- en: 'Confirm that the correct version has been installed by running the following
    command:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令确认是否已安装正确的版本：
- en: '[PRE3]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Linux setup
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux 设置
- en: 'Before installing CLI v2 on a Linux machine, there are a few prerequisites
    that must be taken care of first:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 机器上安装 CLI v2 之前，需要先处理一些先决条件：
- en: You need the ability to unzip a package, either with the system `unzip` command
    or some other installed package.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要具备解压软件包的能力，可以使用系统的 `unzip` 命令或其他已安装的软件包。
- en: To have AWS CLI v2 run correctly, you need to make sure that the `glibc`, `groff`,
    and `less` packages are installed on your distribution. Most major distributions
    already have these packages installed by default.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了确保 AWS CLI v2 正常运行，您需要确保在发行版中已安装 `glibc`、`groff` 和 `less` 软件包。大多数主要发行版默认已安装这些软件包。
- en: AWS supports AWS CLI v2 on newer 64-bit versions of CentOS, Fedora, Ubuntu,
    Amazon Linux 1, and Amazon Linux 2\.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 支持在更新的 64 位版本的 CentOS、Fedora、Ubuntu、Amazon Linux 1 和 Amazon Linux 2 上使用
    AWS CLI v2\。
- en: 'Now that the prerequisites have been met, you can use the following instructions
    to install the CLI:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在先决条件已满足，您可以按照以下说明安装 CLI：
- en: 'Run the following `curl` command to download the AWS CLI v2 ZIP file:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下 `curl` 命令以下载 AWS CLI v2 的 ZIP 文件：
- en: '[PRE4]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now that the ZIP file has been downloaded, we can unzip it:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在 ZIP 文件已下载，我们可以解压它：
- en: '[PRE5]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Once unzipped, we can run the `install` program:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压后，我们可以运行 `install` 程序：
- en: '[PRE6]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Check that the correct version has been installed by running the following
    command:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令检查是否已安装正确的版本：
- en: '[PRE7]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output should be similar to the following:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出应类似于以下内容：
- en: '[PRE8]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: A reference to setting up the CLI from AWS can be found in their documentation
    at [https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 CLI 的参考资料可以在 AWS 的文档中找到：[https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html)。
- en: Configuring the CLI
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 CLI
- en: Now that you have installed the CLI, it is a good idea to configure it. If you
    had the CLI v1 installed and had used profiles in the past, you should be able
    to use those same profiles going forward. To quickly configure your CLI, you can
    use the `aws configure` command; however, as a prerequisite, it's a good idea
    to have already created and downloaded a key and a secret key for your user from
    IAM. You will need this pair of credentials if you are configuring either your
    default profile or a secondary profile to use with the examples shown.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 CLI 后，建议进行配置。如果您曾安装过 CLI v1 并使用过配置文件，您应该可以继续使用这些配置文件。为了快速配置 CLI，您可以使用 `aws
    configure` 命令；不过，作为先决条件，最好事先在 IAM 中为您的用户创建并下载密钥和秘密密钥。如果您要配置默认配置文件或辅助配置文件用于本书中的示例，您将需要这对凭证。
- en: If you haven't already done so, log back into your AWS account via the Management
    Console and then navigate to the IAM service so that you can create yourself a
    user and role. Using this user, you can allocate an **access key ID** and **secret
    key ID** to input into the CLI that you can use for the tutorials in this book.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未操作，请通过管理控制台重新登录 AWS 账户，然后导航至 IAM 服务，创建一个用户和角色。使用该用户，您可以分配 **访问密钥 ID** 和
    **秘密密钥 ID**，并将其输入 CLI 中，以便在本书中的教程中使用。
- en: 'Once you have your key pair, follow these steps to configure your CLI:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 获得密钥对后，按照以下步骤配置 CLI：
- en: 'Run the `aws configure` command:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `aws configure` 命令：
- en: '[PRE9]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When prompted, cut and paste the access key ID.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当提示时，剪切并粘贴访问密钥 ID。
- en: When prompted, cut and paste the secret key ID.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当提示时，剪切并粘贴秘密密钥 ID。
- en: When prompted, set your default region (we will be using `us-east-2`) for the
    examples.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当提示时，为示例设置默认区域（我们将使用 `us-east-2`）。
- en: You can just hit *Enter* to exit here and use the default JSON output; however,
    I find setting the output as a table is a lot more user-readable.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以直接按 *Enter* 键退出并使用默认的 JSON 输出；然而，我发现将输出设置为表格形式会更易于用户阅读。
- en: For many of the examples you will see in this book, a *profile* will be added
    to the CLI commands.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的许多示例中，CLI 命令将会添加一个 *profile*。
- en: Cloud compute in AWS
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS 中的云计算
- en: 'When we talk about compute in AWS, we are talking about several services, including
    Amazon EC2, Elastic Load Balancing, AWS Batch, Elastic Container Service, and
    Elastic Kubernetes Service, along with AWS Fargate, the managed service that allows
    you to run your containers with minimal overhead. It even includes Lightsail,
    which is one of the quickest ways to get up and running on the cloud for developers,
    with no need to configure software or networking:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论 AWS 中的计算时，我们指的是多个服务，包括 Amazon EC2、弹性负载均衡（Elastic Load Balancing）、AWS 批处理（AWS
    Batch）、弹性容器服务（Elastic Container Service）和弹性 Kubernetes 服务（Elastic Kubernetes Service），以及
    AWS Fargate 这项托管服务，它允许你以最小的开销运行容器。它甚至包括 Lightsail，这是开发人员在云中快速启动的最快方式，无需配置软件或网络：
- en: '![Figure 2.4 – Compute services in AWS'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.4 – AWS 中的计算服务'
- en: '](img/Figure_2.4_B17405.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.4_B17405.jpg)'
- en: Figure 2.4 – Compute services in AWS
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – AWS 中的计算服务
- en: 'Although many services fall under the compute umbrella in AWS, the most foundational
    service is EC2\. This is your virtualized instance in the Amazon cloud. While
    other services, such as Elastic Container Service, Elastic Kubernetes Service,
    and even Elastic Beanstalk, can allow you to run containers in AWS, at their core,
    they are running on EC2 instances. Thus, knowing the foundational pieces of the
    EC2 service, such as how to select the correct instance type, how to use the optimal
    load balancer (as there are three to choose from), and how to add volumes to an
    instance, all become relative information, both when processing questions for
    the DevOps professional exam and in your day-to-day duties as a professional:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 AWS 中有许多服务属于计算服务的范畴，但最基础的服务是 EC2。EC2 是你在 Amazon 云中的虚拟实例。尽管其他服务，如弹性容器服务（Elastic
    Container Service）、弹性 Kubernetes 服务（Elastic Kubernetes Service），甚至 Elastic Beanstalk，都可以让你在
    AWS 中运行容器，但它们的核心仍然是运行在 EC2 实例上。因此，了解 EC2 服务的基础知识，例如如何选择正确的实例类型，如何使用最优的负载均衡器（因为有三种可供选择），以及如何将存储卷添加到实例中，这些都是相对的信息，无论是处理
    DevOps 专业考试问题，还是作为专业人士在日常工作中的任务：
- en: '![Figure 2.5 – EC2 in a real-world architecture'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.5 – EC2 在实际架构中的应用'
- en: '](img/Figure_2.5_B17405.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.5_B17405.jpg)'
- en: Figure 2.5 – EC2 in a real-world architecture
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – EC2 在实际架构中的应用
- en: In the preceding diagram, we can see a real-life scenario where EC2 instances
    are being used in an Auto Scaling group to service the WebSphere platform. There
    are multiple EC2 instances in a private subnet that can only be accessed by an
    application load balancer that outside users see from a DNS entry in Route 53\.
    If internal users need to access any of the WebSphere servers, there is a bastion
    host that allows the SSH protocol in the public subnet. The bastion host is in
    an Auto Scaling group that spans both Availability Zones, but only one host is
    up at a time.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图示中，我们可以看到一个实际场景，其中 EC2 实例被用于自动扩展组中，以支持 WebSphere 平台。多个 EC2 实例位于一个私有子网中，外部用户只能通过
    Route 53 中的 DNS 记录，通过应用负载均衡器访问这些实例。如果内部用户需要访问 WebSphere 服务器中的任何一个，可以通过位于公共子网中的堡垒主机使用
    SSH 协议进行访问。堡垒主机位于一个跨越两个可用区的自动扩展组中，但每次只有一个主机处于活动状态。
- en: We will now take a closer look at some of these services, especially the EC2
    service.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将更详细地了解这些服务，特别是 EC2 服务。
- en: Amazon Elastic Cloud Compute (EC2)
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 亚马逊弹性云计算（EC2）
- en: Amazon EC2 allows you to create a virtual server to perform any number of tasks
    in the cloud. EC2 allows for a whole array of customization. There is a multitude
    of operating systems that you can use to meet your application needs. Appropriating
    the correct amount of memory and processing power is simply a matter of choosing
    the correct instance type based on the needs of your workload.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊 EC2 允许你创建一个虚拟服务器，在云中执行多个任务。EC2 提供了广泛的定制选项。你可以选择多种操作系统，以满足应用需求。适当配置内存和处理能力只需根据工作负载的需求选择合适的实例类型即可。
- en: EC2 also has three different pricing models. Each allows you the flexibility
    or discounting to fit your needs. There are On-Demand Instances, Reserved Instances,
    and Spot Instances.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: EC2 还提供三种不同的定价模式，每种模式都可以根据需求提供灵活性或折扣。它们分别是按需实例、预留实例和竞价实例。
- en: '**On-Demand Instances** are the default instance type and offer no long-term
    commitments when requesting an EC2 compute instance. You determine when you want
    to start, stop, hibernate, launch, or terminate the instance without any repercussions.
    From a pricing standpoint, you are only paying for On-Demand Instances per second
    while the instance is in the *running* state.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**按需实例**是默认的实例类型，在请求 EC2 计算实例时无需长期承诺。你可以自行决定何时启动、停止、休眠、启动或终止实例，并且不会有任何后果。从定价的角度来看，你只需为处于*运行中*状态的按需实例按秒计费。'
- en: If you have known workloads with EC2 that will be running constantly for a year
    or need a desired capacity in a certain Availability Zone, then **Reserved Instances**
    can provide cost savings, along with reserved capacity in that particular Availability
    Zone. There are two different term commitments available with Reserved Instances.
    These are known as 1 year and 3 years, with the latter establishing greater savings
    for longer-term commitments.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有已知的工作负载将在 EC2 上持续运行一年，或需要在特定可用区内的预定容量，那么**预留实例**可以提供成本节省，并且在该特定可用区内提供预留容量。预留实例有两种不同的承诺期限，分别为
    1 年和 3 年，后者在长期承诺下提供更大的节省。
- en: When AWS has extra capacity that isn't being utilized, then those instances
    are made available as **Spot Instances** at precipitous discounts. The supply
    and demand of different types of instances that are available makes the price
    fluctuate, sometimes rather rapidly. These savings can reach up to 80% off of
    the normal on-demand pricing; however, there are a few caveats that come along
    with it. First, you have to launch the instance immediately and you cannot stop
    or hibernate Spot Instances. When launching a Spot Instance, you will set a maximum
    price for what you are looking to spend, such as the current on-demand price,
    and if the price rises above the maximum price that you set, then AWS will send
    a signal and you will be given 2 minutes to save your work before the instance
    is terminated.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当 AWS 有多余的容量未被利用时，这些实例会作为**竞价实例**以大幅折扣提供。不同类型实例的供需情况会导致价格波动，有时波动较快。这些折扣可以达到正常按需定价的
    80%；然而，这也有一些限制。首先，你必须立即启动实例，并且不能停止或休眠竞价实例。在启动竞价实例时，你需要设置一个最大价格，例如当前的按需价格，如果价格超过你设置的最大价格，AWS
    会发出信号，给你 2 分钟的时间保存工作，然后实例会被终止。
- en: EC2 instance types
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: EC2 实例类型
- en: At the time of writing, there are over 170 instance types that allow you to
    customize your compute needs for any type of workload that you would want to run
    into in the cloud. It's not important to try and memorize all the different types
    and sizes of the instances, along with their compute and memory specifications.
    However, it is a good idea to know the different categories that EC2 breaks down
    into for workload specificity and which EC2 families belong to those categories.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在写本文时，已有超过 170 种实例类型，允许你根据任何想要在云中运行的工作负载定制计算需求。并不重要的是记住所有不同类型和大小的实例，以及它们的计算和内存规格。然而，了解
    EC2 在工作负载特定性方面如何划分不同的类别，以及哪些 EC2 系列属于这些类别，是一个好主意。
- en: Note
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Only some EC2 instances allow enhanced networking and this can be a deciding
    factor when trying to choose the correct instance type. The enhanced networking
    feature can be especially important when dealing with troubleshooting or workloads
    as it supports higher bandwidth and higher packets per second.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 只有部分 EC2 实例支持增强型网络，这可能成为选择正确实例类型时的决定性因素。增强型网络功能在处理故障排除或工作负载时尤其重要，因为它支持更高的带宽和每秒更多的数据包。
- en: Since there are many types of workloads moving to the cloud, each with its own
    specific needs, AWS has created several different EC2 instance families. Each
    of these families contains one or more instance types and has a preferred application
    profile.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 由于有许多类型的工作负载正在迁移到云中，每种工作负载都有其特定的需求，AWS 创建了几个不同的 EC2 实例系列。每个系列包含一种或多种实例类型，并具有优先应用程序配置文件。
- en: 'These instance families can be broken down into groupings, as follows:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这些实例系列可以按以下方式进行分组：
- en: General-purpose instances
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用型实例
- en: Compute-optimized instances
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算优化型实例
- en: Memory-optimized instances
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存优化型实例
- en: Accelerated computing instances
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加速计算实例
- en: Storage-optimized instances
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储优化型实例
- en: Let's take a look at these in more detail.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看这些内容。
- en: General-purpose instances
  id: totrans-128
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 通用型实例
- en: General-purpose instances balance memory, compute, and network resources and
    are a good choice for an assortment of workloads. This includes the T class of
    instances, which have burstable credits that build up over time. General-purpose
    instances are a good starting point if you don't have a full classification of
    your workload.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 通用型实例平衡内存、计算和网络资源，是各种工作负载的理想选择。这包括T类实例，这些实例具有可积累的突发信用点。若你没有完整的工作负载分类，通用型实例是一个很好的起点。
- en: '*Use cases*: Web servers, development and test servers, code repositories,
    small to mid-sized databases, and backend servers for SAP.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用案例*：Web服务器、开发和测试服务器、代码库、小型到中型数据库以及SAP后台服务器。'
- en: Compute-optimized instances
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 计算优化实例
- en: Compute-optimized instances are tailored for workloads that benefit from high-performance
    processors. The instances in this family also have the ability for enhanced networking
    pre-built in, along with being **Elastic Block Store** (**EBS**)-optimized by
    default.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 计算优化实例专为从高性能处理器中获益的工作负载量身定制。该系列中的实例还具备增强网络功能，并默认优化为**弹性块存储**（**EBS**）。
- en: '*Use cases*: Batch processing, video encoding, ad serving, distributed analytics,
    CPU-based machine learning, gaming, scientific modeling, and high-performance
    science and engineering applications such as genome analysis or computational
    fluid dynamics.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用案例*：批处理、视频编码、广告投放、分布式分析、基于CPU的机器学习、游戏、科学建模以及高性能科学与工程应用，如基因组分析或计算流体动力学。'
- en: Memory-optimized instances
  id: totrans-134
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 内存优化实例
- en: This family of instances is, as its name implies, designed for memory-intensive
    applications. They are designed to deliver fast performance capabilities on jobs
    that need lots of memory.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这一系列实例，顾名思义，是为内存密集型应用而设计的。它们旨在为需要大量内存的任务提供快速的性能能力。
- en: '*Use cases*: Open source databases, in-memory caches, and real-time analytics.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用案例*：开源数据库、内存缓存和实时分析。'
- en: Accelerated computing instances
  id: totrans-137
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 加速计算实例
- en: Accelerated computing instances contain co-processors or hardware accelerators
    that perform special functions much more efficiently than other processors. These
    functions can include data pattern matching, floating-point number calculations,
    and graphics processing.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 加速计算实例包含协处理器或硬件加速器，这些加速器比其他处理器执行特定功能的效率更高。这些功能可能包括数据模式匹配、浮点数计算和图形处理。
- en: '*Use cases*: Speech recognition, high-performance computing, drug discovery,
    computational finance, and autonomous vehicles.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用案例*：语音识别、高性能计算、药物发现、计算金融和自动驾驶汽车。'
- en: Storage-optimized instances
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 存储优化实例
- en: Storage-optimized instances provide directly attached storage options that allow
    for specialized storage needs. This means that the instance storage can be optimized
    for very customized **input and output** (**I/O**) performance in the case of
    H1 instances or very high storage density in the case of **high storage** (**HS**)
    instances.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 存储优化实例提供直接连接的存储选项，能够满足特定的存储需求。这意味着实例存储可以针对非常定制化的**输入和输出**（**I/O**）性能进行优化，例如H1实例，或者在**高存储**（**HS**）实例的情况下提供非常高的存储密度。
- en: '*Use cases*: NoSQL databases, data warehousing, Elasticsearch, in-memory databases,
    traditional databases, and analytics workloads.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用案例*：NoSQL数据库、数据仓库、Elasticsearch、内存数据库、传统数据库和分析工作负载。'
- en: 'Instances are backed by two types of storage: **instance store** and EBS. When
    selecting an instance type, it will show whether the instance is backed by EBS
    or an instance store. There are some major differences between these two backing
    types, especially when it comes to persistence. One of the major advantages of
    an instance store is that it has high I/O and throughput. This comes from it being
    directly attached to the instance. The disadvantage of instance store-based volumes
    comes from persistence. If you restart an EC2 instance backed by an instance store,
    then you will lose all ephemeral data, such as logs and temporary files. This
    is not the case with EBS-based instances since the storage is not directly attached
    to the instance.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 实例由两种存储类型支持：**实例存储**和EBS。在选择实例类型时，系统会显示该实例是由EBS还是实例存储支持。这两种存储类型之间存在一些重要区别，尤其是在持久性方面。实例存储的一个主要优势是其高I/O和吞吐量。这是因为它直接连接到实例。基于实例存储的卷的缺点则在于持久性。如果你重新启动一个由实例存储支持的EC2实例，所有临时数据，如日志和临时文件，将会丢失。基于EBS的实例则不同，因为存储并未直接连接到实例。
- en: Understanding Amazon Machine Images (AMIs)
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解 Amazon 机器镜像（AMI）
- en: Whenever you launch an EC2 instance, it must start from an **Amazon Machine
    Image** (**AMI**) so that it contains the required information to launch. These
    can be the base operating system images that are, for all intents and purposes,
    clean slates. Or they can be AMIs that you or some other entity has created as
    a valid checkpoint for a working system or systems running on a single instance.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 每当您启动 EC2 实例时，它必须从**Amazon 机器镜像**（**AMI**）启动，以便包含启动所需的信息。这些可以是基础操作系统镜像，实际上是干净的起点。或者，它们也可以是您或其他实体创建的
    AMI，作为一个有效的工作系统或在单个实例上运行的多个系统的检查点。
- en: AMIs can be provided by Amazon itself, your own user account, shared privately
    with your other accounts or from a partner account, created by a member from the
    community, or even available for free or for a per-hour cost on the AWS Marketplace.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: AMI 可以由 Amazon 本身提供，由您的用户账户提供，私下与您的其他账户共享，或者来自合作伙伴账户，由社区成员创建，甚至可以在 AWS Marketplace
    上免费或按小时收费提供。
- en: Use cases for AMIs
  id: totrans-147
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: AMI 的使用案例
- en: You can create your own AMIs to use in Auto Scaling groups or to speed up the
    launch of complex instances that require multiple steps to download, install,
    and configure the software.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以创建自己的 AMI，用于自动伸缩组或加速启动需要多个步骤下载、安装和配置软件的复杂实例。
- en: There is also a case for a base image in an organization that has a pre-approved
    operating system, as well as security settings pre-installed for all users to
    conform to.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 也有一种情况是组织中的基础镜像，预先批准了操作系统，并为所有用户预装了安全设置以便遵循。
- en: There are community AMIs available; however, you run these at your own risk
    since there may be unknown packages installed on them.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 有可用的社区 AMI；然而，使用这些 AMI时需要自行承担风险，因为它们上面可能已安装了未知的软件包。
- en: Another option is to use marketplace AMIs provided by vendors and partners that
    have vetted and known software already preconfigured. These AMIs often have an
    extra price per hour when running the instance.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是使用由供应商和合作伙伴提供的市场 AMI，这些 AMI 已经经过验证并预先配置了已知的软件。这些 AMI 通常会在运行实例时收取每小时额外费用。
- en: Backing up Amazon EC2 instances
  id: totrans-152
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备份 Amazon EC2 实例
- en: 'If you want to back up your instance either for point-in-time recovery purposes
    or to use it in a launch configuration with autoscaling, then you need to create
    an AMI:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想备份您的实例，无论是为了时间点恢复的目的，还是为了在自动伸缩配置中使用它，那么您需要创建一个 AMI：
- en: 'First, we must find the latest version of the Amazon Linux2 AMI with a little
    help from the Systems Manager service and throw this into a variable for the next
    step:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们必须借助 Systems Manager 服务找到最新版本的 Amazon Linux2 AMI，并将其存储到变量中以便下一步使用：
- en: '[PRE10]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Launch an EC2 instance. Now that we know the latest version of our base AMI
    that we are going to use, we need to have an instance to back up and create the
    custom AMI:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 EC2 实例。现在我们知道了要使用的基础 AMI 的最新版本，我们需要有一个实例来进行备份并创建自定义 AMI：
- en: '[PRE11]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'ImageId value:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ImageId 值：
- en: '[PRE12]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Verify the image:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证镜像：
- en: '[PRE14]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Let's test our backup.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们测试一下我们的备份。
- en: 'Here, we are going back to our original command that we used in *Step 2* to
    create the instance, but now, we are going to substitute the original image ID
    for the AMI that we have just created:'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这里，我们将回到我们在*步骤 2*中用于创建实例的原始命令，但现在，我们将用我们刚刚创建的 AMI 替换原始的镜像 ID：
- en: '[PRE15]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: As you can see, with just a few simple commands, we have taken our running EC2
    instance and not only backed it up but also created a launchable AMI from it.
    We could take our backup a step further and copy our AMI to another region; so
    long as there are no hardcoded region-specific items on the image, it should launch
    and run without issue.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，借助几个简单的命令，我们不仅备份了正在运行的 EC2 实例，而且还从中创建了一个可启动的 AMI。我们可以进一步备份，将 AMI 复制到另一个区域；只要镜像上没有硬编码的区域特定项目，它应该能够顺利启动并运行。
- en: Once you have finished launching your EC2 instance and created your AMI, it
    is a good idea to terminate the instance and remove the AMI so that you don't
    get charged extra on your AWS account.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您完成了 EC2 实例的启动并创建了 AMI，建议终止实例并删除 AMI，以免在 AWS 账户中产生额外费用。
- en: Using user data scripts to configure EC2 instances at launch
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用用户数据脚本在启动时配置 EC2 实例
- en: Although we can launch our EC2 instances and then configure the software and
    packages that we need on them by hand, this is not the most efficient approach.
    Apart from following manual steps leading to human mistakes, this approach is
    much more time-consuming than using an automated process.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们可以启动 EC2 实例，然后手动配置所需的软件和包，但这并不是最有效的方法。除了手动步骤容易出错外，这种方法比使用自动化过程更加耗时。
- en: Example user data script
  id: totrans-170
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 示例用户数据脚本
- en: 'Next, we will look at an example of a user data script that can configure an
    EC2 instance without user interaction by pre-forming items such as creating files
    from scratch, updating previously installed packages, updating software repositories,
    and even running commands:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看一个用户数据脚本的示例，该脚本可以通过预先执行创建文件、更新已安装的包、更新软件仓库，甚至运行命令等操作，在无需用户交互的情况下配置
    EC2 实例：
- en: '[PRE16]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: With that, we have learned how to automatically configure EC2 instances at launch
    using user data scripts, which can do things such as install and upgrade packages,
    as well as run scripts and commands. Next, we will look at networking interfaces
    for EC2 instances.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们已经学习了如何使用用户数据脚本在启动时自动配置 EC2 实例，这些脚本可以完成安装和升级包、运行脚本和命令等操作。接下来，我们将了解 EC2
    实例的网络接口。
- en: Elastic Networking Interfaces (ENIs)
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 弹性网络接口（ENI）
- en: '**Elastic Networking Interfaces** (**ENIs**) work like virtual networking cards,
    so they allow the instance to have an IP address and be connected to a specific
    subnet. EC2 instances allow multiple ENIs to be attached, and each of those network
    interfaces can be on the same subnet or can traverse different subnets for specific
    reasons:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '**弹性网络接口**（**ENI**）就像虚拟网络卡，因此它们允许实例拥有一个 IP 地址，并连接到特定子网。EC2 实例允许附加多个 ENI，每个网络接口可以在同一子网中，或者由于特定原因穿越不同的子网：'
- en: '![Figure 2.6 – ENIs in separate security groups'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.6 – 不同安全组中的 ENI'
- en: '](img/Figure_2.6_B17405.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.6_B17405.jpg)'
- en: Figure 2.6 – ENIs in separate security groups
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 不同安全组中的 ENI
- en: Since security groups are attached at the network interface level and not at
    the instance level, adding additional ENIs to your instances allows you to have
    your instance join more than one security group for specialized purposes. If you
    have a web server that needs to access the public internet, you can attach one
    interface to the security group that serves this purpose. Also, in the same instance,
    you may need to SSH into the machine so that a team member can check the logs
    or processes running on the server. Locking the security group down that is attached
    to a particular ENI that allows access to the SSH port (port `22`) can be done
    in this manner.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 由于安全组是在网络接口级别而不是实例级别附加的，向实例添加额外的 ENI（弹性网络接口）可以使实例加入多个安全组，以满足特定需求。如果你有一台需要访问公共互联网的
    Web 服务器，你可以将一个网络接口附加到提供此功能的安全组中。此外，在同一实例中，你可能需要通过 SSH 连接到机器，以便团队成员查看日志或检查服务器上运行的进程。可以通过这种方式锁定附加到特定
    ENI 的安全组，从而限制对 SSH 端口（端口`22`）的访问。
- en: Elastic Block Store (EBS)
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 弹性块存储（EBS）
- en: Although EBS and EC2 are closely tied together, it is pertinent to remember
    that they are both separate services. EBS is a storage service that provides network-based
    storage that is allocated in the same Availability Zone as the instance and then
    mounted for usage. The amount of instance storage that's allocated to an instance
    varies by the instance type, and not all types of EC2 instances contain an instance
    store volume.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 EBS 和 EC2 紧密相关，但值得记住它们是两个独立的服务。EBS 是一个存储服务，提供基于网络的存储，它被分配到与实例相同的可用区，并挂载供使用。分配给实例的存储量因实例类型而异，并且并非所有类型的
    EC2 实例都包含实例存储卷。
- en: 'EBS is different from an **instance store** based on some key attributes. The
    instance store volume is the storage that is physically attached to the EC2 instance.
    It is best used for temporary storage since the instance store does not persist
    through instance stops, terminations, or instance failures. In contrast, data
    stored on an EBS volume will persist:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: EBS 与基于一些关键特性的 **实例存储** 有所不同。实例存储卷是物理附加到 EC2 实例的存储。由于实例存储在实例停止、终止或实例故障时不会持久化，因此它最适合用于临时存储。相比之下，存储在
    EBS 卷上的数据将会持久化：
- en: '![Figure 2.7 – EBS overview in AWS'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.7 – AWS 中的 EBS 概述'
- en: '](img/Figure_2.7_B17405.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.7_B17405.jpg)'
- en: Figure 2.7 – EBS overview in AWS
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – AWS 中的 EBS 概述
- en: EBS volumes can either be allocated at the time of instance creation or created
    once the instance has been placed in a service as additional storage.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: EBS卷可以在实例创建时分配，也可以在实例已放入服务后作为额外存储创建。
- en: One of the key features to remember from a DevOps perspective, when it comes
    to allocating and restoring EBS volumes, is that a volume must stay in the same
    Availability Zone where it was created.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 从DevOps的角度来看，在分配和恢复EBS卷时需要记住的一个关键特性是，卷必须保留在它创建时所在的同一可用区。
- en: 'One of the key terms to understand when trying to decide which of the different
    types of EBS volumes to use is **input/output operations per second** (**IOPS**)
    or **Provisioned IOPS** (**PIOPs**). IOPS is the measure of I/O, measured in kilobytes,
    that a volume can perform in a second. Using CloudWatch Metrics, you can monitor
    the performance of a particular volume using volume metrics such as the following:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试决定使用哪种类型的EBS卷时，一个关键的术语是**每秒输入/输出操作数**（**IOPS**）或**预配置IOPS**（**PIOPs**）。IOPS是测量每秒卷所能执行的输入/输出操作（以千字节为单位）。通过使用CloudWatch指标，你可以监控特定卷的性能，使用的卷度量标准包括以下内容：
- en: '`VolumeReadOps`'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VolumeReadOps`'
- en: '`VolumeReadBytes`'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VolumeReadBytes`'
- en: '`VolumeWriteOps`'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VolumeWriteOps`'
- en: '`VolumeWriteBytes`'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VolumeWriteBytes`'
- en: Now that we know the basics of how EBS volume performance is measured, let's
    look at some of the different types of EBS volumes available.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何测量EBS卷性能的基本概念，接下来我们将查看一些可用的不同类型的EBS卷。
- en: Types of EBS volumes
  id: totrans-194
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: EBS卷类型
- en: 'There are three main types of EBS volumes, all of which differ in terms of
    performance, optimal use cases, and cost:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: EBS卷有三种主要类型，这些类型在性能、最佳使用场景和成本上各不相同：
- en: '**Solid State Drives** (**SSD**): This is a type of drive that''s optimized
    for heavy read and write operations and where a higher number of IOPS is needed.
    There are two types of SSD EBS volumes available for provisioning:'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**固态硬盘（SSD）**：这是一种针对重读写操作进行优化的驱动器，适用于需要更高IOPS的场景。可以为配置提供两种类型的SSD EBS卷：'
- en: 'a. **General-purpose SSD**: Gives a balance of cost and performance, best used
    for development and test environments.'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. **通用型SSD**：提供成本与性能的平衡，最适合用于开发和测试环境。
- en: 'b. **Provisioned IOPS SSD**: Used for mission-critical workloads where performance
    is key, such as databases or caches.'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. **预配置IOPS SSD**：用于性能关键的任务工作负载，例如数据库或缓存。
- en: '**Hard Disk Drives** (**HDD**): This is a type of drive that is optimized for
    streaming workloads where performance is a necessity due to constant reads and/or
    writes. There are two types of HDD EBS volumes available for provisioning:'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬盘驱动器（HDD）**：这是一种针对流媒体工作负载进行优化的驱动器，当需要因持续读取和/或写入而保证性能时使用。可以为配置提供两种类型的HDD
    EBS卷：'
- en: 'a. **Throughput-optimized HDD**: This type of EBS volume is best for data warehouses,
    log servers, or big data workloads.'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. **吞吐量优化型硬盘（HDD）**：这种类型的EBS卷最适合用于数据仓库、日志服务器或大数据工作负载。
- en: 'b. **Cold HDD**: This is a low-cost HDD that is best used for infrequently
    accessed data.'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. **冷HDD**：这是一种低成本的HDD，适合用于不常访问的数据。
- en: '**Previous generation**: This is a type of drive that is best used for smaller
    datasets that are not of critical importance. Rather than being on SSDs, these
    EBS volumes are on magnetic disks, which means they are not as performant as the
    other two types of EBS volumes. There is only one type of previous-generation
    EBS drive available and it''s best used for data that is infrequently accessed.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**前一代**：这是一种适合用于较小数据集且不具有关键重要性的数据驱动器。与SSD不同，这些EBS卷使用的是磁盘，因此性能不如其他两种类型的EBS卷。只有一种前一代EBS驱动器，适合用于不常访问的数据。'
- en: Looking at the EC2 service, which also covers AMIs and EBS volumes, there are
    many options to choose from, which allows you to choose the right size for your
    instance. This spans much deeper than the operating system that you choose, but
    also how fast you provision your instances and how performant you need your storage
    to be.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 查看EC2服务，其中还包括AMI和EBS卷，你可以选择多个选项，能够根据实例的需求选择合适的大小。这不仅仅与操作系统的选择有关，还包括如何快速配置实例，以及存储性能的要求。
- en: Next, we will look at AWS Batch, a service that allows us to perform large operations
    with ease either on-demand or on a schedule.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将了解AWS Batch，这是一个服务，允许我们轻松执行大规模操作，无论是按需还是按计划执行。
- en: AWS Batch
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS Batch
- en: Sometimes, you need a large amount of compute resources.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你需要大量的计算资源。
- en: An example to think about in this instance is tabulating voting results. Once
    voting has ended, multiple people and machines start the count at different regional
    centers. Each of the regional centers counts the votes and submits that sub-total
    to get the final results.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这里可以考虑的一个例子是统计选举结果。一旦投票结束，多个人员和机器开始在不同的区域中心进行计数。每个区域中心统计票数并提交该小计，以便获得最终结果。
- en: This process of counting the votes is a batch process. If the votes were all
    tallied in different **Comma Separated Value** (**CSV**) files, then they could
    all be uploaded and processed by the AWS Batch service.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 统计票数的这个过程是一个批处理过程。如果所有票数都保存在不同的**逗号分隔值**（**CSV**）文件中，那么它们可以全部上传并由 AWS Batch
    服务处理。
- en: AWS Batch can run its jobs as either shell scripts, Linux executables, or Docker
    containers.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Batch 可以将作业作为 Shell 脚本、Linux 可执行文件或 Docker 容器来运行。
- en: 'There are five main components in AWS Batch:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Batch 有五个主要组件：
- en: Jobs
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作业
- en: Job definitions
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作业定义
- en: Job queue
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作业队列
- en: Job scheduler
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作业调度器
- en: Compute environments
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算环境
- en: Let's look at these in more detail.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看一下这些内容。
- en: Jobs
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作业
- en: Jobs in AWS Batch are nothing more than units of work. These units can take
    the form of a shell script, a Docker container image, or a Linux executable, but
    regardless of how the job is submitted, it will be run in a containerized environment.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AWS Batch 中，作业仅仅是工作单元。这些单元可以是 Shell 脚本、Docker 容器镜像或 Linux 可执行文件，但无论作业如何提交，都会在容器化环境中运行。
- en: Job definitions
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作业定义
- en: Telling the job how it should be run is the function of the AWS Batch job definition.
    This is also the place where you give extra detail to your jobs, such as which
    IAM role to use if the job needs to access other AWS resources, as well as defining
    how much memory and compute power the job will have.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 告诉作业如何运行是 AWS Batch 作业定义的功能。这也是你为作业提供额外详细信息的地方，例如，如果作业需要访问其他 AWS 资源，你可以指定使用的
    IAM 角色，还可以定义作业所需的内存和计算能力。
- en: Job queue
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作业队列
- en: Until a compute environment is available to run the job, the job will sit in
    a job queue. You are not limited to a single job queue per AWS account as queues
    can be associated with different types of compute environments.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 直到计算环境可用来运行作业时，作业将停留在作业队列中。你并不限于每个 AWS 账户只有一个作业队列，因为队列可以与不同类型的计算环境关联。
- en: High-priority jobs may be placed in a queue where the compute environment is
    made up of On-Demand Instances. Lower-priority jobs may wait in a queue that is
    made up of Spot Instances and can run once the spot becomes available.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 高优先级作业可能会被放入由按需实例组成的队列中。低优先级作业则可能会等待在由抢占实例组成的队列中，直到抢占实例可用时才能运行。
- en: Job scheduler
  id: totrans-224
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作业调度器
- en: Once an AWS Batch job has been submitted to a queue, the scheduler assesses
    the current compute environments to see if they can run the job. Since jobs may
    be dependent on other jobs running and/or finishing before they can start, the
    scheduler also considers this. It is for this fact that jobs are run in a reasonable
    order from which they were previously submitted to the queue, but an exact order
    is not always possible.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 AWS Batch 作业被提交到队列中，调度器会评估当前的计算环境，看它们是否可以运行该作业。由于作业可能依赖于其他作业的运行和/或完成，因此调度器也会考虑这一点。正因如此，作业会按合理的顺序从队列中提交并运行，但并不总是能保证一个精确的顺序。
- en: Compute environments
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算环境
- en: Once you have set up your compute environments where the job queues will perform
    the tasks, you have several choices. You can choose managed or unmanaged compute
    and specify a particular instance type, or even only run on the newest types of
    instances available.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置好作业队列所在的计算环境，你有多个选择。你可以选择托管或非托管的计算环境，并指定特定的实例类型，或者仅在可用的最新实例类型上运行。
- en: If one of the reasons you're using Batch is that that you are interested in
    cost savings, you can also determine the spot price for your compute instances.
    If the reliability of the compute environment is a necessity, then you are better
    off setting up your environment with On-Demand Instances.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用 Batch 的原因之一是为了节省成本，你还可以确定计算实例的抢占价格。如果计算环境的可靠性是必要的，那么你最好设置按需实例来搭建环境。
- en: Virtual Private Cloud networking and Route 53 networking
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟私有云网络和 Route 53 网络
- en: 'The **Virtual Private Cloud** (**VPC**) service from AWS allows you to create
    a virtual network in the cloud. It allows your compute and database instances
    to either allow internet connectivity or segment it off from the internet. Security
    can be accomplished through either stateful or stateless virtual firewall rules,
    which provide the amount of network connectivity that you see fit:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 的 **虚拟私有云**（**VPC**）服务允许你在云中创建虚拟网络。它允许你的计算和数据库实例要么允许互联网连接，要么与互联网隔离。安全性可以通过有状态或无状态的虚拟防火墙规则来实现，这些规则提供了你认为合适的网络连接量：
- en: '![Figure 2.8 – Network traffic and security in AWS'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.8 – AWS 中的网络流量与安全'
- en: '](img/Figure_2.8_B17405.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.8_B17405.jpg)'
- en: Figure 2.8 – Network traffic and security in AWS
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – AWS 中的网络流量与安全
- en: The VPC service comprises multiple components that allow you to route and secure
    traffic from your AWS services and, optionally, the internet and/or your on-premises
    network.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: VPC 服务包含多个组件，可以让你路由和保护来自 AWS 服务的流量，且可选地包括互联网和/或本地网络。
- en: VPC
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VPC
- en: Although the solution architect (or possibly the network architect) will often
    determine the CIDR address range that's used for the VPC, many times, it falls
    on the DevOps engineer to implement the VPC with **Infrastructure as Code** (**IaC**).
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然解决方案架构师（或可能是网络架构师）通常会确定用于 VPC 的 CIDR 地址范围，但很多时候，实施 VPC 的工作由 DevOps 工程师来完成，利用
    **基础设施即代码**（**IaC**）。
- en: There are quite a few components that can help make up a VPC. While we will
    not be covering VPC extensively, we will look at some items that you should know
    about in case they come up in any exam questions.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多组件可以帮助构成一个 VPC。虽然我们不会深入讨论 VPC，但我们将介绍一些你应当了解的项目，以防它们出现在考试题目中。
- en: Subnets
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 子网
- en: A **subnet** defines a range of IP addresses in a VPC. There are both public
    and private subnets. A public subnet should be used for resources that will be
    accessed by the internet. A private subnet should be used for resources that won't
    be accessible from the internet. Each subnet can only inhabit one Availability
    Zone and cannot traverse multiple Availability Zones.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '**子网**定义了 VPC 中的 IP 地址范围。既有公共子网，也有私有子网。公共子网应当用于需要通过互联网访问的资源。私有子网应当用于那些无法从互联网访问的资源。每个子网只能存在于一个可用区，无法跨越多个可用区。'
- en: Security groups
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安全组
- en: '**Security groups** act as virtual firewalls in Amazon VPC. You can have up
    to five security groups per EC2 instance, and security groups are enforced at
    the instance level (not at the subnet level).'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全组**充当 Amazon VPC 中的虚拟防火墙。每个 EC2 实例最多可以拥有五个安全组，并且安全组在实例级别强制执行（而不是在子网级别）。'
- en: Security groups allow for stateful traffic, meaning that if the traffic is allowed
    in via the rules, then it's returned, notwithstanding any rules in place. You
    can specify inbound traffic rules based on a combination of port, IP range, or
    another security group.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 安全组允许有状态的流量，这意味着如果流量根据规则被允许进入，那么它将被返回，而不受任何现有规则的影响。你可以根据端口、IP 范围或其他安全组的组合来指定入站流量规则。
- en: Network Access Control Lists (NACLs)
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络访问控制列表（NACL）
- en: '**Network Access Control Lists** (**NACLS**) work at the subnet level (unlike
    security groups, which work at the instance level).'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络访问控制列表**（**NACLs**）在子网级别工作（与在实例级别工作的安全组不同）。'
- en: Whereas security groups are stateful, NACLs are stateless, and any traffic that
    needs to return through an NACL needs to have the port and IP range opened. NACL
    rules are evaluated in order, with the lowest rule being processed first.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然安全组是有状态的，但 NACL（网络访问控制列表）是无状态的，任何需要通过 NACL 返回的流量都需要打开端口和 IP 范围。NACL 规则按照顺序进行评估，最低的规则首先被处理。
- en: Internet gateways
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 互联网网关
- en: 'Unless you are running your VPC as a private extension of your data center,
    then you will need internet connectivity. **Internet gateways** provide the connection
    to the internet for VPCs in a highly available, scalable, and redundant manner.
    There are two main functions provided by the internet gateway: the first is to
    provide internet access to the subnets designated in the route table. The second
    is to provide network address translation for instances that have been assigned
    an IPv4 public address.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你将 VPC 作为数据中心的私有扩展，否则你需要互联网连接。**互联网网关**为 VPC 提供与互联网的连接，具有高度可用、可扩展和冗余的特点。互联网网关提供的两个主要功能是：第一个是为路由表中指定的子网提供互联网访问；第二个是为已分配
    IPv4 公共地址的实例提供网络地址转换。
- en: Egress-only internet gateways
  id: totrans-248
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 仅出站互联网网关
- en: If you are using IPv6 for your VPC and instances, then you need an **egress-only
    internet gateway** rather than a regular internet gateway. This type of internet
    gateway prevents the internet from initiating connections to your instances, but
    still offers the same scalability, redundancy, and high availability as the other
    internet gateway.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在为 VPC 和实例使用 IPv6，那么你需要一个 **单向出口互联网网关**，而不是常规的互联网网关。这种类型的互联网网关可以防止互联网主动连接到你的实例，但仍然提供与其他互联网网关相同的可扩展性、冗余性和高可用性。
- en: Network Address Translator (NAT)
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络地址转换器（NAT）
- en: When you have instances in a private subnet, by default, they cannot talk to
    the internet. Even if you have set up an internet gateway, you want to separate
    your private instances from direct internet access. This is where either a NAT
    instance or a NAT gateway comes into play.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的实例位于私有子网时，默认情况下，它们无法访问互联网。即使你已经设置了互联网网关，你也希望将私有实例与直接的互联网访问分离。这时，NAT 实例或 NAT
    网关便发挥作用。
- en: A **NAT** device forwards traffic from the instances in the private subnet to
    the internet or other AWS services. Since the advent of **VPC Endpoints**, using
    a NAT to talk to other AWS services in your account is considered a non-secure
    practice and should never be done in production environments.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '**NAT** 设备将私有子网中的实例流量转发到互联网或其他 AWS 服务。自从 **VPC 端点** 的出现以来，使用 NAT 来与账户中的其他 AWS
    服务通信被认为是一种不安全的做法，绝不应该在生产环境中使用。'
- en: VPC endpoints
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: VPC 端点
- en: If you need to talk to your AWS services securely from your VPC, then you can
    create VPC endpoints. A VPC endpoint allows EC2 instances and other AWS compute
    services (such as Lambda and Fargate) to communicate with supported AWS services
    such as S3 and DynamoDB, without the need to create an internet gateway or even
    the need to have a public DNS name.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要从 VPC 安全地访问 AWS 服务，可以创建 VPC 端点。VPC 端点允许 EC2 实例和其他 AWS 计算服务（如 Lambda 和 Fargate）与支持的
    AWS 服务（如 S3 和 DynamoDB）进行通信，而无需创建互联网网关，甚至不需要公共 DNS 名称。
- en: This is especially useful for EC2 instances that neither need to nor should
    be connecting to the internet. Using a VPC endpoint allows the data connections
    to travel on the internal AWS network and does not require an internet gateway,
    a virtual private gateway, a NAT device, a VPN connection, or an AWS Direct Connect
    connection. VPC endpoints are virtual devices that can scale to meet demand, along
    with being redundant and highly available.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于那些既不需要也不应该连接互联网的 EC2 实例尤其有用。使用 VPC 端点允许数据连接通过内部 AWS 网络进行传输，并且不需要互联网网关、虚拟私有网关、NAT
    设备、VPN 连接或 AWS Direct Connect 连接。VPC 端点是虚拟设备，可以根据需求进行扩展，并且具有冗余和高可用性。
- en: DHCP option sets
  id: totrans-256
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DHCP 选项集
- en: When you create a VPC, Amazon automatically creates a set of **Dynamic Host
    Configuration Protocol** (**DHCP**) options for you by default. You can, however,
    customize some of the available settings by creating a new **DHCP option set**
    and then attaching that DHCP option set to your VPC (and therefore removing the
    default DHCP option set).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建 VPC 时，Amazon 会默认自动为你创建一组 **动态主机配置协议**（**DHCP**）选项。然而，你可以通过创建新的 **DHCP 选项集**
    来自定义一些可用设置，然后将该 DHCP 选项集附加到你的 VPC（从而移除默认的 DHCP 选项集）。
- en: 'Some of the allowed options include the following:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 一些允许的选项包括：
- en: '`domain-name-servers`: To use your own DNS instead of the AWS-provided DNS.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`domain-name-servers`：使用你自己的 DNS，而不是 AWS 提供的 DNS。'
- en: '`domain-name`: The default domain name for unqualified servers.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`domain-name`：未限定的服务器的默认域名。'
- en: '`ntp-servers`: You can specify up to four Network Time Protocol servers.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ntp-servers`：你可以指定最多四个网络时间协议（NTP）服务器。'
- en: '`netbios-name-servers`: You can specify up to four NetBIOS name servers.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`netbios-name-servers`：你可以指定最多四个 NetBIOS 名称服务器。'
- en: '`netbios-node-type`: The NetBIOS node type (1, 2, 4, or 8); this setting is
    blank by default and Amazon does not support broadcast or multicast.'
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`netbios-node-type`：NetBIOS 节点类型（1、2、4 或 8）；此设置默认为空，且 Amazon 不支持广播或多播。'
- en: Note
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Knowing the DHCP options is useful for configuring your VPCs in the real world,
    but memorizing the available options is not necessary for the DevOps professional
    exam.
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 了解 DHCP 选项对于在实际环境中配置 VPC 非常有用，但记住所有可用选项并不是 DevOps 专业考试的必要要求。
- en: Using a custom DNS with your VPC
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用自定义 DNS 配置你的 VPC
- en: Amazon provides a default DNS server (Route 53 Resolver); however, you can use
    your own DNS server if you like. Some companies either run the DNS from their
    data centers in a hybrid environment, mirror their current DNS server to the cloud
    so that they do not have to create Route 53-hosted zones with all of the required
    information, or just choose to manage the DNS themselves on the platform that
    they feel the most comfortable with.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊提供了一个默认的 DNS 服务器（Route 53 解析器）；不过，如果你愿意，也可以使用自己的 DNS 服务器。一些公司要么在混合环境中从他们的数据中心运行
    DNS，要么将当前的 DNS 服务器镜像到云端，这样他们就不需要创建包含所有必需信息的 Route 53 托管区域，或者干脆选择在他们最熟悉的平台上管理 DNS。
- en: If this is the case and you want to specify the DNS versus using the default
    DNS server, then you would need to create a DHCP option set and complete the value
    for your DNS server. Once you've done this, you can attach the DCHP option set
    to your VPC, and the instances in that VPC will start using the designated DNS
    server that you have specified.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是这种情况，且你想指定 DNS 而不是使用默认的 DNS 服务器，那么你需要创建一个 DHCP 选项集，并填写你的 DNS 服务器的值。完成后，你可以将该
    DHCP 选项集附加到你的 VPC，VPC 中的实例将开始使用你指定的 DNS 服务器。
- en: Ways to connect multiple networks
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连接多个网络的方法
- en: In the world of AWS networking, multiple tools have been provided to help you
    connect your different networks.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AWS 网络世界中，提供了多种工具来帮助你连接不同的网络。
- en: VPN connections
  id: totrans-271
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: VPN 连接
- en: 'You can network AWS with your own **Virtual Private Network** (**VPN**) using
    a variety of options:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用多种选项将 AWS 与自己的 **虚拟专用网络**（**VPN**）连接：
- en: '**AWS Site-to-Site VPN**: This option creates an IPSec connection between your
    VPN and the remote VPC.'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 站点到站点 VPN**：这个选项创建一个 IPSec 连接，将你的 VPN 与远程 VPC 连接。'
- en: '**AWS Client VPN**: This option uses a managed client that allows your users
    to connect from almost any location using an OpenVPN-based client.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 客户端 VPN**：这个选项使用一个托管客户端，允许你的用户通过基于 OpenVPN 的客户端从几乎任何位置连接。'
- en: '**AWS VPN CloudHub**: This option allows you to create a Site-to-Site VPN connection
    to multiple VPCs with your virtual private gateway. (The other options mentioned
    only create a VPN connection with a single VPC.)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS VPN CloudHub**：这个选项允许你通过虚拟专用网关创建与多个 VPC 的站点到站点 VPN 连接。（其他选项仅创建与单一 VPC
    的 VPN 连接。）'
- en: '**Third-party VPN appliance**: This option allows you to create a VPN connection
    using third-party software running on an EC2 instance. However, it''s important
    to note that when choosing this option, you are responsible for the maintenance
    and upkeep of the EC2 instance.'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第三方 VPN 设备**：这个选项允许你使用在 EC2 实例上运行的第三方软件创建 VPN 连接。然而，重要的是要注意，在选择此选项时，你需要负责
    EC2 实例的维护和保养。'
- en: AWS Transit Gateway
  id: totrans-277
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: AWS Transit Gateway
- en: '**AWS Transit Gateway** allows you to connect both on-premises networks and
    multiple VPCs through a central networking hub. Transit Gateway acts as a router
    for your cloud connections, allowing you to connect each network to the Transit
    Gateway only once. Once connected, those other networks can then talk to each
    other, using defined network rules, through the AWS global private network and
    not the public internet.'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS Transit Gateway** 允许你通过一个中央网络中心连接本地网络和多个 VPC。Transit Gateway 作为你的云连接的路由器，只需将每个网络连接到
    Transit Gateway 一次。连接完成后，其他网络可以通过 AWS 全球私有网络而非公共互联网，使用定义的网络规则相互通信。'
- en: AWS Direct Connect
  id: totrans-279
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: AWS Direct Connect
- en: If you or your company have consistent data transfers both to and from AWS,
    then the **Direct Connect** service can provide a private network connection between
    your premise and AWS. These dedicated connections are available in 1 Gbps, 10
    Gbps, or 100 Gbps denominations through direct connect providers.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你或你的公司有持续的数据传输需求，既需要向 AWS 传输数据，也需要从 AWS 传输数据，那么 **Direct Connect** 服务可以为你的本地环境与
    AWS 之间提供一个私有网络连接。这些专用连接可以通过直连服务提供商以 1 Gbps、10 Gbps 或 100 Gbps 的速度进行连接。
- en: Unlike connecting directly over the public internet, using an AWS Direct Connect
    connection gives you consistent network performance by transferring data from
    your data center or office to an from AWS over dedicated channels rather than
    going over the public internet.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 与直接通过公共互联网连接不同，使用 AWS Direct Connect 连接通过专用通道将数据从你的数据中心或办公室传输到 AWS，而不是通过公共互联网，从而提供一致的网络性能。
- en: Route 53
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Route 53
- en: The global DNS service that AWS provides is **Route 53**. This is one of the
    few services in AWS that is not tied to any specific region. The Route 53 service
    also has one of the strongest commitments, stating that it *will use commercially
    reasonable efforts to make Amazon Route 53 100% available* (Amazon Web Services,
    2021).
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 提供的全球 DNS 服务是 **Route 53**。这是 AWS 中为数不多的几个不与任何特定区域相关联的服务之一。Route 53 服务还拥有最强的承诺之一，声明其
    *将采取商业上合理的努力，使 Amazon Route 53 保持 100% 可用*（Amazon Web Services, 2021）。
- en: 'There are three main components of Route 53 that are of foundational importance:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: Route 53 有三个主要的组成部分是基础性的重要：
- en: The ability to register (and manage) domain names
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册（并管理）域名的能力
- en: The DNS service
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS 服务
- en: The ability to perform health checks (and subsequently route traffic) on your
    web application based on the fact that it's functional, available, and reachable
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行健康检查（并随后根据其功能性、可用性和可达性路由流量）的能力
- en: In this section, we will cover some of the basic information about the Route
    53 service, especially those topics that would be relevant to know for the DevOps
    exam.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍一些有关 Route 53 服务的基本信息，特别是那些对 DevOps 考试有帮助的话题。
- en: Understanding the different types of records available in Route 53
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解 Route 53 中可用的不同类型的记录
- en: 'There are many different DNS record types and at the time of writing, Route
    53 supports the following types of DNS records:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同类型的 DNS 记录，目前为止，Route 53 支持以下类型的 DNS 记录：
- en: '**Address** (**A**) record'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地址** (**A**) 记录'
- en: AAAA (IPV6 address record)
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AAAA（IPV6 地址记录）
- en: '**Canonical name** (**CNAME**) record'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规范名称** (**CNAME**) 记录'
- en: '**Certification Authority Authorization** (**CAA**)'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**认证机构授权** (**CAA**)'
- en: '**Mail exchange** (**MX**) record'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**邮件交换** (**MX**) 记录'
- en: '**Name authority pointer record** (**NAPTR**)'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称授权指针记录** (**NAPTR**)'
- en: '**Name server** (**NS**) record'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称服务器** (**NS**) 记录'
- en: '**Pointer** (**PTR**) record'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指针** (**PTR**) 记录'
- en: '**Start of Authority** (**SOA**) record'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权起始** (**SOA**) 记录'
- en: '**Sender policy framework** (**SPF**)'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发件人策略框架** (**SPF**)'
- en: '**Service** (**SRV**) location'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务** (**SRV**) 位置'
- en: '**Text** (**TXT**) record'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本** (**TXT**) 记录'
- en: Alias records (which are a Route53-specific extension of DNS)
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 别名记录（这是 Route 53 特有的 DNS 扩展）
- en: Now that we know what types of records Route 53 supports, let's take a look
    at the difference between a domain and a hosted zone.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了 Route 53 支持哪些类型的记录，接下来让我们看看域名和托管区域之间的区别。
- en: Knowing the difference between a domain and a hosted zone
  id: totrans-305
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 了解域名和托管区域之间的区别
- en: One of the first things to understand about domains and a hosted zones is that,
    first, a domain is an internet construct of domain name servers that associates
    the unique name of a person or organization with a numerically addressed internet
    resource.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 了解域名和托管区域的第一件事是，首先，域名是一个互联网构造，属于域名服务器，它将一个人或组织的唯一名称与一个数字地址的互联网资源关联起来。
- en: Domains have zone files that are text mappings of the different resources and
    their associated names, addresses, and type of record that the asset is currently
    mapped in. A hosted zone, on the other hand, is something only found in Route
    53\. It is similar to a DNS zone file (and you can import DNS zone files into
    your Route 53 hosted zones) in terms of its structure and mapping. One major difference,
    however, is that it can be managed and modified using the Route 53 interface,
    CLI, or API.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 域名有区域文件，它们是不同资源及其关联的名称、地址和当前映射类型的文本映射。而托管区域则是 Route 53 独有的东西。它在结构和映射上类似于 DNS
    区域文件（你可以将 DNS 区域文件导入到 Route 53 托管区域中），但一个主要的不同之处在于它可以通过 Route 53 界面、CLI 或 API
    进行管理和修改。
- en: Route 53 health checks
  id: totrans-308
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Route 53 健康检查
- en: Route 53 allows you to check the health of your applications and then reroute
    traffic to other servers or resources based on the rules that you provide. You
    can even see the recent status of your health checks in the Route 53 web console.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: Route 53 允许你检查应用程序的健康状况，然后根据你提供的规则将流量重新路由到其他服务器或资源。你甚至可以在 Route 53 的 web 控制台中查看健康检查的最新状态。
- en: Checking the health of a specific endpoint
  id: totrans-310
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查特定终端节点的健康状况
- en: In this case, you will be creating a check from Route 53 that performs checks
    at regular intervals specified by you. Your health checks are monitoring an endpoint
    that is either an IP address or a domain name. Route 53 then goes out at the interval
    and checks whether the server, the application, or another resource is available
    and operational. You can also request a specific web page or URL that would mirror
    most of the actions of your users, rather than just a simple health check page
    placed on the server that returns a simple 200 code if the system is up and running.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您将创建一个来自 Route 53 的检查，该检查将在您指定的常规间隔内执行检查。您的健康检查监控的是一个端点，可以是 IP 地址或域名。然后
    Route 53 会按照间隔检查该服务器、应用程序或其他资源是否可用且正常运行。您还可以请求一个特定的网页或 URL，该 URL 会模拟大多数用户的操作，而不仅仅是放在服务器上的一个简单健康检查页面，该页面会在系统正常运行时返回简单的
    200 代码。
- en: Calculated health checks (health checks that monitor other health checks)
  id: totrans-312
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 计算健康检查（监控其他健康检查的健康检查）
- en: 'If you have multiple resources that all perform the same function, then you
    may be wondering if a minimum number of resources are healthy. This is where calculated
    health checks come into play:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有多个执行相同功能的资源，您可能会想知道是否至少有一些资源是健康的。这时计算健康检查就派上用场了：
- en: '![Figure 2.9 – An example of a calculated health check'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.9 – 计算健康检查示例'
- en: '](img/Figure_2.9_B17405.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.9_B17405.jpg)'
- en: Figure 2.9 – An example of a calculated health check
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9 – 计算健康检查示例
- en: The calculated health check acts as a root health check where descendant checks
    can fail before the origin is considered unhealthy.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 计算健康检查充当根健康检查，其中后代检查可以失败，直到源被视为不健康。
- en: This type of health check is designed to fail if any of the alarms are set off.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 如果触发任何警报，此类健康检查会失败。
- en: Checking the status of a CloudWatch alarm
  id: totrans-319
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 检查 CloudWatch 警报的状态
- en: Route 53 can utilize the power of CloudWatch metrics and alarms. Once a CloudWatch
    alarm has been created, you can create a health check in Route 53 that observes
    the same data stream as the CloudWatch alarm.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: Route 53 可以利用 CloudWatch 指标和警报的功能。一旦创建了 CloudWatch 警报，您可以在 Route 53 中创建一个健康检查，观察与
    CloudWatch 警报相同的数据流。
- en: To help improve both the availability and flexibility of the CloudWatch alarm
    health check, Route 53 looks at the data coming from CloudWatch, which then determines
    whether that route will be healthy or unhealthy. It does not wait for an ALARM
    state to be reached before setting the route to unhealthy.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高 CloudWatch 警报健康检查的可用性和灵活性，Route 53 查看来自 CloudWatch 的数据，然后确定该路由是否健康。它不会等待达到
    ALARM 状态后再将路由设置为不健康。
- en: Route 53 routing policies
  id: totrans-322
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Route 53 路由策略
- en: Routing policies in Route 53 tell the service how to handle queries. These policies
    can be simple to complex, as we will see next.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: Route 53 中的路由策略告诉服务如何处理查询。这些策略可以从简单到复杂，正如我们接下来将看到的。
- en: Simple routing
  id: totrans-324
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 简单路由
- en: This is where the DNS is configured with no special configurations. You are
    simply setting the single record that the DNS file should point to. There is no
    weighting and no failover – just keep it simple.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 这是指 DNS 配置没有特殊配置。您只需要设置 DNS 文件应指向的单个记录。没有加权，也没有故障转移——只需保持简单即可。
- en: Failover routing
  id: totrans-326
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 故障转移路由
- en: With failover routing, you will have an alternative record in case the primary
    resource that is listed in the initial record set is unavailable or fails the
    defined health check(s).
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 使用故障转移路由时，当初始记录集中的主资源不可用或未通过定义的健康检查时，您将有一个备用记录。
- en: This could be another server in a different region or a backup website being
    served by an S3 bucket.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以是另一个位于不同区域的服务器，或者是通过 S3 存储桶提供的备用网站。
- en: Geolocation routing
  id: totrans-329
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 地理位置路由
- en: If you have an audience or userbase that spans either a country, a continent,
    or the world, and depending on their location would like them to have a custom
    message or website (without needing to use complex cookies and dynamic content),
    then you can use the **geolocation routing** feature of Route 53 to send them
    to the server or content origin that would be most relevant for their originating
    location.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个跨越某个国家、洲或全球的观众或用户群，并且希望根据他们的地理位置向他们提供定制的信息或网站（而无需使用复杂的 cookies 和动态内容），那么您可以使用
    Route 53 的**地理位置路由**功能，将他们引导到最适合其源位置的服务器或内容来源。
- en: You can specify the geographic locations by continent, country, or state in
    the United States.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按洲、国家或美国的州指定地理位置。
- en: Geoproximity routing
  id: totrans-332
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 地理邻近路由
- en: You may have a geographically diverse userbase but want the ability to push
    more (or less) traffic to a certain region or set of resources. This is where
    **geoproximity routing** differs from geolocation routing. It can create a bias
    for each specific resource that routes more or less traffic to that resource based
    on the bias number and the original location of the requesting user. A bias expands
    or shrinks the size of the geographic region in which traffic is routed to a resource.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能有一个地理上分布广泛的用户群，但希望能够将更多（或更少）流量推送到某个特定地区或资源集。**地理接近路由**与地理位置路由的区别在于此功能。它可以根据每个特定资源的偏移值以及请求用户的原始位置，决定将更多或更少的流量路由到该资源。偏移值会扩大或缩小流量路由到资源的地理区域的范围。
- en: Latency-based routing
  id: totrans-334
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 基于延迟的路由
- en: When you have an audience or userbase that is geographically spread out and
    you have resources running in multiple regions, then you can use latency-based
    routing to direct each user to the resource or content that will give them the
    quickest possible response time.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的观众或用户群体地理分布广泛，并且您在多个区域运行资源时，您可以使用基于延迟的路由将每个用户引导到能够提供最快响应时间的资源或内容。
- en: Question
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 问题
- en: What is the difference between geolocation routing and latency-based routing?
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 地理位置路由与基于延迟的路由有什么区别？
- en: Although in both cases you are dealing with a geographically expanded user base,
    **latency-based routing** is based on latency records that Route 53 creates and
    stores on points of origin and IP or DNS points of record. These latency records
    can change from time to time, so it's best to have a uniform experience or have
    a customized experience based on customer settings.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管在这两种情况下您都在处理一个地理上扩展的用户群，**基于延迟的路由**则基于Route 53创建并存储在原始点和IP或DNS记录点的延迟记录。这些延迟记录可能会发生变化，因此最好确保提供一致的体验，或根据客户设置提供定制化的体验。
- en: '**Geolocation routing**, on the other hand, is matching the user request with
    the resource that has been geographically tied to that originating IP address,
    so you can have local content customized for the end user experience.'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '**地理位置路由**，另一方面，是将用户请求与已与该源IP地址地理绑定的资源进行匹配，这样您就可以为最终用户体验提供本地化的内容。'
- en: Multi-answer routing
  id: totrans-340
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 多重响应路由
- en: Although multi-answer routing doesn't take the place of a load balancer, it
    does allow Route 53 to respond with up to eight healthy values chosen at random.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管多重响应路由不能取代负载均衡器，但它确实允许Route 53随机选择最多八个健康的值来响应。
- en: 'Some scenarios where you would want to use multi-answer routing would be as
    follows:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能想使用多重响应路由的一些场景如下：
- en: Creating more than one record of the same name type
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建多个相同名称类型的记录
- en: Routing traffic to multiple sources
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将流量路由到多个源
- en: Associating a Route 53 health check with records
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Route 53健康检查与记录关联
- en: Weighted routing
  id: totrans-346
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 加权路由
- en: If you have multiple resources that you would like the requests to be sent to
    while distributing the traffic unevenly, you can set up weighted routing from
    Route 53\. This has a few applications, such as launching a canary release with
    major or minor updates and redirecting only a portion of the traffic to the new
    environment. You can then gauge key performance indicators, such as the number
    of abandoned carts.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有多个资源，并希望将请求分配到这些资源，同时实现不均衡的流量分配，您可以通过Route 53设置加权路由。这有几个应用场景，例如推出带有重要或次要更新的金丝雀发布，并将仅一部分流量重定向到新环境。您可以根据关键绩效指标（如放弃购物车的数量）来评估。
- en: Implementing weighted routing starts with having more than one resource that
    you want the traffic to be balanced between. You can then create records inside
    your Route 53-hosted zone to reflect these resources. These have to be records
    of the same type within a domain or subdomain; that is, both need to be A records.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 实现加权路由从有多个资源开始，您希望将流量在这些资源之间进行平衡。然后，您可以在Route 53托管的区域内创建记录来反映这些资源。这些记录必须是同一类型的记录，且位于同一域或子域中；也就是说，两者需要是A记录。
- en: Once the records have been set, you can move on to configuring the routing by
    assigning a weight to the specific resource. The weighted value can be any number
    from 0 through 255 (if you specify 0, then that record will no longer receive
    traffic).
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦记录设置完成，您可以继续配置路由，通过为特定资源分配权重来进行路由。加权值可以是从0到255之间的任何数字（如果您指定为0，则该记录将不再接收流量）。
- en: The traffic is balanced using a calculation that takes the weight of the current
    record. That is then divided by the sum of all the records.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 流量是通过计算当前记录的权重来平衡的，然后将其除以所有记录的总和。
- en: '*Example*: If you had two servers running and the record for server A had a
    weight of 75 and the weight for server B had a weight of 150, then 75 + 150 =
    225 total weight, and server A would get 33% of the traffic using the formula
    75 / 225 = 0.3333333:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例*：如果你有两台服务器运行，并且服务器A的记录权重为75，服务器B的权重为150，那么75 + 150 = 225总权重，使用公式75 / 225
    = 0.3333333，服务器A将获得33%的流量。'
- en: '![Figure 2.10 – Creating a weighted record in Route 53'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.10 – 在Route 53中创建加权记录](img/Figure_2.10_B17405.jpg)'
- en: '](img/Figure_2.10_B17405.jpg)'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.10_B17405.jpg)'
- en: Figure 2.10 – Creating a weighted record in Route 53
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – 在Route 53中创建加权记录
- en: Route 53 will be covered in a bit more detail once we get to [*Chapter 13*](B17405_13_Final_JM_ePub.xhtml#_idTextAnchor338),
    *Blue Green Deployments*, and discuss blue/green deployment strategies.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: Route 53将在稍后详细讨论，当我们进入[*第13章*](B17405_13_Final_JM_ePub.xhtml#_idTextAnchor338)，*蓝绿部署*，并讨论蓝绿部署策略时。
- en: Cloud databases
  id: totrans-356
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云数据库
- en: 'As you look at the following model, you may be wondering why there are so many
    databases. This comes from the evolution of the application architecture over
    the past few decades, where specialization, speed, and scale have all become keys
    to success in this industry:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查看下图时，可能会想，为什么有这么多种数据库。这源于过去几十年应用架构的演变，其中专业化、速度和规模都已成为这一行业成功的关键。
- en: '![Figure 2.11 – Database types and services in AWS'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.11 – AWS中的数据库类型和服务](img/Figure_2.11_B17405.jpg)'
- en: '](img/Figure_2.11_B17405.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.11_B17405.jpg)'
- en: Figure 2.11 – Database types and services in AWS
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – AWS中的数据库类型和服务
- en: There is not enough space in this chapter to visit each type of database that
    AWS offers. However, as part of this foundational overview, we do want to cover
    some of the relational databases and their basic features.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 本章篇幅有限，无法介绍AWS提供的每种数据库类型。不过，作为本基础概述的一部分，我们确实希望涵盖一些关系型数据库及其基本特性。
- en: We will be covering the key-value database, Dynamo DB, in more detail in an
    upcoming chapter.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的章节中更详细地讨论键值数据库Dynamo DB。
- en: Relational databases
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系型数据库
- en: The word databases usually brings relational databases to mind, which have rows,
    columns, and schemas.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 说到数据库，通常会想到关系型数据库，它们有行、列和模式。
- en: Relational databases in AWS come in three main *flavors*, as well as engines
    that can be classified as part of a community, commercial, or cloud native. Cloud-native
    engines are used in the Aurora service since they are built based on community
    engines with cloud-native storage, backup, and replication capabilities.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: AWS中的关系型数据库有三种主要的*类型*，并且其引擎可以根据社区版、商业版或云原生进行分类。云原生引擎被用于Aurora服务，因为它们是基于社区引擎构建的，具有云原生存储、备份和复制能力。
- en: Note
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: 'When we talk about cloud native, we are talking about building and running
    applications that take advantage of the cloud computing model: loosely coupled
    services that are dynamically scalable, can run on a multitenant platform, and
    have flexible networking and storage.'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈到云原生时，我们指的是构建和运行利用云计算模型的应用程序：松耦合的服务，动态可扩展，可以在多租户平台上运行，并具备灵活的网络和存储。
- en: 'Relational databases tend to follow the ACID set of database properties:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 关系型数据库通常遵循ACID数据库属性集合：
- en: '**Atomic**: All of your transaction succeeds or none of it does.'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原子性**：你的所有事务要么都成功，要么都不成功。'
- en: '**Consistent**: Any data written to the database must be valid according to
    all defined rules.'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致性**：写入数据库的任何数据必须符合所有已定义的规则。'
- en: '**Isolated**: Ensures that concurrent execution of transactions leaves the
    database in the same state that it would have been in if the transactions were
    executed sequentially.'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隔离性**：确保并发执行事务时，数据库会保持在一个与按顺序执行事务时相同的状态。'
- en: '**Durable**: Once a transaction has been committed, it will remain in the system,
    even in the case of a system crash.'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持久性**：一旦事务被提交，它将保留在系统中，即使系统发生崩溃。'
- en: Relational Database Service
  id: totrans-373
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关系型数据库服务
- en: '**Relational Database Service** (**RDS**) aims to take away the tasks that
    were previously performed by a database administrator, who had to be on staff
    but finds that many of their day-to-day duties are starting to be handled by automation
    and scripting. This includes provisioning a new database, creating backups, scaling
    out to read replicas, patching and upgrading instances, as well as switching over
    to a high-availability instance when an incident occurs. RDS streamlines the setup
    and installation of software and database provisioning. Using the managed RDS
    service also allows an organization to achieve a standard set of consistency when
    creating and deploying a database. No custom scripts are needed to deploy, set
    up, and patch the database since this is all handled in the background.'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '**关系型数据库服务**（**RDS**）旨在接管以前由数据库管理员执行的任务，数据库管理员曾需要在职，但现在很多日常工作都可以通过自动化和脚本来处理。这些任务包括配置新数据库、创建备份、扩展为只读副本、修补和升级实例，以及在发生事件时切换到高可用性实例。RDS
    简化了软件和数据库配置的设置与安装。使用托管的 RDS 服务还可以帮助组织在创建和部署数据库时实现一致性标准。无需自定义脚本来部署、设置和修补数据库，因为这一切都在后台自动处理。'
- en: After deployment, developers and applications have a database endpoint that
    can be accessed readily, where connections can be made with a client or authentication
    application, and then queries can be performed on the database.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 部署后，开发人员和应用程序可以访问一个可以方便连接的数据库端点，用户可以通过客户端或身份验证应用程序进行连接，然后对数据库执行查询。
- en: RDS comes in several different engine formats, including two commercial engines
    and three popular open source engines. The two commercial engines that are supported
    are Oracle and Microsoft SQL Server. Both of these commercial engines are used
    in enterprises. RDS supports access to Oracle schemas via Oracle SQL, along with
    native tools such as SQL Server Management Studio for Microsoft SQL Server. In
    the community editions, RDS offers the ability to spin up databases using MySQL,
    PostgreSQL, and MariaDB. MySQL is one of the most popular community relational
    databases and AWS runs the community edition of this, defaulting InnoDB tables
    with the documentation, stating that MyISAM storage does not support reliable
    crash recovery.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: RDS 提供多种不同的引擎格式，包括两个商业引擎和三个流行的开源引擎。支持的两个商业引擎是 Oracle 和 Microsoft SQL Server。这两个商业引擎都广泛用于企业中。RDS
    支持通过 Oracle SQL 访问 Oracle 模式，并提供 Microsoft SQL Server 的本地工具，如 SQL Server Management
    Studio。在社区版中，RDS 允许使用 MySQL、PostgreSQL 和 MariaDB 创建数据库。MySQL 是最受欢迎的社区关系型数据库之一，AWS
    运行该数据库的社区版，默认使用 InnoDB 表，并在文档中说明 MyISAM 存储引擎不支持可靠的崩溃恢复。
- en: PostgreSQL
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: PostgreSQL
- en: PostgreSQL is another extremely popular database, with developers using it for
    its rich feature set. RDS supports common tools such as pgAdmin or connections
    via JDBC/ODBC drivers to connect to the database.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: PostgreSQL 是另一个非常流行的数据库，开发人员青睐其丰富的功能集。RDS 支持常用工具，如 pgAdmin，或通过 JDBC/ODBC 驱动程序连接到数据库。
- en: After deciding on your engine of choice, you have the opportunity to choose
    an instance type that will give you varying levels of compute and memory power.
    There are burstable instances (T family) that are often only used for testing
    environments. A general (M family) and memory-optimized (R family) instance is
    preferred when taking your database workloads to a more productionized environment.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 确定选择的引擎后，您可以选择一个实例类型，以便提供不同级别的计算和内存能力。通常用于测试环境的有突发性实例（T 系列）。在将数据库工作负载迁移到更生产化的环境时，建议选择通用实例（M
    系列）或内存优化实例（R 系列）。
- en: One of the differences between RDS and the same type of engines that you would
    run yourself on EC2 instances is how replicas work. Read replicas are extremely
    easy to provision by merely clicking a button, either in the same or a different
    Availability Zone; however, these nodes are read-only and cannot take a write.
    In the same context, you can make your instances instantly highly available, which
    replicates your data asynchronously to the copy of the master node in another
    Availability Zone or region. If an incident occurs, then it will be seamless to
    your application and end users as the DNS that both use to connect to the database
    stays the same. This secondary master, however, cannot take any load off your
    main primary server as it cannot serve any other function (such as being a read
    slave) except being the failover node. Read replicas can be promoted to a standalone
    database and at that point, they will have the ability to take writes. However,
    they will no longer stay in sync with the previous master that they were replicating
    with.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: RDS 和你在 EC2 实例上自行运行的相同类型引擎之间的一个区别是副本的工作方式。只需点击一个按钮，无论是在同一可用区还是不同可用区，都可以极其容易地创建只读副本；然而，这些节点是只读的，不能执行写操作。在同一背景下，你可以让实例立即具备高可用性，将数据异步复制到另一可用区或区域的主节点副本中。如果发生故障，应用和最终用户将感受不到任何中断，因为它们用于连接数据库的
    DNS 地址保持不变。然而，这个二级主节点不能从主主服务器上分担负载，因为它除了作为故障转移节点外，不能承担其他任何功能（例如作为只读副本）。只读副本可以提升为独立数据库，并且此时它将具备执行写操作的能力。然而，它将不再与之前所复制的主节点保持同步。
- en: Aurora
  id: totrans-381
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Aurora
- en: Amazon Aurora was built in response to customers wanting the performance of
    commercial-grade database engines such as Oracle or Microsoft SQL Server, without
    having to deal with all the hassle of the licensing handcuffs that came with those
    products.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Aurora 是为了响应客户希望获得像 Oracle 或 Microsoft SQL Server 这样的商业级数据库引擎的性能，同时不必处理与这些产品相关的许可束缚问题而构建的。
- en: The other keynote about Amazon Aurora is that, unlike the other RDS engines
    that are backed by EBS storage, Aurora built its own storage solution from the
    ground up after listening to multiple customer requests over the years.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Amazon Aurora 的另一个重点是，与其他由 EBS 存储支持的 RDS 引擎不同，Aurora 在听取了多年来多位客户的需求后，从零开始构建了自己的存储解决方案。
- en: Amazon Aurora comes in either MySQL-compatible or PostgreSQL versions. There
    are opportunities to run Aurora as a cluster or even run a serverless version
    of the Aurora database. The main item to know about the serverless version of
    Aurora is that it provides capacity on-demand as your application or users need
    for it. This is the distinct difference between provisioned Aurora clusters and
    the serverless version.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon Aurora 提供 MySQL 兼容版和 PostgreSQL 版。用户可以选择将 Aurora 作为集群运行，甚至运行 Aurora 数据库的无服务器版本。需要了解关于
    Aurora 无服务器版本的主要事项是，它根据应用或用户的需求按需提供容量。这是预配 Aurora 集群与无服务器版本之间的显著区别。
- en: Key-value databases
  id: totrans-385
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 键值数据库
- en: As applications are conceived, the number of users who will be served is not
    always known initially. There are usually hopes that at some point in the near
    future, the popularity of the application will grow from the initial set of users
    and testers to an exponential scale. To sustain that growth, the underlying database
    must be able to handle that scale seamlessly. This is one of the features of key-value
    databases.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 随着应用的构思，初期无法完全预测会服务多少用户。通常人们希望，随着时间的推移，应用的受欢迎程度会从初期的用户和测试者扩展到指数级规模。为了支持这种增长，底层数据库必须能够无缝应对这种规模。这也是键值数据库的特点之一。
- en: We will look at DynamoDB in more detail in [*Chapter 5*](B17405_05_Final_JM_ePub.xhtml#_idTextAnchor136),
    *Amazon DynamoDB*.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [*第五章*](B17405_05_Final_JM_ePub.xhtml#_idTextAnchor136) 中更详细地了解 DynamoDB，*Amazon
    DynamoDB*。
- en: In-memory databases
  id: totrans-388
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内存数据库
- en: When you are accessing stored items frequently from your primary data store,
    such as a relational database, there are times when just requesting the data from
    the database won't provide the user experience that your customers are expecting.
    This is when an in-memory database such as **Amazon's Elasticache** becomes a
    viable option.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 当你频繁从主数据存储（如关系型数据库）访问存储的项目时，有时仅从数据库请求数据无法提供客户期望的用户体验。这时，像**Amazon Elasticache**这样的内存数据库成为一个可行的选择。
- en: 'Elasticache comes in two different engine versions: Redis and Memcached.'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: Elasticache 提供两个不同的引擎版本：Redis 和 Memcached。
- en: Document databases
  id: totrans-391
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档数据库
- en: A document database is one type of non-relational database that allows you to
    store documents and data in a JSON type format and query that data to find the
    data. One of the truly unique features of document databases is that there is
    no fixed schema and that they can have documents nested inside of each other.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 文档数据库是一种非关系型数据库，它允许你以 JSON 格式存储文档和数据，并查询这些数据以找到所需的内容。文档数据库的一个独特特点是没有固定的架构，并且它们可以包含互相嵌套的文档。
- en: AWS offers **Amazon DocumentDB** (with MongoDB compatibility) as a managed database
    service for those that have either used MongoDB in the past or are looking for
    the capabilities of a document database. If you have ever been on the operating
    side of MongoDB before, then you know that while it is powerful and has several
    advanced features, including self-electing a new master if the current master
    becomes unavailable, there are complex setup requirements to get it up and running.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 提供了**Amazon DocumentDB**（具有 MongoDB 兼容性）作为一个托管数据库服务，适用于那些曾经使用过 MongoDB 或者正在寻找文档数据库功能的用户。如果你曾经在
    MongoDB 的操作端工作过，那么你知道，尽管 MongoDB 功能强大并具有一些高级功能，包括在当前主节点不可用时自我选举新主节点，但其部署和运行有一些复杂的设置要求。
- en: It requires (in a production environment) at least three nodes – either two
    nodes and an arbiter or three master nodes. All of this complex setup goes away
    with DocumentDB. Amazon takes care of the setup and security and allows you to
    configure automatic backups that you can then store on S3\.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 它需要（在生产环境中）至少三个节点——可以是两个节点和一个仲裁者，或者三个主节点。所有这些复杂的设置在 DocumentDB 中都不再需要。亚马逊会处理设置和安全性，并允许你配置自动备份，然后可以将备份存储在
    S3 上。
- en: There are a few small things that you are giving up, such as the ability to
    use admin or local tables, which means you can't use the `mongodump` or `mongorestore`
    utilities, but there are functions that take the place of these utilities.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会放弃一些小的功能，比如无法使用管理员或本地表，这意味着你不能使用 `mongodump` 或 `mongorestore` 工具，但有一些功能可以代替这些工具。
- en: Document databases are particularly good for teams who don't want to deal with
    the administrative aspects of a database, want to simplify the way initial schema
    values are used using JSON, and just want to start pushing data to the database,
    which will allow for both simple and advanced querying later.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 文档数据库特别适合那些不想处理数据库管理方面的团队，想通过 JSON 简化初始架构值使用的方式，并且只想开始将数据推送到数据库中，以便之后可以进行简单或高级的查询。
- en: Message and queueing systems
  id: totrans-397
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消息和队列系统
- en: As you start to build out cloud-scale applications, you need ways to decouple
    the different tiers of the application so that it can scale independently. This
    is for several reasons, including making your application more resilient and allowing
    each tier to scale independently of other tiers. Having the ability to use a managed
    service to perform these tasks, where you or another member of your team doesn't
    have to worry about the setup and maintenance of the queues or messaging systems,
    allows expedited usage of these techniques when moving or developing in the cloud.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始构建云规模应用时，你需要找到一种方法来解耦应用程序的不同层，使得每一层能够独立扩展。这样做有几个原因，包括使你的应用程序更加弹性，并允许每一层独立于其他层进行扩展。能够使用托管服务来执行这些任务，在这种情况下，你或你的团队成员无需担心队列或消息系统的设置和维护，能够加速在云中迁移或开发时使用这些技术。
- en: We will look at the messaging and queueing systems provided by AWS next and
    how they can be of benefit to you.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将了解 AWS 提供的消息和队列系统，以及它们如何对你有所帮助。
- en: Simple Notification Service (SNS)
  id: totrans-400
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单通知服务（SNS）
- en: Sometimes, you need the ability to simply send messages either from your applications
    or from other services in several formats, such as email or text message, that
    can be used in a variety of ways. These can be based on programmatic calls or
    events that happen in your AWS account. This is where **Simple Notification Service**
    (**SNS**) comes in handy.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你需要能够简单地发送消息，无论是来自你的应用程序还是其他服务，消息可以采用多种格式，例如电子邮件或短信，并可以以多种方式使用。这些可以基于编程调用或发生在你的
    AWS 账户中的事件。这就是**简单通知服务**（**SNS**）派上用场的地方。
- en: 'SNS is a publisher and consumer system, where publishers can push a message
    out to a **topic**. Then, any consumer who is subscribed to that topic can consume
    that message:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: SNS 是一个发布者和消费者系统，发布者可以将消息推送到一个**主题**。然后，任何订阅该主题的消费者都可以消费该消息：
- en: '![Figure 2.12 – SNS fanout](img/Figure_2.12_B17405.jpg)'
  id: totrans-403
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12 – SNS 广播](img/Figure_2.12_B17405.jpg)'
- en: Figure 2.12 – SNS fanout
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – SNS 广播
- en: The SNS topic acts as the channel where a single message can be broadcast to
    one or more subscribers. The publisher, which is the application in the preceding
    diagram, only has to send the message once to the topic; each consumer (or subscriber)
    can receive the message to be processed in a way that works for them. This can
    be stored for archival purposes in the case of S3, consumed on-demand in the case
    of mobile SMS or email, or be parsed and acted upon in the case of Lambda.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: SNS 主题充当一个频道，可以将单个消息广播到一个或多个订阅者。发布者，即前面图中的应用程序，只需要将消息发送一次到该主题；每个消费者（或订阅者）可以以适合自己的方式接收并处理该消息。这些消息可以存储在
    S3 中作为归档，或在移动短信或电子邮件中按需消费，或者在 Lambda 中进行解析和执行。
- en: Simple Queue Service (SQS)
  id: totrans-406
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单队列服务（SQS）
- en: 'If you are looking for a fully managed queueing service that will allow you
    to break apart your application in a cloud-native manner, then this is where **Simple
    Queue Service** (**SQS**) is a real service fit. It comes in two flavors: **standard
    queues** and **First In First Out** (**FIFO**) **queues**. Standard queues allow
    for at least once delivery, whereas FIFO queues are capable of one-time delivery
    regarding messages placed in the queue. The other major difference between these
    two types of queues is that with FIFO queues, the messages are processed in the
    order in which they are received. A standard queue tries to preserve the ordering
    of the messages that are received; however, if a message is received out of order,
    it will not do any shuffling or re-ordering to keep the original message order.'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在寻找一种完全托管的队列服务，允许你以云原生的方式拆分应用程序，那么 **简单队列服务**（**SQS**）就是一个非常合适的服务选择。它有两种类型：**标准队列**和**先进先出**（**FIFO**）**队列**。标准队列允许至少一次的消息投递，而
    FIFO 队列则保证对队列中的消息进行一次性投递。这两种队列的另一个主要区别是，FIFO 队列中的消息会按接收顺序进行处理。标准队列尝试保留接收到的消息顺序；然而，如果消息顺序错乱，它不会进行任何洗牌或重新排序操作来保持原始的消息顺序。
- en: 'SQS is a distributed queue system, which means it is spread out across different
    nodes in the region. This is one of the design features that brings the benefits
    of SQS, such as being highly scalable, available, reliable, and durable. SQS also
    allows for **Server-Side Encryption** (**SSE**), either through the service key
    provided by AWS via KMS or a custom key. You can also control who has access to
    the messages that are either produced or consumed via access policies. There are
    three main parts of the SQS distributed queue system:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: SQS 是一个分布式队列系统，这意味着它分布在区域内的不同节点上。这是 SQS 带来的一项设计特性，它使 SQS 具备了高度可扩展、可用、可靠和耐用的优势。SQS
    还支持 **服务器端加密**（**SSE**），可以通过 AWS 提供的 KMS 服务密钥或自定义密钥实现。你还可以通过访问策略控制谁可以访问产生或消费的消息。SQS
    分布式队列系统的主要组成部分有三部分：
- en: Producers/consumers (components)
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产者/消费者（组件）
- en: The queue
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 队列
- en: 'The messages in the queue:'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 队列中的消息：
- en: '![Figure 2.13 – SQS distributed queue'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.13 – SQS 分布式队列'
- en: '](img/Figure_2.13_B17405.jpg)'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.13_B17405.jpg)'
- en: Figure 2.13 – SQS distributed queue
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – SQS 分布式队列
- en: Messages are placed in the SQS queue by producers; they are then distributed
    across the queue components for redundancy. When the consumer is ready to process
    a message, it uses either a long or short polling technique to see whether there
    are any messages in the queue for processing. If it detects messages for processing,
    then it consumes the message for processing in the queue; however, the message
    is only flagged as being processed and the visibility timeout begins. Once the
    consumer has successfully processed the message and deletes the message, the message
    is removed from all the nodes of the distributed queue.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 消息由生产者放入 SQS 队列，然后被分配到队列组件中以实现冗余。当消费者准备处理消息时，它会使用长轮询或短轮询技术检查队列中是否有待处理的消息。如果检测到待处理的消息，它会消费该消息进行处理；然而，消息仅会被标记为已处理，并且可见性超时开始。一旦消费者成功处理消息并删除该消息，消息就会从所有分布式队列节点中移除。
- en: Messages must be deleted by the consumer once they have been processed successfully.
    Because of the nature of the distributed system that SQS runs on, once a consumer
    has pulled down a message for processing, it is then marked so that no other consumers
    can pull down the same message. There is a timeout period, however, before which
    the consumer needs to acknowledge the message was processed. If this acknowledgment
    is never received by SQS, then the message is unflagged and available to another
    consumer for processing.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 消费者在成功处理消息后必须删除这些消息。由于 SQS 运行的分布式系统的特性，一旦消费者拉取了一个消息进行处理，该消息就会被标记，以确保其他消费者无法拉取相同的消息。不过，在超时期之前，消费者需要确认消息已经处理。如果
    SQS 没有收到这个确认，那么该消息会取消标记，并可供其他消费者处理。
- en: Where would you use SNS versus SQS?
  id: totrans-417
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在什么情况下使用 SNS 而不是 SQS？
- en: 'When trying to decide which messaging service to use, there is a rule that
    you can use to help decide which one is going to serve you best; ask the following
    set of questions:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试决定使用哪个消息服务时，有一条规则可以帮助你决定哪个服务最适合你；问以下一组问题：
- en: Do my messages need guaranteed delivery?
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的消息需要保证送达吗？
- en: (If this answer is yes, then SQS is going to be the best choice as there is
    no option for guaranteed delivery with SNS.)
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （如果答案是“是”，那么 SQS 将是最佳选择，因为 SNS 没有提供保证送达的选项。）
- en: Are my messages going to be consumed only by my application?
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的消息是否只会被我的应用程序消费？
- en: (If this answer is yes, then SQS is going to be the best choice.)
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （如果答案是“是”，那么 SQS 将是最佳选择。）
- en: Are my messages going to be consumed by multiple sources?
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的消息是否会被多个来源消费？
- en: (If this answer is yes, then SNS is going to be the best choice.)
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （如果答案是“是”，那么 SNS 将是最佳选择。）
- en: By using these three questions, you can determine whether you are dealing with
    a closed loop of gathering the messages and then processing them for use in the
    application (SQS) or creating a message to be consumed outside the application
    (SNS).
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这三个问题，你可以判断自己是处理一个封闭循环，即收集消息并在应用程序中进行处理（SQS），还是创建一个消息供应用程序外部消费（SNS）。
- en: Amazon MQ
  id: totrans-426
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Amazon MQ
- en: If you are migrating an application whose previous messaging system was either
    Apache MQ or Rabbit MQ and you no longer want to manage the instances, then **Amazon
    MQ** is a great option. Amazon MQ is more of a message broker than just a simple
    queue.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在迁移一个之前使用 Apache MQ 或 Rabbit MQ 的应用程序，并且你不再想管理实例，那么**Amazon MQ**是一个不错的选择。Amazon
    MQ 更像是一个消息代理，而不仅仅是一个简单的队列。
- en: When you go to allocate your Amazon MQ, you must select either the Rabbit MQ
    or Apache MQ engine type. Once you have selected your engine type, when using
    the Management Console to provision Amazon MQ, it will prompt you, through a series
    of choices, to use a single broker or have an active and standby broker for high
    availability. It can even create a mesh network of single or active and standby
    brokers for you using predefined blueprints.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 当你去分配你的 Amazon MQ 时，必须选择 Rabbit MQ 或 Apache MQ 引擎类型。选择好引擎类型后，使用管理控制台配置 Amazon
    MQ 时，它会通过一系列选择提示你使用单一代理，或使用一个高可用的活动和备用代理。它甚至可以通过预定义的蓝图为你创建一个单一或活动与备用代理的网状网络。
- en: Differences between Amazon MQ and SQS
  id: totrans-429
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon MQ 和 SQS 之间的区别
- en: While SQS is also a managed service from AWS, it is a scalable queue that doesn't
    require a message broker to be established. Amazon MQ's strength is that it allows
    previously built applications that have dependencies on APIs such as MQTT, OpenWire,
    or STOMP to be quickly and easily migrated to the cloud in a highly available
    fashion with minimal overhead.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 SQS 也是 AWS 提供的托管服务，它是一个可扩展的队列，并不需要建立消息代理。Amazon MQ 的优势在于，它允许依赖 MQTT、OpenWire
    或 STOMP 等 API 的先前构建的应用程序快速且轻松地迁移到云端，同时保持高可用性，并且几乎没有额外开销。
- en: Simple Email Service (SES)
  id: totrans-431
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单邮件服务（SES）
- en: '**Simple Email Service** (**SES**) allows you to set up and send emails without
    most of the complexities of running an SMTP server.'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '**简单邮件服务**（**SES**）允许你设置并发送电子邮件，而无需处理运行 SMTP 服务器的大多数复杂性。'
- en: 'SES only runs out of three regions: `us-east-1` (North Virginia), `us-west-2`
    (Oregon), and `eu-west-1` (Ireland).'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: SES 仅在三个区域运行：`us-east-1`（北弗吉尼亚）、`us-west-2`（俄勒冈）和 `eu-west-1`（爱尔兰）。
- en: Amazon helps you verify where your mail is coming from. It provides trust to
    the email that you sent your customers by adding a series of DKIM records to the
    DNS records we send our emails from.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊帮助你验证邮件的来源。通过向我们发送电子邮件的 DNS 记录中添加一系列 DKIM 记录，它为你发送给客户的邮件提供了信任。
- en: Trusted Advisor
  id: totrans-435
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可信顾问
- en: 'As the number of resources grows in your AWS account, it can sometimes be challenging
    to keep track of them all. Challenges start to arise, such as volumes that are
    sitting around not being used and **Elastic IPs** (**EIPs**) that are sitting
    there, not connected to any instance or interface, which is burning through your
    current budget. Once you enter the dashboard of Trusted Advisor, you will be presented
    with the four categories that the tool generates for automated checks:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 AWS 账户中资源数量的增加，跟踪所有资源有时会变得具有挑战性。挑战开始出现，例如有些磁盘处于空闲状态未被使用，**弹性 IP**（**EIPs**）也处于空闲状态，未连接到任何实例或接口，这会消耗你的预算。一旦进入受信顾问仪表盘，你将看到该工具为自动检查生成的四个类别：
- en: '![Figure 2.14 – Trusted Advisor dashboard'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.14 – 受信顾问仪表盘'
- en: '](img/Figure_2.14_B17405.jpg)'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.14_B17405.jpg)'
- en: Figure 2.14 – Trusted Advisor dashboard
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – 受信顾问仪表盘
- en: When it comes to **Fault Tolerance** checks, it can tell you if you have too
    many instances in a single Availability Zone or region.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到**容错**检查时，它可以告诉你是否在单一可用区或区域中拥有过多实例。
- en: The number of Trusted Advisor checks available increases with the support level
    associated with the account. With an account that has a basic or developer support
    level, a basic set of checks are displayed. Once the support level is raised to
    business or enterprise, then the account has access to all 115 Trusted Advisor
    checks.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的受信顾问检查数量随着账户支持级别的提高而增加。对于具有基础或开发者支持级别的账户，显示的是基本检查集。当支持级别提高到商业或企业级时，账户将可以访问所有
    115 个受信顾问检查。
- en: 'Even at a basic support level, Trusted Advisor provides several checks in four
    areas:'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在基础支持级别，受信顾问也提供四个领域的多个检查：
- en: Cost optimization
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成本优化
- en: Performance
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能
- en: Security
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全
- en: Fault tolerance
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容错
- en: Note
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: Did you notice that the four basic checks that Trusted Advisor provides can
    be mapped to four of the AWS service pillars?
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你是否注意到受信顾问提供的四个基本检查可以映射到 AWS 服务支柱的四个方面？
- en: On top of this, Trusted Advisor can be set up to send a weekly notification
    to either the billing contact, the operational contact, the security contact on
    the account, or any combination of the three contacts listed.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，受信顾问可以设置为每周向账单联系人、操作联系人、安全联系人或三者的任何组合发送通知。
- en: Accessing Trusted Advisor
  id: totrans-450
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问受信顾问
- en: Trusted Advisor has a graphical dashboard interface that can be viewed, and
    it even allows you to view potential monthly savings under the cost optimization
    icon when you view the service from the AWS console for the first time. AWS has
    worked to refine the console interface to make it easier to use and to be as intuitive
    as possible, displaying three icons under each major heading icon regarding the
    number of checks that have no warnings associated (green), investigation recommended
    (yellow), and then action recommended (red).
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 受信顾问具有图形化的仪表盘界面，可以查看，而且当你第一次从 AWS 控制台查看该服务时，甚至可以看到在成本优化图标下可能的月度节省。AWS 一直在精细化控制台界面，使其更易于使用，并尽可能直观，展示每个主要标题图标下的三个图标，分别表示没有警告的检查（绿色）、建议调查的检查（黄色）和建议采取行动的检查（红色）。
- en: You can also access Trusted Advisor from the AWS CLI. This can be useful from
    a DevOps perspective, especially from a service limit check perspective. You can
    use your automated pipeline or a periodic Lambda job to check service levels for
    particular services, and then go out and automatically request a service-level
    increase or send out a notification to the correct email or distribution list
    so that you don't face disruption in your build process.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过 AWS CLI 访问受信顾问。从 DevOps 角度来看，这很有用，尤其是在服务限制检查方面。你可以使用自动化管道或周期性 Lambda
    作业来检查特定服务的服务级别，然后自动请求服务级别的提升，或将通知发送到正确的电子邮件或分发列表中，以避免在构建过程中出现中断。
- en: Summary
  id: totrans-453
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: AWS continues to grow the number of services that it offers all the time. We
    have gone over quite a few of the services in this chapter, although briefly,
    but have only covered many of the essential services that are used to host and
    serve applications running on the AWS platform.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 不断增长其提供的服务数量。我们在本章中简要介绍了许多服务，虽然内容较为简略，但只涵盖了在 AWS 平台上托管和服务应用程序的许多关键服务。
- en: In this chapter, we reviewed the foundational services offered by AWS. It will
    be these services, along with the others we will look at in the rest of part one,
    that we will use as the pieces of deployment in our DevOps journey. Having foundational
    knowledge of these services can let us do more from a development and deployment
    objective, and it also helps us when digesting the questions being asked on the
    DevOps professional exam, along with the scenarios being presented to us in our
    day-to-day professional lives.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了 AWS 提供的基础服务。这些服务，以及我们在第一部分剩余部分中将要学习的其他服务，将作为我们 DevOps 旅程中的部署组成部分。掌握这些服务的基础知识可以帮助我们在开发和部署目标上做得更多，同时也有助于我们理解
    DevOps 专业考试中的问题，以及在日常工作中遇到的场景。
- en: In the next chapter, we are going to examine identity and access management,
    the basis for securing our AWS cloud account and assets.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨身份与访问管理，它是保护我们的 AWS 云账户和资产的基础。
- en: Review questions
  id: totrans-457
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回顾问题
- en: If you wanted to bid on Amazon EC2 spare capacity, which of the following would
    allow you to do this?
  id: totrans-458
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想对 Amazon EC2 空闲容量进行竞价，以下哪项将允许你做到这一点？
- en: a. Reserved Instances
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 预留实例
- en: b. Auto Scaling
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 自动扩展
- en: c. Spot Instances
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. Spot 实例
- en: d. Savings plans
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 节省计划
- en: The company you are working with wants to tighten up its network security. However,
    they don't currently want to have to declare egress for the return traffic. Which
    VPC construct can you use to help tune their security settings?
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你所合作的公司希望加强网络安全。然而，他们当前不想声明返回流量的出口。你可以使用哪个 VPC 构造来帮助调整他们的安全设置？
- en: a. Network Access Control Lists (NACLs)
  id: totrans-464
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 网络访问控制列表（NACLs）
- en: b. Network Address Translator (NAT)
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 网络地址转换器（NAT）
- en: c. VPC endpoint
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. VPC 端点
- en: d. Security groups
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 安全组
- en: 'True/False: Trusted Advisor can notify you of the service limits your account
    is about to reach.'
  id: totrans-468
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 判断题：Trusted Advisor 可以通知你账户即将达到的服务限制。
- en: If your company was running a SQL Server instance in their current data center
    and wanted to migrate it to the AWS cloud, what options are available?
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的公司目前在数据中心运行 SQL Server 实例，并希望将其迁移到 AWS 云中，哪些选项可用？
- en: a. Running the database on EC2
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 在 EC2 上运行数据库
- en: b. Setting up Direct Connect so that cloud resources can connect to the SQL
    Server instance
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 设置 Direct Connect 使得云资源可以连接到 SQL Server 实例
- en: c. SQL Server on RDS
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. SQL Server on RDS
- en: d. SQL Server on Amazon Aurora
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. SQL Server on Amazon Aurora
- en: Which of the following statements about FIFO SQS queues is true?
  id: totrans-474
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下关于 FIFO SQS 队列的哪项陈述是正确的？
- en: a. You are not guaranteed to get messages in the order that you sent them.
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 你不能保证消息按照发送顺序到达。
- en: b. Messages will be delivered exactly in a FIFO order.
  id: totrans-476
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 消息将按照 FIFO 顺序精确投递。
- en: c. Messages will be delivered exactly once.
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 消息将被准确投递一次。
- en: d. Messages can be delivered one or more times.
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 消息可以被投递一次或多次。
- en: Review answers
  id: totrans-479
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回顾答案
- en: c
  id: totrans-480
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: d
  id: totrans-481
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: 'True'
  id: totrans-482
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: a and c
  id: totrans-483
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a 和 c
- en: b and c
  id: totrans-484
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b 和 c
