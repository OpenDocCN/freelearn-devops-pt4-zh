- en: 'Chapter 18: Autoscaling and Lifecycle Hooks'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 18 章：自动扩展与生命周期钩子
- en: One of the critical features of automation is taking advantage of autoscaling.
    Although many use this **Amazon Web Services** (**AWS**) service in its essential
    capacity, the educated **Development Operations** (**DevOps**) professional understands
    and takes advantage of some of the more advanced capabilities that Auto Scaling
    can provide. Insight into these components will not only help you pass the certification
    exam but will also allow you to manage your AWS environment more effectively.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化的一个关键特性是利用自动扩展。虽然许多人仅在其基本功能上使用这个**Amazon Web Services**（**AWS**）服务，但受过教育的**开发运维**（**DevOps**）专业人员理解并利用自动扩展提供的一些更高级的功能。了解这些组件不仅有助于你通过认证考试，还能让你更有效地管理你的
    AWS 环境。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下主要内容：
- en: Understanding AWS Auto Scaling
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 AWS 自动扩展
- en: Deploying **Elastic Compute Cloud** (**EC2**) instances with Auto Scaling
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自动扩展部署**弹性计算云**（**EC2**）实例
- en: The Auto Scaling lifecycle
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动扩展生命周期
- en: Using Auto Scaling lifecycle hooks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自动扩展生命周期钩子
- en: Understanding AWS Auto Scaling
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 AWS 自动扩展
- en: Auto Scaling, which is a subset of the **Amazon EC2 service**, revolves around
    automatically provisioning and managing your EC2 instances without the need for
    any manual intervention. The Auto Scaling service can be used to constantly maintain
    a fixed number of servers at any one time across one or more **Availability Zones**
    (**AZs**) within an Amazon Region. The service also provides you elasticity in
    that it can scale up to meet spikes of demand that your customers or applications
    present without constantly monitoring the system.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展是**Amazon EC2 服务**的一个子集，围绕自动配置和管理 EC2 实例展开，无需任何人工干预。自动扩展服务可用于在一个或多个**可用区**（**AZs**）内，始终保持固定数量的服务器。该服务还为你提供了弹性，可以在不需要持续监控系统的情况下，按需自动扩展，以应对客户或应用程序带来的需求激增。
- en: It does this by tapping into the power of a complementary service, Amazon CloudWatch.
    It watches a metric such as **Central Processing Unit** (**CPU**) utilization
    on an instance and makes sure that if it rises above 80 percent, meaning that
    80 percent of the available CPU of the instance is being used for a specific time,
    such as 5 minutes, a scale-out event will then occur. This helps ease the load
    on this particular instance and should bring the total percent of CPU utilization
    back under that 80 percent threshold once the new instance comes online.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它通过利用一个互补服务——Amazon CloudWatch 来实现这一点。CloudWatch 监控如**中央处理单元**（**CPU**）使用率等度量指标，并确保如果使用率超过
    80%，即实例的可用 CPU 有 80% 被特定时间段（例如 5 分钟）占用，则会触发扩展事件。这有助于减轻该实例的负载，并且在新实例上线后，CPU 使用率应会降回
    80% 以下。
- en: The Auto Scaling service is constantly performing periodic health checks on
    the instances in its **Auto Scaling Group** (**ASG**). The time between health
    checks can be configured, but the default setting is 300 seconds (5 minutes).
    You also configure how many health checks an instance can fail before it is taken
    out of the ASG for being unhealthy. On a similar note, whichever number of health
    checks that an instance must fail in order to be removed from the ASG is the same
    number of health checks that it must pass before being added as a healthy instance
    to the ASG.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展服务会定期对其**自动扩展组**（**ASG**）中的实例进行健康检查。健康检查之间的时间可以配置，但默认设置是 300 秒（5 分钟）。你还可以配置实例在被标记为不健康之前允许失败多少次健康检查。类似地，实例必须失败的健康检查次数与它必须通过的健康检查次数相同，才能将其作为健康实例添加到
    ASG 中。
- en: Auto Scaling also plays a key component in infrastructure event planning. If
    you know that you are about to have an increase in customer traffic, such as the
    marketing department has bought a television spot on a popular television show
    or there is a special sale about to happen, then you can simply increase both
    the desired capacity and the maximum capacity of your ASG to ensure that your
    customers not only have a good experience but also that your servers do not get
    overloaded.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展在基础设施事件规划中也发挥着关键作用。如果你知道客户流量即将增加，例如市场部门购买了一个流行电视节目上的电视广告，或者有一场特别促销即将发生，那么你可以简单地增加
    ASG 的期望容量和最大容量，以确保客户不仅有良好的体验，而且服务器也不会过载。
- en: Now that we have a basic understanding of the Auto Scaling service, let's look
    at the key components that make up this service.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对自动扩展服务有了基本了解，接下来让我们看一下构成该服务的关键组成部分。
- en: Understanding the differences between vertical and horizontal scaling
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解垂直和水平扩展的区别
- en: As we discuss the Auto Scaling service throughout this chapter, we will be talking
    about how to horizontally scale your instances in and out to meet the demands
    of your workload. This is usually a more cost-efficient way to scale and gain
    resources as you can benchmark your workload and know how much memory and CPU
    that your workload actually needs. This leads to a number of benefits, including
    your workload having a much higher availability since there are multiple instances
    or containers running the application at the same time. This prevents the instance
    (or container) that was scaled up vertically from becoming a **Single Point of
    Failure** (**SPoF**). You also don't have a limit on hardware. With vertical scaling,
    there comes a point in time when you will hit a resource limit. Although there
    are instances in AWS that have massive amounts of **Random-Access Memory** (**RAM**)
    and large numbers of CPUs, this is not a way to correctly construct and deploy
    your application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论如何通过水平扩展来根据工作负载的需求调整实例的数量。这通常是一种更具成本效益的扩展方式，因为你可以根据工作负载的基准测试，知道你的工作负载实际需要多少内存和
    CPU。这带来了许多好处，包括工作负载的可用性更高，因为有多个实例或容器同时运行应用程序。这避免了被垂直扩展的实例（或容器）成为**单点故障**（**SPoF**）。你也不受硬件限制。垂直扩展到一定程度时，你会遇到资源限制。尽管
    AWS 中有一些实例拥有巨大的**随机存取内存**（**RAM**）和大量的 CPU，但这并不是正确构建和部署应用程序的方式。
- en: 'The processes of horizontal and vertical scaling are depicted in the following
    diagram:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 水平扩展和垂直扩展的过程在下图中展示：
- en: '![Figure 18.1 – Horizontal scaling versus vertical scaling'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 18.1 – 水平扩展与垂直扩展'
- en: '](img/Figure_18.1_B17405.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.1_B17405.jpg)'
- en: Figure 18.1 – Horizontal scaling versus vertical scaling
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18.1 – 水平扩展与垂直扩展
- en: Now that we know the differences between horizontal and vertical scaling, let's
    take a look at the key components of AWS Auto Scaling.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了水平扩展和垂直扩展的区别，接下来让我们来看一下 AWS 自动扩展的关键组成部分。
- en: The key components of Auto Scaling
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动扩展的关键组成部分
- en: 'One of the main components of Auto Scaling is the ASG. This ASG is a logical
    group of instances for your application or service. You set three main variables
    for the ASG: the minimum number of instances, the maximum number of instances,
    and the desired number of instances. The minimum number of instances tells the
    ASG what is the lowest number of instances that can be running at any one time
    in a combination of all AZs specified. The maximum number of instances tells the
    ASG what is the greatest number of instances that it can allocate in that region.
    These maximums must stay within the service limits. Finally, the desired capacity
    is the number of running instances at any given moment in time if there are no
    scheduled actions or scaling events driven by scaling policies.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展的主要组成部分之一是ASG（自动扩展组）。这个ASG是你的应用程序或服务的实例的逻辑组合。你需要为ASG设置三个主要变量：最小实例数、最大实例数和期望实例数。最小实例数告诉ASG在任何时刻，所有指定可用区（AZ）中可以运行的最少实例数。最大实例数告诉ASG在该区域内可以分配的最大实例数。这些最大值必须在服务限制范围内。最后，期望容量是指在没有计划动作或由扩展策略驱动的扩展事件的情况下，任何给定时刻运行的实例数量。
- en: 'You can see a depiction of an ASG in the following diagram:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在下图中看到 ASG 的示意图：
- en: '![Figure 18.2 – ASG visualization'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 18.2 – ASG 可视化'
- en: '](img/Figure_18.2_B17405.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.2_B17405.jpg)'
- en: Figure 18.2 – ASG visualization
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18.2 – ASG 可视化
- en: Another key component of Auto Scaling is the **launch template**. The launch
    template determines which properties the instances inside the ASG will launch
    with. These properties are provided inside of the launch template. You can determine
    items such as the instance size, image **Identifier** (**ID**), **Virtual Private
    Cloud** (**VPC**) ID, along with others, when crafting your launch template.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展的另一个关键组成部分是**启动模板**。启动模板决定了ASG中的实例将以哪些属性启动。这些属性是通过启动模板提供的。在编写启动模板时，你可以确定例如实例大小、镜像**标识符**（**ID**）、**虚拟私有云**（**VPC**）ID等项目。
- en: If you have used ASGs in the past, then you may be familiar with launch configurations.
    Launch configurations are very similar to launch templates, but launch templates
    replaced launch configurations in a few respects. Firstly, launch configurations
    are immutable. Each time that you want to make a change to your launch configuration,
    you need to clone your launch configuration, make the change, and then attach
    it to the ASG. This is in contrast to launch templates. Launch templates allow
    for versioning. Launch templates also allow for the latest EC2 features, such
    as the use of unlimited T2 instances and **Elastic Block Store** (**EBS**) tagging.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经使用过ASG，那么你可能熟悉启动配置。启动配置与启动模板非常相似，但在某些方面，启动模板替代了启动配置。首先，启动配置是不可变的。每当你想要更改启动配置时，你需要克隆启动配置、进行更改，然后将其附加到ASG上。这与启动模板不同，启动模板支持版本控制。启动模板还支持最新的EC2功能，例如使用无限制的T2实例和**弹性块存储**（**EBS**）标签。
- en: ASGs are fully integrated with **Elastic Load Balancing** (**ELB**). It doesn't
    matter which one of the three types of ELBs that you use; ASGs fully integrate
    without issues. This means that if an ASG is associated with a load balancer,
    whenever an instance is provisioned, it will automatically get registered with
    the load balancer. Conversely, when an instance is either de-provisioned or terminated,
    the load balancer will drain the traffic from the instance and deregister the
    instance from the load balancer before terminating the instance.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: ASG与**弹性负载均衡**（**ELB**）完全集成。无论你使用的是哪一种类型的ELB，ASG都能无缝集成。这意味着，如果一个ASG与负载均衡器关联，当实例被配置时，它会自动注册到负载均衡器中。相反，当实例被取消配置或终止时，负载均衡器会从实例中清空流量，并在终止实例之前将其从负载均衡器中注销。
- en: Note
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you have old launch configurations but would like to take advantage of the
    latest EC2 technology, then AWS has a documentation page on how to convert a launch
    configuration to a launch template. It can be found here: [https://docs.aws.amazon.com/autoscaling/ec2/userguide/copy-launch-config.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/copy-launch-config.html).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有旧的启动配置，但希望利用最新的EC2技术，AWS提供了一个文档页面，介绍如何将启动配置转换为启动模板。你可以在这里找到：[https://docs.aws.amazon.com/autoscaling/ec2/userguide/copy-launch-config.html](https://docs.aws.amazon.com/autoscaling/ec2/userguide/copy-launch-config.html)。
- en: 'The final key component that we are going to discuss is going to be the **scaling
    plan**. A scaling plan can be set to use either predictive scaling or dynamic
    scaling. If you put your scaling plan to use predictive scaling, the ASG will
    use **Machine Learning** (**ML**) to look at how taxed your workload is, especially
    in respect to certain hours and days of the week, and then generates scheduled
    scaling actions so that your application has the capacity to meet those needs,
    as illustrated in the following diagram:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要讨论的最后一个关键组件是**扩展计划**。扩展计划可以设置为使用预测扩展或动态扩展。如果你将扩展计划设置为使用预测扩展，ASG将使用**机器学习**（**ML**）来分析工作负载的负载情况，特别是针对一周中的特定时间和天数，并生成预定的扩展操作，以确保你的应用程序具备满足这些需求的能力，具体如以下图示所示：
- en: '![Figure 18.3 – How predictive scaling works to schedule resources in Auto
    Scaling'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.3 – 预测扩展如何在Auto Scaling中调度资源'
- en: '](img/Figure_18.3_B17405.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.3_B17405.jpg)'
- en: Figure 18.3 – How predictive scaling works to schedule resources in Auto Scaling
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.3 – 预测扩展如何在Auto Scaling中调度资源
- en: Dynamic scaling policies are the component that you configure when using dynamic
    scaling with a scaling plan.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 动态扩展策略是你在使用动态扩展和扩展计划时配置的组件。
- en: It's important to note that even if your scaling calculation states that you
    should go beyond the maximum number of instances that you have set, that maximum
    is a hard limit and will not be surpassed by the scaling policy. You can raise
    the maximum number of instances if you hit the ceiling while scaling, or you may
    want to create a new version of your launch configuration to account for a different
    type or family of instances that may handle the type of traffic your application
    is receiving in a better fashion.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，即使你的扩展计算表明你应该超出你设置的最大实例数，这个最大值是一个硬性限制，扩展策略不会超越它。如果在扩展时达到最大实例数的上限，你可以提高最大实例数，或者你可能需要创建一个新的启动配置版本，以适应可能更好地处理应用程序流量的不同类型或系列的实例。
- en: There is an old saying when it comes to Auto Scaling that you should *scale
    up like a rocket and down like a feather*. This is due to the fact that scaling
    up instances is expensive from a time perspective. If you are starting one or
    three instances based on a scaling event, they should all take the same amount
    of time to come online. Bringing in three instances will allow you to have a bit
    more capacity rather than scaling up a single instance at a time. If that capacity
    is unjustified, then you can scale down a single instance at a time in order to
    keep your spending at an appropriate level using Auto Scaling.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有一句老话形容自动扩展，叫做*像火箭一样扩展，像羽毛一样缩减*。这是因为从时间角度来看，扩展实例是昂贵的。如果你在扩展事件中启动一到三台实例，它们应该同时上线。引入三台实例将让你获得更多的容量，而不是一次扩展单个实例。如果这部分容量没有必要，那么你可以一次缩减一个实例，保持支出在合理范围内，通过自动扩展控制成本。
- en: 'When you plan out your ASG, you want to take into consideration the following
    factors:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在规划ASG时，你需要考虑以下因素：
- en: How long does it take to launch and configure a server that will be part of
    the ASG?
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动并配置将成为ASG一部分的服务器需要多长时间？
- en: Which metrics would be most applicable when monitoring your workload's performance?
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在监控工作负载性能时，哪些指标最适用？
- en: Do you want the ASG to span multiple AZs? If so, how many?
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你希望ASG跨多个可用区（AZ）部署吗？如果是的话，需要多少个？
- en: What type of role should Auto Scaling play in your application?
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动扩展在你的应用程序中应该扮演什么角色？
- en: With the key components of Auto Scaling under our belt, let's look at the main
    use cases for AWS Auto Scaling.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在掌握了自动扩展的关键组件后，让我们来看看AWS自动扩展的主要使用案例。
- en: Understanding the different types of Auto Scaling
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解不同类型的自动扩展
- en: Amazon's EC2 Auto Scaling gives you a number of options on how you can scale
    your instances to meet both the demand of your business and the goals of your
    budget.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon的EC2自动扩展提供了多种选项，帮助你根据业务需求和预算目标扩展实例。
- en: If you wanted total control of how to scale your instances, then you can use
    **manual scaling**. With the use of manual scaling, you would set the minimum,
    maximum, and desired capacity to what you desire for your workload, and your ASG
    will adjust accordingly.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想完全控制如何扩展实例，那么可以使用**手动扩展**。通过手动扩展，你可以根据工作负载的需求设置最小值、最大值和所需容量，ASG（自动伸缩组）会相应调整。
- en: There are also times when the traffic that is coming to your workload is rather
    predictable. These may be cases where your customers are more active during normal
    business hours, or you may have business workloads that you use internally, and
    your staff that uses the workloads are all in one or two particular time zones.
    These are perfect cases for the use of **scheduled scaling**. With the use of
    scheduled scaling, your ASG will scale in and out automatically based on the times
    and dates that you set.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，流量到达工作负载的情况是相当可预测的。比如，客户在正常工作时间更为活跃，或者你可能有一些内部使用的业务工作负载，而这些工作负载的使用者都位于一个或两个特定的时区。这些情况下使用**计划性扩展**非常合适。使用计划性扩展时，ASG会根据你设定的时间和日期自动进行扩展和缩减。
- en: If you want your ASG to automatically scale out when there is a high demand
    for the application's services along with scaling back in when that same demand
    has diminished, then this is a case for **dynamic scaling**. Dynamic scaling allows
    you to choose a specific metric that matters to your application and set a percentage
    whereby once that percentage has been reached, the associated CloudWatch alarm
    on the metric will be triggered and one or more instances will be launched so
    that they can be added to the ASG. In the same vein, if you have previously scaled
    up capacity in response to a particular metric and that metric has fallen to a
    level where it is being underutilized, then the scaling policy will look at which
    one of the instances it should start to put in a terminating state. Based on your
    configuration, this could be the oldest instance, the newest instance, or even
    the instance that is closest to the next billing hour.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望在应用程序的服务需求高涨时，ASG能够自动扩展，并在需求减少时缩回，这就是**动态扩展**的应用场景。动态扩展允许你选择一个对应用程序重要的特定指标，并设置一个百分比，一旦达到该百分比，与该指标关联的CloudWatch警报将被触发，从而启动一个或多个实例，将其添加到ASG中。同样，如果你之前响应特定指标扩展了容量，而该指标已经降到一个被低利用的水平，则扩展策略将检查应该开始终止的实例。根据你的配置，可能是最旧的实例、最新的实例，或者是最接近下一个计费周期的实例。
- en: Dynamic scaling also allows you to put in **step scaling**. These step adjustments
    can vary based on the type of metric alarm breach, meaning that you can scale
    up to multiple instances at once if you have a large spike in traffic if your
    maximum capacity allows.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 动态扩展还允许你使用**步进扩展**。这些步进调整可以根据指标警报触发的类型有所不同，这意味着如果流量突然激增，并且你的最大容量允许的情况下，你可以一次性扩展到多个实例。
- en: Taking the properties of dynamic scaling one step further is **predictive scaling**.
    Predicative scaling analyses your traffic over time and then increases and decreases
    the number of EC2 instances in your ASG based on these trends. Predictive scaling
    is a good choice when you can't decide exactly which metric would be best suited
    to your application's needs or you have applications that take a long time to
    initialize. It can also be a wise choice if you have workloads that seem to come
    up and down, such as batch processing. The predictive scaling analysis can analyze
    these workloads and decide when it would be best to bring on more capacity.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 将动态扩展的属性进一步扩展，就是**预测性扩展**。预测性扩展分析你的流量趋势，然后根据这些趋势增加或减少ASG中的EC2实例数量。预测性扩展是一个不错的选择，当你无法准确决定哪个指标最适合你的应用需求，或者你有需要较长时间初始化的应用时。对于那些看似周期性波动的工作负载，比如批量处理，预测性扩展也能发挥作用。预测性扩展分析可以分析这些工作负载，并决定何时引入更多容量。
- en: We have just looked at the different ways in which ASGs can be set and adjusted
    to accommodate the influx of traffic for our workloads. Now, let's look at the
    primary use cases for Auto Scaling.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚看了不同的方式，ASG可以如何被设置和调整，以应对工作负载流量的涌入。现在，让我们看看自动扩展的主要用例。
- en: The four primary use cases for AWS Auto Scaling
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS自动扩展的四个主要用例
- en: 'There are four popular use cases that Auto Scaling solves for customers, outlined
    as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展为客户解决了四个流行的用例，具体如下：
- en: It automates the provisioning of servers.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它自动化了服务器的配置。
- en: It reduces paging frequency.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它减少了分页的频率。
- en: It makes it easier to use spot instances.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它使得使用竞价实例变得更加容易。
- en: It allows you to scale your cloud infrastructure up and down and save costs.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它允许你上下扩展云基础设施并节省成本。
- en: Now that we know some of the main use cases for using Auto Scaling, let's look
    at how we can put ASGs into action by creating our own launch template.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了使用自动扩展的一些主要用例，接下来让我们通过创建自己的启动模板，来看看如何将ASG付诸实践。
- en: Deploying EC2 instances with Auto Scaling
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自动扩展部署EC2实例
- en: 'The best way to get a full understanding of a service is to jump in hands-on
    to see how it performs, and the Auto Scaling service is no different. In this
    hands-on exercise, we will create a launch template for our ASG. We will then
    create an ASG. Follow these next steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 了解一个服务的最佳方式就是动手操作，看看它的表现，自动扩展服务也不例外。在这个动手练习中，我们将为我们的ASG创建一个启动模板。然后我们将创建一个ASG。按照以下步骤进行：
- en: Log on to the **Amazon Management Console** using your administrative user account.
    Once logged in, navigate to the EC2 service. Once on the EC2 service, locate and
    click on the **Launch Templates** sub-menu item on the left-hand menu, which is
    located under the **Instances** menu heading.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的管理员用户账户登录到**Amazon管理控制台**。登录后，导航至EC2服务。在EC2服务中，找到并点击左侧菜单中的**启动模板**子菜单项，该项位于**实例**菜单标题下。
- en: Once you are on the EC2 **Launch Templates** main screen, click on the orange
    **Create launch template** button in the main window.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你进入EC2的**启动模板**主屏幕时，点击主窗口中的橙色**创建启动模板**按钮。
- en: We should now be on a screen labeled `chapter18`
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在应该处于标有`chapter18`的屏幕上
- en: '`version 1`'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`版本 1`'
- en: '**Auto Scaling guidance**—Check the box, as shown in the following screenshot:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自动扩展指导**—勾选框，如下图所示：'
- en: '![Figure 18.4 – The first section of the launch template completed'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.4 – 启动模板的第一部分已完成'
- en: '](img/Figure_18.4_B17405.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.4_B17405.jpg)'
- en: Figure 18.4 – The first section of the launch template completed
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.4 – 启动模板的第一部分已完成
- en: 'Next, scroll down the page for the next box of selection criteria. We will
    fill out the rest of the fields using the following values:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，向下滚动页面，查看下一个选择标准框。我们将使用以下值填写剩余的字段：
- en: '`t2.micro`.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t2.micro`。'
- en: '**Key pair (login)**—Don''t include this in the launch template.'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密钥对（登录）**—不要在启动模板中包含此项。'
- en: '**Network settings**—**VPC**.'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络设置**—**VPC**。'
- en: '**Go to Network settings** | **Security groups** and choose your default security
    group.'
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转到网络设置** | **安全组**，并选择你的默认安全组。'
- en: Once you have completed filling out all of the values, we can then click the
    orange **Create launch template** button. You should see that you have successfully
    created a launch template at this time.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你填写了所有的值，我们可以点击橙色的**创建启动模板**按钮。此时你应该会看到成功创建了一个启动模板。
- en: Use the link in the middle of the page under the **Create an Auto Scaling group
    from your template** heading to be brought to the **Auto Scaling** section where
    we can create our new ASG, as illustrated in the following screenshot:![Figure
    18.5 – Create an Auto Scaling group section once you have completed your launch
    template
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用页面中间的链接，在**从模板创建自动扩展组**标题下，进入**自动扩展**部分，在此我们可以创建新的ASG，如下图所示：![图18.5 – 创建自动扩展组部分，当你完成启动模板时
- en: '](img/Figure_18.5_B17405.jpg)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_18.5_B17405.jpg)'
- en: Figure 18.5 – Create an Auto Scaling group section once you have completed your
    launch template
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图18.5 – 创建自动扩展组部分，当你完成启动模板时
- en: You should now be at the `eighteen`.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在应该位于`eighteen`。
- en: In the next box, labeled `chapter18`) from the drop-down list. Click the orange
    **Next** button at the bottom of the screen.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个框中，从下拉列表中选择`chapter18`）。点击屏幕底部的橙色**下一步**按钮。
- en: On the **Configure settings** screen, just leave all the default options, including
    the default VPC. We will not be using any spot instances or extra VPCs in this
    exercise. In the **Network** box, add all three subnets in your default VPC by
    selecting one after the other until all three appear underneath the selection
    dropdown. After all the subnets have been added, click on the orange **Next**
    button at the bottom of the page, as illustrated in the following screenshot:![Figure
    18.6 – Adding the three subnets from the default VPC to the ASG
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置设置**屏幕上，保持所有默认选项，包括默认VPC。我们在此练习中不使用任何现货实例或额外的VPC。在**网络**框中，依次选择默认VPC中的三个子网，直到所有三个子网出现在选择下拉框下方。添加完所有子网后，点击页面底部的橙色**下一步**按钮，如下图所示：![图18.6
    – 将默认VPC中的三个子网添加到ASG
- en: '](img/Figure_18.6_B17405.jpg)'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_18.6_B17405.jpg)'
- en: Figure 18.6 – Adding the three subnets from the default VPC to the ASG
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图18.6 – 将默认VPC中的三个子网添加到ASG
- en: Now, at the `300` to `30` seconds. Once you have made this change, click the
    orange **Next** button.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将`300`秒调整为`30`秒。做出此更改后，点击橙色**下一步**按钮。
- en: On the `1`, `1`, and `3`.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`1`、`1`和`3`处。
- en: Scroll down to the `18 ASG Policy`
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动到`18 ASG 策略`
- en: '`Average network in (bytes)`'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`平均网络输入（字节）`'
- en: '`5000`'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`5000`'
- en: 'The following screenshot illustrates this process:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了这个过程：
- en: '![Figure 18.7 – The scaling policy with metric for our ASG'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.7 – 我们的ASG的带度量的扩展策略'
- en: '](img/Figure_18.7_B17405.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.7_B17405.jpg)'
- en: Figure 18.7 – The scaling policy with metric for our ASG
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.7 – 我们的ASG的带度量的扩展策略
- en: Once you have filled out the values for the scaling policies, scroll down to
    the bottom of the page and click the white button labeled **Skip to review**.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写完伸缩策略的值后，向下滚动到页面底部，点击标有**跳过审查**的白色按钮。
- en: On the **Review** page, scroll down to the bottom of the page and click the
    orange **Create Auto Scaling group** button to create our ASG.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**审查**页面，向下滚动到页面底部，点击橙色的**创建自动伸缩组**按钮，来创建我们的ASG。
- en: Once you click the button, you should be taken to the **EC2** | **Auto Scaling
    groups** page where you will see the status of your group is initially **Updating
    capacity** as the first instance is being brought online.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦点击按钮，你应该会被带到**EC2** | **自动伸缩组**页面，在那里你会看到你的组的状态最初为**更新容量**，因为第一个实例正在上线。
- en: If you want to see your instance scale out, then you can do so by taking the
    following steps. In the `eighteen`.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想查看你的实例扩展，那么你可以按照以下步骤操作。在`eighteen`中。
- en: In the horizontal menu bar, click on the `eighteen` ASG policy. Once this is
    selected, then using the **Actions** drop-down, choose **Edit**:![Figure 18.8
    – The horizontal menu bar on a single ASG highlighting Automatic scaling
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在横向菜单栏中，点击`eighteen` ASG策略。选中后，使用**操作**下拉菜单，选择**编辑**：![图18.8 – 单个ASG的横向菜单栏，突出显示自动伸缩
- en: '](img/Figure_18.8_B17405.jpg)'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_18.8_B17405.jpg)'
- en: Figure 18.8 – The horizontal menu bar on a single ASG highlighting Automatic
    scaling
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图18.8 – 单个ASG的横向菜单栏，突出显示自动伸缩
- en: On the `5000` to `100`. Once you have changed this value, then click the orange
    **Update** button.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`5000`到`100`之间。一旦你更改了这个值，点击橙色的**更新**按钮。
- en: Go back to the main **Auto Scaling groups** page and refresh as you see the
    instances come online to meet the *demand* of the incoming traffic.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回主**自动伸缩组**页面并刷新，看到实例上线以满足即将到来的流量的*需求*。
- en: Now that we have seen how to create both a launch configuration and an ASG in
    the real world, let's move on to gaining a fuller understanding of the Auto Scaling
    lifecycle and how it differs from just launching an EC2 instance.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何在实际环境中创建启动配置和ASG，让我们继续深入理解自动伸缩生命周期，以及它如何不同于仅仅启动一个EC2实例。
- en: The Auto Scaling lifecycle
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动伸缩生命周期
- en: When you put an **EC2 instance** into an ASG, it follows a particular path that
    a normal EC2 instance you initiate via the command line or the AWS Management
    Console does not follow. The instance starts by being launched by the ASG. If
    this is part of a **scale-out** event, then the instance has an opportunity to
    have special commands be performed on it via a **lifecycle hook**. Lifecycle hooks
    allow you to add custom actions when either launching or terminating instances
    that are part of an ASG. Once the instance becomes healthy, it is then **InService**
    and is part of the ASG. If that instance fails the set number of health checks,
    the instance can then go to a **Terminating** state. Moving to a Terminating state
    can also happen if there is not enough traffic or metric data to support having
    the number of instances currently running, in which case there could be a **scale-in**
    event. Once again, just as with a scale-out event, this scale-in event allows
    us to use a lifecycle hook.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将**EC2实例**放入ASG时，它会遵循一个普通EC2实例（你通过命令行或AWS管理控制台启动的实例）不遵循的特定路径。该实例首先由ASG启动。如果这是一个**扩展**事件的一部分，那么该实例有机会通过**生命周期钩子**执行特殊命令。生命周期钩子允许你在启动或终止作为ASG一部分的实例时添加自定义操作。一旦实例变为健康状态，它将处于**服务中**状态，并成为ASG的一部分。如果该实例未通过设定的健康检查次数，它可能会进入**终止**状态。如果当前运行的实例数不足以支持流量或指标数据，则可能会发生**缩减**事件。再次强调，就像扩展事件一样，这个缩减事件也允许我们使用生命周期钩子。
- en: 'The Auto Scaling lifecycle process is illustrated in the following diagram:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 自动伸缩生命周期过程如下面的图示所示：
- en: '![Figure 18.9 – The Auto Scaling lifecycle process'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![图18.9 – 自动伸缩生命周期过程'
- en: '](img/Figure_18.9_B17405.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_18.9_B17405.jpg)'
- en: Figure 18.9 – The Auto Scaling lifecycle process
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图18.9 – 自动伸缩生命周期过程
- en: Now that we have an understanding of the lifecycle of ASGs, let's take a deeper
    look at lifecycle hooks and when it would be most appropriate to use them.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经理解了ASG的生命周期，让我们更深入地研究生命周期钩子以及何时最适合使用它们。
- en: Using Auto Scaling lifecycle hooks
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自动伸缩生命周期钩子
- en: As we just looked at the Auto Scaling lifecycle, there are two states when an
    instance enters these states that allow for extra actions to occur. These two
    states are the `Terminating:Wait` state, you can have the instance pause for up
    to 30 minutes before moving on to the `Terminating:Proceed` state and then on
    to `Terminated`.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们刚才所见，Auto Scaling生命周期中有两个状态，在实例进入这些状态时允许进行额外操作。这两个状态分别是`Terminating:Wait`状态，你可以让实例暂停最多30分钟，之后再进入`Terminating:Proceed`状态，最后进入`Terminated`状态。
- en: Use cases for lifecycle hooks
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生命周期钩子的使用场景
- en: You may want to know some of the use cases for lifecycle hooks. Let's take a
    quick look at a few.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想了解一些生命周期钩子的使用场景。让我们快速看一下几个例子。
- en: The first one is using the launching state to invoke a Lambda function. Once
    our instance has passed the pending state and gone on to the `Pending:Wait` state,
    we can use this event to call a specific Lambda function for our application.
    A good use for this would be if we had Windows instances and we needed to join
    each instance as it came up to a specific **Active Directory** (**AD**) domain
    and name server. As the instance entered in the initial lifecycle hook, it could
    run a script to get its **Domain Name System** (**DNS**) name as well as join
    the domain.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个例子是使用启动状态来调用Lambda函数。一旦我们的实例通过待处理状态并进入`Pending:Wait`状态，我们就可以利用这个事件为我们的应用程序调用一个特定的Lambda函数。一个好的应用场景是，如果我们有Windows实例并且需要在每个实例启动时将其加入到特定的**Active
    Directory**（**AD**）域和名称服务器中。当实例进入初始生命周期钩子时，它可以运行一个脚本来获取其**域名系统**（**DNS**）名称并加入该域。
- en: The same is true when we start the termination process of an instance. When
    you are terminating an instance, there are some cases where to want to be sure
    to capture all of the data from that set of applications before allowing the instances
    to proceed to the termination state.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开始终止一个实例的过程时，情况也是一样的。在终止实例时，有些情况下我们希望在允许实例进入终止状态之前，确保捕获到来自该一组应用程序的所有数据。
- en: As a word of caution, using complex scripts in lifecycle hooks can cause an
    extra amount of time between the time we have either requested a new instance
    to come online and join our ASG or be terminated and allow us to have more elasticity
    when we need it. Instances in the wait states still take up an instance worth
    of capacity when calculated against the total maximum size capacity of the ASG.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 作为提醒，在生命周期钩子中使用复杂脚本可能会导致我们请求新实例上线并加入我们的ASG或终止之间的额外时间延迟，从而使我们在需要时能够获得更多的弹性。处于等待状态的实例仍然会占用与ASG的最大容量计算相当的实例容量。
- en: Cleaning up resources
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清理资源
- en: As with many of our other exercises, it is suggested that you terminate any
    running instances and clean up the ASG once you are done with this chapter so
    that you don't incur any unwanted charges on your AWS account.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 和我们其他的练习一样，建议你在完成本章后终止所有正在运行的实例并清理ASG，以免在AWS账户中产生不必要的费用。
- en: Summary
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at Auto Scaling and how it can automatically manage
    the demand that is presented to us by both internal and external customers. We
    took a look at the different ways in which ASGs could be configured using different
    scaling policies, and even went through the hands-on exercise of deploying an
    ASG. Lastly, we looked at the Auto Scaling lifecycle and how lifecycle hooks can
    help perform more complex tasks than just simple scaling.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了Auto Scaling以及它如何自动管理来自内部和外部客户的需求。我们了解了使用不同的扩展策略配置ASG的不同方式，甚至通过动手实践部署了一个ASG。最后，我们探讨了Auto
    Scaling生命周期以及生命周期钩子如何帮助执行比简单扩展更复杂的任务。
- en: In the next chapter, we will be starting the first of a few chapters focused
    on securing your environment and your pipeline by talking about protecting your
    data both in transit and at rest. This will especially cover the **Key Management
    Service** (**KMS**) and using **Amazon Certificate Manager** (**ACM**) for server-side
    certificates.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将开始几章的内容，重点讨论如何保护你的环境和管道，首先将讨论保护传输中和静态数据的安全。这将特别涵盖**密钥管理服务**（**KMS**）以及使用**Amazon证书管理器**（**ACM**）来管理服务器端证书。
- en: Review questions
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复习问题
- en: You have been brought into a company that is running a business-critical workload
    using ELB and Auto Scaling. This workload is a two-tier application that consists
    of an application tier and a database tier. Both tiers are currently deployed
    across two AZs in the `us-east-1` region. The database needs to be replicated
    in a synchronous fashion from the application. The chief technical officer (CTO)
    has told you that the application must stay fully available even if a single AZ
    becomes unavailable and Auto Scaling cannot launch new instances in the remaining
    AZ. How can you establish this through AWS-specific services and architecture?
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你被引入了一家公司，该公司正在使用ELB和自动扩展运行一个业务关键型的工作负载。这个工作负载是一个二层应用程序，包括应用层和数据库层。目前，两个层都已经在`us-east-1`区域的两个可用区（AZ）中部署。数据库需要以同步方式从应用程序进行复制。首席技术官（CTO）告诉你，即使单个可用区不可用，且自动扩展无法在剩余的可用区中启动新的实例，应用程序也必须保持完全可用。你该如何通过AWS特定的服务和架构来实现这一目标？
- en: Set the configuration in ELB to deploy in three AZs with Auto Scaling set to
    deploy to handle 33 percent of the load per zone at peak.
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ELB中设置配置，以在三个可用区中进行部署，并将自动扩展设置为在峰值时每个区域处理33%的负载。
- en: Set the configuration in ELB to deploy in three AZs with Auto Scaling set to
    deploy to handle 50 percent of the load per zone at peak.
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ELB中设置配置，以在三个可用区中进行部署，并将自动扩展设置为在峰值时每个区域处理50%的负载。
- en: Set the configuration in ELB to deploy in two regions using the Round Robin
    algorithm with Auto Scaling set to deploy to handle 50 percent of the load per
    zone at peak.
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ELB中设置配置，以使用Round Robin算法在两个区域中进行部署，并将自动扩展设置为在峰值时每个区域处理50%的负载。
- en: Set the configuration in ELB to deploy in two regions using the Round Robin
    algorithm with Auto Scaling set to deploy to handle 100 percent of the load per
    zone at peak.
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ELB中设置配置，以使用Round Robin算法在两个区域中进行部署，并将自动扩展设置为在峰值时每个区域处理100%的负载。
- en: You have created a DevOps pipeline for an application that is running on EC2
    instances. Customers interact with this application via an application load balancer
    that is attached to an ASG. Since releasing the latest version of both the application
    and the launch template, the application seems to be scaling up and down multiple
    times each hour of the day. Which fixes should you and your team make in order
    to stabilize the ASG, preserve elasticity, and optimize costs? (Choose two answers)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你为一个在EC2实例上运行的应用程序创建了一个DevOps管道。客户通过附加到ASG的应用程序负载均衡器与此应用程序进行交互。自从发布了最新版本的应用程序和启动模板后，应用程序似乎在每天的每个小时都在多次扩展和收缩。你和你的团队应该采取哪些措施，以稳定ASG，保持弹性，并优化成本？（选择两个答案）
- en: Modify the application's ASG so that it uses scheduled scaling actions.
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改应用程序的ASG，使其使用计划扩展操作。
- en: Modify the application's ASG termination policy to terminate the oldest instance
    first.
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改应用程序的ASG终止策略，使其优先终止最旧的实例。
- en: Modify the application's ASG cooldown timers so that they are bigger.
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改应用程序的ASG冷却时间，使其变得更长。
- en: Modify the CloudWatch alarm associated with the application's ASG group so that
    there is a longer alarm period associated with the scale-down policy.
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改与应用程序ASG组关联的CloudWatch警报，使其与缩减策略关联的警报周期更长。
- en: The company you work for has an application that consists of EC2 instances that
    are launched using an ASG. It has come to your attention that the EC2 instances
    are not scaling up as more demand is needed. How should you check and remedy the
    situation?
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你所在的公司有一个应用程序，包含通过ASG启动的EC2实例。你注意到当需求增加时，EC2实例并未自动扩展。你应该如何检查并解决这个问题？
- en: Check to make sure that the ASG is placing instances across multiple regions.
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查以确保ASG将实例分布到多个区域。
- en: Check to make sure that the ASG is placing instances across multiple AZs.
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查以确保ASG将实例分布到多个可用区。
- en: Check to make sure that the ELB health checks are being utilized.
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查以确保正在使用ELB健康检查。
- en: Check to make sure that the correct metrics are being measured to trigger the
    scale-out event.
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查以确保正在衡量正确的指标来触发扩展事件。
- en: Review answers
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查答案
- en: b
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c, d
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c, d
- en: d
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
