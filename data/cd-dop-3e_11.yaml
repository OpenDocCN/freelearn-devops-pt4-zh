- en: Some Useful Information
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些有用的信息
- en: Although this book provides some (hopefully) useful information, there's only
    so much space available. Therefore, I've compiled a list of additional sources
    of information that will complement this book. I've also included a list of the
    many subject-matter experts out there who might be able to provide further assistance
    and guidance as you progress along your journey. Additional resources can be found
    on my website at [http://www.swartout.co.uk](http://www.swartout.co.uk/)[.](http://www.swartout.co.uk/)
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书提供了一些（希望）有用的信息，但毕竟篇幅有限。因此，我编制了一个额外信息来源的列表，以补充本书内容。我还列出了许多领域专家，他们可能能在你前行的过程中提供进一步的帮助和指导。额外的资源可以在我的网站上找到：[http://www.swartout.co.uk](http://www.swartout.co.uk/)。
- en: What follows is by no means an exhaustive list, but it is a good start.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来列出的并非详尽无遗，但它是一个不错的开始。
- en: Tools
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具
- en: 'Some of the following tools are mentioned within this book, and some are considered
    the best of breed for CD and DevOps:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下一些工具在本书中提到过，一些被认为是CD和DevOps领域的最佳工具：
- en: '| **Tool** | **Description** | **Where to find more information** |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **描述** | **更多信息在哪里可以找到** |'
- en: '| --- | --- | --- |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Jenkins |  | [https://jenkins.io/](https://jenkins.io/) |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| Jenkins |  | [https://jenkins.io/](https://jenkins.io/) |'
- en: '| GIT | A free and open source distributed version-control system | [https://git-scm.com/](https://git-scm.com/)
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| GIT | 一个免费的开源分布式版本控制系统 | [https://git-scm.com/](https://git-scm.com/) |'
- en: '| GitHub | An online-hosted community solution based on GIT | [https://github.com/](https://github.com/)
    |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| GitHub | 一个基于GIT的在线托管社区解决方案 | [https://github.com/](https://github.com/)
    |'
- en: '| Graphite | A highly scalable real-time graphing system that allows you to
    publish metric data from within your application | [http://graphiteapp.org/](http://graphiteapp.org/)
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| Graphite | 一个高度可扩展的实时图表系统，允许你从应用程序内部发布度量数据 | [http://graphiteapp.org/](http://graphiteapp.org/)
    |'
- en: '| Tasseo | A simple-to-use Graphite dashboard | [https://github.com/obfuscurity/tasseo](https://github.com/obfuscurity/tasseo)
    |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| Tasseo | 一个易于使用的Graphite仪表盘 | [https://github.com/obfuscurity/tasseo](https://github.com/obfuscurity/tasseo)
    |'
- en: '| SonarQube | An open platform to manage code quality | [https://www.sonarqube.org/](https://www.sonarqube.org/)
    |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| SonarQube | 一个开源平台，用于管理代码质量 | [https://www.sonarqube.org/](https://www.sonarqube.org/)
    |'
- en: '| Ganglia | A scalable distributed monitoring system for high-performance computing
    systems | [http://ganglia.sourceforge.net/](http://ganglia.sourceforge.net/) |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| Ganglia | 一个可扩展的分布式监控系统，用于高性能计算系统 | [http://ganglia.sourceforge.net/](http://ganglia.sourceforge.net/)
    |'
- en: '| Nagios | A powerful monitoring system that enables organizations to identify
    and resolve IT-infrastructure problems before they affect critical business processes
    | [https://www.nagios.org/](https://www.nagios.org/) |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| Nagios | 一个强大的监控系统，使组织能够在IT基础设施问题影响关键业务流程之前识别并解决这些问题 | [https://www.nagios.org/](https://www.nagios.org/)
    |'
- en: '| Puppet Labs | A tool to automate the creation and maintenance of IT infrastructure
    | [https://puppet.com/](https://puppet.com/) |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| Puppet Labs | 一个自动化创建和维护IT基础设施的工具 | [https://puppet.com/](https://puppet.com/)
    |'
- en: '| Chef | Another tool to automate the creation and maintenance of IT infrastructure
    | [https://www.chef.io/chef/](https://www.chef.io/chef/) |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| Chef | 另一个自动化创建和维护IT基础设施的工具 | [https://www.chef.io/chef/](https://www.chef.io/chef/)
    |'
- en: '| Vagrant | A tool to build complete development environments using automation
    | [https://www.vagrantup.com/](https://www.vagrantup.com/) |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| Vagrant | 一个使用自动化构建完整开发环境的工具 | [https://www.vagrantup.com/](https://www.vagrantup.com/)
    |'
- en: '| Docker | An open platform for distributed applications | [https://www.docker.com/](https://www.docker.com/)
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| Docker | 一个开源平台，用于分布式应用程序 | [https://www.docker.com/](https://www.docker.com/)
    |'
- en: '| Kubernetes ([https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/](https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/))
    | An open source system for automating deployment, scaling, and management of
    containerized applications | [https://kubernetes.io/](https://kubernetes.io/)
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| Kubernetes ([https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/](https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/))
    | 一个开源系统，用于自动化部署、扩展和管理容器化应用程序 | [https://kubernetes.io/](https://kubernetes.io/)
    |'
- en: '| Octopus deploy | A rather good tool that can be used as a CD pipeline | [https://octopus.com/](https://octopus.com/)
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| Octopus deploy | 一个非常好的工具，可以用作CD管道 | [https://octopus.com/](https://octopus.com/)
    |'
- en: '| Yammer | An Enterprise private social network (think of it as a corporate
    Facebook) | [https://www.yammer.com](https://www.yammer.com) |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| Yammer | 一种企业私人社交网络（可以把它看作是公司的 Facebook） | [https://www.yammer.com](https://www.yammer.com)
    |'
- en: '| Slack | A mature and widely used collaboration tool and platform | [https://slack.com/](https://slack.com/)
    |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| Slack | 一款成熟且广泛使用的协作工具和平台 | [https://slack.com/](https://slack.com/) |'
- en: '| IRC | The granddaddy of collaboration and chat tools | [http://www.irc.org/](http://www.irc.org/)
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| IRC | 协作和聊天工具的“祖父” | [http://www.irc.org/](http://www.irc.org/) |'
- en: '| Hubot | An automated bot that can be set up within most chatroom systems
    | [https://hubot.github.com/](https://hubot.github.com/) |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| Hubot | 一种可以在大多数聊天室系统中设置的自动化机器人 | [https://hubot.github.com/](https://hubot.github.com/)
    |'
- en: '| Trello | An online scrum/Kanban board solution | [https://trello.com/](https://trello.com/)
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| Trello | 一种在线 Scrum/Kanban 看板解决方案 | [https://trello.com/](https://trello.com/)
    |'
- en: People
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 人物
- en: 'What follows is a list of people who are actively involved in the agile and
    continuous delivery and DevOps communities:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些积极参与敏捷、持续交付和 DevOps 社区的人员：
- en: Patrick Debois is seen by many in the DevOps community as the daddy of DevOps
    and the founder of the DevOpsDays movement ([http://devopsdays.org/](http://devopsdays.org/)[)](http://devopsdays.org/).
    This relatively small get-together of like-minded individuals in 2009 has grown
    into a global gathering.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帕特里克·德布瓦（Patrick Debois）被许多 DevOps 社区成员视为 DevOps 的奠基人和 DevOpsDays 运动的创始人（[http://devopsdays.org/](http://devopsdays.org/)）。这个由志同道合的人组成的小型聚会在
    2009 年开始，已经发展成为全球性的聚会。
- en: John Botchagalupe Willis is a regular and renowned contributor to the DevOps
    community and has inspired many with his honest way of sharing his wisdom.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 约翰·博查卡卢佩·威利斯（John Botchagalupe Willis）是 DevOps 社区的常驻和著名贡献者，他通过自己真诚的分享智慧方式，激励了许多人。
- en: Jez Humble is the co-author of the Continuous Delivery book that is used by
    many as the definitive reference material when investigating or implementing continuous
    delivery. He also actively contributes to the continuous-delivery blog at [http://continuousdelivery.com/](http://continuousdelivery.com/).
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杰兹·汉布尔（Jez Humble）是《持续交付》一书的合著者，许多人在调查或实施持续交付时，将其作为权威参考资料。他还积极为 [http://continuousdelivery.com/](http://continuousdelivery.com/)
    上的持续交付博客贡献内容。
- en: John Allspaw is the SVP of Operations at [https://www.etsy.com/](https://www.etsy.com/)
    and seems to understand the value of DevOps-even though he's one of the senior
    management types.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 约翰·奥尔斯帕（John Allspaw）是 [https://www.etsy.com/](https://www.etsy.com/) 的运营高级副总裁，他似乎非常理解
    DevOps 的价值——尽管他是高级管理层中的一员。
- en: Gareth Rushgrove is a self-confessed web geek, who seems to somehow find time
    to produce the DevOps weekly email newsletter ([http://](http://devopsweekly.com/)
    [devopsweekly.com/](http://devopsweekly.com/)), which is full of useful and insightful
    information.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加雷斯·拉什格罗夫（Gareth Rushgrove）是自称的网页极客，他似乎总能找到时间制作《DevOps 每周通讯》（[http://](http://devopsweekly.com/)
    [devopsweekly.com/](http://devopsweekly.com/)），其中充满了有用且富有洞察力的信息。
- en: Gene Kim, co-author of *The Phoenix Project*, is the founder and former CTO
    of Tripwire. He is passionate about IT operations, security, and compliance, and
    how IT organizations successfully transform from good to great.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 吉恩·金（Gene Kim）是《凤凰计划》的合著者，Tripwire 的创始人及前 CTO。他对 IT 运维、安全性和合规性充满热情，并关注 IT 组织如何从优秀转变为卓越。
- en: Mitchell Hashimoto is a self-confessed DevOps tools mad scientist and the creator
    of Vagrant, Packer, Serf, Consul, and Terraform.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 米切尔·哈希莫托（Mitchell Hashimoto）是自称的 DevOps 工具狂热分子，也是 Vagrant、Packer、Serf、Consul
    和 Terraform 的创始人。
- en: Rachel Davies is an internationally recognized expert in coaching teams on the
    effective use of agile approaches and has a wealth of knowledge when it comes
    to retrospective techniques and games.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雷切尔·戴维斯（Rachel Davies）是国际公认的专家，专注于指导团队有效使用敏捷方法，并且在回顾技术和游戏方面拥有丰富的知识。
- en: Ken Schwaber and Mike Cohn are the godfathers of scrum and agile.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 肯·施瓦布尔（Ken Schwaber）和迈克·科恩（Mike Cohn）是 Scrum 和敏捷的“教父”。
- en: John Clapham is an all-round nice guy and agile/DevOps evangelist.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 约翰·克拉普哈姆（John Clapham）是一个全能的好人，也是敏捷/DevOps 的传道者。
- en: Karl Scotland is a renowned agile coach who specializes in lean and agile techniques.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卡尔·斯科特兰（Karl Scotland）是著名的敏捷教练，专注于精益和敏捷技术。
- en: Keith Watson is well known throughout the UK DevOps community and I have the
    privilege of working closely with him.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基思·沃森（Keith Watson）在英国的 DevOps 社区中非常有名，我有幸与他紧密合作。
- en: Recommended reading
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐阅读
- en: 'The following books are well worth a read, even if you don''t decide for some
    strange reason to adopt CD and/or DevOps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下书籍值得一读，即使你出于某种奇怪的原因不打算采用持续交付和/或 DevOps：
- en: '| **Resource** | **Description** | **Link** |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| **资源** | **描述** | **链接** |'
- en: '| *Agile Coaching* | A nice introduction on how to become a good agile coach
    | [https://pragprog.com/book/sdcoach/agile-coaching](https://pragprog.com/book/sdcoach/agile-coaching)
    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| *敏捷教练* | 如何成为优秀敏捷教练的简介 | [https://pragprog.com/book/sdcoach/agile-coaching](https://pragprog.com/book/sdcoach/agile-coaching)
    |'
- en: '| *Agile Retrospectives: Making Good Teams Great* | An excellent book that
    covers most of what you need to know to run effective retrospectives | [https://pragprog.com/book/dlret/agile-retrospectives](https://pragprog.com/book/dlret/agile-retrospectives)
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| *敏捷回顾：让优秀团队更上一层楼* | 一本优秀的书籍，涵盖了运行有效回顾所需的大部分知识 | [https://pragprog.com/book/dlret/agile-retrospectives](https://pragprog.com/book/dlret/agile-retrospectives)
    |'
- en: '| *Continuous Delivery: Reliable Software Releases Through Build, Test, and
    Deployment Automation* | The CD bible | [http://www.amazon.com/dp/0321601912?tag=contindelive-20](http://www.amazon.com/dp/0321601912?tag=contindelive-20)
    |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| *持续交付：通过构建、测试和部署自动化实现可靠软件发布* | CD 圣经 | [http://www.amazon.com/dp/0321601912?tag=contindelive-20](http://www.amazon.com/dp/0321601912?tag=contindelive-20)
    |'
- en: '| *The Phoenix Project* | A unique take on DevOps adoption in fiction form,
    well worth a read | [http://itrevolution.com/books/phoenix-project-devops-book/](http://itrevolution.com/books/phoenix-project-devops-book/)
    |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| *凤凰项目* | 以虚构形式独特呈现的 DevOps 采纳方法，值得一读 | [http://itrevolution.com/books/phoenix-project-devops-book/](http://itrevolution.com/books/phoenix-project-devops-book/)
    |'
- en: '| *Agile Product Management with Scrum* | View scrum and agile from the product
    managers'' point of view | [http://www.amazon.com/exec/obidos/ASIN/0321605780/mountaingoats-20](http://www.amazon.com/exec/obidos/ASIN/0321605780/mountaingoats-20)
    |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| *使用 Scrum 进行敏捷产品管理* | 从产品经理的角度看 Scrum 和敏捷 | [http://www.amazon.com/exec/obidos/ASIN/0321605780/mountaingoats-20](http://www.amazon.com/exec/obidos/ASIN/0321605780/mountaingoats-20)
    |'
- en: '| *The Enterprise and Scrum* | This book provides some addition insight into
    the challenges of adopting an agile approach and ways of working | [http://www.amazon.com/exec/obidos/ASIN/0735623376/mountaingoats-20](http://www.amazon.com/exec/obidos/ASIN/0735623376/mountaingoats-20)
    |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| *企业与 Scrum* | 本书提供了关于采用敏捷方法和工作方式面临的挑战以及解决方法的额外见解 | [http://www.amazon.com/exec/obidos/ASIN/0735623376/mountaingoats-20](http://www.amazon.com/exec/obidos/ASIN/0735623376/mountaingoats-20)
    |'
- en: '| *The Lean Startup* | Real-life experiences and insights into how to transform
    your business, culture, and ways of working | [http://amzn.com/0307887898](http://amzn.com/0307887898)
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| *精益创业* | 实际经验和见解，如何转变您的业务、文化和工作方式 | [http://amzn.com/0307887898](http://amzn.com/0307887898)
    |'
- en: '| *Getting Value out of Agile Retrospectives* | Gives a good introduction on
    retrospectives and provides a good, long list of games/exercises | [https://leanpub.com/gettingvalueoutofagileretrospectives](https://leanpub.com/gettingvalueoutofagileretrospectives)
    |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| *从敏捷回顾中获取价值* | 提供了回顾的良好简介，并列出了一系列游戏/练习 | [https://leanpub.com/gettingvalueoutofagileretrospectives](https://leanpub.com/gettingvalueoutofagileretrospectives)
    |'
- en: Retrospective games
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回顾游戏
- en: Retrospectives are normally the inspect part of the agile inspect and adapt.
    If you are aware of or are using scrum or some other agile methodology, then running
    retrospectives should be nothing new. If you have never run a retrospective before,
    then you would have some fun things to learn.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾通常是敏捷检视和适应的一部分。如果你了解或正在使用 Scrum 或其他敏捷方法，那么进行回顾不应该是什么新鲜事。如果你以前从未进行过回顾，那么你将有一些有趣的事情要学习。
- en: The remit of a retrospective is to look back over a specific period of time,
    project, release, or simply a business change and highlight what worked well,
    what didn't work well, and what improvements are needed. This process can traditionally
    be a bit dry, so retrospectives tend to be based on games (some people refer to
    these as exercises, but I prefer the word "games"), which encourages collaboration,
    engagement, and injects a bit of fun.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾的目的是回顾一个特定的时间段、项目、发布或者简单的业务变更，并突出表现良好的地方、表现不佳的地方以及需要改进的地方。这个过程传统上可能有些枯燥，因此回顾往往基于游戏（有些人称之为练习，但我更喜欢称其为“游戏”），这鼓励协作、参与，并增添一些乐趣。
- en: 'As with any game, there are always rules to follow. Here are some example rules:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何游戏一样，总会有一些需要遵守的规则。这里有一些示例规则：
- en: Each session should be strictly time-boxed
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个会议都应该严格按时限进行
- en: Everyone should be given a voice and a chance to actively contribute
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个人都应该有发言的机会和能力积极贡献
- en: Everyone should be able to voice their opinion but not at the expense of others
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个人都应该能够表达自己的观点，但不应该损害他人的权益
- en: Whoever is facilitating the session is in charge and should control the session
    as such
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会议的主持人负责并控制会议的进行
- en: The session should result in tangible and realistic actions that can be taken
    forward as improvements
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本次会议应当产生一些可以作为改进措施推进的具体和实际行动。
- en: As with the value-stream mapping technique mentioned in [Chapter 2](03ef279d-c51d-4e35-a137-701636c17d5f.xhtml),
    *Understanding Your Current Pain Points*, the only tools you really need are pens,
    paper, a whiteboard (or simply a wall), some space, and some sticky notes.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在[第2章](03ef279d-c51d-4e35-a137-701636c17d5f.xhtml)中提到的价值流图技术，*理解你当前的痛点*，你真正需要的工具只有笔、纸、白板（或只是墙面）、一些空间和便签。
- en: I've already introduced you to timeline and value-stream mapping. Let me now
    introduce you to one of my favorite games, StoStaKee.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经向你介绍了时间轴和价值流图。现在让我介绍一下我最喜欢的游戏之一——StoStaKee。
- en: StoStaKee
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: StoStaKee
- en: 'This stands for stop, start, and keep. Again, this is an interactive time-boxed
    exercise focused on past events. This time, you ask everyone to fill in sticky
    notes related to things they would like to stop doing, start doing, or keep doing,
    and add them to one of three columns (stop, start, and keep). You then get everyone
    to vote—again, with sticky dots on the ones they feel most strongly about. Again,
    you should encourage lots of open and constructive discussions to ensure that
    everyone understands what each note means. The end goal is a set of actions to
    take forward. The following diagram depicts a typical StoStaKee board:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这个缩写代表停止（stop）、开始（start）和保持（keep）。同样，这是一项以过去事件为重点的互动时间盒练习。这一次，你要求每个人填写便签，记录他们希望停止、开始或继续做的事情，并将其添加到三个栏目（停止、开始和保持）中的一个。然后，你让每个人投票——再次使用便签上的小圆点，标记他们最强烈的看法。同样，你应该鼓励大家进行大量开放且建设性的讨论，确保每个人都理解每个便签的意义。最终目标是确定一系列可以推进的行动。以下图示展示了一个典型的StoStaKee板：
- en: '![](img/9ae1ccae-511b-4ef7-beac-6609cae7c113.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ae1ccae-511b-4ef7-beac-6609cae7c113.png)'
- en: A typical StoStaKee board
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的StoStaKee板
- en: The preceding examples are a mere subset of what is available, but both have
    proven time and time again to be the most effective in investigating and, more
    importantly, understanding the issues within a broken process.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的示例仅仅是可用资源的一部分，但它们已经一再证明，在调查和，更重要的是，理解一个失败的流程中的问题时，最为有效。
- en: Vital measurements expanded
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展的关键度量
- en: '[Chapter 7](https://cdp.packtpub.com/continuous_delivery_and_devops__a_quickstart_guide__third_edition/wp-admin/post.php?post=6&action=edit#post_308),
    *Vital Measurements*, introduced you to a number of different ways of measuring
    certain aspects of your processes. We will now expand on some of these and look
    in more detail at what you could/should be measuring. We''ll start by revisiting
    code complexity and the science behind it.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](https://cdp.packtpub.com/continuous_delivery_and_devops__a_quickstart_guide__third_edition/wp-admin/post.php?post=6&action=edit#post_308)，*关键度量*，向你介绍了测量你流程中某些方面的多种方法。现在我们将扩展一些这些方法，并更详细地探讨你可以/应该测量的内容。我们将从重新审视代码复杂性及其背后的科学开始。'
- en: Code complexity – some science
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码复杂性——一些科学原理
- en: As mentioned in [Chapter 7](https://cdp.packtpub.com/continuous_delivery_and_devops__a_quickstart_guide__third_edition/wp-admin/post.php?post=6&action=edit#post_308),
    *Vital Measurements*, having complex code in some circumstances is fine and sometimes
    necessary; however, overly complex code can cause you lots of problems, especially
    when trying to debug or when you're trying to extend it to cater to additional
    use cases. Therefore, being able to analyze how complex a piece of code is should
    help.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第7章](https://cdp.packtpub.com/continuous_delivery_and_devops__a_quickstart_guide__third_edition/wp-admin/post.php?post=6&action=edit#post_308)中提到的，*关键度量*，在某些情况下，复杂的代码是可以接受的，甚至是必要的；然而，过于复杂的代码可能会给你带来很多问题，特别是在调试时或在你尝试扩展代码以适应更多使用案例时。因此，能够分析一段代码的复杂性应该是有帮助的。
- en: 'There are a few documented and recognized ways of measuring the complexity
    of source code, but the one most referred to is the cyclomatic complexity metric
    (sometimes referred to as MCC or McCabe Cyclomatic Complexity) introduced by Thomas
    McCabe in the 1970s. This metric has some real-world science behind it, which
    can, with the correct tools, provide quantifiable measurements based on your source
    code. The MCC formula is calculated as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种已被记录并认可的源代码复杂性度量方法，但最常被提及的是由Thomas McCabe在1970年代提出的圈复杂度度量（有时被称为MCC或McCabe圈复杂度）。这个度量背后有一些现实世界的科学原理，使用正确的工具时，可以基于你的源代码提供量化的度量值。MCC公式的计算方法如下：
- en: '*M = E - N + X*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*M = E - N + X*'
- en: In the preceding formula, *M* is the MCC metric, *E* is the number of edges
    (the code executed as a result of a decision), *N* is the number of nodes or decision
    points (conditional statements), and *X* is the number of exits (return statements)
    in the graph of the method.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的公式中，*M*是MCC度量，*E*是边数（决策执行后的代码），*N*是节点数或决策点数（条件语句），*X*是方法图中的退出数（返回语句）。
- en: Code versus comments
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码与注释
- en: Including comments within your source will make it much more readable, especially
    in the future when someone other than the original author has to refactor or bug
    fix the code. Some tools will allow you to measure and analyze the ratio of code
    versus comments.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在源代码中包含注释会使其更加易读，尤其是在未来，当原作者以外的人需要重构或修复代码时。一些工具可以帮助你衡量和分析代码与注释的比例。
- en: That said, some software engineers don't believe that comments are worthwhile
    and believe that if another engineer cannot read the code, then they're not worth
    their salt. This is one view; however, including comments within one's source
    should be encouraged as a good engineering practice and good manners.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，一些软件工程师认为注释没有价值，并认为如果另一个工程师无法读懂代码，那么这个工程师就不称职。这是一种观点；然而，作为一种良好的工程实践和礼貌，应该鼓励在代码中加入注释。
- en: 'One thing to look out for should you implement a code-versus-comments analysis
    is those individuals who get around the rules by simply including things such
    as the following code snippet:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你实现了代码与注释的分析功能，那么需要注意的是，一些人可能通过简单地添加以下代码片段等方式规避规则：
- en: '[PRE0]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This might be a bit extreme, but I'm sure if you look close enough at your code
    base, you might well find similar sorts of things hidden away.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能有些极端，但我相信如果你仔细查看你的代码库，你可能会发现类似的东西隐藏其中。
- en: One other good reason for comments—in my experience—is for those situations
    when you have to take the lid off some very old code (by today's standards, very
    old could be a couple of years) to investigate a possible bug or simply find out
    what it does. If the code is based on outdated design patterns or even based on
    an old language standard (for example, an older version of Java or C#), it might
    be quite time-consuming trying to understand what the code is doing without, at
    least, some level of commenting.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我的经验，另一个添加注释的好理由是，当你需要处理一些非常老旧的代码时（按今天的标准，可能只是几年前的代码），例如调查可能的bug或仅仅想了解代码的功能。如果代码是基于过时的设计模式，甚至是基于旧的语言标准（例如旧版本的Java或C#），那么在没有注释的情况下，理解代码的功能可能会非常耗时。
- en: Embedding monitoring into your software
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将监控嵌入到软件中
- en: As mentioned in [Chapter 7](390f69c0-7f66-41a7-93a6-ee5c1bc8733a.xhtml), *Vital
    Measurements*, there are a few ways you can include and embed the generation of
    metrics within the software itself.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如[第7章](390f69c0-7f66-41a7-93a6-ee5c1bc8733a.xhtml)《关键度量》中所述，*重要度量*，有几种方法可以在软件本身中嵌入和生成度量。
- en: Let's assume that your software components contain APIs that are used for component-to-component
    communication. If you were able to extend these APIs to include some sort of a
    health-check functionality, you could construct a tool that simply calls each
    component and asks the component how it is. The component can then return various
    bits of data, which indicates its health. This might seem a bit convoluted, but
    it's not that difficult.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你的软件组件包含用于组件间通信的API。如果你能扩展这些API，加入某种健康检查功能，你就可以构建一个工具，简单地调用每个组件并询问它的状态。然后，组件可以返回各种数据，表明其健康状况。虽然这看起来有些复杂，但实际上并不难。
- en: 'The following diagram gives an overview of how this might look:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 下图概述了这种实现的可能方式：
- en: '![](img/e185e0d3-411d-4012-83f2-798bbf859e84.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e185e0d3-411d-4012-83f2-798bbf859e84.png)'
- en: A health-checker solution harvesting health-status data form software components
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 一个健康检查解决方案，用于从软件组件收集健康状态数据
- en: In this example, we have a health-checker tool that calls each component via
    the APIs and gets back data that can then be stored, reported, or displayed on
    a dashboard. The returned data can be as simple or complex as you like. What you're
    after is to ascertain whether each component is healthy. Let's say, for example,
    one element of the data returned indicated whether or not the software component
    could connect to the database. If this comes back as false and you notice that
    the system monitor looking at the free disk space on the database server is showing
    next to zero, you can very quickly ascertain what the problem is and rectify it.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们有一个健康检查工具，它通过API调用每个组件并获取数据，这些数据随后可以存储、报告或显示在仪表板上。返回的数据可以根据需要简单或复杂。你所要做的，就是判断每个组件是否正常运行。假设，例如，返回的数据中有一个元素指示软件组件是否能连接到数据库。如果这个值返回为false，并且你注意到查看数据库服务器上剩余磁盘空间的系统监控显示几乎为零，你就能非常快速地确定问题所在并加以解决。
- en: This method of monitoring is good but relies on you having some tooling in place
    to call each component in turn, harvest the data, and present it to you in some
    readable/usable form. It's also restricted to what the APIs can return or rather
    how they are designed and implemented. If, for example, you wanted to extend the
    data collection to include something such as the number of open database connections,
    you will need to change the APIs, redeploy all of the components, and then update
    the tooling to accept this new data element. This is not a huge problem, but a
    problem all the same. What could be a huge problem, though, is the single point
    of failure, which is the tooling itself. If this stops working for whatever reason,
    you're again blind, as you don't have any data to look at, and, more importantly,
    you're not harvesting it.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这种监控方法很好，但依赖于你事先设置一些工具来逐个调用每个组件，收集数据，并以某种可读/可用的形式展示给你。它也受限于API的返回结果，或者更准确地说，受限于它们的设计和实现。例如，如果你想扩展数据收集内容，加入像数据库连接数这样的指标，你需要修改API，重新部署所有组件，然后更新工具来接受这一新的数据元素。这并不是什么大问题，但毕竟是一个问题。然而，真正可能成为大问题的是单点故障——就是工具本身。如果它因为某些原因停止工作，你就会再次陷入盲区，因为你没有数据可查看，更重要的是，你也无法收集数据。
- en: There is an alternative approach that can overcome these problems. In this approach,
    the component itself generates the metrics you need and pushes the data to your
    tooling. Something like Graphite does this very well. Instead of extending the
    APIs, you simply implement a small amount of code; this allows you to fill up
    buckets of metrics data from within the software component itself and push these
    buckets out to the Graphite platform. Once in Graphite, you can interrogate the
    data and produce some very interesting real-time graphs. Another advantage of
    Graphite is the plethora of tools now available to generate and create very effective
    graphs, charts, and dashboards based on the Graphite data.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种替代方法可以克服这些问题。在这种方法中，组件本身生成你需要的指标，并将数据推送到你的工具中。像Graphite这样的工具就能很好地做到这一点。与其扩展API，你只需实现少量代码；这使得你可以在软件组件内部填充指标数据的“桶”，并将这些桶推送到Graphite平台。一旦数据进入Graphite，你就可以查询数据并生成一些非常有趣的实时图表。Graphite的另一个优点是，现在有大量工具可以基于Graphite数据生成和创建非常有效的图表、图形和仪表板。
