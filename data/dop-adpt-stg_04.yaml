- en: '*Chapter 3*: Measuring the Success of DevOps'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第三章*：测量 DevOps 成功的方法'
- en: You have to be able to point to metrics and measurements that show the success
    of DevOps within your organization. Selecting the right metrics is critical to
    showcasing your progress, ensuring teams stay aligned with the vision and empowerment
    of people. This chapter looks at the various metrics used in DevOps and how to
    measure success.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须能够指出显示组织内 DevOps 成功的指标和测量方法。选择正确的指标对展示您的进展至关重要，确保团队与愿景保持一致并赋予人们权力。本章将探讨在
    DevOps 中使用的各种指标以及如何衡量成功。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主要主题：
- en: Common metrics used to measure success
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于衡量成功的常见指标
- en: Designing metrics for your team
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您的团队设计指标
- en: Creating rollups at an organizational level
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在组织层面创建汇总数据
- en: Common metrics used to measure success
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于衡量成功的常见指标
- en: Firstly, it's important to know why to measure your performance. I speak to
    many leaders of various businesses, and a frightening trend is that they all think
    measuring success is a tool that can be used to help with performance management.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，了解为何要衡量您的绩效很重要。我与许多各类企业的领导人交流，一个令人担忧的趋势是，他们都认为衡量成功是一种可以用来帮助绩效管理的工具。
- en: The reality is that tracking of performance is a tool for improvement. **Continuous
    improvement** (**CI**) is a key pillar of DevOps, so if you have no idea how you
    are performing, how can you improve? Improvement should be the main goal of the
    metrics used in DevOps, ones that can drive tangible results and highlight growth
    areas.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 现实情况是，绩效追踪是改进的工具。**持续改进**（**CI**）是 DevOps 的关键支柱，因此，如果您不知道自己的表现如何，如何进行改进呢？改进应该是用于
    DevOps 的指标的主要目标，这些指标可以推动实际结果，并突显增长领域。
- en: 'Before we look at the metrics you can use, I like to put them into three buckets.
    Then, as you will see later in the chapter, depending on the type of team you
    are running, you can pick appropriate metrics from each bucket to look at your
    performance and generate useful methods of feedback. The number of metrics you
    pick from each bucket depends on your goals and your style of team. Have a look
    at the following diagram:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看可以使用的度量标准之前，我喜欢将它们分为三个类别。随后您将在本章后面看到，根据您管理的团队类型，您可以从每个类别中选择适当的度量标准来评估您的表现，并生成有用的反馈方法。您从每个类别选择的度量标准数量取决于您的目标和团队的风格。请参考以下图表：
- en: '![Figure 3.1 – Venn diagram showing the relationship of velocity, quality,
    and stability'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.1 – 显示速度、质量和稳定性关系的维恩图'
- en: '](img/B17192_03_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17192_03_01.jpg)'
- en: Figure 3.1 – Venn diagram showing the relationship of velocity, quality, and
    stability
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 显示速度、质量和稳定性关系的维恩图
- en: The idea behind the preceding diagram is to illustrate that in an ideal world,
    you have a balance of metrics from each of the three categories, but you can have
    scenarios where you have more from one category. In all scenarios, you will notice
    that stability is present throughout.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表背后的理念是展示，在理想情况下，您可以从三个类别中平衡地选择度量标准，但可能出现某一类别占比更多的情况。在所有情况下，您会注意到稳定性始终存在。
- en: 'The following possibilities exist in this model:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在此模型中存在以下可能性：
- en: '**Velocity** + **Stability**'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度** + **稳定性**'
- en: '**Quality** + **Stability**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**质量** + **稳定性**'
- en: '**Velocity** + **Quality** + **Stability**'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度** + **质量** + **稳定性**'
- en: Stability is core because whatever we are doing within our organization, no
    matter what changes we are going through, stability should be central to what
    we do, and in no circumstances should we impact this.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定性至关重要，因为无论我们在组织内做什么变更，稳定性都应该是我们所做一切的核心，并且在任何情况下都不应该影响这一点。
- en: First, let's look at the metrics you would associate with velocity. In DevOps,
    when we talk about velocity, we mean working with both speed and direction.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看您可能与速度相关的指标。在 DevOps 中，当我们谈论速度时，我们指的是同时具备速度和方向性。
- en: Common velocity metrics
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见的速度指标
- en: 'Velocity is vitally important in DevOps, as we are going on a journey that
    tries to break down silos in your organization and improve collaboration and communication.
    Having metrics that look at velocity can be very useful when it comes to highlighting
    areas for improvement. With that in mind, let''s look at some of the common velocity
    metrics, as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 中，速度非常重要，因为我们正在尝试打破组织内的隔离，并改善协作和沟通。具有考虑速度的指标在突显改进领域时非常有用。有了这个想法，让我们看看一些常见的速度指标，如下所示：
- en: Deployment duration
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署持续时间
- en: Deployment frequency
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署频率
- en: Change volume
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变更量
- en: Test automation coverage
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试自动化覆盖率
- en: Lead time
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交付时间
- en: Cycle time
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 周期时间
- en: Deployment failure rate
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署失败率
- en: Environment provisioning time
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境准备时间
- en: From looking at these metrics at a high level, let's now look at them in more
    detail to understand what each one means.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 从高层次来看这些指标后，我们现在将更加详细地了解它们，以理解每个指标的含义。
- en: Deployment duration
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署持续时间
- en: Deployment duration is the amount of time it takes to execute your **continuous
    deployment** (**CD**) pipeline. If you are producing a build and running a deployment
    at the same time rather than just picking up the latest build artifact, then record
    both the CI and CD pipelines, but make sure you have a way of knowing how long
    each pipeline is taking to execute. Most tooling provides you with the ability
    to look at the start and end time of each pipeline and the steps executed within.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 部署持续时间是执行**持续部署**（**CD**）流水线所需的时间。如果你在生成构建并同时运行部署，而不仅仅是使用最新的构建产物，那么需要记录CI和CD流水线的时间，但要确保你能够了解每条流水线执行所需的时间。大多数工具都可以让你查看每条流水线的开始和结束时间，以及执行的步骤。
- en: Deployment frequency
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署频率
- en: Measuring deployment frequency enables you to look at how many times you deploy.
    In mature organizations, the target is to deploy numerous times a day. Whether
    you do or not is dependent on several factors.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 测量部署频率可以帮助你了解你部署了多少次。在成熟的组织中，目标是一天进行多次部署。是否达成这一目标取决于多个因素。
- en: Important note
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Charting progress over time with an increasing number of deployments can show
    real progress in your DevOps transformation.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 随着部署次数的增加，绘制进度图可以展示你在DevOps转型中的实际进展。
- en: Change volume
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 变更量
- en: In DevOps, there is often a common misconception that you don't follow the normal
    change management procedures. In reality, it's quite the opposite—transparency
    is important, and there is no better tool for transparency in service management
    than change management. You can measure the number of changes sprint to sprint,
    or even just monthly, to get an idea of the number of releases you are shipping.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在DevOps中，通常会存在一个误解，即你不遵循正常的变更管理程序。实际上，情况正好相反——透明性非常重要，而没有比变更管理更适合服务管理中的透明性工具。你可以测量每个迭代周期中的变更次数，甚至是每月的变更次数，以了解你发布了多少次版本。
- en: Test automation coverage
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试自动化覆盖率
- en: Test automation is also a key part of automation in DevOps. When talking about
    measuring coverage in test automation, we mean the amount of the application or
    code base that is covered by automated tests.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 测试自动化也是DevOps中自动化的一项关键部分。谈到测量测试自动化的覆盖率时，我们指的是应用程序或代码库中被自动化测试覆盖的部分。
- en: Lead time
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交付时间
- en: In DevOps, if you are looking to ship features quickly, then lead time is an
    important metric for you to measure. Lead time is the amount of elapsed time between
    adding an item to the backlog and that item shipping to release. This lets you
    measure how long it takes on average to take an item from backlog to production.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在DevOps中，如果你希望快速交付功能，那么交付时间是一个重要的度量指标。交付时间是指从将某个任务加入待办事项到该任务交付发布之间的时间。通过这个指标，你可以测量从待办事项到生产环境平均需要多长时间。
- en: Cycle time
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 周期时间
- en: Very similar to lead time is cycle time. The slight difference in this metric
    is that rather than measuring from when an item is added to the backlog to when
    that item is shipped, cycle time looks at the time from when work on that item
    is started to when it is completed, or shipped.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 和交付时间非常相似的是周期时间。这个指标的细微差别在于，周期时间不是从某项任务加入待办事项到该任务交付，而是从开始处理该项任务到完成或交付这项任务的时间。
- en: Deployment failure rate
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署失败率
- en: Identifying the rate of failure in deployment helps teams determine the quality
    of code and testing, moving from other stages to production. It is a leading indicator
    for code and pipeline maturity. Failure of deployments is obviously something
    you need to know about and monitoring can help with this, but recording your deployment
    failure rate as a percentage is also important. This lets you understand how often
    your deployments fail. Mature organizations look for a value below 5% for large
    volumes of deployments.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 识别部署失败率有助于团队确定代码和测试的质量，从其他阶段迁移到生产阶段。这是代码和流水线成熟度的领先指标。部署失败显然是你需要了解的事项，监控有助于发现这个问题，但记录你的部署失败率百分比也是很重要的。这可以让你了解你的部署失败的频率。成熟的组织会寻找一个低于5%的部署失败率，尤其是在大量部署的情况下。
- en: Environment provisioning time
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 环境准备时间
- en: When using **infrastructure as code** (**IaC**) to deploy your environments,
    much like when measuring deployment duration, environment provisioning time allows
    you to understand how long it takes to deploy your environment. In environments
    with a high number of microservices this is a great metric, as you will be able
    to see as you deploy more microservices how your provisioning time hopefully decreases.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用**基础设施即代码**（**IaC**）来部署环境时，就像在衡量部署持续时间时一样，环境配置时间让你了解部署环境所需的时间。在拥有大量微服务的环境中，这是一个很好的指标，因为随着你部署更多的微服务，你将能够看到配置时间如何希望减少。
- en: Important note
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: As your organization progresses through maturity, it's useful to see where you
    have come from on your journey. Track this metric from the beginning so that you
    can see the progress you are making.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你的组织在成熟度上不断进步，回顾你从何处出发非常有用。从一开始就追踪这个指标，以便你能够看到你的进展。
- en: Now, let's look at some of the metrics associated with quality.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看看与质量相关的一些指标。
- en: Common quality metrics
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见质量指标
- en: 'As we discussed earlier, measuring stability is important; second on that list
    is quality. You can have a high velocity, meaning you are working at a fast rate,
    but the quality may suffer because of that. This isn''t a scenario you want, as
    low quality starts to erode trust in what you are doing and how you are doing
    it. Here are some common quality metrics you can use in your organization:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的，衡量稳定性很重要；其次是质量。你可以拥有很高的开发速度，意味着你在快速工作，但由于此速度，质量可能会受到影响。这并不是你想要的情况，因为低质量会逐渐侵蚀对你所做工作的信任，以及你如何进行工作的信任。以下是你可以在组织中使用的一些常见质量指标：
- en: Defect density
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷密度
- en: Defect aging
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷老化
- en: Code quality
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码质量
- en: Unit test coverage
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元测试覆盖率
- en: Code vulnerabilities
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码漏洞
- en: Standards violations
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准违规
- en: Defect reintroduction rate
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缺陷重新引入率
- en: Now that we understand the quality metrics we can use, let's look at them again
    in more detail to understand what they mean.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了可以使用的质量指标，让我们更详细地再看一遍，了解它们的含义。
- en: Defect density
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺陷密度
- en: You can measure defect density in several different ways. The most common way
    is to calculate the number of defects per 1,000 lines of code. Using this metric
    is useful to help with sprint planning. You can, over time, use this metric to
    estimate the number of defects you may be presented with from sprint to sprint.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过多种方式来衡量缺陷密度。最常见的方式是计算每1,000行代码的缺陷数。使用这个指标有助于冲刺规划。随着时间的推移，你可以使用这个指标来估算每个冲刺中可能出现的缺陷数量。
- en: With the adoption of **integrated development environments** (**IDEs**) and
    automation tools it can be hard to identify lines of code, but it is still an
    important metric, and most development tools will be able to get past this limitation.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 随着**集成开发环境**（**IDEs**）和自动化工具的采用，识别代码行可能变得困难，但它仍然是一个重要的指标，而且大多数开发工具能够克服这一限制。
- en: Important note
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The calculation for defect density is defect count/**lines of code** (**LOC**)
    of the release. Note that this is on the specific release, not the overall code
    base.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 缺陷密度的计算公式是缺陷数/**代码行数**（**LOC**）发布版本。请注意，这只是特定版本的情况，而非整个代码库。
- en: Defect aging
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺陷老化
- en: This is a valuable metric to measure, and is simply the measure of time between
    a defect getting reported to the backlog and the current date, provided that defect
    is still open. Tracking this metric is important when it comes to technical debt.
    It allows you to understand how long on average you keep defects open for before
    they are resolved.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有价值的指标，简单来说，它是衡量缺陷从报告到积压列表到当前日期之间的时间，前提是该缺陷仍然未解决。在技术债务方面，追踪此指标非常重要。它让你了解平均而言，缺陷在解决前被保持开放的时间。
- en: Code quality
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码质量
- en: When we talk about code quality, it's easy to think we are talking about the
    number of standards violations. We're going to talk about that metric as another
    quality metric you can use. In this context, when we talk about code quality,
    we mean in the overall context of an application. This can be represented as a
    percentage of the overall application. The degrading part of this metric is the
    number of violations against code quality, defined by many of the rulesets available
    for whichever language you are programming in.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论代码质量时，很容易认为我们是在谈论标准违规的数量。我们将把这个指标作为另一种质量指标来讨论。在这个上下文中，当我们谈论代码质量时，我们指的是整个应用程序的质量。这可以通过整个应用程序的百分比来表示。这个指标的下降部分是违反代码质量的数量，这些标准由您编写代码的语言的许多规则集定义。
- en: Unit test coverage
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 单元测试覆盖率
- en: Coverage of unit testing is measured as a percentage. It covers the percentage
    of the application that is covered by unit tests written by developers. In **test-driven
    deployment** (**TDD**) environments where the tests are written before the functional
    code, organizations look for 80% coverage as an absolute minimum.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 单元测试覆盖率以百分比表示。它覆盖了开发人员编写的单元测试所覆盖的应用程序部分。在**测试驱动部署**（**TDD**）环境中，测试在功能代码之前编写，组织通常将80%的覆盖率视为最低要求。
- en: Code vulnerabilities
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码漏洞
- en: Scanning your code for known vulnerabilities is a fundamental aspect of good
    security practice. For this reason, understanding the number of vulnerabilities
    by release is a key metric. You can introduce vulnerabilities in other areas of
    your application when you write new features or fix others. Tracking this metric
    then becomes important for ensuring you are following good security practices.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描您的代码以发现已知漏洞是良好安全实践的基本组成部分。因此，了解每个版本中的漏洞数量是一个关键指标。当您编写新功能或修复其他问题时，可能会在应用程序的其他区域引入漏洞。跟踪这个指标对于确保您遵循良好的安全实践至关重要。
- en: Standards violations
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标准违规
- en: Static analysis tools can look at your source code in detail and highlight areas
    of code that do not conform to standards. These are generally community-driven
    or professionally set standards. However, some tools allow organizations to set
    their own rules for standards. This metric provides you with information and insights
    on how your developers are developing to standards baselines.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 静态分析工具可以详细查看您的源代码，并突出显示不符合标准的代码区域。这些标准通常是社区驱动的或专业设定的标准。然而，某些工具允许组织设置自己的标准规则。这个指标为您提供有关开发人员如何遵循标准基准开发的相关信息和洞察。
- en: Defect reintroduction rate
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺陷重新引入率
- en: Despite what you might think, this metric tracks the effectiveness of your developers'
    local testing. We are measuring with this metric the number of defects that are
    reported as breaking other functionality and causing other defects to be raised.
    You will sometimes see this metric being called *defect leakage*.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管您可能会这样认为，但这个指标实际上跟踪的是开发人员本地测试的有效性。通过这个指标，我们衡量的是被报告为破坏其他功能并导致其他缺陷被提出的缺陷数量。您有时会看到这个指标被称为*缺陷泄漏*。
- en: Finally, let's look at the common metrics for stability. You will recognize
    some of these if you have a service management background.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们看看常见的稳定性指标。如果您有服务管理背景，您会认识到其中的一些指标。
- en: Common stability metrics
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常见的稳定性指标
- en: 'Stability is critical—just as poor quality can erode trust internally and within
    your customer base, so can poor stability. Nobody wants to use a product or platform
    that is not stable. Instrumentation is designed to help you understand what is
    happening and how it affects stability. The following metrics exist to help you
    measure stability:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定性至关重要——就像糟糕的质量可能会破坏内部和客户的信任，糟糕的稳定性也会如此。没有人愿意使用不稳定的产品或平台。监控工具旨在帮助您了解发生了什么以及它如何影响稳定性。以下指标帮助您衡量稳定性：
- en: '**Mean Time to Recovery** (**MTTR**)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平均修复时间**（**MTTR**）'
- en: Deployment downtime
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署停机时间
- en: Change failure rate
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改失败率
- en: Incidents per deployment
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次部署的事件数量
- en: Unapproved changes
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未批准的更改
- en: Number of hotfixes
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 热修复数量
- en: Platform availability
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平台可用性
- en: Let's now look at these common stability metrics in more detail.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们更详细地看一下这些常见的稳定性指标。
- en: MTTR
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平均修复时间（MTTR）
- en: I find this metric powerful and more useful than measuring availability, especially
    in the cloud world, where availability of the platform is less within your control
    than within a traditional data center environment. Measuring MTTR looks at the
    time from when the system or product fails to when it is available again. Over
    time, this calculates an average that you want to see decreasing over time.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现这个指标非常强大，比衡量可用性更有用，尤其是在云环境中，平台的可用性比传统数据中心环境更不容易控制。衡量MTTR（平均修复时间）是指从系统或产品失败到重新可用的时间。随着时间的推移，这个平均值应当逐步减少。
- en: Deployment downtime
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署停机时间
- en: This interesting metric looks over time at the average time your application
    or product is unavailable during a deployment. You can measure this as a percentage
    of overall availability over the month or sprint, or measure the specific blocks
    of time.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个有趣的指标通过时间查看你的应用或产品在部署过程中不可用的平均时间。你可以将其衡量为一个月或冲刺中的整体可用性的百分比，或衡量特定的时间段。
- en: Change failure rate
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 变更失败率
- en: As we discussed earlier, it's important to make use of change management, own
    your failures, and measure the change failure rate as a percentage of changes
    implemented. This may be something the change management team already measures,
    but it is recommended to make specific measurement for your DevOps teams.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的那样，利用变更管理、对失败负责，并将变更失败率作为已实施变更的百分比来衡量非常重要。这可能是变更管理团队已经在衡量的内容，但建议为你的DevOps团队单独进行具体的衡量。
- en: Incidents per deployment
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每次部署的事件数
- en: There is no better metric to understand the impact releases make on your user
    community than by tracking the number of incidents raised per deployment. Systems
    such as ServiceNow have the ability to link in releases with incidents, so it's
    easy to see which release the incident is attributed to. This can go back in the
    backlog as a bug.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 没有什么比通过跟踪每次部署产生的事件数量更能理解发布对你的用户群体产生的影响了。像ServiceNow这样的系统能够将发布与事件关联，因此你可以轻松查看是哪次发布引发了该事件。这些事件可以回溯为bug。
- en: Unapproved changes
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 未经批准的变更
- en: Any good change management function will track the number of unauthorized or
    unapproved changes on a platform. Some of them may be emergency releases and waiting
    for paperwork to catch up, but some of these may be genuine and represent learning
    opportunities.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 任何优秀的变更管理职能都会追踪平台上未经授权或未经批准的变更。其中一些可能是紧急发布，正在等待文档跟进，但有些可能是真正的变更，代表了学习的机会。
- en: Number of hotfixes
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 热修复的数量
- en: It is all well and good measuring the number of deployments you make and how
    quickly they happen, but what about the number of bug fixes or hotfixes you release?
    Looking to put measures in place to reduce this number is also a key differentiator
    between immature and mature DevOps organizations.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 衡量你部署的次数以及它们发生的速度固然重要，但你发布的bug修复或热修复的数量呢？采取措施减少这些数字也是判断一个DevOps组织是否成熟的重要标准之一。
- en: Platform availability
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平台可用性
- en: This is a typical metric that looks at measuring the time of availability of
    a platform, but representing this as a percentage. In its most basic form, the
    higher the percentage, the more available the platform was. Some organizations
    have credit schemes to compensate clients who do not get over a contractually
    agreed availability threshold.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个典型的指标，衡量平台的可用时间，表示为百分比。最基本的形式是，百分比越高，平台的可用性就越好。一些组织有信用制度来补偿那些没有达到合同约定的可用性阈值的客户。
- en: That wraps up our look at the common metrics you can use to measure success
    in DevOps. But how do we apply these in meaningful scenarios, and what sort of
    baseline targets should you be looking at?
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了我们对衡量DevOps成功的常见指标的探讨。那么，如何在实际场景中应用这些指标，应该设定哪些基准目标呢？
- en: Designing metrics for your team
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为你的团队设计指标
- en: Now that we understand the key metrics that are involved in DevOps, it is next
    important to understand where those metrics can be used and in which scenarios.
    You can have too many metrics that you track in an organization, and these can
    then be counterproductive.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经理解了DevOps中涉及的关键指标，接下来重要的是了解这些指标可以在什么场景中使用。你在组织中可以追踪过多的指标，这样反而会适得其反。
- en: Knowing which metrics to use depends on many different parameters. However,
    we will now look at some example scenarios, describe what the goal of their DevOps
    transformation is, and look at the metrics that will help them identify their
    success.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 知道使用哪些指标取决于许多不同的参数。然而，我们现在将查看一些示例场景，描述它们的DevOps转型目标，并了解哪些指标可以帮助他们识别成功。
- en: 'Scenario 1: Small organization with a dedicated DevOps team'
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景1：拥有专门DevOps团队的小型组织
- en: For small organizations, one thing that is common between them is their ability
    to become more agile and break down silos that exist between teams. Smaller teams
    allow for faster feedback loops and cycle time. In fact, most small organizations
    have fewer silos overall, and some may have no silos.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 对于小型组织而言，它们之间的共同点之一是能够变得更加灵活，打破团队之间的壁垒。较小的团队可以更快速地获得反馈并缩短周期时间。事实上，大多数小型组织整体上壁垒更少，有些甚至没有壁垒。
- en: In this scenario, let's imagine we have a dedicated DevOps team at our organization,
    comprising six people. This organization runs one single product, which is sold
    to customers on a **software-as-a-service** (**SaaS**) basis.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个场景中，假设我们在组织内有一个专门的DevOps团队，由六个人组成。该组织只运营一个产品，该产品以**软件即服务**（**SaaS**）模式向客户销售。
- en: In this example, the interaction is very simple. The team works well together
    due to the size of the organization, and roles and responsibilities are well defined.
    As with most organizations of this size, with the growth they have seen comes
    teething issues, such as a drop in quality due to pressure to execute.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，互动非常简单。由于组织规模适中，团队之间协作良好，角色和职责也得到了很好的定义。像大多数这种规模的组织一样，随着他们的成长，也出现了一些初期的问题，例如由于执行压力导致的质量下降。
- en: 'For them, it''s important to focus on stability as well as quality, to ensure
    that high quality leads to better stability. Let''s now have a look at four metrics
    they could use and why, as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对他们来说，专注于稳定性和质量同样重要，以确保高质量能带来更好的稳定性。接下来我们将查看他们可以使用的四个指标及其原因，如下所示：
- en: '**MTTR**—Understanding how long it takes to recover the application platform
    is critical. The organization needs to look at how the platform needs to evolve
    in the future. This is important as the platform grows and scales, and information
    discovered here can lead to architectural improvements that reduce the average
    recovery time.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MTTR**（平均恢复时间）——了解恢复应用平台所需的时间至关重要。组织需要考虑平台未来的发展方向。这一点尤为重要，因为随着平台的增长和扩展，这些发现可以促成架构上的改进，从而缩短平均恢复时间。'
- en: '**Platform availability** (> 99%)—Providing a contractual incentive to keep
    the platform available may help improve stability, but be warned: it could also
    cause unwanted pressure on the team and make the problem worse. Simple measurement
    and a discussion on what causes the downtime and how to fix it longer-term is
    much more productive.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台可用性**（> 99%）——提供合同激励措施以保持平台的可用性可能有助于提高稳定性，但需要警惕：这也可能给团队带来不必要的压力，甚至使问题更加严重。进行简单的测量并讨论停机的原因及如何从长远解决这个问题，要比施加压力更具生产力。'
- en: '**Unit test coverage** (> 80%)—Ensuring good coverage of testing is very important.
    As this organization suffers from high levels of defects, ensuring good unit test
    coverage will ensure better testing is performed and that code is performing as
    expected.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单元测试覆盖率**（> 80%）——确保良好的测试覆盖率非常重要。由于该组织存在较高的缺陷率，确保良好的单元测试覆盖率将确保进行更好的测试，并确保代码按预期运行。'
- en: '**Defect density** (< 1/1,000 lines)—Releases at this organization have presented
    problems before. Understanding the density of defects will help them plan better,
    as well as understand where the problems are when they are developing and which
    ones transpire into defects.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺陷密度**（< 1/1,000行）——该组织的发布曾经出现过问题。了解缺陷的密度将帮助他们做出更好的规划，并了解在开发过程中哪些问题会转化为缺陷。'
- en: Let's now look at a different scenario for a medium-sized organization with
    an advocacy team.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一个不同的场景，适用于一个拥有宣传团队的中型组织。
- en: 'Scenario 2: Medium organization with advocacy team'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景2：拥有宣传团队的中型组织
- en: For this scenario, our organization has separate operations and development
    teams, and they're trying to work better together with the help of an advocacy
    team. Their aim is to facilitate the right level of collaboration and communication
    between them using different techniques, while still continuing with their day-to-day
    work.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种情况，我们的组织有独立的运营和开发团队，他们在倡导团队的帮助下，尝试更好地协作。其目标是通过使用不同的技术促进他们之间适当水平的协作和沟通，同时继续进行日常工作。
- en: As discussed in the previous chapter, advocacy teams are not given specific
    deliverable tasks in the sprint team, but are there to drive forward the best
    practices of DevOps and help the team achieve the goals set out for them.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所述，倡导团队在冲刺团队中并不负责具体的交付任务，而是推动 DevOps 最佳实践，帮助团队实现设定的目标。
- en: 'For a team which is of a medium size, stability as well as quality is important
    to them on their journey, but understanding velocity is also important. The team
    needs a broad view of their performance over time so that adjustments can be made
    as they become more mature. Let''s look at the metrics this team can use to track
    their performance, as follows:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个中等规模的团队来说，稳定性和质量在其成长过程中非常重要，但了解工作速度（velocity）同样重要。团队需要对其长期的表现有一个广泛的视角，以便随着团队的成熟，做出相应的调整。我们来看一下该团队可以用来跟踪表现的指标，如下所示：
- en: '**Lead time**—Tracking lead time allows them to understand where time is used,
    from the allocation of a backlog item to when it is delivered. This helps the
    team plan better in the future, give appropriate estimates, and help identify
    areas where processes can be streamlined.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提前期**——跟踪提前期能够帮助团队了解时间的使用情况，从积压项的分配到交付完成。这有助于团队在未来做出更好的规划，提供合适的估算，并帮助识别可以简化流程的领域。'
- en: '**Cycle time**—Similarly, understanding the average time taken from work starting
    to shipping also gives the team metrics that help them improve their estimation
    and planning meetings, delivering over time to improve customer satisfaction.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**周期时间**——同样，了解从开始工作到交付的平均时间，也为团队提供了帮助他们改进估算和计划会议的指标，随着时间的推移提升客户满意度。'
- en: '**Unit test coverage**—As a new team in DevOps, having high-quality code is
    important, but understanding where you are now is even more important. This helps
    highlight the amount of technical debt inherited by the lack of quality unit test
    coverage.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单元测试覆盖率**——作为一个新成立的 DevOps 团队，拥有高质量的代码非常重要，但了解当前的情况更为关键。这有助于突出因缺乏优质单元测试覆盖率而继承的技术债务。'
- en: '**Code quality**—In a similar way to unit test coverage, this metric will help
    the team understand where skills gaps with their developers may exist and can
    be improved by targeting trouble areas.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码质量**——与单元测试覆盖率类似，这一指标将帮助团队了解开发人员的技能差距，并通过针对问题领域来改进。'
- en: '**MTTR**—Remember: stability is important, as is understanding how long it
    takes to recover service. This information for the team feeds back into their
    improvement cycles to again help them improve.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MTTR**——记住：稳定性非常重要，了解恢复服务所需的时间也是如此。这些信息会反馈到团队的改进周期中，帮助他们再次改进。'
- en: '**Deployment downtime**—Finally, any new team at DevOps needs to understand
    the impact of their work during releases. Measuring the downtime of your releases
    helps you improve the automation process in the future, or even move away from
    manual deployments to automated ones.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署停机时间**——最后，任何新成立的 DevOps 团队都需要了解他们在发布期间工作的影响。衡量发布停机时间可以帮助你在未来改进自动化过程，甚至将手动部署转为自动化部署。'
- en: Let's now look at a large organization scenario where they have numerous DevOps
    teams.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一个大型组织的场景，组织中有多个 DevOps 团队。
- en: 'Scenario 3: Large organization with numerous DevOps teams'
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景 3：拥有多个 DevOps 团队的大型组织
- en: When you have a large organization with numerous DevOps teams of various sizes,
    it's important to make sure each team focuses on their own priorities in terms
    of what their goals are. The overall goal of the business must remain in sight,
    though, and metrics can help ensure that the goal is tracked.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当你拥有一个包含多个不同规模的 DevOps 团队的大型组织时，确保每个团队专注于自己的优先事项非常重要，尤其是他们的目标是什么。然而，业务的整体目标必须始终牢记在心，指标可以帮助确保这一目标得到跟踪。
- en: For this scenario, our large organization is looking to increase the pace of
    development and release across the board. Of course, as we discussed earlier in
    the chapter, this cannot be at the expense of stability.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个场景，我们的大型组织正在寻求提高整体开发和发布的速度。当然，正如我们在本章之前讨论的那样，这不能以牺牲稳定性为代价。
- en: Their challenge from a DevOps perspective is changing ways of working that have
    been carried out in a legacy fashion for a number of years, and some red tape
    exists that makes the process changes difficult and slow.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 从DevOps角度来看，他们的挑战是改变已持续多年的传统工作方式，而且存在一些繁文缛节，使得流程变更变得困难且缓慢。
- en: 'Let''s now look at the metrics they can use to ensure the wider outcome of
    increased pace is achieved, while keeping an eye on stability, as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看他们可以使用的指标，以确保在保持稳定性的同时，实现提高速度的更广泛目标，具体如下：
- en: '**Lead time**—Understanding how quickly things are dealt with from the backlog
    is important, especially in environments where teams are looking to pivot quickly
    and improve results. This can help you understand what you need to do in terms
    of making sure your processes are lean.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交付时间**——了解从积压工作中处理事务的速度非常重要，特别是在团队需要快速调整并改善结果的环境中。这可以帮助你了解在确保流程精简方面需要做什么。'
- en: '**Deployment frequency**—Where the goal is to improve the release cadence,
    this metric is a must. You can understand how often you deploy, and do this in
    conjunction with other metrics here. Make sure that is not just a number but a
    number of quality releases.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署频率**——如果目标是提高发布节奏，那么这个指标是必不可少的。你可以了解你部署的频率，并与其他指标结合使用。确保这不仅仅是一个数字，而是多个高质量的发布。'
- en: '**Change failure rate**—Mistakes happen, especially in fast-moving environments.
    We can use this metric to help all teams understand if the releases they are doing
    are of high quality, not in terms of functionality but through adherence to the
    existing change management policies in place as they change the way they deploy.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变更失败率**——错误在快速变化的环境中难以避免。我们可以通过这个指标帮助所有团队了解他们的发布是否高质量，不仅仅是功能层面，而是通过遵循现有的变更管理政策来确保他们在改变部署方式时的质量。'
- en: '**Number of hotfixes**—It''s OK to release hotfixes; they''re a staple of the
    development life cycle. Tracking the number of hotfixes can help teams understand
    stability, but can also evaluate quality in parallel. It''s a really useful metric
    to use in fast environments looking for quick change, but as discussed previously,
    mistakes can happen.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**热修复次数**——发布热修复是可以的；它们是开发生命周期的重要组成部分。追踪热修复的次数可以帮助团队理解稳定性，同时也可以平行评估质量。这是一个在快速变化环境中寻找快速变更时非常有用的指标，但正如之前所讨论的，错误是难以避免的。'
- en: Important note
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: In these types of organizations, it can easily be the case that teams go their
    own way. Keeping them stitched together in terms of the overall goal is tricky,
    but finding common metrics can help explain that. Teams may have the same metrics,
    but leading and lagging indicators may be different based on products or acumen.
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这些类型的组织中，团队可能会各自为战。要将它们紧密结合在整体目标上是困难的，但找到共同的指标可以帮助解释这一点。团队可能有相同的指标，但基于产品或能力的不同，领先和滞后指标可能会有所不同。
- en: Let's now look at another small organization scenario, this time with an outsourced
    DevOps team.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一下另一个小型组织场景，这次是与外包的DevOps团队合作的场景。
- en: 'Scenario 4: Small organization with outsourced DevOps team'
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 场景4：与外包DevOps团队合作的小型组织
- en: For some smaller organizations who are looking to reap the benefits that the
    adoption of DevOps can bring them, outsourcing can be used to enable a specialist
    third-party team to work with the organization to achieve a number of goals.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些希望获得DevOps带来的好处的小型组织，外包可以用来让一个专业的第三方团队与组织合作，达成多个目标。
- en: This could be assistance with delivery, execution of agile methodologies, or
    support of environments and providing automation as part of the whole solution.
    Third parties can be used in numerous ways, and depending on the size of the organization
    and their requirements, this will change the scope of the third-party involvement.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能包括交付的帮助、敏捷方法的执行，或是环境的支持和将自动化作为整体解决方案的一部分。第三方可以以多种方式使用，具体取决于组织的规模和需求，这将改变第三方参与的范围。
- en: For our small organization, a big focus for them is around the need to provide
    higher levels of automation, especially around testing. This will really help
    them drive forward where they are with DevOps.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的小型组织来说，重点是提供更高水平的自动化，特别是在测试方面。这将帮助他们推进DevOps的进展。
- en: 'Let''s now look at the metrics we can use for this team, as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看一下我们可以为这个团队使用的指标，具体如下：
- en: '**Test automation coverage**—Due to the size of the team, they have outsourced
    test automation. Use this metric to look at the coverage of automation provided,
    and build up this number over time.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试自动化覆盖率**——由于团队的规模，他们将测试自动化外包了。使用这个指标来查看提供的自动化覆盖率，并随着时间的推移逐步增加这个数值。'
- en: '**Deployment failure rate**—Deployment failure rates have many focuses, but
    this team has decided to look at failed testing gates. Using this metric will
    help the team understand what is failing, how often, and—through discovery—why
    it is happening.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署失败率**——部署失败率有很多关注点，但这个团队决定关注测试关卡的失败。使用这个指标将帮助团队了解失败的原因、频率，并通过探索找出为何发生失败。'
- en: '**Deployment downtime**—In a similar way to the preceding metric, tracking
    the amount of downtime in deployments can help with your third-party interactions.
    This can help you both work on and improve the CI and CD pipelines within your
    organization as you do more.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署停机时间**——与前面的指标类似，跟踪部署中的停机时间可以帮助你与第三方进行互动。这能帮助你们共同改进组织内的CI和CD流水线，在你们不断发展时也能提升效率。'
- en: '**Platform availability**—Understanding how the third party is working within
    your environment is critical. Understanding platform availability is essential,
    and holding them to account when they make mistakes that cause outages is something
    you would need to consider. This needs to be handled properly, with no aggressive
    tones and an attitude of working together to improve things rather than penalizing.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台可用性**——了解第三方如何在你的环境中运行至关重要。理解平台的可用性是必需的，当他们犯错导致故障时，你需要考虑如何追究责任。这个问题需要妥善处理，避免强硬语气，应该有合作改善而不是惩罚的态度。'
- en: In all four scenarios, you could use various different metrics to measure yourself;
    however, that doesn't mean that some metrics are worse than others. It comes down
    to what you are trying to measure, and you measure what you are trying to improve
    overall.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有四个场景中，你都可以使用不同的指标来衡量自己；然而，这并不意味着某些指标比其他指标差。关键在于你想要衡量的是什么，你衡量的是你希望整体改善的内容。
- en: Now that we have looked at the various metrics you can use in different scenarios,
    what happens when you have multiple teams practicing, as in *Scenario 3*? How
    do you ensure that you report at an appropriate level? Let's look at the answers
    in the following section.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看过了你可以在不同场景中使用的各种指标，那么当你有多个团队在实践时，比如在*场景3*中，情况会怎样呢？你如何确保报告的层次适当？让我们在接下来的章节中看看答案。
- en: Creating rollups at an organizational level
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在组织层面创建汇总
- en: Regardless of if you are practicing DevOps in your organization or not, clear
    communication is one of the keys to success. This is also true when it comes to
    communication of your **key performance indicators** (**KPIs**).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你的组织是否在实践DevOps，清晰的沟通都是成功的关键之一。在沟通你的**关键绩效指标**（**KPIs**）时，这一点同样重要。
- en: You must ensure that the data you present back to leaders within your organization
    is clear, concise, and tells the appropriate picture about the performance within
    your organization.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须确保向组织内的领导展示的数据清晰、简洁，并能准确反映组织的表现。
- en: In DevOps, especially when you are communicating organization-wide progress,
    you will first have to go on a journey of explaining what the metrics mean to
    the wider business. It's not immediately obvious what the metrics mean and show.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在DevOps中，特别是当你需要传达全组织的进展时，你首先需要解释这些指标对更广泛业务的意义。指标的含义和展示内容并不总是显而易见的。
- en: Important note
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Try to display clear wording to executive leaders, even if this means changing
    the explanation of the metric. It's easier to relate it to something they understand
    than having to face questions on how it's measured, why you measure it, and more
    in executive meetings.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 尽量使用清晰的措辞向高层领导展示，即使这意味着需要改变对指标的解释。将其与他们理解的内容关联会更容易，而不是在高层会议中面对关于如何衡量、为何衡量等问题。
- en: Another critical factor in DevOps, especially when measuring velocity, is to
    understand that not all teams are equal. Even from the inside, when it appears
    teams are delivering very similar things, the way they work and the way they operate
    as a team means the velocity of both teams is unlikely to be a comparable metric.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps中的另一个关键因素，特别是在衡量速度时，是要理解并非所有团队都是平等的。即使从内部来看，当团队交付的内容看似非常相似时，团队的工作方式和运作方式意味着这两个团队的速度不太可能成为可比的度量标准。
- en: For this reason, I would *never* recommend comparing teams by using plain metrics
    such as velocity measured in **story points**. Teams can use this metric internally
    to see how effective they are at planning the work assigned to them and, throughout
    sprints, use the output from the previous sprint to see how they perform and where
    they can be better at planning.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我*永远*不建议通过使用诸如**故事点**等简单的度量标准来比较团队。团队可以内部使用这个指标来查看他们在规划分配给他们的工作方面的有效性，并且在冲刺期间，利用前一个冲刺的输出，看看他们的表现如何以及在哪些方面能在规划上做得更好。
- en: Tip
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: If you are using story points to measure velocity of completed user stories,
    never make this metric public on executive dashboards.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用故事点来衡量已完成用户故事的速度，请务必不要将此指标公开显示在高层管理的仪表板上。
- en: Reporting when multiple teams work on one product
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多个团队协作时的报告
- en: If your organization has multiple teams working on one product and each team
    is responsible for a different part of the product, then creating a rollup is
    quite simple. As with any project, you would report the overall progress against
    any plans. The same can be said in this scenario.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的组织有多个团队在一个产品上工作，并且每个团队负责产品的不同部分，那么创建汇总报告就非常简单。就像任何项目一样，你会报告整体进展与任何计划的对比。在这种情况下也是如此。
- en: Each individual team may be working on individual features and requirements
    from different business analysts, but they will be working for—and aligned to—one
    common goal. For that reason, you need to understand what the end goal looks like,
    and from there you can create metrics that measure that goal.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 每个团队可能在不同的业务分析师的指导下，处理各自的功能和需求，但他们都将为同一个共同的目标而工作，并朝着这个目标协调一致。因此，你需要理解最终目标的样子，然后你可以创建衡量该目标的指标。
- en: This style is what might be known as an executive scorecard, or sometimes a
    business scorecard. It lists out the KPIs that show if you are on a path to success,
    or if blockers are in your way.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这种风格可能被称为高层管理得分卡，或者有时被称为业务得分卡。它列出了显示你是否在成功之路上的关键绩效指标，或者是否有障碍阻挡你的前进。
- en: Reporting when multiple teams work on multiple products
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多个团队协作多个产品时的报告
- en: When you have multiple teams working on multiple products, you can employ similar
    tactics to those outlined previously. Think of each product team as one, and create
    reports that reflect the work done by that team on that product.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 当你有多个团队在多个产品上工作时，你可以采用类似之前提到的策略。将每个产品团队视为一个团队，并创建反映该团队在该产品上完成的工作的报告。
- en: 'Remember the previous discussion: no two teams are equal, and the same is said
    regardless of whether they are in the same product group or different product
    groups. Be careful not to compare teams across different products, even if they
    are working on the same deliverable, just in different products.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 记住之前的讨论：没有两个团队是完全相同的，无论他们是同一产品组还是不同产品组。即使他们在不同的产品上工作，也要小心不要跨不同的产品比较团队，即使他们在不同的产品中工作着相同的交付物。
- en: Depending on your organization, your multiple products may be completely unrelated,
    in which case it does not make any sense to create reporting that rolls up performance
    to a higher level.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的组织情况，多个产品之间可能完全不相关，这种情况下，创建将业绩汇总到更高层次的报告没有任何意义。
- en: If, for example, you are an organization that has products related to one another
    by a higher piece of marketing (maybe your organization has an overarching product
    that is actually made up of numerous products), then try where you can to align
    your reporting to that top level.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你的组织拥有多个相关的产品，并且它们通过某个更高层的营销组合在一起（也许你的组织有一个实际由多个产品组成的总产品），那么尽可能地将你的报告对齐到这个最高层级。
- en: It is the top level that is understood across the business, so when it comes
    to reporting the velocity, quality, or stability metrics we discussed earlier
    in the chapter, make sure they relate to the highest level you can go that makes
    practical sense.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 它是跨业务领域都能理解的顶层指标，因此，当报告我们在本章前面讨论的速度、质量或稳定性指标时，确保它们与能够实际理解的最高层级相关联。
- en: Creating goals that are S.M.A.R.T
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 制定S.M.A.R.T目标
- en: Creating goals for your product or taking goals from an executive level and
    then disseminating them down to your team to be more actionable chunks of work
    can be a difficult task.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为你的产品制定目标，或从高层领导那里获取目标，并将其分解成更具操作性的任务，可能是一项困难的工作。
- en: Within your department, you may need to break up a higher-level goal into more
    manageable goals between different teams. This is when the collaboration and communication
    with DevOps comes into its own. When one larger goal is split into numerous goals
    for smaller teams, working together and speaking to each other is critical in
    ensuring you achieve the fundamental task.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的部门中，你可能需要将一个更高层次的目标分解为不同团队之间更易管理的目标。这时与DevOps的协作和沟通就显得尤为重要。当一个更大的目标被拆分为多个小团队的目标时，相互协作和交流对确保完成根本任务至关重要。
- en: 'A common tool in the business world for setting measurable and achievable goals
    is using the **S.M.A.R.T** method. If this isn''t something you have heard of
    before, this is what it stands for:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在商业领域，一个常见的设定可衡量和可实现目标的工具是使用**S.M.A.R.T**方法。如果你之前没听说过，这就是它的含义：
- en: '**Specific**'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**具体**'
- en: '**Measurable**'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可衡量**'
- en: '**Achievable**'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可实现**'
- en: '**Realistic**'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**现实可行**'
- en: '**Timely**'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**及时**'
- en: 'There are different versions of S.M.A.R.T. goals, but these are the definitions
    I prefer. It really means that to set a proper goal, it has to be something that
    answers the following five questions:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: S.M.A.R.T.目标有不同的版本，但这些是我偏好的定义。它真正意味着，要设定一个合适的目标，必须回答以下五个问题：
- en: What exactly do you want to do?
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你到底想做什么？
- en: How do you know when you have reached it?
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你怎么知道自己已经达成了目标？
- en: Is the goal within your power to achieve?
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个目标在你的能力范围内吗？
- en: Is it realistic that you can achieve this goal?
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你认为自己能实现这个目标吗？
- en: When do you want to accomplish the goal?
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你什么时候希望完成这个目标？
- en: I have used this method many different times before, you can find a lot more
    details about this method from *Mind Tools* ([https://www.mindtools.com/pages/article/smart-goals.htm](https://www.mindtools.com/pages/article/smart-goals.htm)).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前多次使用过这个方法，你可以在*Mind Tools*（[https://www.mindtools.com/pages/article/smart-goals.htm](https://www.mindtools.com/pages/article/smart-goals.htm)）找到更多关于这个方法的详细信息。
- en: 'One easy example to follow is that you want to become trained in a specific
    tool—for example: *I want to understand how to create pipelines in Azure DevOps*.
    How would we now go about making this goal S.M.A.R.T.? Here''s how:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的例子是，你想学习如何使用某个特定工具——例如：*我想了解如何在Azure DevOps中创建管道*。那么我们如何将这个目标变成S.M.A.R.T.呢？下面是做法：
- en: '**Specific**—I want to learn how to create pipelines using **YAML Ain''t Markup
    Language** (**YAML**) in Azure DevOps.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**具体**—我想学习如何在Azure DevOps中使用**YAML Ain''t Markup Language**（**YAML**）创建管道。'
- en: '**Measurable**—Ability to create working pipelines to deploy *Application X*
    without assistance from our **subject-matter experts** (**SMEs**).'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可衡量**—能够在没有我们**主题专家**（**SMEs**）帮助的情况下，创建用于部署*应用程序X*的有效管道。'
- en: '**Achievable**—I need to learn how to build basic pipelines, then understand
    our own process so that I can learn appropriate items to add into the pipeline
    to complete the build.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可实现**—我需要学习如何构建基本的管道，然后理解我们的流程，以便我可以学习如何将合适的项目添加到管道中，完成构建。'
- en: '**Realistic**—By using online videos, working with our experts, and taking
    online courses I am able to achieve this goal.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**现实可行**—通过观看在线视频、与我们的专家合作以及参加在线课程，我能够实现这个目标。'
- en: '**Timely**—I will have achieved this in 6 months.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**及时**—我将在6个月内实现这个目标。'
- en: When you use the model shown here, you provide clarity toward the goals you
    are trying to achieve, how you plan to achieve them, what you need to achieve
    them, and—finally—when you will achieve them.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这里展示的模型，你可以清楚地知道自己要实现什么目标，如何实现这些目标，需要什么资源，最后——你将在何时实现这些目标。
- en: You may have multiple lines in a sheet describing your various goals, and you
    may use steps to describe the ways in which you will get there. The key is getting
    it down on paper.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能在表格中有多行描述不同的目标，并且可以使用步骤来描述实现目标的方法。关键是将其写下来。
- en: Summary
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have looked at some of the most common metrics you can use
    to measure success in DevOps and looked at ensuring the importance of defining
    what success looks like. We have looked through some scenarios of different teams,
    highlighting the metrics that can be used to track their success. Finally, we
    looked at how to ensure you track at an organizational level rather than focusing
    too much on individual teams.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们查看了衡量 DevOps 成功的最常见指标，并探讨了确保定义成功标准的重要性。我们通过不同团队的场景，突出了一些可以用来跟踪其成功的指标。最后，我们探讨了如何确保从组织层面进行跟踪，而不是过于关注单个团队。
- en: One of the biggest challenges in DevOps is measuring success. Using the skills
    you have learned in this chapter, you can implement meaningful goals and metrics
    to measure success in your organization.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 中最大的挑战之一是衡量成功。运用你在本章中学到的技能，你可以为你的组织实施有意义的目标和指标来衡量成功。
- en: In the next chapter, we explore how you build a culture within DevOps and how
    to break down silos in your organization for maximum efficiency.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何在 DevOps 中建立文化，以及如何打破组织中的隔阂以实现最大效率。
