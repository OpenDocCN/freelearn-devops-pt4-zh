- en: '*Chapter 11*: Keeping Up with Key DevOps Trends'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第11章*：跟上关键DevOps趋势'
- en: A number of different disciplines now exist that look to build upon the core
    principles and practices of DevOps and target different areas of the business,
    and even specific departments. Terms such as DataOps, GitOps, and DevSecOps are
    now common terminology in the industry and tooling exists for each of these, too.
    In this chapter, we look at some of these trends in more detail to understand
    what they are, what their goal is, and what tooling can be used.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在存在多种不同的学科，旨在建立在DevOps的核心原则和实践之上，针对业务的不同领域，甚至特定部门。像DataOps、GitOps和DevSecOps这样的术语现在已经成为行业中的常用术语，并且每个领域都有相应的工具。在本章中，我们将更详细地了解这些趋势，理解它们是什么，目标是什么，以及可以使用哪些工具。
- en: By the end of this chapter, you will understand some of the key trends associated
    with DevOps specialties, understand what they are, how they apply to organizations,
    and how tooling can be used within them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将理解与DevOps专业相关的一些关键趋势，了解它们是什么，如何在组织中应用，以及如何在其中使用工具。
- en: 'In this chapter, we''re going to cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: What is XOps?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是XOps？
- en: Understanding the DataOps ecosystem
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解DataOps生态系统
- en: Understanding the DevSecOps ecosystem
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解DevSecOps生态系统
- en: Understanding the GitOps ecosystem
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解GitOps生态系统
- en: What is XOps?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是XOps？
- en: '**XOps** is a general catch-all term that describes the adoption of other forms
    of operations both inside and outside of technology. In this context, DevOps is
    really just the tip of the iceberg.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**XOps**是一个通用术语，描述了在技术内外采用其他形式的运营。在这个背景下，DevOps实际上只是冰山一角。'
- en: DevOps is just the beginning. You can also include BizOps, FinOps, AIOps, and
    MarketingOps as a start, but the term *XOps* covers more than just the ones listed
    here. These are all cross-functional efforts, like DevOps is, but do organizations
    really need all of them, even some of them, or is the movement just hype?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps只是一个开始。你还可以包括BizOps、FinOps、AIOps和MarketingOps作为起点，但*XOps*的概念不仅仅包括这些。它们都是跨职能的努力，像DevOps一样，但组织是否真的需要所有这些，甚至其中的一部分，还是这一运动仅仅是炒作？
- en: One thing we can all agree on is that all organizations are at their own stages
    of maturity. The factors for this include their size, age, industry, technical
    adoption, budgets, and, of course, culture.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都能达成的共识是，所有组织都处于各自不同的成熟阶段。影响这一点的因素包括它们的规模、年龄、行业、技术采用、预算，当然，还有文化。
- en: Organizations are increasingly requiring the benefits of what these different
    kinds of operation models provide. Some organizations will implement as many of
    them as possible, while some will implement what they need and even manipulate
    the processes and level of adoption to best fit with their organization.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 组织越来越需要这些不同类型的运营模型所提供的好处。有些组织会尽可能多地实施这些模型，而有些组织则会根据需要实施，并且调整过程和采用的程度，以最适合他们的组织。
- en: This does not mean that the results will be any different depending on the factors
    previously mentioned. As with DevOps, the key element that all of these models
    have in common is the focus on value, which is something unique to each organization.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着结果会因为之前提到的因素而有所不同。与DevOps一样，这些模型共同的关键要素是关注价值，而这正是每个组织的独特之处。
- en: Where did XOps begin?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XOps是从哪里开始的？
- en: Some people believe that XOps is just hype, hype that will disappear, and that
    much of what is proposed is a relabeling of what already exists. You can say the
    same about DevOps as well, but it is the way that practices within DevOps are
    brought together and not left fragmented that delivers real value to organizations.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人认为XOps只是炒作，一种会消失的炒作，认为许多提议的内容不过是对现有事物的重新标签化。你也可以对DevOps说同样的话，但正是将DevOps中的实践整合在一起，而不是将其割裂开来，才给组织带来了真正的价值。
- en: Like DevOps, most of the types of operation models will look at the acceleration
    of the process and improvements in quality when it comes to what they deliver.
    For example, in DataOps, this would be data, and analytical insights into operations
    performance for AIOps.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 像DevOps一样，大多数运营模型类型将关注过程加速和交付质量的改进。例如，在DataOps中，这将是数据，以及对AIOps运营性能的分析洞察。
- en: Those who believe that XOps is overhyped believe that the risk is that fragmentation
    is created by the different groups that are involved. This fragmentation further
    dilutes the faster value that is created and creates a level of additional bureaucracy.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 那些认为XOps被过度炒作的人认为，风险在于不同的参与群体可能会导致碎片化。这种碎片化进一步稀释了更快创造的价值，并且产生了额外的官僚主义。
- en: Important note
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Agility has been at the heart of XOps since the turn of the millennium. Business
    leaders have since been aware that their organizations need to be more Agile in
    order to stay competitive in their industry.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷性自千禧年初以来一直是XOps的核心。自那时以来，商业领袖已经意识到，他们的组织需要更加敏捷，以便在行业中保持竞争力。
- en: Agile practices that form part of XOps have been around for some time and have
    been rising further up the business stack for some time. Sadly, some leaders take
    the view that agility will equal the ability to do more with less.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为XOps一部分的敏捷实践已经存在了一段时间，并且在商业领域中的地位逐渐上升。不幸的是，一些领导者认为敏捷就等于用更少的资源做更多的事。
- en: The truth is that fundamentally, agility backed up with solid processes provides
    your organization with the ability to scale when needed, deliver more value to
    your end users, improve your processes, and your efficiency.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，从根本上说，背靠扎实流程的敏捷性为您的组织提供了在需要时进行扩展的能力，能够为终端用户提供更多价值，改进您的流程，并提高效率。
- en: The link between XOps and DevOps is not just in the similarities in names, approaches
    to achieving the gold standard, or the processes involved. Culture is an important
    part of DevOps, specifically regarding the ability to improve your communication
    and collaboration in your organization.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: XOps和DevOps之间的联系不仅仅体现在名称的相似性、实现黄金标准的方法或相关流程上。文化是DevOps的重要组成部分，特别是在改善组织内沟通与协作的能力方面。
- en: Other important aspects that XOps takes from DevOps is the focus on continuous
    improvement, as well as the focus on the automation of tasks. Technical staff
    often forget that process automation does not just have to be on technical elements
    of the process. After all, business process automation was around long before
    DevOps was conceived.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: XOps从DevOps借鉴的其他重要方面包括关注持续改进以及任务自动化。技术人员常常忽略，流程自动化不仅仅局限于技术层面的流程。毕竟，业务流程自动化早在DevOps诞生之前就已经存在了。
- en: Understanding the XOps landscape
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解XOps格局
- en: To understand the XOps landscape further, let's look at two of the common initiatives
    in XOps, which are FinOps and CloudOps. We will learn about DataOps, DevSecOps,
    and GitOps in more detail later in this chapter.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步了解XOps格局，让我们来看一下XOps中的两个常见倡议：FinOps和CloudOps。我们将在本章稍后详细了解DataOps、DevSecOps和GitOps。
- en: FinOps
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FinOps
- en: FinOps is also known as Cloud Financial Management, and it is the amalgamation
    of finance and operations teams within an organization. Specifically, FinOps focuses
    on the processes involved in managing financial operations while linking together
    the people involved, the processes, and, of course, the technology.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: FinOps也被称为云财务管理，它是组织内部财务和运营团队的融合。具体而言，FinOps专注于管理财务运营的过程，同时将相关人员、流程以及技术相结合。
- en: The need for FinOps arises from the traditional financial model in IT, which
    worked separately from other teams and lacked a level of data-driven decision
    making and technical modernization for managing scalable, cloud-enabled applications.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: FinOps的需求来源于传统的IT财务模型，该模型与其他团队分开运作，缺乏基于数据的决策制定和技术现代化来管理可扩展的、云支持的应用程序。
- en: Limitations regarding the lack of flexibility concerning business requirements
    only inflated the costs, which make the system slow moving and more expensive.
    As a result of this, organizations needed to come up with a method for providing
    cost control for their highly scalable cloud environments, understand what those
    costs are, how they are occurring, and keep track of their cloud spend.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 关于商业需求缺乏灵活性的问题只会使成本膨胀，这使得系统运作缓慢且更加昂贵。因此，组织需要提出一种方法，为其高度可扩展的云环境提供成本控制，了解这些成本是什么，如何发生，并跟踪云支出。
- en: As the cloud has evolved, so has the need for the ability to provide chargeback
    of services hosted in cloud environments for other parts of the organization.
    The granular costs involved with cloud computing have made the idea of chargeback
    simpler in many ways, but it is actually hard to implement.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 随着云计算的发展，对于组织内部其他部门能够对云环境中的服务进行费用分摊的需求也在增加。云计算涉及的细化成本在许多方面使得费用分摊的概念变得更加简便，但实际上，实施起来依然困难。
- en: Complexities around how to bill for shared services such as network and storage
    make it difficult to realize how these costs can be charged back to various departments.
    These fabric-level services, or core services, are often consumed by the technology
    department, while application services are charged back to cost centers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如何为共享服务（如网络和存储）计费的复杂性，使得很难意识到这些费用如何可以分摊到不同部门。这些基础设施级别的服务，或核心服务，通常由技术部门使用，而应用服务则按成本中心进行计费。
- en: To have robust practices regarding FinOps, it is important to follow three phases
    of adoption. These phases are inform, optimize, and operate. The first phase,
    *inform*, looks at a detailed assessment of assets, budget allocation, and providing
    an understanding of industry standards to detect areas of improvement.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现稳健的FinOps实践，重要的是遵循三个阶段的采用过程。这三个阶段是通知、优化和操作。第一阶段，*通知*，对资产、预算分配进行详细评估，并提供行业标准的理解，以便发现改进的领域。
- en: The second phase, *optimize*, helps to set alerts and metrics that identify
    any areas that need to both spend and redistribute resources. These generate decision-making
    capabilities and provide recommendations on architecture changes where required.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第二阶段，*优化*，帮助设置警报和指标，以识别需要花费和重新分配资源的领域。这些操作能够生成决策能力，并在需要时提供架构变更的建议。
- en: The final phase, *operate*, assists in tracking costs and cost control mechanisms
    at a resource level. FinOps provides a level of flexibility in operations, but
    maintains financial accountability to the variable costs that are associated with
    cloud platforms.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最后阶段，*操作*，帮助在资源级别追踪成本和成本控制机制。FinOps在操作中提供了一定的灵活性，但仍保持对与云平台相关的可变成本的财务责任。
- en: CloudOps
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CloudOps
- en: CloudOps is the process of defining and identifying operational procedures,
    which are appropriate to optimizing services within cloud environments. CloudOps
    is a bringing together of DevOps and traditional operations allowing cloud platforms,
    applications, and data to provide further technical strengthening while maintaining
    services.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: CloudOps是定义和识别适用于优化云环境服务的操作程序的过程。CloudOps是DevOps与传统操作的结合，能够为云平台、应用程序和数据提供进一步的技术增强，同时维持服务。
- en: For organizations to accelerate agility any further, they must keep a check
    on any budget constraints, such as waste and overrun. This is one of the reasons
    why organizations decide to move to cloud platforms for their workloads.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步加速敏捷性，组织必须密切关注预算限制，比如浪费和超支。这也是组织决定将工作负载迁移到云平台的原因之一。
- en: CloudOps provides predictability and proactiveness and helps enhance visibility
    and governance. In maintaining on-premises locations, the associated power, network,
    storage, and high availability are always a challenge. This is easier in the cloud
    even though challenges remain, but those challenges differ from on-premises.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: CloudOps提供可预测性和主动性，有助于增强可见性和治理。在维持本地部署的过程中，相关的电力、网络、存储和高可用性始终是一个挑战。尽管挑战依然存在，但在云中这更容易实现，虽然这些挑战与本地部署有所不同。
- en: Since CloudOps is an extension of DevOps, it aims to build cloud operations
    teams that are responsible for post-migration applications on cloud platforms.
    Governance tools that optimize costs, enhance security posture, and provide capacity
    planning are essential in CloudOps. It also promotes the notion of continuous
    monitoring as well as the management of cloud applications with smaller numbers
    of resources.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 由于CloudOps是DevOps的扩展，它旨在建立负责云平台上迁移后应用程序的云操作团队。优化成本、增强安全性、提供容量规划的治理工具在CloudOps中至关重要。它还推动了持续监控的理念，并且通过较少的资源管理云应用程序。
- en: Automation provides techniques to increase the agility, speed, and performance
    of cloud applications. Automation in CloudOps also facilitates the handling of
    services, incidents, and problems in a smooth manner. Combining elements of DevOps
    such as continuous integration and continuous deployment with infrastructure services
    and introducing infrastructure as code provides high levels of automation, increases
    the value of CloudOps, and provides level scalability not previously seen by operations
    teams.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化提供了提高云应用程序敏捷性、速度和性能的技术。CloudOps中的自动化还促进了服务、事件和问题的顺畅处理。将DevOps中的元素（如持续集成和持续部署）与基础设施服务相结合，并引入基础设施即代码，提供了高水平的自动化，提升了CloudOps的价值，并为操作团队提供了以前未曾见过的可扩展性。
- en: Approach to XOps
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XOps的方法
- en: Let's look at an example approach to XOps. The objective is to transform what
    is currently a monolithic application into a microservice architecture. Additionally,
    the migration process should be automated, along with separate environments for
    production, UAT, and test.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下XOps的一种方法。目标是将当前的单体应用程序转化为微服务架构。此外，迁移过程应该是自动化的，并为生产、UAT（用户验收测试）和测试创建独立的环境。
- en: The primary identity should be managed by the DevOps team. This allows you to
    manage users and groups as well as third-party services and applications. This
    approach advocates collaborative culture.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 主要身份应由DevOps团队进行管理。这使得您能够管理用户、群组以及第三方服务和应用程序。这种方法提倡协作文化。
- en: Furthermore, to make resources modular, the team generates container-based modules
    for multiple resources, and stacks are then broken down, making them scalable
    and ensuring that deployment is easier.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了使资源模块化，团队为多个资源生成基于容器的模块，然后将堆栈拆分，使其可扩展，并确保部署更加容易。
- en: Maintenance and debugging with this approach become simpler for development
    teams as well, and automated processes help enhance code quality. Role-based access
    control ensures secure authentication and authorization.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法使得开发团队的维护和调试变得更加简便，自动化流程有助于提升代码质量。基于角色的访问控制确保了安全的身份验证和授权。
- en: The deployment of centralized systems for logging and monitoring allows views
    of performance, availability, and security on centralized dashboards. This helps
    to provide cost-effectiveness and improve the performance of the application.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 集中化日志记录和监控系统的部署，可以在集中式仪表板上查看性能、可用性和安全性。这有助于提高成本效益并改善应用程序的性能。
- en: Here, we have discussed a number of disciplines, such as DevOps, CloudOps, and
    FinOps, to make this happen.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们已经讨论了多个学科，如DevOps、CloudOps和FinOps，以使这一切得以实现。
- en: We now have an understanding of the term *XOps*. We understand where XOps came
    from and the landscape of XOps. Let's now look at the DataOps ecosystem in more
    detail.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了*XOps*这个术语。我们明白了XOps的来源和XOps的整体格局。接下来，让我们更详细地了解一下DataOps生态系统。
- en: Understanding the DataOps ecosystem
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解DataOps生态系统
- en: One of the most common misconceptions around DataOps is that under the covers,
    it is just DevOps applied to data analytics. While the name shares similarities
    with both DevOps and DataOps, they're not the same.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 关于DataOps的一个常见误解是，它在幕后仅仅是将DevOps应用于数据分析。尽管名称与DevOps和DataOps有相似之处，但它们并不相同。
- en: 'Look at the following diagram, which depicts the DevOps loop:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 看看下面的图表，它展示了DevOps循环：
- en: '![Figure 11.1 – Graphic showing the phases of DevOps in an infinite loop'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.1 – 显示DevOps各阶段的无限循环图形'
- en: '](img/B17192_11_01.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17192_11_01.jpg)'
- en: Figure 11.1 – Graphic showing the phases of DevOps in an infinite loop
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1 – 显示DevOps各阶段的无限循环图形
- en: 'DevOps is often depicted as an infinite loop. As you can see in the previous
    diagram, DataOps is different. When illustrating DataOps, it is shown as an intersection
    of value and innovation pipelines, as you can see in the following diagram:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps通常被描述为一个无限循环。正如你在前面的图表中看到的，DataOps则有所不同。在展示DataOps时，它被呈现为价值和创新管道的交集，如下图所示：
- en: '![Figure 11.2 – DataOps depiction showing a value pipeline along the top and
    innovation from bottom to top'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![图11.2 – DataOps展示，顶部为价值管道，底至顶为创新'
- en: '](img/B17192_11_02.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17192_11_02.jpg)'
- en: Figure 11.2 – DataOps depiction showing a value pipeline along the top and innovation
    from bottom to top
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2 – DataOps展示，顶部为价值管道，底至顶为创新
- en: DataOps communicates that data analytics can achieve what DevOps accomplished
    for software development. That is, when data teams use new tools and methodologies,
    DataOps can result in an order of magnitude improvement in quality and cycle time.
    The specific methods by which DataOps achieves these gains reflect the distinct
    people, processes, and tools that characterize data teams.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: DataOps 表示数据分析能够实现软件开发中的 DevOps 所取得的成就。也就是说，当数据团队使用新工具和方法论时，DataOps 可以带来质量和周期时间的数量级提升。DataOps
    实现这些提升的具体方法反映了数据团队所特有的人员、流程和工具。
- en: The Agile methodology is particularly useful in environments where requirements
    evolve quickly and often change. This is a situation that data professionals will
    understand all too well. Like in DevOps, Agile in DataOps allows organizations
    to respond very quickly to requirements and accelerate the time to value.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷方法在需求快速发展和经常变化的环境中特别有用。数据专业人士对此会有深刻的理解。就像在 DevOps 中一样，DataOps 中的敏捷方法使组织能够快速响应需求，加速价值实现的时间。
- en: DataOps is also as much about managing people as it is about the tools. The
    needs and preferences of stakeholders are one subtle difference between DataOps
    and DevOps.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: DataOps 不仅仅是关于工具的管理，还涉及人员的管理。利益相关者的需求和偏好是 DataOps 与 DevOps 之间一个微妙的区别。
- en: In DevOps, our users are software engineers and operations engineers who are
    comfortable with coding, the complexity involved with multiple languages in one
    environment, as well as hardware and software. However, in DataOps, our users
    are data scientists, engineers, and analysts who analyze data and build complex
    data models.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 中，我们的用户是熟悉编码的开发工程师和运维工程师，他们能处理一个环境中多种语言的复杂性，以及硬件和软件的相关问题。然而，在 DataOps
    中，我们的用户是数据科学家、工程师和分析师，他们分析数据并构建复杂的数据模型。
- en: DevOps was developed to meet the needs of software developers. Dev engineers
    enjoy coding and are technologically savvy. Learning a new language or deploying
    a new tool is an opportunity, not a burden. They take a keen interest in all aspects
    of code creation, integration, and deployment. DevOps welcomes complexity.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 的开发是为了满足软件开发人员的需求。开发工程师喜欢编码，并且具备较强的技术能力。学习新语言或部署新工具对他们来说是机会，而非负担。他们对代码创建、集成和部署的各个方面都非常感兴趣。DevOps
    欢迎复杂性。
- en: DataOps users are frequently the polar opposite of that. They are data scientists
    or analysts who specialize in the development and deployment of models and visualizations.
    Engineers are typically more technically savvy than scientists and analysts. They
    concentrate on domain expertise. They are interested in making models more predictive
    or determining the best way to visually render data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: DataOps 用户通常与此截然相反。他们是专门从事模型和可视化开发与部署的数据科学家或分析师。工程师通常比科学家和分析师更具技术敏锐度。他们专注于领域专业知识，致力于使模型更加具有预测性，或找出最适合的方式来直观展示数据。
- en: The technology used to create these models and visualizations is merely a tool.
    Data professionals are happiest when they only use one or two tools. Anything
    more adds unwelcome complexity. In the most extreme cases, the complexity exceeds
    their ability to manage it.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 用于创建这些模型和可视化的技术仅仅是工具。数据专业人士最喜欢的状态是只使用一两个工具，任何更多的工具都会增加不必要的复杂性。在最极端的情况下，复杂性超过了他们的管理能力。
- en: DataOps recognizes that data professionals live in a multi-tool, heterogeneous
    world, and strives to make it more manageable for them.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: DataOps 认识到数据专业人士生活在一个多工具、异构的世界中，并致力于让他们能够更好地管理这一局面。
- en: Understanding processes involved in DataOps
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 DataOps 相关过程
- en: By examining data analytics development and life cycle processes, we can begin
    to understand the unique complexity that data professionals face. We discovered
    that data analytics professionals face challenges that are both similar to and
    distinct from those faced by software developers.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查数据分析开发和生命周期过程，我们可以开始理解数据专业人士面临的独特复杂性。我们发现，数据分析专业人士面临的挑战既有与软件开发人员相似的，也有与其不同的。
- en: In DevOps, the life cycle starts with the planning phase, and this feeds back
    to the beginning, which is the code phase. Hence, the process iterates indefinitely.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 中，生命周期从规划阶段开始，并且会反馈到最初的代码阶段。因此，过程是无限迭代的。
- en: 'The DataOps life cycle shares these iterative characteristics, but there is
    a significant difference: DataOps consists of two active and intersecting pipelines.
    The previously mentioned data factory is a single pipeline. The other pipeline
    governs how the data factory is updated, which includes the creation and deployment
    of new analytics into the data pipeline.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: DataOps 生命周期具有这些迭代特征，但有一个显著的区别：DataOps 由两个活跃且交叉的管道组成。之前提到的数据工厂是单一管道。另一个管道管理数据工厂的更新方式，包括创建和部署新分析到数据管道中。
- en: The process by which new analytic ideas are introduced into the value pipeline
    is referred to as the innovation pipeline. Although the innovation pipeline conceptually
    resembles the DevOps development process, several factors make the DataOps development
    process more difficult than DevOps.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 将新分析思想引入价值管道的过程被称为创新管道。尽管创新管道在概念上类似于 DevOps 开发过程，但有几个因素使得 DataOps 开发过程比 DevOps
    更加复杂。
- en: Understanding tools involved in DataOps
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 DataOps 中涉及的工具
- en: 'To deliver a reliable data pipeline, the tooling to directly and indirectly
    support DataOps needs can be broken down into five steps, leveraging existing
    analytics tools along with toolchain components meant to address source control
    management, process management, and efficient communication among groups:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了交付一个可靠的数据管道，直接和间接支持 DataOps 需求的工具可以分为五个步骤，利用现有的分析工具以及旨在解决源代码管理、过程管理和小组之间高效沟通的工具链组件：
- en: Source control management
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码管理
- en: Automation of processes and workflow
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过程和工作流的自动化
- en: Adding data and logic tests
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加数据和逻辑测试
- en: Working without fear with consistent deployment
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一致的部署中无畏地工作
- en: Implementing communication and process management
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施沟通和过程管理
- en: Now, let's provide a little more detail regarding these five steps.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地介绍这五个步骤。
- en: Source control management
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 源代码管理
- en: A data pipeline is nothing more than source code that is responsible for converting
    raw data into usable information. We can automate the data pipeline from start
    to finish, resulting in reproducible source code. A revision control tool (such
    as GitHub) aids in the storage and management of all changes to code and configuration
    in order to reduce inconsistent deployment.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 数据管道不过是负责将原始数据转换为可用信息的源代码。我们可以自动化整个数据管道，从开始到结束，生成可复现的源代码。版本控制工具（如 GitHub）有助于存储和管理代码和配置的所有更改，从而减少不一致的部署。
- en: Automation of processes and workflow
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过程和工作流的自动化
- en: Automation is essential for the success of the DataOps methodology, which necessitates
    the design of a data pipeline with runtime flexibility. Automated data curation
    services, metadata management, data governance, master data management, and self-service
    interaction are critical requirements for achieving this.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化对于 DataOps 方法的成功至关重要，这需要设计具有运行时灵活性的数据管道。自动化数据策划服务、元数据管理、数据治理、主数据管理和自助互动是实现这一目标的关键需求。
- en: Adding data and logic tests
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加数据和逻辑测试
- en: To ensure that the data pipeline is working properly, inputs, outputs, and business
    logic must be tested. To ensure consistent data quality, the data pipeline is
    tested at each stage for accuracy or potential deviation, as well as errors or
    warnings.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保数据管道正常工作，必须对输入、输出和业务逻辑进行测试。为了确保数据质量的一致性，数据管道在每个阶段都要进行准确性或潜在偏差的测试，以及错误或警告的检查。
- en: Working without fear with consistent deployment
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在一致的部署中无畏地工作
- en: Data analytics professionals are terrified of introducing changes that will
    disrupt the current data pipeline. This can be addressed with two key workflows
    that will be integrated later in production. For starters, the value pipeline
    generates ongoing value for organizations. Second, the innovation pipeline consists
    of new analytics in the development stage that are later added to the production
    pipeline.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析专业人员害怕引入会破坏当前数据管道的更改。这个问题可以通过两个关键工作流来解决，这两个工作流将在生产中后期集成。首先，价值管道为组织生成持续的价值。其次，创新管道由处于开发阶段的新分析组成，后来这些分析会被添加到生产管道中。
- en: Implementing communication and process management
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施沟通和过程管理
- en: Within a DataOps practice, efficient and automated notifications are critical.
    When changes are made to any source code, or a data pipeline is triggered, failed,
    completed, or deployed, the appropriate stakeholders can be immediately notified.
    The toolchain also includes tools for facilitating cross-stakeholder communication
    (think Slack or Trello).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DataOps 实践中，高效且自动化的通知至关重要。当源代码发生更改，或数据管道被触发、失败、完成或部署时，相关利益相关者可以立即收到通知。工具链还包括促进跨利益相关者沟通的工具（如
    Slack 或 Trello）。
- en: We now have an understanding of what DataOps is, what it tries to achieve when
    implemented correctly, as well as an understanding of the processes and tooling
    involved in the DataOps life cycle. Now, let's look at the DevSecOps ecosystem.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经了解了什么是 DataOps，实施正确时它所期望达成的目标，以及涉及的 DataOps 生命周期中的流程和工具。现在，让我们来看看 DevSecOps
    生态系统。
- en: Understanding the DevSecOps ecosystem
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 DevSecOps 生态系统
- en: '**DevSecOps** is a software industry culture shift that aims to incorporate
    security into the rapid-release cycles typical of modern application development
    and deployment, also known as the DevOps movement. Embracing this shift-left mindset
    necessitates organizations bridging the gap that typically exists between development
    and security teams, to the point where many of the security processes are automated
    and handled by engineering teams.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**DevSecOps** 是一种软件行业的文化变革，旨在将安全性融入现代应用开发和部署中典型的快速发布周期，这也被称为 DevOps 运动。拥抱这种“向左推进”的思维方式要求组织弥合开发团队和安全团队之间通常存在的差距，以至于许多安全流程可以自动化并由工程团队处理。'
- en: 'The following diagram helps depict how security fits into the existing DevOps
    loop:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表帮助说明安全性如何融入现有的 DevOps 循环：
- en: '![Figure 11.3 – Diagram showing the interaction between DevOps and DevSecOps'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.3 – 显示 DevOps 与 DevSecOps 交互的图示'
- en: '](img/B17192_11_03.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17192_11_03.jpg)'
- en: Figure 11.3 – Diagram showing the interaction between DevOps and DevSecOps
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – 显示 DevOps 与 DevSecOps 交互的图示
- en: Historically, major software developers would release new versions of their
    applications every few months, if not years. This gave the code enough time to
    go through quality assurance and security testing, which was handled by separate
    specialized teams, either internal or externally contracted.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，主要的软件开发商通常每几个月甚至几年发布一次其应用的新版本。这给代码足够的时间进行质量保证和安全测试，这些测试由独立的专业团队（无论是内部团队还是外包团队）处理。
- en: However, the last 10 years have seen a rise in public clouds, containers, and
    the microservice model, which divides monolithic applications into smaller parts
    that run independently. This breakdown has also had a direct impact on the way
    software is developed, resulting in rolling releases and Agile development practices
    in which new features and code are constantly pushed into production at a rapid
    pace.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在过去的 10 年里，公共云、容器以及微服务模型的兴起，已经将单体应用程序拆分成可以独立运行的更小部分。这一分解也直接影响了软件开发方式，导致了滚动发布和敏捷开发实践，在这种模式下，新特性和代码以快速的速度不断推送到生产环境中。
- en: DevSecOps combines DevOps and SecOps to form a cyclical practice for software
    development, technology operations, and cybersecurity.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: DevSecOps 将 DevOps 和 SecOps 结合，形成一个软件开发、技术运营和网络安全的循环实践。
- en: DevSecOps aims to promote the rapid development of a secure code base. Rather
    than emphasizing development speed or security, the DevSecOps methodology assists
    developers and security professionals in striking a healthy balance. The use of
    an Agile framework allows development and security teams to collaborate continuously.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: DevSecOps 的目标是推动安全代码库的快速发展。DevSecOps 方法论并不单纯强调开发速度或安全性，而是帮助开发人员和安全专家在两者之间找到一个健康的平衡点。使用敏捷框架使得开发和安全团队能够持续合作。
- en: DevOps and DevSecOps methodologies are similar in many ways, including the use
    of automation and continuous processes to establish collaborative development
    cycles. While DevOps promotes delivery speed, DevSecOps promotes security.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 和 DevSecOps 方法论在许多方面是相似的，包括利用自动化和持续流程来建立协作开发周期。虽然 DevOps 强调交付速度，DevSecOps
    更加注重安全性。
- en: DevSecOps practices may initially increase development time, but they will ensure
    that the code base is secure from the start. After some practice, and once security
    has been fully integrated into the development process, teams will benefit from
    increased writing and delivery speed for secure code bases.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: DevSecOps的实践可能会在初期增加开发时间，但它们将确保代码库从一开始就具备安全性。经过一些实践之后，一旦安全完全融入到开发过程中，团队将受益于更快的编写和交付安全代码库的速度。
- en: Understanding processes involved in DevSecOps
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解DevSecOps中涉及的流程
- en: Many of the processes involved in DevSecOps are not new. Your organization will
    hopefully be practicing them already. The main difference will be that current
    processes may not be optimal for use in a DevSecOps environment.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: DevSecOps中的许多过程并不新颖。你的组织可能已经在实践它们了。主要的区别在于，目前的流程可能不适合在DevSecOps环境中使用。
- en: 'A good starting point to look at what needs to be changed in your processes
    is to look at the *DevSecOps manifesto* ([https://www.devsecops.org](https://www.devsecops.org)).
    In a similar way to the Agile manifesto, the DevSecOps manifesto lays out nine
    points to mature your information security practice. These are as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解需要改变的流程，一个很好的起点是查看*DevSecOps宣言*（[https://www.devsecops.org](https://www.devsecops.org)）。与敏捷宣言类似，DevSecOps宣言列出了九个要点，以帮助你成熟信息安全实践。它们如下：
- en: Leaning in over and always saying no
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 积极参与，优于总是说“不”
- en: Data and security science over fear, uncertainty, and doubt
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据与安全科学，优于恐惧、不确定性和怀疑
- en: Open contribution and collaboration over security-only requirements
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开放的贡献与协作，优于仅限安全的要求
- en: Consumable security services with APIs over mandated security controls
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可消费的安全服务与API，优于强制性的安全控制
- en: Business-driven security scores over rubber stamp security
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以业务驱动的安全评分，优于象征性的安全审核
- en: Red and blue team exploit testing over relying on scans and theoretical vulnerabilities
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红队与蓝队的漏洞测试，优于依赖扫描和理论漏洞
- en: 24x7 proactive monitoring over reacting
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 24小时全天候的主动监控，优于事后反应
- en: Shared threat intelligence over keeping information to ourselves
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享威胁情报，优于信息保密
- en: Compliance operations over clipboards and checklists
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合规操作通过剪贴板和检查表进行
- en: You can see that most of what the manifesto lays out involves the maturity of
    your existing investments in information security and goes a long way to retracting
    some of the negative connotations that have become attached to information security
    over the years.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，大多数宣言中列出的内容涉及到你现有的信息安全投资的成熟度，并且在一定程度上有助于收回一些多年来与信息安全相关的负面观念。
- en: 'DevSecOps is hard, but when done well, you can significantly improve your security
    posture, as well as your understanding of security within your organization. To
    shift to the DevSecOps way of thinking, these five steps should be followed:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: DevSecOps很难，但做得好的话，你可以显著提升你的安全态势，同时加深对组织内部安全的理解。要转变为DevSecOps的思维方式，应该遵循以下五个步骤：
- en: DevSecOps is a cultural change.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DevSecOps是一种文化变革。
- en: Align practices with the development workflow.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将实践与开发工作流程对齐。
- en: Demonstrable evidence that security keeps pace with velocity.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可证明的证据表明，安全性与速度同步发展。
- en: Change from prevention to detection.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从预防转向检测。
- en: Use the security budget to support the development workflow.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用安全预算来支持开发工作流程。
- en: Let's have a look at the further five steps to understand the implementation.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进一步了解接下来的五个步骤，以便理解实施过程。
- en: DevSecOps is a cultural change
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: DevSecOps是一种文化变革
- en: Adopting a DevSecOps approach will be a massive undertaking for most businesses,
    so be mindful of how significant a cultural shift it is. Start a conversation,
    be brave, and be the one to take the first step toward change. It will be easier
    to find common ground and reach an agreement if you engage in a clear and simple
    manner that highlights the business, efficiency, and security benefits for each
    organization.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 采用DevSecOps方法对于大多数企业来说将是一次巨大的任务，因此要意识到它是一次重要的文化转变。开始对话，要勇敢，并成为迈向改变的第一步。如果你以一种清晰简洁的方式进行交流，突出每个组织在业务、效率和安全方面的好处，找到共同点并达成协议会更容易。
- en: Align practices with the development workflow
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将实践与开发工作流程对齐
- en: It is critical that when you engage in discussions with development teams, you
    do not bring your current security practices to the table and expect them to change
    the way they develop code.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 与开发团队进行讨论时，至关重要的一点是不要将当前的安全实践带到桌面上，并期待他们改变开发代码的方式。
- en: Obviously, you should not disregard your security needs in terms of monitoring,
    risk assessment, and so on, but you must be willing to change your security practices
    to align with the development workflow. If you tried to base your DevSecOps approach
    on how you traditionally approach security, the entire speed and cadence of your
    production releases would stall.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你不应忽视监控、风险评估等方面的安全需求，但你必须愿意改变你的安全实践，以与开发工作流对接。如果你试图基于传统的安全方式来构建你的 DevSecOps
    方法，那么生产发布的速度和节奏就会停滞。
- en: Demonstrable evidence that security keeps pace with velocity
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示安全与速度保持同步的可证明证据
- en: Your development, operations, or DevOps teams will most likely be hesitant to
    welcome your security teams or professionals into their *way of doing things*.
    You can overcome this hesitance by offering visibility and monitoring services,
    as well as collaborating to map your processes and identify opportunities to support
    agility.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你的开发、运维或 DevOps 团队很可能会对欢迎安全团队或专业人员加入他们的*工作方式*感到犹豫。你可以通过提供可见性和监控服务，以及与团队合作，绘制流程并识别支持敏捷性的机会，来克服这种犹豫。
- en: Early on, you should be less concerned with enforcement, blocking activities,
    and slowing down the pipeline, and more concerned with demonstrating that security
    can keep up with the velocity with which your development teams are building so
    much product to ensure that the pipeline runs smoothly.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在初期，你应该更少关注强制执行、阻止活动和减缓流水线速度，而应该更多关注展示安全性如何跟得上你的开发团队如此高效地构建大量产品，以确保流水线能够顺利运行。
- en: Change from prevention to detection
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从预防转向检测
- en: Once security has established itself in the development workflow, you can consider
    shifting from a monitoring and visibility role to proactively identifying vulnerabilities
    in code. The security team can become the development team's best friend in this
    situation.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安全已经在开发工作流中建立了自己的位置，你可以考虑从监控和可见性角色转变为主动识别代码中的漏洞。在这种情况下，安全团队可以成为开发团队最好的朋友。
- en: Using your security budget to support the development workflow
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用你的安全预算来支持开发工作流
- en: Finally, consider your own security budget. Are there any areas where you can
    redirect some security budget to that workflow pipeline as you change your practices
    to align with the development workflow? This demonstrates your commitment to the
    sustainability of security in every release by devoting additional resources to
    the continuous integration and continuous deployment pipeline.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，考虑一下你自己的安全预算。是否有某些领域，你可以将一些安全预算重新分配到工作流流水线中，以便在改变你的实践以与开发工作流对接时使用？这展示了你通过将更多资源投入到持续集成和持续部署流水线中，致力于每次发布的安全可持续性。
- en: Understanding tools involved in DevSecOps
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 DevSecOps 中涉及的工具
- en: 'As DevSecOps is closely aligned from a process perspective with the DevOps
    life cycle, the tooling involved in DevSecOps closely aligns with the flow of
    the DevOps life cycle. The tooling in DevSecOps therefore lines up with the eight
    different phases of DevOps. These are the phases, along with common security tooling
    and processes, that you might find at each point:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 由于从流程角度来看，DevSecOps 与 DevOps 生命周期紧密对接，因此，DevSecOps 中使用的工具也紧密契合 DevOps 生命周期的流程。因此，DevSecOps
    的工具与 DevOps 的八个不同阶段对接。以下是每个阶段及其常见的安全工具和流程：
- en: '**Plan**: Threat modeling'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计划**：威胁建模'
- en: '**Code**: Static analysis and code review'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码**：静态分析和代码审查'
- en: '**Build**: Penetration testing'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建**：渗透测试'
- en: '**Test**: Compliance validation'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试**：合规性验证'
- en: '**Release**: Logging'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布**：日志记录'
- en: '**Deploy**: Auditing'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署**：审计'
- en: '**Operate**: Threat intelligence'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作**：威胁情报'
- en: '**Monitor**: Detect, respond, recover'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控**：检测、响应、恢复'
- en: Next, let's have a look at some of these in more detail to understand some specifics
    regarding the tooling used.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们更详细地看一下这些内容，了解使用的工具的具体情况。
- en: Threat modeling
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 威胁建模
- en: Unfortunately, threat modeling has long been regarded as a time-consuming and
    labor-intensive activity. As a result, as organizations adopt a DevSecOps approach,
    threat modeling is frequently left out of the security practices employed. However,
    the importance of thread modeling in development should not be underestimated.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，威胁建模长期以来一直被认为是一项耗时且劳动密集的活动。因此，随着组织采用 DevSecOps 方法，威胁建模常常被排除在安全实践之外。然而，威胁建模在开发中的重要性不容小觑。
- en: According to the *2020 DevSecOps Insights Report* ([https://snyk.io/wp-content/uploads/dso_2020.pdf](https://snyk.io/wp-content/uploads/dso_2020.pdf)),
    threat modeling has a significant positive impact on a team's overall confidence
    in their code's security.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 根据*2020 DevSecOps Insights Report* ([https://snyk.io/wp-content/uploads/dso_2020.pdf](https://snyk.io/wp-content/uploads/dso_2020.pdf))，威胁建模对团队整体的代码安全信心具有显著的正面影响。
- en: At its core, threat modeling is intended to examine planned software to identify
    what might go wrong if an attacker targets that software. The purpose of this
    analysis is to inform the development team about which security controls should
    be considered as part of their implementation. Traditionally, threat modeling
    has been done with a broad scope across the entire application context. As part
    of this process, data flow diagrams, detailed threat analysis frameworks, and
    prescriptive threat prioritization methodologies are frequently used.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，威胁建模旨在检查计划中的软件，识别如果攻击者针对该软件可能发生的安全问题。这项分析的目的是让开发团队了解在其实现过程中应该考虑哪些安全控制。传统上，威胁建模通常涉及整个应用程序环境的广泛范围。在此过程中，常常使用数据流图、详细的威胁分析框架以及规定的威胁优先级方法。
- en: Static analysis
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 静态分析
- en: Static analysis tools, or **Static Application Security Testing** (**SAST**),
    work well with almost any software automation toolchain, as well as any development
    methodology and process. This is primarily because they can be used locally by
    developers at their desktop for instantaneous feedback and to analyze a complete
    build, whether it is done hourly or at whatever other cadence.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 静态分析工具，或 **静态应用程序安全测试** (**SAST**)，与几乎任何软件自动化工具链、任何开发方法论和流程都能很好地配合使用。这主要是因为它们可以由开发人员在本地桌面上使用，以便即时反馈并分析完整的构建，无论是每小时完成还是根据其他任何节奏进行构建。
- en: Furthermore, because they do not require interaction with testers or developers,
    SAST tools are completely autonomous. They are useful whenever it is necessary
    to check the code for bugs and security vulnerabilities.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于它们不需要与测试人员或开发人员互动，SAST 工具是完全自主的。每当需要检查代码中的漏洞和安全漏洞时，它们都非常有用。
- en: Although not a panacea when used alone, these tools should be used in tandem
    with other automation tools. As software teams begin to integrate security into
    their DevOps processes, tools such as *SonarQube* ([https://www.sonarqube.org](https://www.sonarqube.org))
    are simple to implement and integrate into the automation pipeline. By detecting
    vulnerabilities early and preventing them from entering later in the development
    cycle, the pipeline pays off in reducing security fixes later.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然单独使用这些工具并非万能，但它们应与其他自动化工具一起使用。随着软件团队开始将安全性集成到他们的 DevOps 流程中，像*SonarQube* ([https://www.sonarqube.org](https://www.sonarqube.org))
    这样的工具既易于实现，又能轻松集成到自动化流水线中。通过尽早发现漏洞并防止其进入开发周期的后期，这条流水线在减少后期安全修复方面大有裨益。
- en: Penetration testing
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 渗透测试
- en: While automated tools in your pipeline can go a long way to detecting many different
    vulnerabilities, you will likely still have a need for penetration testing tools.
    Traditionally speaking, penetration testing is an art and a science in many ways.
    You would be forgiven for thinking that penetration testing and the focus on speed,
    frequency, and repeatability with DevOps would mean DevOps and penetration testing
    are juxtaposed.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然流水线中的自动化工具可以大大帮助检测许多不同的漏洞，但你可能仍然需要渗透测试工具。从传统角度来看，渗透测试在许多方面既是一门艺术，也是一门科学。如果你认为渗透测试与
    DevOps 中对速度、频率和可重复性的关注意味着 DevOps 和渗透测试是对立的，这也是可以理解的。
- en: '*BreachLock* ([https://www.breachlock.com](https://www.breachlock.com)), for
    example, can be fully integrated into a DevOps environment by performing end-to-end
    security testing for your product, ensuring the speed, reliability, and consistency
    of your development process.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*BreachLock* ([https://www.breachlock.com](https://www.breachlock.com))，例如，可以通过对您的产品进行端到端安全测试，完全集成到
    DevOps 环境中，从而确保开发过程的速度、可靠性和一致性。'
- en: Threat intelligence
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 威胁情报
- en: Visibility for threat intelligence grows as more components of the environment
    are defined and documented in code. Many organizations struggle to identify their
    IT assets in such a way that threat intelligence can be effectively linked to
    the assets in their environment. By ensuring that processes are in place to feed
    metadata from the DevSecOps pipeline to threat intelligence capabilities, the
    organization can ensure that the right intelligence is gathered and applied, and
    responded to in a risk-prioritized manner.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 随着更多环境组件在代码中被定义和记录，威胁情报的可视性也在不断增长。许多组织在识别其 IT 资产时面临困难，无法有效地将威胁情报与环境中的资产关联。通过确保有适当的流程将
    DevSecOps 管道中的元数据传递给威胁情报能力，组织可以确保收集到正确的情报并将其应用，同时以风险优先的方式进行响应。
- en: We now have an understanding of what DevSecOps is, what it tries to achieve
    when implemented correctly, as well as an understanding of the processes and tooling
    involved in the DevSecOps life cycle. Now, let's look at the GitOps ecosystem.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经了解了什么是 DevSecOps，了解了当正确实施时它试图实现的目标，以及涉及 DevSecOps 生命周期的流程和工具。现在，让我们来看看
    GitOps 生态系统。
- en: Understanding the GitOps ecosystem
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 GitOps 生态系统
- en: GitOps is a technique for implementing continuous deployment in cloud-native
    applications. It focuses on providing a developer-centric experience when operating
    infrastructure by utilizing tools that developers are already familiar with, such
    as Git and continuous deployment tools.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: GitOps 是一种在云原生应用程序中实施持续部署的技术。它通过利用开发人员已经熟悉的工具（如 Git 和持续部署工具）来专注于为开发人员提供操作基础设施的体验。
- en: The core concept of GitOps is to have a Git repository that always contains
    declarative descriptions of the infrastructure that is currently desired in the
    production environment, as well as an automated process to match the described
    state in the repository. If you want to deploy a new application or update an
    existing one, all you have to do is update the repository; the automated process
    will handle the rest. It's like having cruise control for managing your production
    applications.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: GitOps 的核心概念是拥有一个 Git 仓库，始终包含当前生产环境中所需基础设施的声明式描述，以及一个自动化过程来匹配仓库中描述的状态。如果你想部署一个新的应用程序或更新现有应用程序，你只需更新仓库；自动化过程将处理剩下的部分。这就像为管理你的生产应用程序提供了巡航控制。
- en: Tip
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: While we are specifically talking about Git, you can use any source control
    repository to achieve the same results.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们专门谈论的是 Git，但你可以使用任何源代码控制仓库来实现相同的结果。
- en: GitOps provides a complete history of how your environment has changed over
    time. This makes error recovery as simple as running `git revert` and watching
    your environment restore itself.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: GitOps 提供了一个完整的历史记录，展示了你的环境随时间变化的情况。这使得错误恢复变得简单，只需运行 `git revert` 并观看你的环境自行恢复。
- en: GitOps enables you to manage deployments entirely from within your environment.
    Your environment only requires access to your repository and image registry for
    this purpose. That is all there is to it. You are not required to grant your developers
    direct access to the environment.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: GitOps 使你能够完全在你的环境中管理部署。你的环境只需要访问你的仓库和镜像注册表即可完成这项任务。就是这么简单，你不需要授予开发人员直接访问环境的权限。
- en: When you use Git to store complete descriptions of your deployed infrastructure,
    everyone on your team can see how it evolves over time. With excellent commit
    messages, anyone can easily reproduce the thought process of changing infrastructure
    and find examples of how to set up new systems.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用 Git 存储已部署基础设施的完整描述时，团队中的每个人都可以看到其随着时间的演变。通过优秀的提交信息，任何人都可以轻松地再现改变基础设施的思路，并找到如何设置新系统的示例。
- en: The deployment process in GitOps is organized around code repositories as the
    central element. There are at least two repositories, one for the application
    and one for the environment configuration. The application repository contains
    the application's source code as well as the deployment manifests used to deploy
    the application.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: GitOps 中的部署过程围绕着代码仓库作为核心元素进行组织。至少有两个仓库，一个用于应用程序，另一个用于环境配置。应用程序仓库包含应用程序的源代码以及用于部署应用程序的部署清单。
- en: The environment configuration repository contains all deployment manifests for
    a deployment environment's currently desired infrastructure. It specifies which
    applications and infrastructure services should be run in the deployment environment
    and with what configuration and version.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 环境配置仓库包含了部署环境当前所需基础设施的所有部署清单。它指定了哪些应用程序和基础设施服务应该在部署环境中运行，并且指明了配置和版本。
- en: GitOps is a highly effective workflow pattern for managing modern cloud infrastructure.
    Despite its primary focus on Kubernetes cluster management, the DevOps community
    is applying and publishing GitOps solutions to non-Kubernetes systems. GitOps
    can benefit an engineering team in a variety of ways, including improved communication,
    visibility, stability, and system reliability.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: GitOps 是一种高效的工作流模式，用于管理现代云基础设施。尽管它主要关注 Kubernetes 集群管理，DevOps 社区正在将 GitOps 解决方案应用并发布到非
    Kubernetes 系统。GitOps 可以从多个方面惠及工程团队，包括改善沟通、可见性、稳定性和系统可靠性。
- en: Understanding processes involved in GitOps
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 GitOps 中涉及的流程
- en: The great thing about GitOps is that you don't need to be doing anything differently.
    If you are already writing infrastructure as code and you store your code in a
    repository, then you are almost there already.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: GitOps 的一个优点是，你不需要做任何不同的事情。如果你已经在以代码形式编写基础设施并将代码存储在仓库中，那么你几乎已经完成了。
- en: The hardest thing is moving from an imperative method of deployment to a declarative
    method of deployment. Infrastructure as code promotes a declarative approach to
    system administration, which has led to the development of tools such as Ansible,
    Terraform, and Kubernetes, which all use static files to declare configuration.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 最难的部分是从命令式部署方法转变为声明式部署方法。基础设施即代码提倡一种声明式的系统管理方法，这促进了像 Ansible、Terraform 和 Kubernetes
    这样的工具的发展，这些工具都使用静态文件声明配置。
- en: 'Consider the following imperative statements, which are steps for deploying
    an application:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下命令式语句，它们是部署应用程序的步骤：
- en: Install the operating system.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装操作系统。
- en: Install these dependencies.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装这些依赖项。
- en: Download the application from this URL.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这个 URL 下载应用程序。
- en: Move the application to this directory.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将应用程序移动到这个目录。
- en: Repeat this thrice on three other servers.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另外三台服务器上重复此操作三次。
- en: The declarative version of this would simply be something like *Four machines
    have an application from this URL, installed at this directory*. Instead of a
    sequence of commands, declarative software follows a declaration of an expected
    state.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这种声明式版本的做法可能只是像 *四台机器从这个 URL 安装应用程序，安装在这个目录中* 这样的描述。与一系列命令不同，声明式软件遵循期望状态的声明。
- en: A pipeline platform is required to complete a full GitOps installation. Some
    popular pipeline tools that complement GitOps include Jenkins, Azure DevOps pipelines,
    and CircleCI. Pipelines automate and connect Git pull requests to the orchestration
    system. Commands are sent to the orchestration piece after pipeline hooks are
    established and triggered by pull requests.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 完成完整 GitOps 安装需要一个管道平台。一些流行的管道工具，如 Jenkins、Azure DevOps 管道和 CircleCI，能够补充 GitOps。管道自动化并将
    Git 拉取请求连接到编排系统。管道钩子建立并通过拉取请求触发后，命令被发送到编排系统。
- en: The processes involved in GitOps are therefore not really that much different
    from the same phases involved in the software development life cycle. Those processes
    define how code should be stored, what language should be used, who should review,
    how pipelines should be built, and where those pipelines are executed.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，GitOps 中涉及的过程与软件开发生命周期中相同阶段的过程并没有太大区别。这些过程定义了代码应该如何存储、使用什么语言、谁应该进行审查、管道应该如何构建以及这些管道在哪里执行。
- en: To achieve GitOps, you can extend what you already do in DevOps for software
    engineering and apply it to the infrastructure world.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现 GitOps，你可以扩展在 DevOps 中已做的工作，将其应用到基础设施领域。
- en: Understanding tools involved in GitOps
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 GitOps 中涉及的工具
- en: As we touched on in the previous section, two tools are required to get started
    with GitOps. These tools are version control in the form of Git, as well as a
    tool to build and execute pipelines.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一节提到的，开始使用 GitOps 需要两个工具。这些工具分别是 Git 形式的版本控制，以及构建和执行管道的工具。
- en: Git is the design center in the GitOps pipeline model. It serves as the source
    of authority for everything in the system, from code to configuration, and the
    entire stack. Building deployable artifacts necessitates the use of continuous
    integration, build, and test services. However, in the GitOps pipeline, the overall
    delivery orchestration is coordinated by the deployment and release automation
    system, which is triggered by repository updates. To summarize, continuous deployment,
    not continuous integration, owns delivery orchestration. It is a very subtle shift
    in how pipelines work from the software development life cycle. Any continuous
    integration provider should be able to adopt this model.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Git是GitOps管道模型中的设计中心。它作为系统中一切的权威来源，从代码到配置，再到整个堆栈。构建可部署的工件需要使用持续集成、构建和测试服务。然而，在GitOps管道中，整体交付编排由部署和发布自动化系统协调，这一过程由仓库更新触发。总结来说，持续部署而非持续集成掌控交付编排。这是软件开发生命周期中管道工作方式的一个微妙转变。任何持续集成提供商都应该能够采用这一模型。
- en: Summary
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have looked at XOps in detail as well as at the various
    operating models that are available. We have looked at DevSecOps, DataOps, and
    GitOps in further detail to understand their origins, benefits, processes, and
    tooling, looking at how this differs from DevOps.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们详细了解了XOps及其各种可用的运营模型。我们进一步探讨了DevSecOps、DataOps和GitOps，深入理解了它们的起源、优势、流程和工具，并比较了它们与DevOps的不同之处。
- en: In the next chapter, we look to bring together everything we have learned so
    far, review some key learnings, and walk through an example implementation of
    DevOps using an example organization, listing their challenges, what can be done
    to resolve these challenges, and finally how to implement those changes.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将汇总迄今为止学到的所有内容，回顾一些关键的学习点，并通过一个示例组织来讲解DevOps的实施，列出它们面临的挑战、如何解决这些挑战，最后如何实施这些变更。
- en: Questions
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Let''s now recap some of what we have learned throughout this chapter:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们回顾一下本章中学到的一些内容：
- en: What does FinOps set out to achieve?
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FinOps的目标是什么？
- en: a) Manage financial operations in cloud platforms.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 管理云平台中的财务运营。
- en: b) Set appropriate budgets.
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 设置适当的预算。
- en: c) Ensure accountability for consumption.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 确保消费的问责制。
- en: d) Increase agility.
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 增强敏捷性。
- en: What differentiates DevOps and DataOps?
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DevOps和DataOps有什么区别？
- en: a) DataOps focuses on data and not software.
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) DataOps专注于数据而非软件。
- en: b) DataOps focuses on database management.
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) DataOps专注于数据库管理。
- en: c) DataOps is not an iterative process like DevOps.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) DataOps不像DevOps那样是一个迭代过程。
- en: d) No difference; both are the same.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 没有区别；两者相同。
