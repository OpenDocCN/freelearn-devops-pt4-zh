- en: Introducing Ádám Sándor
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 Ádám Sándor
- en: Ádám works to improve software delivery rates in business by utilizing cloud
    technologies. A certified ScrumMaster and Certified Kubernetes Administrator,
    Ádám spends much of his time involved in the technologies of DevOps. You can follow
    him on Twitter at `@adamsand0r`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Ádám 通过利用云技术来提高商业中的软件交付速度。他是认证的 ScrumMaster 和认证的 Kubernetes 管理员，Ádám 将大部分时间投入到
    DevOps 技术中。您可以在 Twitter 上关注他，用户名是 `@adamsand0r`。
- en: '**Viktor Farcic**: To start, could you tell us what, in your opinion, is DevOps,
    and how do you use DevOps in your career?'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克多·法尔奇**：首先，您能告诉我们您认为什么是 DevOps，以及您如何在职业生涯中使用 DevOps 吗？'
- en: What is DevOps, and how is it used?
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是 DevOps，它是如何使用的？
- en: '**Ádám Sándor**: I''m a Java developer turned cloud-native consultant currently
    working for Container Solutions, an Amsterdam-based consultancy company, where
    we help companies adapt to cloud-native technologies while exploring the best
    practices in DevOps.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我是一个从 Java 开发者转行的云原生顾问，目前在一家总部位于阿姆斯特丹的咨询公司 Container Solutions
    工作，我们帮助企业适应云原生技术，并探索 DevOps 中的最佳实践。'
- en: I believe that DevOps is a way of developing software where you break down the
    barriers between the people who develop software and the people who run the software
    in production. Ideally, this would mean that a single team can be responsible
    for running their own software in production, which can improve the time it takes
    to fix problems. DevOps can also improve the design of software because developers
    get plenty of feedback—which allows them to design solutions in such a way that
    they will be able to run those solutions. I very much believe this is part of
    the "you build it, you run it" philosophy.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为 DevOps 是一种软件开发方式，它打破了开发软件的人和运行生产环境中软件的人之间的障碍。理想情况下，这意味着一个团队可以负责在生产环境中运行自己的软件，这样可以提高修复问题的速度。DevOps
    还可以改善软件设计，因为开发人员可以获得大量反馈，这使得他们可以以一种能够运行这些解决方案的方式来设计解决方案。我非常相信这是“你构建，它就由你运行”哲学的一部分。
- en: '**Viktor Farcic**: But why would anyone want to do that?'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克多·法尔奇**：但是为什么有人会想做这个呢？'
- en: '**Ádám Sándor**: Because DevOps helps speed up the delivery of software, while
    reducing the risk of deploying it and breaking something. DevOps also helps meet
    a growing need to improve customer satisfaction by being able to quickly deliver
    new features and to fix any problems that customers are experiencing.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：因为 DevOps 有助于加速软件交付，同时减少部署过程中出现问题的风险。DevOps 还帮助满足日益增长的需求，通过快速交付新功能以及修复客户遇到的任何问题，从而提高客户满意度。'
- en: '"DevOps is a way of developing software where you break down the barriers between
    the people who develop software and the people who run the software in production."'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps 是一种软件开发方式，它打破了开发软件的人和运行生产环境中软件的人之间的障碍。”
- en: —Ádám Sándor
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: —Ádám Sándor
- en: '**Viktor Farcic**: So, how do you start implementing the DevOps process?'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克多·法尔奇**：那么，您如何开始实施 DevOps 过程呢？'
- en: '**Ádám Sándor**: At Container Solutions, where I''m a cloud technology consultant,
    we begin by conducting a discovery process: two of us go to a company that is
    already working with an idea. We enter the discovery process after some pre-sales
    meetings, and so as a result, we already have an idea of what their problems are,
    and what they would like to solve. The issue is usually focused on their software
    delivery process. Over the course of a couple of days, we conduct workshops that
    explore the company''s software landscape, their delivery processes, and their
    overall architecture. This lets us learn about what''s going on in the company
    and verify whether the problems that the client has identified are the *actual*
    problems that they need to deal with. It''s important to make sure that we''re
    out to solve their actual problems, rather than provide some quick reactions to
    some bad things that might have happened to our client.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：在 Container Solutions，我是云技术顾问，我们首先进行一个发现过程：我们两个人会去一家已经在使用某个想法的公司。在一些售前会议后，我们进入发现过程，因此我们已经有了对他们问题的初步了解，以及他们希望解决的内容。问题通常集中在他们的软件交付过程中。在几天的时间里，我们进行研讨会，探索公司的软件环境、交付过程和整体架构。这让我们了解公司发生了什么，并验证客户所识别的问题是否是他们真正需要解决的*实际*问题。确保我们解决的是真正的问题，而不是对客户可能遇到的坏情况做出一些快速反应，这是非常重要的。'
- en: A good comparison here would be a doctor who sees a patient with a headache
    but doesn't just give the patient some aspirin because their head hurts—instead,
    they listen to the patient and they might discover that the patient needs to change
    their diet. In the context of the companies I work with, one company might invite
    us to install Kubernetes so their software development becomes more efficient.
    But we look carefully and we see that the delivery of their software passes through
    three departments. First, the developers develop the software. Then it goes to
    the testing department, before it's finally transferred to the operations department.
    Now, that process right there is the real problem! Kubernetes won't improve that
    company's software delivery. The company's problem, in this case, is not software
    based, and so we try to convince them to break down these barriers and make teams
    responsible for their production environment. Once that problem is solved, we
    might still bring in Kubernetes to more efficiently implement the new processes.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这里可以做个类比，就像医生看到一个头痛的病人，并不是因为病人头痛就直接给他一些阿司匹林，而是先听取病人的描述，可能会发现病人需要改变饮食习惯。在我合作的公司背景下，有的公司可能邀请我们来安装
    Kubernetes，以提高软件开发效率。但我们仔细一看，发现他们的软件交付过程涉及三个部门。首先，开发人员编写软件。然后它会经过测试部门，最后交到运维部门。现在，真正的问题就在于这个过程！Kubernetes
    并不会改善这家公司软件交付的效率。该公司的问题本质上并不在软件层面，因此我们尝试说服他们打破这些部门间的壁垒，令团队对其生产环境负责。一旦这个问题解决，我们可能会引入
    Kubernetes 来更高效地实施新的流程。
- en: '**Viktor Farcic**: How often do you find people go to the doctor with the wrong
    symptoms? Do people even know what''s wrong with their technology processes to
    begin with?'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：你发现过人们因症状错误去看医生的情况吗？人们在一开始就知道他们的技术流程出了什么问题吗？'
- en: '**Ádám Sándor**: It''s hard for me to put a number on how many times people
    come to us with the wrong symptoms, but it happens both ways, and sometimes the
    customer can be very right. Sometimes they''ve done their homework and they come
    to us with a good idea of what their problems are and how to solve them. They
    can still be struggling to reach the next step of actually implementing solutions
    though, and in those cases it''s usually because they don''t have all the knowledge
    they need in-house. That''s where we can help in those situations.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：我很难给出一个确切的数字，说明有多少人带着错误的症状来找我们，但这种情况是双向的，有时候客户的判断是非常准确的。他们可能已经做了足够的功课，带着明确的思路来找我们，知道自己的问题所在，并有解决方案。但即便如此，他们仍然可能在实际执行解决方案时遇到困难，而这种情况通常是因为他们没有掌握所有必要的内部知识。在这种情况下，我们就能为他们提供帮助。'
- en: At other times, clients can be very wrong about their symptoms, even to the
    level where we can't help them because they're simply not ready to change. In
    those extreme scenarios, a company can be grasping at straws for new technology
    to solve their problems without actually identifying the real issues at hand.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 但有时，客户可能对他们的症状有很大的误解，甚至到了我们无法帮助他们的程度，因为他们根本不准备改变。在这些极端情况下，一家公司可能会盲目寻求新的技术来解决问题，而没有真正识别出当前面临的根本问题。
- en: Kubernetes – the solution to all of our problems?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Kubernetes——解决我们所有问题的方案？
- en: '**Viktor Farcic**: My understanding is that you mostly work with Kubernetes,
    which means you''re into the latest and greatest. Is that a concern for you?'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我了解到你们主要使用 Kubernetes，这意味着你们紧跟最前沿的技术。这是你们担心的问题吗？'
- en: '**Ádám Sándor**: We''ve never had experience with this technology failing,
    so in that sense, it''s not an issue in that it''s the latest and greatest. We
    never advise customers to jump into something, even though we are surfing on the
    edge of new technology and watching out for everything that''s coming our way.
    Usually, we recommend technologies that have already proven themselves for at
    least a year and that we know will work for the customer.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：我们从未经历过这种技术失败的情况，因此从这个角度来看，它不是一个问题，毕竟它是最新最好的技术。我们从不建议客户轻易尝试某个新技术，尽管我们一直在关注新技术的前沿，随时准备迎接即将到来的挑战。通常情况下，我们建议使用那些已经至少证明自己有效一年的技术，且我们知道它们能够为客户提供帮助。'
- en: '**Viktor Farcic**: Does that mean everybody should move to Kubernetes? What
    does it involve? I imagine it''s not only creating new Docker images and YAML
    files. Let''s say that I''m a company that has existed for a long time and I have
    everything, how does it look for me?'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：这意味着每个人都应该迁移到 Kubernetes 吗？这需要做哪些工作？我想，这不仅仅是创建新的 Docker 镜像和 YAML
    文件吧。如果我是一个已经存在很长时间的公司，而且我什么都有了，那对我来说意味着什么？'
- en: '**Ádám Sándor**: For such a company it will start with a proof of concept to
    prove internally whether Kubernetes works for you. Depending on your short term
    plans this will either focus on moving a legacy application to Kubernetes or creating
    something new using technologies the company plans to move towards. Whether a
    company wants to move some or all of it''s legacy applications to Kubernetes can
    depend on many factors. What I would point out is that it''s not impossible or
    even undesirable to do so.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：对于这样一家公司，起步会是一个概念验证，证明Kubernetes是否适合你。根据短期计划，这个概念验证要么集中在将传统应用迁移到Kubernetes上，要么集中在使用公司计划转向的技术创建新事物。公司是否希望将部分或所有的传统应用迁移到Kubernetes上，取决于很多因素。我想指出的是，这样做既不是不可能的，也不是不可取的。'
- en: Kubernetes is actually a surprisingly good system for supporting legacy applications,
    for example, with simple things like being able to inject configuration into a
    pod using files. You can very easily simulate a configuration files-based environment
    to old-school services that require huge config files, and so containers are a
    pretty backward-compatible technology.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes实际上是一个非常适合支持传统应用的系统，例如，像能够使用文件将配置注入到Pod中这样简单的操作。你可以非常容易地模拟基于配置文件的环境，适配那些需要大量配置文件的传统服务，因此容器是一项相当向后兼容的技术。
- en: '"Kubernetes is actually a surprisingly good system for supporting legacy applications,
    for example, with simple things like being able to inject configuration into a
    pod using files."'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: “Kubernetes实际上是一个非常适合支持传统应用的系统，例如，像能够使用文件将配置注入到Pod中这样简单的操作。”
- en: —Ádám Sándor
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: —Ádám Sándor
- en: '**Viktor Farcic**: Another thing I''m curious about is if your site has a horribly
    managed legacy infrastructure with poorly designed applications, and you want
    to move them to containers and the cloud, would you first move them to Kubernetes
    on site and then switch to the cloud, or first move into the cloud without Kubernetes,
    or both?'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我还想知道，如果你们站点有一个管理不善的传统基础设施，且应用设计很糟糕，你想把它们迁移到容器和云端，你会先把它们迁移到现场的Kubernetes上，然后再转向云端，还是先迁移到云端而不使用Kubernetes，或者两者兼顾？'
- en: '**Ádám Sándor**: If possible use a cloud provider. They will do the heavy lifting
    of managing Kubernetes and other services you use freeing up your resources to
    focus on more business-centric tasks. But there can be valid reasons not to do
    that—heavy investments into a new datacenter, regulations about data storage,
    and so on.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：如果可能的话，使用云服务商。他们会做很多Kubernetes和其他服务的重担管理工作，解放你的资源，让你能专注于更具业务中心的任务。但也有合理的理由不这么做——比如对新数据中心的巨额投资，数据存储的法规要求等等。'
- en: '**Viktor Farcic**: Wouldn''t that create a defensive politic? Because if you
    have an army of engineers in charge of infrastructure on site, what do we do with
    them if we move everything? Will there be space for all of them?'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那不会产生防御性政治吗？因为如果你有一支负责现场基础设施的工程师队伍，如果我们把所有东西都迁移走了，那这些人怎么办？他们会有工作空间吗？'
- en: '**Ádám Sándor**: I don''t know if there will be space for all of them, but
    I''ve never seen a project where people would have to be fired because there''s
    simply no need for them anymore. Yes, with a cloud provider you don''t need to
    run Kubernetes. But actually, there is plenty of work in setting up development
    and deployment tooling, and systems to track what''s deployed where. This is the
    more business centric work I mentioned - ditch low value add work for stuff that
    will bring more direct value to your business.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我不知道是否会有足够的空间来容纳所有人，但我从未见过一个项目，里面的人因为不再需要而不得不被解雇。是的，使用云服务商时，你不需要运行Kubernetes。但实际上，设置开发和部署工具，以及追踪部署情况的系统，依然有很多工作要做。这就是我提到的以业务为中心的工作——淘汰低附加值的工作，转向能为业务带来更多直接价值的事情。'
- en: Exploring the motivations for change
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探讨变革的动机
- en: '**Viktor Farcic**: What do you think is driving all of these requests for improvement?
    Are they driven by the competition or by a genuine interest in new technology?'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你认为是什么驱动了这些改进的请求？是竞争的压力，还是对新技术的真正兴趣？'
- en: '**Ádám Sándor**: I think the biggest motivation we see—and what most companies
    are missing—is the ability to release software fast. They realize that they should
    release new software every half year, but they need to come to this realization
    before the competition is already gaining on them and put the proper processes
    in place early enough so the production pipeline is filled. It''s this big pressure
    in today''s market that ends up making engineers leave because, frankly, it''s
    just a horrible environment to work in.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我认为我们看到的最大动机，也是大多数公司忽视的，是能够快速发布软件的能力。他们意识到自己应该每半年发布一次新软件，但他们需要在竞争对手已经赶上之前，尽早意识到这一点，并采取适当的流程，确保生产管道充实。如今市场中的巨大压力最终让工程师离开，因为坦白说，这真的是一个糟糕的工作环境。'
- en: There is also an excitement for new technologies because when companies in the
    market are looking for engineers, their HR department feels that new recruits
    will ask, "OK, what technologies are you using?" And when they hear that what's
    being used isn't the very latest iteration, these new recruits won't be interested
    in working for the company. What management still feels most acutely is that when
    they have a new idea, by the time they get it into production, it's already way
    too late.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 还有对新技术的兴奋，因为当市场上的公司在寻找工程师时，他们的HR部门感觉到新招聘的人会问：“你们使用什么技术？”当他们听到使用的技术不是最新版本时，这些新招聘的人就不再对加入公司感兴趣。管理层最深切感受到的是，当他们有了一个新想法时，等到他们将其投入生产时，已经太晚了。
- en: '"What management still feels most acutely is that when they have a new idea,
    by the time they get it into production, it''s already way too late."'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: “管理层最深切感受到的是，当他们有了一个新想法时，等到他们将其投入生产时，已经太晚了。”
- en: —Ádám Sándor
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: —Ádám Sándor
- en: '**Viktor Farcic**: I''ve heard before that one of the motivations is not management''s
    motivation for improvement, but actually attracting and keeping talent.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我之前听说过，一个动机并不是管理层改进的动力，而是吸引和留住人才。'
- en: '**Ádám Sándor**: Definitely!'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：绝对如此！'
- en: '**Viktor Farcic**: Does this mean that engineers are getting picky?'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这是否意味着工程师变得挑剔了？'
- en: '**Ádám Sándor**: Engineers are getting picky. If they''re any good at their
    job, they won''t join a company where they will be manually installing Linux servers.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：工程师变得挑剔了。如果他们在自己的工作上有些能力，他们是不会加入一个需要手动安装Linux服务器的公司的。'
- en: '**Viktor Farcic**: I''m just thinking that it''s kind of contradictory with
    the politics of externalizing development to a third party because you can get
    on one site and then decide to ship everything to someone else.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我只是在想，这与将开发外包给第三方的政策有些矛盾，因为你可以选择一个地点，然后决定把一切交给别人。'
- en: '**Ádám Sándor**: I think the "let''s ship everything" mindset exists because
    the outsourcing trend isn''t as strong as it was before. I''m no expert on this,
    because I''ve worked in only a small part of the market, but I have seen companies
    insourcing, as well as those who outsource but build up long-term development
    teams in cheaper countries. They don''t think of those development teams as disposable
    labor, but know they are building them up for long-term use while attempting to
    integrate them into the company as first-class employees.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我认为“让我们把一切都交付出去”的心态之所以存在，是因为外包趋势已经不像以前那么强烈了。我不是这方面的专家，因为我只在市场的一个小部分工作过，但我看到了一些公司进行内部化，也看到一些公司外包，但在较便宜的国家建立长期的开发团队。他们不会把这些开发团队当作一次性劳动力，而是知道他们在为长期使用而建立这些团队，同时尝试将这些团队整合进公司，成为一流的员工。'
- en: I think that companies and people are realizing that they need to attract people
    in order to keep people. Even if you don't have the challenge of hiring staff
    in another country, usually in Eastern Europe or India, there is just so much
    that needs to be known about the company, its products, and the current state
    of its applications and infrastructure. The process of hiring is expensive anyway.
    You want to retain employees for a long time, and you want to hire good people
    because people who are unskilled are even more expensive to train. You can hire
    someone on a cheap salary but then spend half a year getting them up to speed,
    which is going to cost a lot of money, and even more time.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为公司和员工开始意识到，想要吸引人才，就得留住人才。即使你没有面临在其他国家招聘员工的挑战，通常在东欧或印度，人们也需要了解公司、产品以及当前应用和基础设施的状态。招聘过程本身就是一项昂贵的工作。你希望能长期留住员工，并且招到优秀的人才，因为那些不太有经验的人更难培养。你可以以较低的薪资雇佣某人，但之后却需要花半年的时间来让他们熟悉工作，这不仅会花费大量金钱，还会浪费更多时间。
- en: '**Viktor Farcic**: Is it the economy then that''s driving companies away from
    outsourcing?'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那是不是经济因素正在促使公司远离外包呢？'
- en: '**Ádám Sándor**: I think it''s also the new way of development for the whole
    DevOps culture: the idea that you build it, you run it, and that what the team
    owns is really a product. You marry the team to the product. The product owner,
    the designers, and the business analysts—everybody''s a part of the product team.
    You want to keep them engaged with that product in the long-term because they
    really understand it. Companies really started valuing this long-term engagement,
    and that just doesn''t work with outsourcing, or hiring disposable people.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我认为这也是整个 DevOps 文化的新发展方式：即你构建它，你运营它，团队所拥有的其实是一个产品。你把团队与产品结合起来。产品负责人、设计师和业务分析师——每个人都是产品团队的一部分。你希望让他们与这个产品保持长期的联系，因为他们真正理解它。公司开始真正重视这种长期的参与，而这正是外包和雇佣临时员工所无法做到的。'
- en: '**Viktor Farcic**: So, what''s next? Is there anything coming next, or will
    we ride Kubernetes for a while to come?'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，接下来会是什么呢？是否有新的事物即将出现，还是我们还得继续使用 Kubernetes 一段时间？'
- en: A future beyond Kubernetes
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超越 Kubernetes 的未来
- en: '**Ádám Sándor**: I''m quite surprised that the next thing is so slow to arrive,
    and that''s probably because Kubernetes is not yet that widespread within the
    industry. But I do believe the next thing will be products built on top of Kubernetes,
    once Kubernetes becomes more widely used. But until then, Kubernetes is kind of
    at an impasse because it''s a higher-level service than virtual machines and low-level
    networking.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我有点惊讶，下一步的进展竟然这么慢，可能是因为 Kubernetes 在行业内的普及程度还不够。但我确实相信，一旦 Kubernetes
    得到更广泛的应用，下一步将会是基于 Kubernetes 构建的产品。但在此之前，Kubernetes 正处于一种停滞状态，因为它比虚拟机和低层网络服务更高层次。'
- en: I believe it's going to be either Kubernetes integrating more and more stuff,
    so it morphs into something that's somewhat different than it is now, or other
    products that will be built on top of it. But I don't see any of those products
    coming along any time soon. I think Helm is a good example, but that's not a commercial
    product.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信，未来要么是 Kubernetes 会整合更多的功能，最终转变为一种与现在有些不同的形态，要么是会有其他基于它构建的产品出现。但我不认为这些产品会很快出现。我认为
    Helm 是一个很好的例子，但那并不是一个商业产品。
- en: '"Kubernetes is not yet that widespread within the industry. But I do believe
    the next thing will be products built on top of Kubernetes…until then, Kubernetes
    is kind of at an impasse."'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: “Kubernetes 在行业内还没有得到广泛应用。但我相信，下一步将会是基于 Kubernetes 构建的产品……在那之前，Kubernetes 可以说正处于一个停滞不前的状态。”
- en: —Ádám Sándor
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: —Ádám Sándor
- en: '**Viktor Farcic**: If you want to run Kubernetes on site, would you recommend
    that I run it on top of a VM, or bare metal?'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：如果你想在本地运行 Kubernetes，你会推荐我在虚拟机上运行，还是在裸金属上运行？'
- en: '**Ádám Sándor**: I honestly don''t have an informed opinion on that. Theoretically,
    it''s much more efficient to run Kubernetes on bare metal, but the low-level networking
    stuff might just be too hard. Maybe it''s best to let solutions like VMware take
    care of a lot of the really low-level hardware stuff; in which case, it''s better
    that they speed up VMs. I don''t think Kubernetes is mature in this environment,
    but again, I''m no expert.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：老实说，我并没有对这个问题有深入的看法。理论上，在裸金属上运行 Kubernetes 会更高效，但低层网络的相关问题可能会让人感到困难。也许最好让像
    VMware 这样的解决方案来处理那些真正低层的硬件问题；在这种情况下，提升虚拟机的性能反而会更好。我不认为 Kubernetes 在这个环境下已经足够成熟，但说实话，我并不是专家。'
- en: '**Viktor Farcic**: Do have any experience with or an opinion about unikernels?'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你有过 unikernel 的经验或者意见吗？'
- en: '**Ádám Sándor**: I don''t have much experience. All I see is that they''re
    a great idea. If you just look at it from a high level, they could totally beat
    containers because they feature the good parts of containers while running on
    hypervisors, which are basically what public clouds are—giant hypervisors.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我没有太多经验。我看到的是，它们是一个很好的想法。如果你从高层次看，它们完全可以战胜容器，因为它们具有容器的优点，同时又在虚拟化管理程序上运行，而虚拟化管理程序本质上就是公有云——巨大的虚拟化管理程序。'
- en: But what I also see is that unikernels don't seem to mature fast enough to attract
    enough attention. The tooling is simply not there. Actually, cloud providers don't
    let you run whatever you want on their hypervisors, just their own VM images.
    So again, theoretically, it could go there, but practically, it's not really happening
    at the moment, and I don't have enough industry insight to know whether, secretly,
    Amazon is working on something or not.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 但我也看到的是，unikernel（单内核）似乎成熟得不够快，无法吸引足够的关注。工具链根本不够完善。实际上，云服务提供商并不允许你在他们的虚拟化管理程序上运行任何你想要的，只能运行他们自己的虚拟机镜像。所以从理论上讲，它是可以实现的，但在实践中，目前并没有真正发生，而且我没有足够的行业洞察力来知道，亚马逊是否在秘密地做些什么。
- en: '**Viktor Farcic**: How about other cloud providers? This is something that
    I agree with, and correct me if I''m wrong, but for most of us, it doesn''t make
    sense not to use cloud providers like AWS or Google because they''re commoditized
    and know better than we what they do. What does that mean for the future of all
    the software and vendors built around capturing infrastructure and configuration
    management tools?'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：其他云服务提供商怎么样？这是我同意的观点，如果我错了请纠正我，但对于我们大多数人来说，不使用像 AWS 或 Google
    这样的云服务提供商是没有意义的，因为它们已经商品化，并且比我们更了解他们在做什么。这对围绕基础设施和配置管理工具构建的软件和厂商的未来意味着什么？'
- en: '**Ádám Sándor**: I don''t think configuration management tools will become
    obsolete because of cloud providers. You would totally provision your AWS infrastructure
    using Puppet, Chef, or Ansible.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：我认为配置管理工具不会因为云服务提供商的存在而变得过时。你完全可以使用 Puppet、Chef 或 Ansible 来配置你的
    AWS 基础设施。'
- en: '**Viktor Farcic**: But should you, or even could you do that?'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但是，你应该做吗？或者说，你能做吗？'
- en: '**Ádám Sándor**: As it stands, I don''t think using Puppet, Chef, and Ansible
    makes a difference whether you use it with a cloud provider or with your on-site
    infrastructure. It''s VMware who is on the spot with this; they are the competition
    to the cloud providers.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：就目前来看，我认为无论是与云服务提供商一起使用 Puppet、Chef 和 Ansible，还是与本地基础设施一起使用，都没有区别。真正处于风口浪尖的是
    VMware；他们是云服务提供商的竞争对手。'
- en: The problem with Puppet, Chef, and Ansible is that they don't really push you
    towards better infrastructure. They're just a nicer way of restricting the level
    of abstraction they provide on the operating system. That doesn't lead to a better
    way of deploying software; it's basically just nicer than writing a script that
    SSHs into machines and runs some other script there. But it's not that much nicer,
    so you don't get immutable infrastructure.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Puppet、Chef 和 Ansible 的问题在于，它们并没有真正推动你向更好的基础设施发展。它们只是提供了一种更优雅的方式来限制它们在操作系统上提供的抽象级别。这并没有导致一种更好的软件部署方式；它本质上比写一个
    SSH 进入机器并运行其他脚本的脚本要更好看一些，但也没好到哪里去，因此你无法获得不可变的基础设施。
- en: If you launch a thousand machines and want to run the same Puppet stuff on them,
    three will fail, and what do you do with that? You have no way to deal with this
    stuff, and it will take a really long time to speed up any machine, so basically,
    just these tools by their nature are the wrong thing. If we stay in the world
    of virtual machines, then the right solution is pre-baking images and then managing
    them.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你启动一千台机器，并且想在它们上运行相同的 Puppet 配置，三台会失败，那你该怎么办？你没有办法处理这种情况，并且加速任何一台机器都需要很长时间，所以从本质上讲，这些工具就是不合适的。如果我们停留在虚拟机的世界里，那么正确的解决方案是预先制作镜像并进行管理。
- en: That's where Docker comes in, because it's a hassle to install and to pre-bake
    virtual machines. There is nothing like a golden image and extending, so Docker
    comes in and solves that problem, but instead of doing it with virtual machines,
    they're doing it by building container images.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 Docker 的作用，因为安装和预先制作虚拟机是件麻烦事。没有什么像黄金镜像这样的东西可以扩展，因此 Docker 出现并解决了这个问题，但它们不是通过虚拟机来做的，而是通过构建容器镜像来实现的。
- en: '**Viktor Farcic**: Does that mean that their potential use from this would
    be building these images?'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：这是否意味着它们的潜在用途就是构建这些镜像？'
- en: '**Ádám Sándor**: It could be. But then, when you are building an image, nobody
    needs to use Ansible in a Docker file, even though they could, but I think nobody
    feels a great need to do that. Actually, we go back to scripting, because it''s
    enough.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：可能是这样的。但当你在构建镜像时，其实没人需要在 Docker 文件中使用 Ansible，虽然他们可以这么做，但我认为没有人觉得非得这么做。实际上，我们又回到了脚本化，因为这样就足够了。'
- en: '**Viktor Farcic**: From my understanding, I like those tools because no matter
    the state of my server, it would converge the image into the desired state.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：根据我的理解，我喜欢这些工具，因为无论我的服务器处于什么状态，它都会将镜像收敛到预期的状态。'
- en: '**Ádám Sándor**: If I''m building images then I know the initial state, Vanilla
    Ubuntu...'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：如果我在构建镜像，那么我知道初始状态是 Vanilla Ubuntu……'
- en: '**Viktor Farcic**: Exactly. I''m not sure I see why I wouldn''t just run a
    shell script. I need apt-get to install this; I don''t need to check whether this
    is installed because I know it''s not.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：没错。我不太明白为什么我不直接运行一个 shell 脚本。我需要 apt-get 来安装这个；我不需要检查它是否已经安装，因为我知道它没有。'
- en: '**Ádám Sándor**: The funny thing is that, actually, these tools sort of work.
    Kubernetes does the same thing; it converges the state to where it should be.
    In that sense, it''s not doing anything different from Ansible. Kubernetes actually
    works so much better because it does it on a whole different level of abstraction.
    When you already have pre-built images and you just need to orchestrate instances
    of those images, then you can do the dynamic state management, and you''re okay.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：有趣的是，实际上这些工具确实有效。Kubernetes 做的事和它一样；它将状态收敛到应该存在的地方。从这个意义上来说，它做的事情和
    Ansible 没有区别。Kubernetes 实际上做得更好，因为它是在一个完全不同的抽象层次上执行的。当你已经有了预构建的镜像，只需要管理这些镜像的实例时，你就可以做动态状态管理，这样就可以了。'
- en: Nobody's crying for immutable Kubernetes clusters, but all the crap that you
    do inside the operating system, the low-level things like putting a file here,
    copying another there, and setting a flag here, that's the stuff that you do want
    to pre-bake and get done with and never touch again, unless you build another
    new image.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 没有人为不可变的 Kubernetes 集群而哭泣，但你在操作系统内部做的所有低级操作，比如在这里放置一个文件，在那里复制另一个文件，设置一个标志等，这些才是你希望提前处理并完成的事情，除非你要构建一个新的镜像，否则永远不再触碰。
- en: '**Viktor Farcic**: That means you follow that logic with immutability and pre-baking
    images. Does that then mean not always, but sometimes, actually using ConfigMaps
    in Kubernetes would be the wrong thing to do, if the idea is immutability?'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：这意味着你跟随不可变性和预构建镜像的逻辑。那么这是否意味着，并不是总是如此，但有时候，实际上在 Kubernetes 中使用
    ConfigMaps 做的事情是错误的，如果目标是不可变性的话？'
- en: '**Ádám Sándor**: Yes, immutability needs to stop somewhere. Kubernetes itself
    is a super-dynamic system so, yes, it''s absolutely contradicting immutability.
    But simply put, immutability makes sense up to a certain degree. I have seen super-configurable
    applications, and if you put those applications in a Docker container, you''ll
    have 150 environment variables to configure that image, and that''s not really
    where you want to be with your infrastructure.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：是的，不可变性需要在某个地方停止。Kubernetes 本身是一个超级动态的系统，所以，没错，它确实与不可变性相矛盾。但简单来说，不可变性在一定程度上是有意义的。我见过超级可配置的应用程序，如果你把这些应用程序放进
    Docker 容器，你需要配置 150 个环境变量来设置那个镜像，这显然不是你想要的基础设施方式。'
- en: '**Viktor Farcic**: Do we need those things?'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我们需要那些东西吗？'
- en: '**Ádám Sándor**: You really want just to have a few very specific things that
    are different between environments. Get them, configure them, and don''t touch
    the rest unless you are building something like a database image, which of course
    needs to be working in thousands of environments. But then, if that''s the case,
    you can again lock down some parameters and build your own image from it that
    only changes those parameters for each environment you actually require. Ideally,
    all your environments would be exactly the same, and you should look at that state
    and then just drift away a little bit from that, just as little as possible.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：你真正想要的只是确保在不同环境之间只有少数非常特定的差异。获取它们，配置它们，其他的就不要再动，除非你在构建像数据库镜像这样的东西，而这些东西当然需要在成千上万的环境中运行。但如果是这种情况，你可以再次锁定一些参数，从中构建自己的镜像，并且每个环境只更改那些你需要的参数。理想情况下，你的所有环境应该是完全一样的，你应该查看那个状态，然后尽可能少地偏离它。'
- en: '**Viktor Farcic**: What would be a little? A number of replicas?'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：什么会是“少”的意思？副本的数量？'
- en: '**Ádám Sándor**: Number of replicas, user passwords, whatever. Just these very
    basic things. Certificates, public hostnames, and so on.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：副本的数量，用户密码，等等。这些基本的东西。证书、公共主机名等等。'
- en: Ubuntu and Red Hat in this new world
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ubuntu 和 Red Hat 在这个新世界里
- en: '**Viktor Farcic**: I like discussing the question of what''s becoming obsolete.
    That brings me back to operating systems. Do we need Ubuntu or Red Hat in this
    new world?'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我喜欢讨论哪些东西正在变得过时。这让我回想到了操作系统。我们在这个新世界里还需要 Ubuntu 或 Red Hat
    吗？'
- en: '**Ádám Sándor**: Simply put, yes, we do. There are currently two places to
    use operating systems right now. One is on the server that is running the containers,
    and the other is inside a container. So, on the server that''s running the containers,
    we already see a shift towards very minimalistic operating systems where they
    just do the bare minimum.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：简单来说，是的，我们需要。目前，有两个地方需要使用操作系统。一个是在运行容器的服务器上，另一个是在容器内。所以，在运行容器的服务器上，我们已经看到转向非常简化的操作系统，这些操作系统只做最基本的事情。'
- en: '"[Do we need Ubuntu or Red Hat in this new world?] Simply put, yes, we do."'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '"[在这个新世界里，我们还需要 Ubuntu 或 Red Hat 吗？] 简单来说，是的，我们需要。"'
- en: —Ádám Sándor
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: —Ádám Sándor
- en: '**Viktor Farcic**: I''m thinking of platforms like Rancher and CoreOS.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我在想像 Rancher 和 CoreOS 这样的平台。'
- en: '**Ádám Sándor**: Exactly. Take CoreOS, for example. It''s very minimal and
    just launches containers, that''s all. It runs Docker, and that''s it, the OS
    inside the container.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：没错。以 CoreOS 为例，它非常简化，只启动容器，仅此而已。它运行 Docker，就这样，容器内的操作系统就是这样。'
- en: '**Viktor Farcic**: Is that even an OS?'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那算是操作系统吗？'
- en: '**Ádám Sándor**: Well, we can call it an OS because it acts like one. But of
    course, it steals the kernel from the actual machine it''s running on, while still
    pretending to be an OS. It''s really an OS in the sense that all the tools are
    installed, and all the programs are in the Linux distribution. Do we need all
    that stuff? Often, we don''t. Yes, they''re nice to have for debugging reasons,
    and they''re nice to have around for more legacy applications, but the legacy
    is in the very weakest sense because installing a JVM on a bare Linux where just
    the kernel lives is very difficult.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：嗯，我们可以称它为操作系统，因为它像操作系统一样工作。但当然，它是从实际运行它的机器上窃取了内核，同时依然假装自己是操作系统。从某种意义上讲，它确实是一个操作系统，因为所有工具都已安装，所有程序都在
    Linux 发行版里。我们需要这些东西吗？通常，我们不需要。是的，它们在调试时很有用，而且它们对更旧的应用程序也有帮助，但“遗产”在这里是一个非常宽泛的概念，因为在一个仅有内核的裸
    Linux 上安装 JVM 是非常困难的。'
- en: So, it's probably alright to have a bit of a Linux distribution around it. Maybe
    in the future somebody could produce a very minimal image that really only has
    what the JVM needs. That would be nice because it'd be more secure and smaller,
    but I really think that one of the main reasons why Docker has become so popular
    is that it's so backward-compatible in the sense that you are inside the image,
    you're just doing Linux stuff. It's very easy to get there, so it provides the
    good stuff without sacrificing much. The fact that there are some programs in
    there that aren't really used is not such a big issue.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，可能可以在其周围使用一些 Linux 发行版。也许将来有人可以制作一个非常精简的镜像，里面只有 JVM 需要的东西。如果能做到那样就好了，因为那样会更安全且更小巧，但我真的认为
    Docker 如此受欢迎的一个主要原因是它在向后兼容性上的表现——也就是说，在镜像里，你只是做 Linux 相关的操作。很容易就能进入这个环境，因此它提供了很多好东西，却几乎没有什么牺牲。镜像里有些程序实际上并不被使用，这并不是一个大问题。
- en: '**Viktor Farcic**: I presume then that, in a way, it will be a threat to companies
    like Red Hat, because you just named Ansible and Red Hat as being less relevant.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我推测，从某种意义上讲，这会对像 Red Hat 这样的公司构成威胁，因为你刚刚提到 Ansible 和 Red
    Hat 的相关性正在降低。'
- en: '**Ádám Sándor**: Red Hat knows that, and that''s why they''re building OpenShift,
    and then Red Hat Atomic Linux to run OpenShift.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：Red Hat 知道这一点，这也是他们构建 OpenShift 和 Red Hat Atomic Linux 以运行
    OpenShift 的原因。'
- en: '"Red Hat was the smart one who recognized Kubernetes early on and jumped on
    board. Now they''re at the point where they can practically get rid of their own
    Linux distribution because they have the new things on OpenShift."'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '"Red Hat 是那个早期识别 Kubernetes 并迅速加入的聪明公司。现在，他们已经达到了可以几乎放弃自家 Linux 发行版的地步，因为他们在
    OpenShift 上有了新技术。"'
- en: —Ádám Sándor
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: —Ádám Sándor
- en: Red Hat was the smart one who recognized Kubernetes early on and jumped on board.
    Now they're at the point where they can practically get rid of their own Linux
    distribution because they have the new things on OpenShift. Meanwhile, Ubuntu
    and Zeus are both trying to get on board, and the issue is that they are nowhere
    near the level where Red Hat is, and that's why Red Hat is already at the point
    where they can buy CoreOS, their biggest competition in this space.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 红帽公司是最聪明的那个，他们早早认识到 Kubernetes 的潜力并迅速加入。现在，他们几乎可以放弃自家的 Linux 发行版，因为他们在 OpenShift
    上拥有新的技术。而同时，Ubuntu 和 Zeus 都在努力跟上，但问题在于它们远未达到红帽的水平，这也是红帽已经能够收购 CoreOS——他们在这个领域最大的竞争对手——的原因。
- en: '**Viktor Farcic**: What do you prefer? Vanilla Kubernetes? Or do you prefer
    to layer on top of it?'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：你更喜欢哪一个？原生的 Kubernetes？还是更倾向于在其上进行二次开发？'
- en: '**Ádám Sándor**: I do like OpenShift. If somebody is willing to pay for it,
    then both the support and security it provides are worth it. Kubernetes is like
    Linux. There are countless people committing to it and a lot going on, so nobody
    adheres to strict governance, which is completely fine. But let''s say you want
    to build an internal cloud for your bank. You want to be sure of its security,
    though of course nobody can guarantee it absolutely. The features and security
    that Red Hat provides with OpenShift make sense.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：我确实喜欢 OpenShift。如果有人愿意为此付费，那么它所提供的支持和安全性是值得的。Kubernetes 就像 Linux，有无数人在为其贡献代码，发生了很多事情，所以没有人会严格遵循治理流程，这完全没问题。但假设你想为你的银行构建一个内部云平台，你肯定希望确保其安全，虽然当然没有人能绝对保证安全。红帽通过
    OpenShift 提供的功能和安全性是合乎逻辑的。'
- en: '**Viktor Farcic**: If I''m not willing to pay, should I go with OpenShift Origin
    or Kubernetes?'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：如果我不愿意付费，应该选择 OpenShift Origin 还是 Kubernetes？'
- en: '**Ádám Sándor**: I think you have to choose what you value more. If it''s a
    fast pace with new features and completely open source, then you are going to
    want to go with Kubernetes, versus the slower pace, greater stability, and lack
    of openness that you get with OpenShift. OpenShift does, however, feature extra
    features like CI/CD pipelines and a nice GUI, which some might value. But then
    again, some might not. So that''s your trade-off. OpenShift Origin is open source,
    of course, but you''re not going to be fixing bugs in it.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：我认为你必须选择你更看重的东西。如果你看重快速的更新、全开放源代码的特性，那你会倾向于选择 Kubernetes；而如果你看重较慢的更新、更高的稳定性以及不完全开放的特点，那么你可能会选择
    OpenShift。然而，OpenShift 也有一些额外的特性，比如 CI/CD 流水线和不错的图形界面，这些可能会受到一些人的青睐。但也有些人可能不喜欢。所以这是一个权衡。OpenShift
    Origin 当然是开源的，但你不会在其中修复 bug。'
- en: '**Viktor Farcic**: What comes to your mind?'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：你有什么想法？'
- en: '**Ádám Sándor**: Cloud provider comparison.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：云服务提供商比较。'
- en: '**Viktor Farcic**: What do you think about the rest, outside of the three big
    guys? Microsoft Azure, for example.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：你怎么看待其他云服务提供商，除了那三大巨头之外？比如 Microsoft Azure。'
- en: '**Ádám Sándor**: I don''t know the rest of the pack very well—but currently
    with any cloud provider I would look at the quality of their managed Kubernetes
    and serverless offerings, because you will need those to build modern software.
    But Google Cloud doesn''t seem to be able to capture a large market share even
    though their Kubernetes offering is the best out there.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**亚当·桑多尔**：我不太了解其他云服务提供商，但目前如果选择任何云服务提供商，我会关注他们的托管 Kubernetes 和无服务器服务质量，因为你需要这些来构建现代软件。但即使
    Google Cloud 的 Kubernetes 服务是目前最好的，它似乎也无法占领大部分市场份额。'
- en: '**Viktor Farcic**: I think a lot of readers will be shocked by the fact that
    there is an area in which Google is considered a small player.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我认为很多读者会对 Google 在某些领域被认为是小玩家这一事实感到震惊。'
- en: '**Ádám Sándor**: It''s weird, but true. Google really messed up in the public
    cloud space. A few years ago their strategy totally broke down. Funnily enough,
    Amazon''s new thing is how they also tried to skip containers and to define the
    future, which is the whole idea of lambdas. It''s a super-restricted programming
    model but has great scaling and is very cloud-native. Google actually kind of
    did the same with App Engine back in the day. They put all their bets on an attempt
    to go serverless, but it was simply too early. They were like, "we''re not doing
    this primitive stuff where you just spin up virtual machines because networking
    is just like VMware." They provide a proper programming model and a special database
    where you''ll be super-tied-into the cloud, but very cloud-native, very easy from
    the cloud providers'' perspective to run your application in a cheap way.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：这很奇怪，但是真的。Google在公共云领域确实犯了大错。几年前他们的战略完全崩溃了。有趣的是，亚马逊的新做法也是试图跳过容器，定义未来，这就是Lambda的整体概念。这是一种受限的编程模型，但具有出色的可扩展性，非常适合云原生。实际上，Google曾经也做过类似的事情，在早期推出了App
    Engine。他们将所有的赌注押在了无服务器的尝试上，但那时实在太早了。他们当时的想法是，“我们不做这种原始的虚拟机启动方式，因为网络就像VMware一样。”
    他们提供了一个合适的编程模型和一个特殊的数据库，这样你就会深深绑定在云中，但它非常适应云原生，且从云提供商的角度来看，运行应用程序也很便宜。'
- en: It was a great idea, except people said, "I just want to go to a GUI, click
    and spin up a VM, and then do the exact same stuff I've been doing for 20-plus
    years." It's slowly changing now Docker containers are popular, because you can
    still do the same stuff you were doing before but in an ever-so-slightly different
    way.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法很棒，除非人们说，“我只想进入一个图形界面，点击然后启动一个虚拟机，然后做我过去20多年一直在做的事情。” 现在这种情况正在慢慢变化，因为Docker容器变得流行，因为你仍然可以做以前做的事情，只不过方式略有不同。
- en: '"Docker containers are popular because you can still do the same stuff you
    were doing before but in an ever-so-slightly different way."'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: “Docker容器变得流行，是因为你仍然可以做以前做的事情，只不过方式略有不同。”
- en: —Ádám Sándor
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: —Ádám Sándor
- en: '**Viktor Farcic**: Correct me if I''m wrong, but doesn''t Kubernetes sit on
    top of a provider and abstract whatever the provider is doing? Theoretically,
    if it''s stable, my Kubernetes is going to do the same things no matter if I''m
    running on Azure, AWS, or Google. But isn''t that a threat to the business? What
    will be a differentiator? What prevents me as a user from going from one to another?'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：如果我没理解错的话，Kubernetes不就是在一个供应商之上，抽象出该供应商正在做的事情吗？理论上，如果Kubernetes是稳定的，无论我是在Azure、AWS还是Google上运行，它应该做的事情是一样的。但是这对业务而言不是威胁吗？那么，什么会成为区分的标准？作为用户，什么会阻止我从一个供应商切换到另一个供应商呢？'
- en: '**Ádám Sándor**: Price. If Kubernetes becomes that much of a commodity, then
    it''s just going to be the price. But there''s more to it than that. It''s also
    the services around it. How is the machine learning stuff? That''s where they
    are really going to differentiate and try to hook you with things like lambda,
    where they can also lock you into their code execution.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：价格。如果Kubernetes真的成为了一种商品，那它的核心竞争力就会变成价格。但事情不止如此，围绕它的服务也很重要。机器学习做得怎么样？这是他们真正区分开来的地方，并试图通过像lambda这样的方式来吸引你，在那里他们也可以将你绑定到他们的代码执行环境中。'
- en: '**Viktor Farcic**: But would they really care about additional services outside
    Kubernetes?'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但他们真的会关心Kubernetes之外的附加服务吗？'
- en: '**Ádám Sándor**: Of course—there is a lot of stuff Kubernetes just doesn''t
    do. Databases, machine learning, DNS, and others. The ecosystem of the cloud provider
    absolutely matters. So does the depth of integration of that ecosystem with Kubernetes
    and the quality of the Kubernetes offering itself.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：当然，Kubernetes做不到的东西还有很多。数据库、机器学习、DNS等。云提供商的生态系统确实非常重要，生态系统与Kubernetes的整合深度以及Kubernetes本身的质量也同样重要。'
- en: '**Viktor Farcic**: The services offered are what differentiates or will differentiate
    one provider from another. I assume there will be no provider that''s better at
    all the services than any other. One will be better at machine learning, another
    will be better at big data, and stuff like that. But does this mean that the future
    consists of us running our cluster or clusters spread across multiple platforms?'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：所提供的服务是区分不同供应商的关键。我认为不会有任何供应商能在所有服务上都比其他供应商更好。一个在机器学习方面更强，另一个则在大数据等领域更有优势。那么，这是否意味着未来我们会在多个平台上运行自己的集群或多个集群？'
- en: Does the future revolve around clusters?
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未来会围绕集群展开吗？
- en: '**Ádám Sándor**: For a larger company that might make sense, but there is a pretty
    big cost involved because the whole management of the cloud itself varies. For
    example, there might be differences in the API or the UI.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：对于大公司来说，这可能是有意义的，但涉及的成本相当大，因为云本身的管理各有不同。例如，API 或者 UI 可能会有所差异。'
- en: If you're on Google Cloud and you're running your applications on Google Kubernetes
    Engine, just managing the stuff that is not inside Kubernetes is not rocket science
    because the APIs and everything are pretty nice, but you will have plenty of code,
    terraform, or whatever was written that is dealing with that part. It's not that
    easy to just import part of your application over to Azure or AWS and write some
    CloudFormation and deal with the pricing and the whatnot. You have to be sufficiently
    big to be able to utilize these kinds of synergies, as long as you understand
    that it's not going to be easy to just use multiple providers.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Google Cloud，并且在 Google Kubernetes Engine 上运行应用程序，那么管理 Kubernetes 之外的部分其实并不复杂，因为
    API 和其他一切都非常好用，但你会有很多代码、Terraform 或者其他编写的内容来处理这部分。将你的应用程序的一部分迁移到 Azure 或 AWS 并编写一些
    CloudFormation 来处理定价和其他问题并不那么简单。你必须足够大，才能利用这些协同效应，前提是你明白，使用多个服务提供商并不会很容易。
- en: '**Viktor Farcic**: That''s a great point. I know that other contributors in
    this book have also raised the issue of vendor lock-in. But sadly, I know we''re
    out of time now. I just wanted to thank you for taking the time to talk to me
    today.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这是一个很好的观点。我知道本书的其他贡献者也提出了供应商锁定的问题。但可惜的是，我们现在时间不多了。我只是想感谢你今天抽出时间与我交流。'
- en: '**Ádám Sándor**: No problem at all, I''ve really enjoyed it. Thank you.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**Ádám Sándor**：完全没有问题，我真的很享受这次交流。谢谢你。'
