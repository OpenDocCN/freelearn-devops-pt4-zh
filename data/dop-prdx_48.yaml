- en: Introducing Nirmal Mehta
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍Nirmal Mehta
- en: Nirmal Mehta is Chief Technologist in the Strategic Innovations Group at Booz
    Allen Hamilton specializing in research, implementation, and integration of emerging
    technologies to Booz Allen's federal government client base. He leads the firm's
    efforts in digital research and development, immersive machine intelligence, and
    emerging technology strategy. In addition, he is a containerization subject matter
    expert and thought leader for DevOps practices. He was the lead architect on the
    high-profile GSA Integrated Award Environment AWS cloud platform, implementing
    a first-of-its-kind production open source, data-centric, microservices-based
    distributed application in the public sector. He is passionate about machine learning,
    immersive tech, open source, DevOps, and integrating emerging technologies to
    answer client needs. He focuses on bringing leading edge technologies to enterprise
    systems for commercial and public sector clients. He is a member of Docker Captains
    group. You can follow him on Twitter at `@normalfaults`, on LinkedIn at https://www.linkedin.com/in/nirmalkmehta/,
    and on the web: https://nirmal.io.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Nirmal Mehta是Booz Allen Hamilton战略创新小组的首席技术专家，专门从事新兴技术的研究、实施和集成，以服务Booz Allen的联邦政府客户。他领导公司的数字研究与开发、沉浸式机器智能和新兴技术战略方面的工作。此外，他是容器化领域的主题专家和DevOps实践的思想领袖。他曾是备受关注的GSA集成奖环境AWS云平台的首席架构师，负责实施首个以开放源代码、数据为中心、基于微服务的分布式应用程序，该项目在公共部门具有开创性意义。他对机器学习、沉浸式技术、开源、DevOps以及将新兴技术与客户需求结合充满热情。他致力于将前沿技术引入企业系统，为商业和公共部门客户提供服务。他是Docker
    Captains小组成员。你可以在Twitter上关注他，账号是`@normalfaults`，在LinkedIn上访问他： [https://www.linkedin.com/in/nirmalkmehta/](https://www.linkedin.com/in/nirmalkmehta/)，以及在网上访问：[https://nirmal.io](https://nirmal.io)。
- en: '**Viktor Farcic**: I want to start by simply asking you to say a little bit
    about yourself, Nirmal, and your relationship with DevOps.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我想从简单地请你介绍一下自己，Nirmal，以及你与DevOps的关系开始。'
- en: '**Nirmal Mehta**: Throughout my career I''ve had the opportunity to see many
    organizations follow IT transformation paths, and through those experiences, I''ve
    seen what works and what doesn''t in our industry. I strive to distribute knowledge
    around emerging technologies, methodologies, and solutions—especially through
    DevOps!'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：在我的职业生涯中，我有机会看到许多组织走上IT转型之路，通过这些经历，我见证了在我们行业中什么有效，什么无效。我努力在新兴技术、方法论和解决方案方面传播知识——尤其是通过DevOps！'
- en: '**Viktor Farcic**: So Nirmal, what does "DevOps" mean to you?'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么Nirmal，"DevOps"对你来说意味着什么？'
- en: The meaning of DevOps
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps的含义
- en: '**Nirmal Mehta**: DevOps is the application of process improvement techniques
    from the last century to our modern IT culture. If I had to offer a fuller definition,
    I''d say that DevOps is an IT operating model that focuses on using tools and
    cultural change to streamline and automate the delivery of IT services. It''s
    modeled after optimized manufacturing models from the last century by the likes
    of W. Edwards Deming.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：DevOps是将上世纪的过程改进技术应用到我们现代IT文化中的一种方式。如果我需要提供一个更全面的定义，我会说，DevOps是一种IT运营模式，专注于利用工具和文化变革来简化和自动化IT服务的交付。它借鉴了上世纪W·爱德华兹·戴明等人优化的制造模型。'
- en: More simply, DevOps is transforming the culture of an organization into a mindset
    of achieving a shared goal, versus the tribes that are traditionally set up in
    an organization.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 更简单地说，DevOps正在将组织的文化转变为一种实现共同目标的思维方式，而不是传统上在组织内设立的各个部落。
- en: '"DevOps is transforming the culture of an organization into a mindset of achieving
    a shared goal, versus the tribes that are traditionally set up."'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps正在将组织的文化转变为一种实现共同目标的思维方式，而不是传统上设立的各个部落。”
- en: —Nirmal Mehta
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: —Nirmal Mehta
- en: '**Viktor Farcic**: Thanks, Nirmal, it''s interesting to see how everyone has
    such different ways to define DevOps. So, what do you think is the difference
    between DevOps and Agile?'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：谢谢你，Nirmal，看到每个人都有如此不同的方式来定义DevOps，真是很有意思。那么，你认为DevOps和敏捷有什么区别？'
- en: '**Nirmal Mehta**: I think the twelve principles of Agile are guidelines. More
    importantly, I don''t think Agile was meant to be commercialized and taken over
    as it has been to the extent we see today. I think the organizations that are
    adopting Agile have been overthinking it a little.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：我认为敏捷的十二个原则是指导方针。更重要的是，我认为敏捷本不该像今天这样被商业化并完全占据主导地位。我认为那些采纳敏捷的组织有些过度思考了这一点。'
- en: DevOps, on the other hand, is Agile applied across the whole organization, rather
    than just its developer process. Perhaps my distinction is merely semantic, but
    broadly speaking you could say that DevOps encompasses Agile methodologies. DevOps
    is like a superset.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，DevOps是将敏捷方法应用于整个组织，而不仅仅是它的开发流程。也许我的区分只是语义上的，但广义来说，你可以说DevOps包括了敏捷方法论。DevOps就像是一个超集。
- en: '**Viktor Farcic**: Yes, I think DevOps is like inviting more expertise to an
    organization, or even more automation. This can open new positions in an organization,
    of course—and sometimes I see an absurd number of DevOps engineers in an organization.
    I honestly don''t even know what one of these is—how would you define a DevOps
    engineer?'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：是的，我认为DevOps就像是向组织引入更多的专业知识，甚至是更多的自动化。当然，这可以在组织中开辟新的职位——有时我甚至看到一个组织里DevOps工程师的数量极为庞大。老实说，我甚至不知道其中某些职位到底是什么——你会如何定义DevOps工程师？'
- en: What is a DevOps engineer?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是DevOps工程师？
- en: '**Nirmal Mehta**: This is where it gets controversial because there''s no such
    thing as a DevOps engineer. There shouldn''t even be a DevOps team because to
    me, it''s more of a cultural and philosophical methodology. It''s a process and
    a way of thinking about things and communicating within an IT organization.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：这就是争议所在，因为根本没有DevOps工程师这样的职位。甚至不应该有DevOps团队，因为对我来说，它更像是一种文化和哲学方法论。这是一种过程，一种关于事物的思考方式，以及在IT组织内部的沟通方式。'
- en: '"There''s no such thing as a DevOps engineer. There shouldn''t even be a DevOps
    team because to me, it''s more of a cultural and philosophical methodology."'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: “根本没有DevOps工程师这样的职位。甚至不应该有DevOps团队，因为对我来说，它更像是一种文化和哲学方法论。”
- en: — Nirmal Mehta
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: — Nirmal Mehta
- en: But going back to a definition, I think that a DevOps engineer is a job that
    signals that an organization, instead of hiring both a developer and an operator,
    just wants one less person to do twice as much work.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但回到定义上，我认为DevOps工程师这个职位意味着，组织不再雇佣开发者和运维人员，而是想要少一个人，却做双倍的工作。
- en: '**Viktor Farcic**: I love that description. Even though no one but you will
    admit it, that''s often how it is in reality. You can tell just by looking at
    advertised job descriptions for DevOps engineer roles.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我喜欢这个描述。尽管除了你，没人会承认，但现实中确实经常如此。你可以从DevOps工程师职位的招聘广告中看出来。'
- en: '**Nirmal Mehta**: I think organizations just want somebody who is willing to
    both build and operate the software. These DevOps engineer roles are all over
    the place, but there just isn''t a single accepted definition for what a DevOps
    engineer is.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：我认为组织只是想要一个既愿意构建又愿意操作软件的人。这些DevOps工程师的职位随处可见，但对于DevOps工程师到底是什么，至今没有一个统一的定义。'
- en: 'The reason is that DevOps engineers are really engaged in two distinct things:
    tools and culture. I believe that DevOps is mostly about culture, but there are
    also some tools involved in the DevOps process that will naturally tilt your organization
    toward more DevOps practices. A DevOps engineer could then be defined as a person
    who is implementing those tools and some of those philosophies.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 其原因在于，DevOps工程师实际上涉及两件截然不同的事情：工具和文化。我认为DevOps更多的是关于文化，但DevOps过程中也有一些工具，这些工具会自然地引导组织向更多的DevOps实践倾斜。那么，DevOps工程师可以被定义为实施这些工具和一些哲学思想的人。
- en: Of course, simply installing some tools won't mean that an organization is automatically
    DevOps—you can misuse a tool regardless of how much magic is in it. So, it's important
    to also say that a DevOps engineer is more like a consulting role than someone
    who simply operates those toolsets and keeps those tools running.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，单单安装一些工具并不能意味着一个组织自动成为DevOps组织——你可以滥用任何工具，不管它有多神奇。因此，重要的是还要指出，DevOps工程师更像是一个咨询角色，而不是仅仅操作这些工具并保持它们运行的人。
- en: Usually, organizations just want someone to come in and implement those tools.
    And then eventually they're asked to just be a developer who also operates stuff.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，组织只希望有人进来实施这些工具。然后，最终他们被要求只是一个也要操作东西的开发者。
- en: '**Viktor Farcic**: Yes, I often see cases when existing teams simply get renamed.
    They continue performing the same set of tasks using the same processes and tools
    but under a more popular name.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：是的，我常常看到现有团队只是被重命名了。他们继续使用相同的流程和工具执行相同的任务，只不过换了一个更流行的名字。'
- en: '**Nirmal Mehta**: I was once on a project where they required a separate DevOps
    team, which to me didn''t make any sense at all. The DevOps team was on a separate
    contract, so they didn''t even work for the organization. So, this project had
    developers, a security team, operators, and a DevOps team.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：我曾经参与过一个项目，他们要求有一个单独的DevOps团队，这对我来说根本没有任何意义。DevOps团队是另签合同的，因此他们甚至不是为组织工作。所以，这个项目有开发人员、安全团队、运营人员和一个DevOps团队。'
- en: Now, you tell me, what was that DevOps team supposed to do? Their only job was
    on the last step before deployment to production. That DevOps team didn't do anything
    except handle the sign off before the code went into production. That was not
    a DevOps team. They were just a random team, a random authority, that didn't have
    a purpose.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你告诉我，那个DevOps团队应该做什么？他们唯一的工作是在部署到生产环境之前的最后一步。那个DevOps团队什么都没做，除了在代码进入生产环境之前进行签字确认。那根本不是DevOps团队，他们只是一个没有目的的随机团队，随便一个权威。
- en: '**Viktor Farcic**: That makes me think about sysadmins being renamed DevOps.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这让我想起了系统管理员被改名为DevOps的情况。'
- en: '**Nirmal Mehta**: Yes, that DevOps team was essentially a neutered quality
    assurance team that was renamed DevOps because it sounded sexy.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：是的，那个DevOps团队本质上是一个被削弱的质量保障团队，改名为DevOps只是因为这个名字听起来很吸引人。'
- en: There is still a lot of whitewashing in terms of DevOps today. As I've said
    in one of my talks, if you've spent more than a month trying to figure out your
    organization's DevOps, or you've already spent 15 meetings trying to figure out
    what your DevOps is, then you're overthinking it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，DevOps仍然有很多“粉饰”。正如我在一次演讲中所说的，如果你花了超过一个月的时间试图搞清楚你们组织的DevOps，或者已经花了15次会议来讨论DevOps是什么，那么你就是在过度思考它。
- en: '"If you''ve spent more than a month trying to figure out your organization''s
    DevOps…then you''re overthinking it."'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '"如果你花了超过一个月的时间试图搞清楚你们组织的DevOps…那么你就是在过度思考它。"'
- en: —Nirmal Mehta
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: —Nirmal Mehta
- en: Not everything has to be complex! It's up to you how much complexity you want
    to put into the mix at any given time. Take a good look at your organization,
    pick some pain points, and just go from there. Reading some books and implementing
    one or two parts of those processes is probably a better start than debating what
    DevOps is for a month, which is something we love to do in IT. We love to just
    argue about stuff but get nothing done.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 不是一切都必须复杂！你可以决定在任何时刻，想要在工作中加入多少复杂性。仔细看看你们的组织，挑选一些痛点，然后从那里开始。阅读一些书籍并实施其中一两部分流程，可能比花一个月时间争论DevOps是什么要好，这也是我们在IT中喜欢做的事。我们喜欢争论一些事情，却什么也没做成。
- en: We like to be in our tribes, we like to shed responsibility, and we have this
    need for argument and for some oppositional force, and I think DevOps and Agile
    help to redefine who that opponent is. Instead of friction between internal groups,
    DevOps directs our confrontational energy toward the problem that we're trying
    to solve for our customer. DevOps brings us into conflict with the actual problem,
    rather than with each other.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们喜欢待在自己的小圈子里，我们喜欢推卸责任，我们有争论和对立的需求，我认为DevOps和敏捷有助于重新定义这个对立面是谁。DevOps不是让我们在内部小组之间产生摩擦，而是将我们的对抗性精力集中在我们为客户解决的问题上。DevOps让我们与实际问题发生冲突，而不是彼此之间。
- en: '**Viktor Farcic**: But then we end up with consultants selling us month-long
    training that is supposed to convert us into Agile experts?'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但最终我们会遇到那些顾问，他们卖给我们为期一个月的培训，号称能把我们转变成敏捷专家？'
- en: '**Nirmal Mehta**: True, and that''s something I can get very philosophical
    about: why do we have to have so much training for Agile? I think all that training
    is contrary to the goal of Agile in the first place! We find ourselves enveloped
    in the minutiae of all that complexity and we forget the core principles of Agile.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：没错，这也是我可以深刻探讨的一个话题：为什么我们必须为敏捷进行这么多培训？我认为所有这些培训本质上是与敏捷的目标背道而驰！我们发现自己被复杂的细节包围，忘记了敏捷的核心原则。'
- en: I think that's why the Agile people came up with the manifesto, to force us
    to print it out and put it on a wall. They knew that if we weren't reminded about
    the whole point of Agile, then we'd forget what we're really trying to achieve.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我想这也是为什么敏捷的创始人们提出了敏捷宣言，他们想迫使我们把它打印出来并贴在墙上。他们知道，如果我们不时提醒自己敏捷的核心理念，我们就会忘记我们真正想要实现的目标。
- en: '**Viktor Farcic**: That sounds like a misunderstanding and over-complication
    of Agile, which is in its essence, very simple.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这听起来像是对敏捷的误解和过度复杂化，敏捷的本质其实非常简单。'
- en: Overthinking DevOps
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过度思考DevOps
- en: '**Nirmal Mehta**: As an industry we love to overthink everything, and I think
    that DevOps has the same kind of issues.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：作为一个行业，我们喜欢把所有事情想得过于复杂，我认为DevOps也有类似的问题。'
- en: DevOps is very simple. DevOps is the application of techniques for process improvements
    that some start-ups, well-functioning organizations, and smart people implemented.
    These were shown to other people who said, "Yes, that sounds great; that's helping
    us be more efficient, reduce cost, or make better quality and, you know what,
    we might as well adopt it!"
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps非常简单。DevOps是应用一些用于流程改进的技术，这些技术是一些初创公司、运作良好的组织和聪明的人所实施的。它们被展示给了其他人，其他人说：“是的，听起来不错；这帮助我们提高了效率，降低了成本，或提升了质量，你知道吗，我们也许应该采纳它！”
- en: '"As an industry we love to overthink everything, and I think that DevOps has
    the same kind of issues."'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: “作为一个行业，我们喜欢把所有事情想得过于复杂，我认为DevOps也有类似的问题。”
- en: —Nirmal Mehta
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: —尼尔马尔·梅塔
- en: 'Let''s not overcomplicate DevOps. When it''s time to lose weight, simply put
    more calories out than you put in. That is the simple fact. Don''t be distracted
    by complex diets because you want an easy way out. It''s the same with DevOps,
    the philosophy is simple: get out of your own way.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们不要把DevOps复杂化。当需要减肥时，简单来说，就是摄入的卡路里少于消耗的卡路里。这是简单的事实。不要被复杂的饮食方法分散注意力，因为你想找到捷径。DevOps也是一样，理念很简单：走出自己的路。
- en: The DevOps philosophy – get out of your own way
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps理念——走出自己的路
- en: The DevOps philosophy is to get out of your own way. But this is too hard, of
    course, so we try to find a shortcut. This shortcut might be a tool, a consultant,
    some YouTube videos, or a book. At the end of the day though, we cannot get away
    from having to follow the philosophy. We can implement Jenkins all day, but we
    won't achieve anything unless we also follow the philosophy.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps的理念是走出自己的路。但这当然太难了，所以我们试图找到捷径。这个捷径可能是一个工具，一个顾问，一些YouTube视频，或者一本书。但最终，我们无法避免必须遵循这个理念。我们可以整天使用Jenkins，但如果不遵循理念，我们什么也达不到。
- en: '"The DevOps philosophy is to get out of your own way. But this is too hard,
    of course, so we try to find a shortcut."'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps的理念是走出自己的路。但这当然太难了，所以我们试图找到一个捷径。”
- en: —Nirmal Mehta
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: —尼尔马尔·梅塔
- en: This is the fundamental shift that's taking place today in organizations—it's
    a realization that actual, productive change must be a little bit more painful.
    This is a deep cultural shift, and we must deal with people, their attitudes,
    and all that—including people who just don't want to change.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是今天组织中正在发生的根本性转变——一个认识到，实际的、有效的变化必须稍微有些痛苦。这是一次深刻的文化转变，我们必须处理人们、他们的态度，以及所有相关的事情——包括那些根本不想改变的人。
- en: There's a lot of misinformation about what DevOps is in our industry today,
    and that is because no one wants to hear that it's all about simple but important
    truths like "more calories out," and a lot of people don't want to face change.
    Do you think organizations such as Facebook and Google are having those kinds
    of debates?
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 今天我们行业中关于DevOps有很多误解，这主要是因为没有人愿意听到一些简单但重要的真理，比如“更多的卡路里消耗”，而且很多人不愿面对变化。你认为像Facebook和谷歌这样的组织，是否也在进行这些辩论？
- en: '**Viktor Farcic**: I expect that Google and Facebook are having some important
    debates, right now, that the rest of us will have in fifteen years, about machine
    learning and neural networks. But Google has also been discussing SRE, for example?'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：我预计谷歌和Facebook现在一定在进行一些重要的辩论，其他人会在十五年后才参与，关于机器学习和神经网络的讨论。但谷歌也一直在讨论SRE，例如？'
- en: '**Nirmal Mehta**: Yes, organizations such as Google have been taking some of
    the most recent debates and codifying them into service level agreements and Site
    Reliability Engineering (SRE) philosophies. There''s no escaping the pain.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：是的，像谷歌这样的组织，已经将一些最新的辩论转化为服务级别协议和站点可靠性工程（SRE）理念。这些痛苦是无法逃避的。'
- en: DevOps and SRE
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps与SRE
- en: '**Viktor Farcic**: Let''s explore how the Google SRE thing relates to DevOps
    then. How do you define an SRE?'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：那我们来探讨一下谷歌的SRE与DevOps之间的关系吧。你如何定义SRE呢？'
- en: '**Nirmal Mehta**: A site reliability engineer is an IT operations engineer
    who supports development teams and production systems based on Google DevOps methodologies.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：站点可靠性工程师是基于谷歌DevOps方法论，支持开发团队和生产系统的IT运维工程师。'
- en: One of the big things to come out of the SRE philosophies is that there's a
    risk associated with the budget of how many hours the SRE team gives their project
    team for fixing whatever happens.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: SRE（站点可靠性工程）哲学中的一个重要观点是，预算中与项目团队修复问题所需的小时数相关的风险。
- en: You can deploy as risky a piece of software as you want, but if you burn through
    that budget, that's on you. If you're providing a service that isn't as critical,
    you have a higher budget, and so you can take more risk. Or you could say, "You
    know what, I need to save that up for certain times of the year, or certain events,
    and balance that out."
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以部署任何你想要的高风险软件，但如果你耗尽了那个预算，那就是你的责任。如果你提供的服务不那么关键，那么你就有更高的预算，可以承担更多的风险。或者你可以说，“你知道吗，我需要将这些预算储备到某些年份的特定时段，或某些事件中，这样可以平衡一下。”
- en: This approach in Google's DevOps methodology removes the ability to skirt around
    the pain because it puts the pain at the front and center.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌的DevOps方法论中的这种方式去除了规避痛苦的能力，因为它把痛苦放到了最前面和最中心。
- en: Resolving key pain points is something that a lot of organizations have difficulty
    with, and it's a very common problem with Agile. For example, if you're transitioning
    from Waterfall to Agile, then the project managers, leaders, and owners will all
    want Agile—but Agile with deadlines!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 解决关键痛点是许多组织面临的困难问题，这也是敏捷中一个非常常见的问题。例如，如果你正在从瀑布式开发转向敏捷，那么项目经理、领导和所有者都会希望采用敏捷——但还是带有截止日期的敏捷！
- en: '**Viktor Farcic**: You''re saying that managers want others to adopt Agile,
    but they don''t always want to adapt their own way of working?'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你是说经理们希望别人采用敏捷方法，但他们自己却不愿意调整自己的工作方式吗？'
- en: '**Nirmal Mehta**: Yes, exactly, those people want Agile with deadlines because
    deadlines allow someone to put the blame somewhere else.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：是的，正是这样，那些人希望有带有截止日期的敏捷方法，因为截止日期让他们可以把责任推到别人身上。'
- en: Deadlines are an escape route, whereas Agile just forces you to think about
    implementing at a more regular pace, or with prioritization, and to make decisions
    more frequently.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 截止日期是逃避的捷径，而敏捷则迫使你以更规律的节奏、或通过优先级来思考实施，并且更频繁地做出决策。
- en: Not one person in leadership likes to make decisions at the frequency that Agile
    requires because decisions mean responsibility. And a lot of organizations and
    the folks working within them are masters at the craft of dodging responsibility.
    Agile forces that discussion at the beginning instead of having discussions about
    priority after the deadline or closer to the deadline.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 没有一个领导者喜欢像敏捷要求的那样频繁做决策，因为决策意味着责任。许多组织及其成员都是规避责任的高手。敏捷方法强迫在一开始就进行这种讨论，而不是等到截止日期后或临近截止日期时才讨论优先级。
- en: '"Not one person in leadership likes to make decisions at the frequency that
    Agile requires because decisions mean responsibility."'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: “没有一个领导者喜欢像敏捷要求的那样频繁做决策，因为决策意味着责任。”
- en: —Nirmal Mehta
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: ——Nirmal Mehta
- en: DevOps is the same because it forces you to understand how to put your projects
    into production and to pay for it at the beginning of the cycle. In DevOps, you're
    trying to catch things at the beginning of the cycle, not the end.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps也是一样，因为它强迫你理解如何将项目投入生产，并且在周期的开始就为此支付费用。在DevOps中，你要在周期开始时就捕捉问题，而不是等到最后。
- en: A lot of problems we face today are because somebody was able to avoid making
    a decision until the very last minute—that is, when they were forced to make a
    decision. They probably knew what their decision was going to be, they just didn't
    have the confidence in that decision until they were forced into an answer.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们今天面临的许多问题，都是因为有人能够在最后一刻才做出决策——也就是说，直到被迫做出决策时，他们才会行动。他们可能已经知道自己的决策是什么，只是直到被迫做出决定时，才对这个决策有信心。
- en: Agile and DevOps force you to make decisions more frequently, and from the beginning.
    I think people have a hard time with the confidence that is required or the *okayness*
    with failure that one needs to feel, in order to be able to do that. Ironically,
    DevOps and Agile will tolerate you making bad decisions more frequently than the
    older methodologies!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷和DevOps强迫你更频繁地做决策，而且是从一开始就要做。我认为人们很难具备做出决策所需要的信心，或者对失败的*接受*，这使得他们能够做到这一点。具有讽刺意味的是，DevOps和敏捷比传统方法更容忍你频繁做出错误决策！
- en: Make [bad] decisions more often
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更频繁地做出[错误]决策
- en: '**Viktor Farcic**: Are you saying that organizations and people in IT departments
    should make bad decisions more often?'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你是说，IT部门中的组织和人员应该更频繁地做出错误决策吗？'
- en: '**Nirmal Mehta**: If you''re deploying four times a year, then you only have
    four opportunities to make a decision, and therefore each of those decisions has
    a big impact. If you are in Agile, you''re making a lot of smaller decisions.
    If you make a bad decision, you can just correct it at the next deadline, and
    you''ve lost very little. That''s the irony.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：如果你每年部署四次，那你只有四次机会做出决定，因此每个决定都具有巨大的影响。如果你处于敏捷环境中，你会做出很多小的决策。如果你做了一个错误的决定，你可以在下一个截止日期修正它，而且你损失的很少。这就是讽刺所在。'
- en: '"If you are in Agile, you''re making a lot of smaller decisions. If you make
    a bad decision, you can just correct it at the next deadline, and you''ve lost
    very little."'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: “如果你处于敏捷环境中，你会做出很多小的决策。如果你做了一个错误的决定，你可以在下一个截止日期修正它，而且你损失的很少。”
- en: —Nirmal Mehta
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: —尼尔马尔·梅塔
- en: Of course, it's still painful if you've made a bad decision, but for some reason
    we humans find it more painful to have to make a decision every two weeks.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果你做了一个错误的决定，仍然会感到痛苦，但不知为何，我们人类觉得每两周就必须做一次决定更让人痛苦。
- en: I think these kinds of things happen in other industries as well, sometimes
    when there's even more on the line. In the aeronautics, manufacturing, or construction
    industries, for example, where when you make a big decision that goes wrong, there's
    a multi-million dollar consequence. Those kinds of organizations have evolved
    their own techniques to force incremental decisions to be made.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这类情况在其他行业也会发生，有时甚至在风险更大的情况下。例如，在航空、制造或建筑行业，当你做出一个重大的错误决策时，会有几百万美元的后果。这些行业的组织已经发展出了自己的技术来迫使做出增量决策。
- en: '**Viktor Farcic**: Over the last couple of years I''ve seen a huge growth of
    interest in DevOps at conferences. This interest is often centered around a particular
    set of themes—immutable infrastructure, containers, and schedulers. Is there a
    relationship between them that explains so much interest?'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：在过去的几年里，我在各种会议中看到DevOps的兴趣大幅增长。这种兴趣通常集中在一些特定主题上——不可变基础设施、容器和调度程序。它们之间是否存在某种关系，能够解释这么多的兴趣呢？'
- en: DevOps patterns
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps模式
- en: '**Nirmal Mehta**: Yes, there is a relation between them. And there''s a lot
    of interest around them because they reflect some important patterns that people
    are starting to adopt right now.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：是的，它们之间确实存在关系。而且它们之所以引起如此大的兴趣，是因为它们反映了一些人们目前开始采纳的重要模式。'
- en: Maybe only ten percent of people out there really know what they're doing in
    IT today, and they can't be in every organization at once. It's debatable whether
    anyone *really* knows what they're doing, of course, because I bet if you asked
    those ten percent, they would say, "I don't know what I'm doing!"
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 也许只有十%的人真正知道今天在IT行业中自己在做什么，而且他们不可能同时在每个组织里工作。当然，是否有人*真*知道自己在做什么，这也是一个值得讨论的问题，因为我敢打赌，如果你问这十%的人，他们会说：“我不知道我在做什么！”
- en: 'What the ten percent *do* know is that when they do *this*, they''re less stressed
    out. When they do *this*, their website is more reliable. When they do *that*,
    they get one more extra customer every time. So that''s how they see it: "If I
    do this, I get an extra million dollars of investment funding; if I do this, my
    evaluation goes up; and if I do this, I have not closed the door because I''m
    still competitive." Those are the only heuristics that we have as an industry.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 那些十%的*人*知道的是，当他们*这样做*时，他们的压力会减少。当他们*这样做*时，他们的网站更可靠。当他们*那样做*时，他们每次都会多一个客户。所以他们是这样看的：“如果我这样做，我可以获得额外的一百万美元投资；如果我这样做，我的评价会上升；如果我这样做，我没有关上门，因为我仍然具备竞争力。”这些就是我们行业里唯一的启发式方法。
- en: Now, let's take a person in their IT career, maybe they work on average at between
    three to six different places, across their peak career time.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们以一位IT职业人士为例，也许在他们的职业巅峰期，他们平均在三到六个不同的地方工作过。
- en: '**Viktor Farcic**: Yes, it''s difficult to strike a balance between being locked
    in a single company all your life and never experiencing what''s happening outside
    or just switching companies every few months.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：是的，找到在一家公司工作一辈子与每几个月就换工作之间的平衡确实很难。'
- en: '**Nirmal Mehta**: Yes, so what do we do across our career? Every year we''re
    like, "Hey, that kind of worked, I spent six months doing it, and it worked."
    What we''re trying to do, in DevOps, is gather as many heuristics from each person
    and somehow distill them down so that one day we say: this is *the* winning heuristic.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：是的，那么我们在职业生涯中做了什么？每年我们都会想，“嘿，那样好像有效，我花了六个月的时间做了这个，结果它有效。”我们在DevOps中尝试做的，就是从每个人那里收集尽可能多的经验法则，然后以某种方式将其提炼，直到有一天我们能说：这就是*最优的*经验法则。'
- en: For example, Aaron Huslage, who was formerly at Docker and is now at Red Hat
    Ansible, comes over to me and he says, "Why are you guys patching? Just destroy
    the server and move the containers to a new patched server. Don't patch retroactively;
    always move forward." Okay, that's a good idea! That saves me time because now
    I have one less piece of software that I need to worry about.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 比如，曾在Docker工作的Aaron Huslage，现在在Red Hat Ansible，他过来对我说：“你们为什么要修补？直接销毁服务器，把容器迁移到新的修补过的服务器上。不要进行回溯修补，始终向前推进。”好吧，这是个好主意！这样节省了我时间，因为现在我少了一件需要担心的软件。
- en: I think that all we're doing in DevOps is hunting, hunting, and hunting for
    these ideas. With each of these ideas, there's an associated cultural change that
    needs to happen. The cultural change that happens when you adopt these practices
    is called DevOps.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为我们在DevOps中所做的一切就是不断地寻找、寻找、再寻找这些想法。每一个想法的背后，都需要一个相应的文化变革。当你采纳这些做法时，发生的文化变革就叫做DevOps。
- en: '**Viktor Farcic**: Are you saying that DevOps only exists in relationship to
    new ideas and that new ideas need DevOps to manage organizations toward cultural
    transformation?'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你是在说DevOps只在与新想法的关系中存在，而新想法需要DevOps来管理组织向文化转型吗？'
- en: '**Nirmal Mehta**: I think DevOps can be there with or without those ideas.
    I mean you can patch with DevOps. And you can have the traditional operations
    of DevOps. Just as long as you understand the communication mechanisms involved,
    and that you''re going to have to continuously inspect and understand your processes—and
    be ready to improve them.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：我认为DevOps可以存在于这些想法的有无之间。我的意思是你可以用DevOps进行补丁修复。你也可以拥有传统的DevOps运维方式。只要你理解其中的沟通机制，并且准备好持续检查和理解你的流程——并随时准备改进它们。'
- en: After all, there's no timeline for the adoption of DevOps, and there's no manifesto
    that says you must achieve greater deployments of your software.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 毕竟，关于DevOps的采纳没有时间表，也没有宣言说你必须实现更大的软件部署。
- en: '"There''s no timeline for the adoption of DevOps, and there''s no manifesto
    that says you must achieve greater deployments of your software."'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: “没有关于采用DevOps的时间表，也没有宣言说你必须实现软件部署的增加。”
- en: —Nirmal Mehta
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: —Nirmal Mehta
- en: In my client space, deploying software *faster* is not always the real need.
    And some organizations don't even care about *cost*. Across my customer base,
    it's quite a common situation that if they don't spend the money that they were
    given this year, they will get less money next year, so they *want* to spend more
    money.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的客户群体中，软件*更快*地部署并不总是最迫切的需求。有些组织甚至不关心*成本*。在我的客户中，一个很常见的情况是，如果他们今年没有花完预算，明年将会得到更少的资金，因此他们*想要*花更多的钱。
- en: 'That doesn''t mean DevOps has no application for organizations in those situations:
    they can still have other things they need from DevOps, such as being more *secure*
    and thus more *reliable*.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着DevOps在这些情况下对组织没有应用：它们仍然可以从DevOps中获得其他需求，比如变得更加*安全*，从而变得更加*可靠*。
- en: Reliability is a big topic. At its core, the reliability of services is what
    drives a lot of the interest you see today in DevOps. Reliability with fewer people
    is what I think DevOps is. There's a risk that all these things will reduce the
    need for people like us.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性是一个大话题。从本质上讲，服务的可靠性是今天你看到DevOps兴趣激增的一个主要驱动力。用更少的人做出更高可靠性的服务，这就是我认为DevOps的意义所在。存在一种风险，那就是这些做法可能减少像我们这样的人才需求。
- en: '**Viktor Farcic**: Who do you mean when you say, "people like us"?'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你说的“像我们这样的人”指的是谁？'
- en: '**Nirmal Mehta**: I mean developers and operations. As these services become
    more SaaS-based, I think greenfield development of new software is going to be
    much closer to junior-level, pre-canned business object stuff, like Azure or Amazon
    Web Services, at some point in the future.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：我的意思是开发人员和运维人员。随着这些服务越来越多地转向SaaS模式，我认为未来某个时刻，新的软件开发将更接近初级水平，像是预设的商业对象，比如Azure或亚马逊Web服务。'
- en: '**Viktor Farcic**: So, you wouldn''t bet on the future for developers and operations?'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：那么，你对开发人员和运维的未来不抱希望吗？'
- en: '**Nirmal Mehta**: My gut says that in the future we''ll see less bespoke software
    being developed in the majority of IT organizations. Instead, new software development
    is going to be in the hardware.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：我直觉上认为，在未来，我们会看到大多数 IT 组织中开发的定制软件减少。相反，新的软件开发将是在硬件上进行的。'
- en: The only caveat on that is machine learning, which is already blowing up into
    a whole new world of software development. Programming by combining different
    deep learning and neural networks together could become a new field of software
    development, and that might be a transition for a lot of people. Instead of making
    APIs for web apps all day long, we're going to be just optimizing machine learning,
    and we'll become much more programmatic. Eventually, eighty percent of services
    will be filled from four overlord service providers, and that's it.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一需要注意的是机器学习，它已经成为软件开发的一个全新世界。通过将不同的深度学习和神经网络组合在一起来进行编程，可能会成为软件开发的一个新领域，这可能会是许多人的转变。我们将不再整天为
    Web 应用程序制作 API，而是将专注于优化机器学习，并且我们将变得更加程序化。最终，80% 的服务将由四个霸主服务提供商提供，就是这样。
- en: '"Eventually, eighty percent of services will be filled from four overlord service
    providers, and that''s it."'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: “最终，80% 的服务将由四个霸主服务提供商提供，就是这样。”
- en: —Nirmal Mehta
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: —尼尔马尔·梅塔
- en: '**Viktor Farcic**: To be honest, I would be very scared if I was young and
    had my career years ahead of me because I think that most people just won''t be
    able to follow the ever-increasing pace.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：说实话，如果我年轻并且还有职业生涯的岁月在前，我会感到非常害怕，因为我认为大多数人只是无法跟上这不断增长的速度。'
- en: Those people who are specialized in a single field are at greater risk of becoming
    obsolete. I mean, what will happen to those who spent years working on infrastructure
    when companies decide to move to the cloud? Sure, they can apply for a job in
    AWS, Azure, or Google Cloud, but I'm afraid that the bar might be too high for
    many.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 那些专门从事单一领域的人面临着变得过时的更大风险。我的意思是，当公司决定转向云时，那些花了多年时间工作在基础设施上的人会发生什么？当然，他们可以申请在
    AWS、Azure 或 Google Cloud 工作，但我担心对许多人来说，门槛可能太高了。
- en: '**Nirmal Mehta**: We''ve already seen that in the industry; look at how many
    organizations are moving to Office 365, and how many places have their own Exchange
    Servers. That number gets smaller and smaller. That was a core role of IT for
    a long time, managing Active Directory, Exchange, and MS SQL, but those days are
    in the past.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：我们已经在行业中看到了这一点；看看有多少组织正在迁移到 Office 365，以及有多少地方有自己的 Exchange 服务器。这个数字越来越少。长期以来，这是
    IT 的核心角色，管理 Active Directory、Exchange 和 MS SQL，但那些日子已经过去了。'
- en: '**Viktor Farcic**: I guess that it puts companies in a sweet position where
    they can dedicate most of their resources into something that really brings value
    to them. When you think about it, does it bring value to a company to manage Exchange?'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：我猜这使得公司处于一个甜蜜的位置，他们可以将大部分资源投入到真正为他们带来价值的事情上。当你想想这个问题时，管理 Exchange
    对一家公司来说是否真的有价值？'
- en: '**Nirmal Mehta**: No, it doesn''t. But what I think is interesting, and this
    is a kind of a cynical point of view, is that there is so much low-hanging fruit
    in a lot of these companies!'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：不，不是这样的。但我认为有趣的是，这是一种愤世嫉俗的观点，即许多这样的公司中有很多低 hanging fruit（易于获取的机会）！'
- en: This is especially true for companies that have either established themselves
    in a monopoly or have created a big enough wall through competition or where there's
    a consolidation of who works or even competes in that field anymore. For such
    companies, there might not have even been a reward for increasing value. For such
    companies, there's been no need for perfection. It's not even that they don't
    need non-buggy code; they just need to get something out there, even if it's just
    bad.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些已经建立了垄断地位或通过竞争创造了足够大壁垒的公司，或者在这个领域内工作或竞争的公司已经趋于集中的公司来说，这一点尤为真实。对于这样的公司，增加价值可能没有得到任何回报。对于这样的公司，完美并不需要。他们甚至不需要没有错误的代码；他们只需要发布一些东西，即使它不怎么样。
- en: The true enemy of DevOps
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps 的真正敌人
- en: We're talking here about the true enemy of DevOps and Agile. This true enemy
    is not the benders, it is not the mislabeling of what DevOps is, and it is not
    all those difficult IT shops. The true enemy of DevOps is when the fundamental
    balance of everything that we're trying to achieve no longer matters. The true
    enemy of DevOps is when higher quality stuff doesn't matter—when an organization
    is just trying to get shit out there.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里讨论的是DevOps和敏捷的真正敌人。这个真正的敌人不是供应商，不是对DevOps的错误标签，也不是那些难搞的IT商店。DevOps的真正敌人是当我们试图实现的所有基本平衡不再重要时。DevOps的真正敌人是当更高质量的东西变得不重要时——当一个组织只是在努力把东西推出去。
- en: '"The true enemy of DevOps is when higher quality stuff doesn''t matter—when
    an organization is just trying to get shit out there."'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps的真正敌人是当更高质量的东西变得不重要时——当一个组织只是在努力把东西推出去。”
- en: —Nirmal Mehta
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: —尼尔马尔·梅赫塔
- en: A lot of the people I meet at conferences are IT people, and most of them are
    obviously trying to derive more value, to make their mark, to reduce costs, or
    to keep their job. But at a certain level in most organizations, if you find a
    non-IT person, they will probably consider that whatever is there right now is
    perfectly fine and that they can squeeze that apple for longer.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我在会议上遇到的很多人都是IT人员，他们中的大多数显然在努力从中获取更多价值，打出自己的烙印，降低成本，或者保持工作。但在大多数组织的某个层级，如果你遇到一个非IT人员，他们可能会认为目前的状况已经足够好，他们可以继续榨取这个“苹果”。
- en: '**Viktor Farcic**: I think that we have a serious discrepancy in velocity.
    While we''re used to the fact that things often change, and with ever-increasing
    velocity, the world is still trying to figure out what that means. Non-IT personnel
    are still not used to the fact that whatever was valid yesterday might be completely
    different today.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：我认为我们在速度上存在严重的差距。尽管我们已经习惯了事物经常变化，而且速度越来越快，但世界仍在努力搞清楚这意味着什么。非IT人员仍然不习惯于这样的事实：昨天有效的东西今天可能完全不同。'
- en: '**Nirmal Mehta**: Yes, they need to just change the color of the website every
    six months, and they''re good to go. And to change the name of the product.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅赫塔**：是的，他们只需要每六个月更改一次网站的颜色，就可以了。还需要更改产品的名称。'
- en: That's why competition is a good thing because the real enemy of DevOps shows
    its face in IT organizations where "good enough" is of a lower quality than any
    of us want to work in.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么竞争是好事，因为DevOps的真正敌人会在IT组织中显现出来，在这些组织里，“足够好”的质量比我们任何人想要工作的质量都要低。
- en: In this sense, DevOps is just a way to do a good enough job with two or three
    fewer people, before an organization transitions to an entirely Software as a
    Service (SaaS) arrangement. This is the real adversity, and apathy, that DevOps
    is trying to fight.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个角度看，DevOps只是一种方式，通过减少两三个员工的工作，做到“足够好”，在组织转型为完全的软件即服务（SaaS）模式之前。这才是DevOps试图对抗的真正逆境和冷漠。
- en: Agile is also trying to fight the apathy. Waterfall was all about making decisions
    at the last minute possible, right before going to production. Agile is forcing
    those decisions earlier so that you can't be apathetic to whatever. Instead, you
    have to make that decision today about what you're going to work on and what you
    want people to work on. Agile is about creating an incentive to make decisions.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷也在试图对抗这种冷漠。瀑布式方法一直是在生产前的最后一刻做决定，对吧？敏捷要求这些决策提前做出，这样你就不能对任何事情漠不关心。相反，你必须今天就决定你要做什么，以及你希望别人做什么。敏捷的目的是创造一种激励，迫使人们做决策。
- en: DevOps is very similar in that we're creating an incentive for people and organizations
    to make decisions about what kind of code they want to deploy or what kind of
    service they want to deploy.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps在这一点上非常相似，我们为人们和组织创造了一种激励，让他们做出关于要部署什么样的代码或要部署什么样的服务的决策。
- en: '**Viktor Farcic**: I think you''re right about the role of DevOps, but I also
    think that decision-making is what many people are trying to avoid. This may be
    the reason why we have such a huge discrepancy between what we say DevOps is about
    and how DevOps is really implemented in practice. A critical decision area for
    many organizations today is security. So, how does DevOps fit into IT security
    departments?'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：我认为你关于DevOps角色的看法是对的，但我也认为决策是许多人试图避免的。这可能是我们在DevOps的定义与实际实施之间存在如此巨大差异的原因。今天许多组织面临的一个关键决策领域是安全。那么，DevOps如何融入IT安全部门呢？'
- en: DevOps in security departments
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps在安全部门
- en: '**Nirmal Mehta**: I think that IT security is very important, but I also know
    that we can very easily underestimate how many people don''t give a damn about
    security right now. And that''s because, to many people, the problem of security
    is just the same as the problem of pollution. IT security and climate change are
    in almost the exact same position from that perspective: there''s a negative externality
    to what happens.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：我认为IT安全非常重要，但我也知道，我们很容易低估有多少人现在根本不在乎安全。而这正是因为，对许多人来说，安全问题就像污染问题一样。IT安全和气候变化从这个角度来看几乎处于同样的局面：它们都具有负外部性。'
- en: Let me explain. If Equifax, the consumer credit reporting agency, gets hacked,
    which it did, and all our credit information is breached, but there is no cost
    associated to Equifax for doing that, then it's the same thing as if I build a
    power plant and I don't pay the price of the pollution I give out. This is a negative
    externality that is not associated with the cost, and it's a situation that doesn't
    fix itself without the government. That's essentially what government is for,
    to eliminate that tragedy of the commons. I see security as absolutely stuck in
    a tragedy of the common situation where there is no consequence.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我解释一下。如果消费信贷报告机构Equifax被黑客攻击，像它曾经那样，并且我们的所有信用信息都被泄露，但Equifax在这样做时没有承担任何成本，那么这就像我建造了一座电厂，却不为我排放的污染支付代价。这是一种负外部性，与成本没有关联，而这种情况如果没有政府介入，是无法自行修复的。这本质上就是政府的作用——消除这种公地悲剧。我认为安全正陷入一种公地悲剧的境地，在这里没有任何后果。
- en: '"I think that IT security is very important, but I also know that we can very
    easily underestimate how many people don''t give a damn about security right now."'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: “我认为IT安全非常重要，但我也知道，我们很容易低估有多少人现在根本不在乎安全。”
- en: —Nirmal Mehta
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: —尼尔马尔·梅塔
- en: If I put 100 dollars into improving my security, and my competitor puts zero
    dollars to improve their security, and we both get hacked, then we both have no
    consequences. The only thing I lost is 100 dollars, and my competitor didn't lose
    100 dollars. That's the only difference.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我投入100美元来提升我的安全性，而我的竞争对手投入0美元来提升他们的安全性，然后我们俩都被黑了，那我们俩都没有后果。我失去的只是100美元，而我的竞争对手没有失去100美元。这就是唯一的区别。
- en: '**Viktor Farcic**: My experience from working with enterprise-based companies
    is that security always has the last word, but at the same time most don''t really
    understand. Too often, security is about marking some fields in an Excel sheet
    and not really helping IT teams develop secure applications. Too often, it seems
    as if the only goal of a security department is to be able to say, "It''s not
    our fault."'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：我在与企业公司合作的经验告诉我，安全总是最后发言，但与此同时，大多数人并不真正理解。安全往往只是标记Excel表格中的一些字段，而没有真正帮助IT团队开发安全的应用程序。太常见了，安全部门的唯一目标似乎就是能够说：“这不是我们的错。”'
- en: '**Nirmal Mehta**: That''s the unfortunate situation we''re in, and this is
    something I would say we faced even before the Spectre and Meltdown vulnerabilities.
    These kinds of massive security bugs aren''t going anywhere, but we do not have
    the headspace to rationalize how bad the security is. We therefore just bury our
    heads in the sand as a civilization and as a modern society, when it comes to
    privacy and IT security. I think that we will absolutely continue to do this unless
    there are real consequences to the industry, and even then, I don''t think change
    will happen because it would essentially mean killing IT.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：这就是我们所面临的不幸局面，我想即使在Spectre和Meltdown漏洞之前，我们就已经面临了这样的问题。这种大规模的安全漏洞并不会消失，但我们没有足够的头脑空间去理清安全问题有多严重。因此，我们作为一个文明和现代社会，在隐私和IT安全方面，通常选择埋头于沙中。我认为，除非行业中出现真正的后果，否则我们将继续这样做，甚至即使那样，我认为变革也不会发生，因为那基本上意味着要摧毁IT。'
- en: Just imagine if developers had to get insurance on the code that they wrote,
    just like a doctor must get malpractice insurance. If there was a computer or
    developer engineering malpractice insurance, like this, it would kill the industry
    overnight. Some developers would buy it if they had the money, but we're already
    aching for talent and resources now as an industry, and this would eventually
    eliminate ninety percent of developers in the field.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果开发人员必须为他们编写的代码投保，就像医生必须购买医疗事故保险一样。如果有类似于计算机或开发者工程过失的保险，它会在一夜之间摧毁整个行业。有些开发者如果有钱可能会购买，但作为一个行业，我们已经在人才和资源上感到捉襟见肘，这最终会导致该领域90%的开发者被淘汰。
- en: On top of that, all those people who we promised could become developers because
    we destroyed their job with automation must then get insurance against how bad
    their initial code could be as they switch careers. The whole idea is just not
    practical unless everything becomes more expensive, and security is not going
    to be any different.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们曾经承诺可以成为开发者的所有人，因为我们通过自动化摧毁了他们的工作，必须为他们切换职业时可能导致的初始代码问题投保。除非一切变得更贵，否则这个想法根本不切实际，安全也不会有所不同。
- en: '**Viktor Farcic**: I''m surprised that I haven''t heard this idea about code
    insurance before. The more I think about it, the more it makes sense. Why would
    software be any different than anything else that has insurance? We all use it,
    we all depend on it, and malfunction can result in serious damage or even death.
    It fits the description of many other things that we take for granted as being
    insured.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我很惊讶之前没有听到过关于代码保险的这个想法。越想越觉得这有道理。为什么软件会与其他有保险的事物不同呢？我们都在使用它，我们都依赖它，故障可能导致严重的损害甚至死亡。它符合许多我们认为理所当然的、被投保的事物的描述。'
- en: But, as you say, guaranteeing code quality would ruin a big segment of the industry
    overnight. We have somehow become used to the fact that software doesn't always
    work, and that hacking is part of life. There's not a big incentive to make what
    we create truly secure—at least not everywhere.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，正如你所说，保证代码质量会在一夜之间摧毁整个行业的一大部分。我们已经习惯了软件并不总是有效，而黑客攻击也成了生活的一部分。没有太大的激励去确保我们所创造的东西真正安全——至少不是在每个地方。
- en: '**Nirmal Mehta**: That doesn''t mean that a company can''t differentiate themselves
    on their security. It''s nice to see companies such as Apple and others where
    they don''t treat us like products.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：这并不意味着公司不能在安全上与众不同。看到像苹果这样的公司，和其他公司不把我们当作产品来对待，感觉很好。'
- en: '"I don''t think change will happen because it would essentially mean killing
    IT."'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: “我认为改变不会发生，因为这本质上意味着要杀死IT。”
- en: —Nirmal Mehta
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: —Nirmal Mehta
- en: Now, when you come to the business-to-business side of security, or the e-commerce
    side of security, I think the answer is that things will just move to more SaaS-based
    services.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你谈到商业对商业（B2B）安全，或者电子商务安全时，我认为答案是，事情将会转向更多基于SaaS的服务。
- en: 'When you do have conversations with organizations about moving to the cloud,
    you start to see how it really is going to make everything more secure. Why? Because
    the organization is then forced to face reality: they must actually do the security
    things that they said they were doing, but they''re not! Of course, Amazon Cloud
    is also way more secure than a lot of the places that do it in-house because Amazon
    has a massive financial incentive that''s missing from many government services.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当你和组织谈论迁移到云时，你会开始看到它如何真正让一切变得更安全。为什么？因为组织必须面对现实：他们必须实际做他们说过的安全工作，但实际上并没有做到！当然，亚马逊云比许多自己运作的地方要安全得多，因为亚马逊有一个巨大的财务激励，而许多政府服务缺乏这个激励。
- en: DevOps has this real opportunity to increase the security incentive that is
    missing in a lot of organizations. However, good IT security still requires strong
    leadership.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps有一个真正的机会，可以增加许多组织中缺失的安全激励。然而，良好的IT安全仍然需要强有力的领导。
- en: '**Viktor Farcic**: What''s missing in IT that needs this strong leadership?
    Is it more money being invested, more education, or better practices? What do
    we miss in security today? I ask this because in the companies I visit, I continually
    find partners who will say, "Look, you need to fulfill those 35,000 requirements,
    and then you''re secure." Nobody I know ever manages to fulfill their bulk.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：IT中缺少什么需要这种强有力的领导？是更多的资金投入，更多的教育，还是更好的实践？今天我们在安全方面缺少什么？我问这个问题是因为在我访问的公司中，我不断遇到合作伙伴，他们会说：“看，你需要满足那35,000个要求，然后你就安全了。”我认识的任何人都没有成功完成他们的所有要求。'
- en: '**Nirmal Mehta**: There''s a couple of different problems here. The first one
    is that there''s no glory in fixing a bug or a security issue, whereas there''s
    always glory in deploying a feature.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：这里有几个不同的问题。第一个是，修复一个bug或安全问题没有荣耀，而部署一个新特性总是有荣耀的。'
- en: The second thing is that fixing bugs, finding security holes, and doing things
    the *right* way often takes more patience, more thinking, more engineering, more
    time, and more cost. These are things that most organizations don't even have
    to begin with. Most organizations don't even have enough money or resources to
    do what their original goal is with respect to their software. That stuff is way
    further down on the list.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 第二点是，修复漏洞、发现安全漏洞并以*正确*的方式做事情，通常需要更多的耐心、更多的思考、更多的工程时间、更多的时间和更多的成本。这些东西大多数组织一开始就没有。大多数组织甚至没有足够的资金或资源来完成他们最初的目标，尤其是在软件方面。那些东西通常排在清单的后面。
- en: '"There''s no glory in fixing a bug or a security issue, whereas there''s always
    glory in deploying a feature."'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: “修复一个漏洞或安全问题没有什么荣耀，而部署一个新功能却总是充满荣耀。”
- en: —Nirmal Mehta
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: —Nirmal Mehta
- en: The third thing is experience and understanding. How many people even really
    understand speculative execution and processors? If you went to those coding boot
    camps to become a web developer, and you sat there and imported 15,000 npm JavaScript
    libraries, did they explain to you how a CPU works? No, they didn't.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 第三点是经验和理解。有多少人真正理解推测执行和处理器的工作原理？如果你去那些编程训练营，学习成为一个网页开发者，坐在那里导入了15,000个npm JavaScript库，他们有告诉你CPU是怎么工作的吗？没有。
- en: '**Viktor Farcic**: And you don''t even know what those libraries do.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：而且你根本不知道那些库做了什么。'
- en: '**Nirmal Mehta**: Right, and so people who *do* understand are expensive and
    they''re few and far between. Their experience and knowledge are not codified
    in any software suite currently. The security software industry is very far behind
    in terms of its ability to adapt to more frequent deployments and to bring that
    whole entire picture together about common bugs and penetration testing.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：没错，懂得这些的人是昂贵且稀缺的。现有的软件套件并未将他们的经验和知识进行编码。安全软件行业在适应更频繁的部署和整合关于常见漏洞和渗透测试的整体情况方面，远远落后。'
- en: And, of course, this all costs an organization more than their competitor who
    decides not to do any of that. There's still a consequence to maybe losing a customer,
    but there isn't really a global consequence.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这一切都使得一个组织的开销比那些选择不做这些事情的竞争对手要大。也许失去一个客户会有后果，但并没有全球性的后果。
- en: '**Vi****ktor Farcic**: That is until it happens.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：直到它发生之前。'
- en: '**Nirmal Mehta**: Yes. My gut feeling is that a lot of places are less secure
    than we think and that the insurance model just pays that problem away, instead
    of them just dealing with it. It''s still cheaper to just pay for the problem
    than it is to pay the 250,000 dollars a year for a security person.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：是的。我直觉上感觉很多地方的安全性没有我们想象的那么好，而保险模式只是在支付这个问题，而不是让他们去解决它。支付问题比支付每年25万美元雇一个安全人员要便宜。'
- en: There are a lot of issues with paying for the problem, and just one of them
    is that a security person in an organization that's not a top-tier place such
    as Google, Facebook, or Apple is probably not an expert at all. They've quite
    likely just done some training and got certifications. Yes, they're probably smart
    on SQL injections and phishing scams, but they're probably only one member of
    a small team tasked with that, and they care more about having dinner after work.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 支付问题带来了很多问题，其中之一就是，如果一个组织不是像谷歌、脸书或苹果这样的一流公司，那么那里的安全人员可能根本不是专家。他们很可能只是做过一些培训并获得了认证。是的，他们可能对SQL注入和网络钓鱼攻击非常了解，但他们很可能只是负责这些工作的一个小团队成员，而且他们更关心下班后能不能去吃饭。
- en: They do have this secret weapon, of course, that no one else in the IT organization
    has, and that is the ability to say "No" unconditionally.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，他们有这个秘密武器，其他IT组织的人都没有，那就是无条件地说“不”的能力。
- en: '**Viktor Farcic**: Thou shalt not pass!'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你不得通过！'
- en: '**Nirmal Mehta**: It''s like a cognitive bias, and it''s like a false power…
    but it''s not actually a false power—it''s true power! And it''s much harder to
    fight a negative.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：这就像一种认知偏误，它像是一种虚假的权力……但它其实不是虚假的权力——它是真正的权力！而且与负面情绪作斗争要困难得多。'
- en: Security is not a justice system; you're not innocent until proven guilty. There
    are good reasons why you're guilty until proven innocent with security, and that's
    why we have those checklists.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 安全不是一个司法系统；你不是在证明你无罪之前就是无辜的。在安全领域，确实有充分的理由认为你在证明无辜之前就是有罪的，这也是我们有那些检查清单的原因。
- en: '"Security is not a justice system; you''re not innocent until proven guilty.
    There are good reasons why you''re guilty until proven innocent with security,
    and that''s why we have those checklists."'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: “安全不是一个司法系统；你不是在被证明无罪之前就是无罪的。你被认为是有罪，直到被证明无罪，这就是我们有那些清单的原因。”
- en: —Nirmal Mehta
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: —Nirmal Mehta
- en: But this means that both your false positives and false negatives are also going
    to be through the roof because it's too hard not to say no.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 但这也意味着，你的假阳性和假阴性都会飙升，因为在这种情况下不说“不”太难了。
- en: '**Viktor Farcic**: If I''m guilty until proven innocent then I can''t prove
    myself innocent.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：如果我在未被证明无罪之前就是有罪的，那么我无法证明自己是无罪的。'
- en: '**Nirmal Mehta**: Exactly, there''s no such thing as 100% infallible and bug-free
    software. We have non-deterministic complex systems, and that''s a challenge because
    everyone wants 0/1, yes/no, but there''s no yes/no in a non-deterministic complex
    system. There is only a percentage of acceptance and probabilities.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：没错，根本不存在100%无误、无漏洞的软件。我们面对的是非确定性复杂系统，而这就是挑战所在，因为每个人都希望得到0/1、是/否的答案，但在非确定性复杂系统中并没有“是/否”，只有接受的概率和百分比。'
- en: The problem is, security wants to treat everything like yes/no with a certain
    amount of risk, but everyone needs to treat security more like a probability.
    At the same time, no one wants to work on the hard thing.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，安全性往往把一切视作是有/无的决策，并附带一定的风险，而每个人都需要将安全性看作是一种概率。同时，没有人愿意处理困难的事情。
- en: The hard thing here is writing good software without having to import all these
    things, and to actually look at all the code, to look at your open source tools
    that you're using, to validate what you're doing, to implement mutual TLS, to
    renew your certificates, and to make sure your domain names use two-factor.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的难点在于，如何在不引入所有这些工具的情况下编写优质软件，并且实际审视所有代码，查看你正在使用的开源工具，验证你所做的事情，实现互相TLS验证，更新你的证书，并确保你的域名启用双重认证。
- en: These things are so fundamental to security that it's the same thing as "more
    calories out than in," but we're all just looking for a shortcut. And the shortcut
    for the security person is just to say "No, here's a checklist of symptoms."
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题是安全的基础，跟“输出的热量大于输入”是同样的道理，但我们都在寻找捷径。而安全人员的捷径就是直接说：“不，这是一个症状清单。”
- en: The checklist is just symptoms that have been seen in the past. It's not a cure,
    and it's not a diagnosis of a system. It's just a symptom checklist. Are you sneezing?
    No, okay. Are you coughing? No, okay. Do you have a fever? No, okay. Then you're
    no security risk.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 清单只是过去曾经出现过的症状。它不是解决办法，也不是对系统的诊断。它只是一个症状清单。你打喷嚏了吗？没有，好吧。你咳嗽吗？没有，好吧。你发烧了吗？没有，好吧。那么你就不是安全风险。
- en: Fighting security threats
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打击安全威胁
- en: '**Viktor Farcic**: How do we fight security threats, if we can at all? A single
    person can do serious damage by exploiting our system vulnerabilities. How many
    people, if you can even put a number on it, do we need to prevent that person
    from attacking us?'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：如果我们能够应对的话，如何应对安全威胁？一个人通过利用我们的系统漏洞能够造成严重损害。如果我们能给出一个数字，我们需要多少人来防止那个人攻击我们？'
- en: '**Nirmal Mehta**: That''s all we''ve come up so far with, isn''t it: how do
    we pay for the problem? How many people? That''s because everything is reactionary.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**：到目前为止，我们想出的就是这些，不是吗？我们如何为这个问题买单？需要多少人？那是因为一切都是反应性的。'
- en: 'There''s more to this problem though. The core of security in IT leverages
    that same power that allows our modern technology companies to do amazing things
    with 100 or 1,000 fewer people than ever before. But here''s the rub: that ability
    for technology to so dramatically increase the leverage of a single person also
    works for the person attacking you.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个问题不仅仅如此。IT安全的核心利用了与现代技术公司能够在比以往更少的人手下完成令人惊叹的事情相同的力量。但问题在于：这种让技术能够大幅提升单个员工杠杆效应的能力，也同样作用于攻击你的人。
- en: It's the same problem we have with terrorism. It costs 500 bucks for someone
    to become a suicide bomber, but it costs 1.5 trillion dollars to prevent that
    suicide bombing from happening. The attackers who are attacking your infrastructure
    have the same 1,000x or more advantages that you use to make your company exist.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这与我们面临的恐怖主义问题相同。一个人成为自杀炸弹袭击者只需500美元，但防止这种自杀袭击发生却需要1.5万亿美元。那些攻击你基础设施的袭击者，拥有与你创造公司所用的相同，甚至是1000倍以上的优势。
- en: '"The attackers who are attacking your infrastructure have the same 1,000x or
    more advantages that you use to make your company exist."'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: “攻击你基础设施的攻击者拥有与你用来使公司存在的相同的 1000 倍或更多的优势。”
- en: —Nirmal Mehta
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: ——尼尔马尔·梅塔
- en: It's impossible to really secure against this unless you send your stuff to
    space. So, what does all this mean? It means that you must decide where on the
    spectrum of 0% to 100% probability of security failure you are comfortable.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你将你的数据送到太空，否则要真正防止这种情况几乎是不可能的。那么，这一切意味着什么呢？这意味着你必须决定在 0% 到 100% 的安全失败概率谱上，自己最能接受的位置。
- en: You're still not going to put the equivalent percentage of actual money toward
    your security risk, because that is a lot costlier than you think it is. There
    needs to be a balance—some sort of cost/benefit evaluation that puts us in a situation
    where we gain as much benefit with as little investment.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 你仍然不会将等同比例的实际资金投入到安全风险中，因为这比你想象的要昂贵得多。必须有一个平衡——某种成本/效益评估，让我们在尽可能少的投资下获得最大的利益。
- en: '**Viktor Farcic**: What''s waiting for us in the next ten years from now?'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：接下来十年我们会面对什么？'
- en: Future technologies
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未来技术
- en: '**Nirmal Mehta**: Part of my job is to look at future technologies, and nowadays
    I''m doing that for the cloud. At a certain point, it really hit me hard about
    the cloud.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：我的工作的一部分是研究未来技术，现如今我正专注于云计算领域。某个时刻，我对云计算的理解有了深刻的领悟。'
- en: Let me tell you. It was when I saw a slide at *AWS re:Invent*; it was just a
    bar chart, and on the *x*-axis was *2011*, *2012*, *2013*, and *2014*—the years;
    and on the *y*-axis, it wasn't new services, but instead it was the year-over-year
    percentage increase in features that AWS will provide. The first year on that
    chart, it was 50%. They added another 50%, so the next one was 100%. Then it was
    500%. The following one was 1,000%, and after that, it was 4,000%.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我告诉你吧。那是在我看到 *AWS re:Invent* 上的一张幻灯片时；它只是一个柱状图，*x* 轴是 *2011*、*2012*、*2013*
    和 *2014* ——这些年份；而 *y* 轴上不是新服务，而是 AWS 提供的功能年增长百分比。图表中的第一年是 50%。他们增加了另外 50%，所以下一年是
    100%。接着是 500%。再之后是 1000%，然后是 4000%。
- en: If you're an internal IT organization and you're building services, and you
    see that graph, and I'm selling the cloud and the ability to use cloud services
    to compose and build your own applications, how do you resist?
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个内部 IT 组织，正在构建服务，并且看到这张图表，而我正在推销云计算和利用云服务来组合并构建你自己的应用程序，你该如何抵制呢？
- en: It's pretty clear to me that Amazon, Azure, and Google are making their way
    vertically. They want to vertically integrate as much as possible because every
    time they move up that tier, they get higher value, so commodities and value bump
    up.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，亚马逊、Azure 和 Google 正在垂直发展是显而易见的。它们希望尽可能多地进行垂直整合，因为每当它们向上移动一层时，就能获得更高的价值，因此商品和价值都会提升。
- en: '"It''s pretty clear to me that Amazon, Azure, and Google are making their way
    vertically. They want to vertically integrate as much as possible…"'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: “对我来说，亚马逊、Azure 和 Google 正在垂直发展是显而易见的……”
- en: —Nirmal Mehta
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: ——尼尔马尔·梅塔
- en: Now you do that at 4,000% or 5,000% a year, you eventually run out of stuff
    to develop. Are you telling me there's not going to be a service where you just
    drag and drop three things onto a screen, and you get a full business application?
    Of course. That's the inevitability of that graph.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你每年以 4000% 或 5000% 的速度发展，最终你会耗尽所有可以开发的东西。你是告诉我，没有一个服务可以让你将三个东西拖放到屏幕上，然后得到一个完整的商业应用程序吗？当然有。这正是那张图表的必然结果。
- en: If that's sustained, and even if it wasn't sustained, even if they went back
    to 50%, then they just need to add little bits and pieces here and there and do
    a better job of connecting their existing services together, and there would be
    no reason to develop your own software. You'd just have your business use case,
    pick the language and the container format, pick the CICD pipeline, and you'd
    be done.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这种趋势得以持续，即使它没有持续下去，即便他们回到 50%，他们只需要在各个方面增加一点点，做得更好地将现有的服务连接起来，那么你就没有理由再开发自己的软件。你只需有业务用例，选择语言和容器格式，选择
    CICD 流水线，然后就完成了。
- en: I took some Azure training a year ago, and we had to build a web API that had
    authentication. It would take a JSON-formatted string, convert it into Chinese,
    do sentiment analysis, search Twitter, and then provide a machine learning prediction
    on what the next word would be in that phrase.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 一年前，我参加了一些 Azure 培训，我们必须构建一个带认证的 Web API。它会接收一个 JSON 格式的字符串，将其转换为中文，进行情感分析，搜索
    Twitter，然后提供一个关于下一词的机器学习预测。
- en: If I had got that challenge five years ago, I would have had to build an architecture
    with maybe some machine learning. I wouldn't know how even to spin up some EC2
    instances. This were pre-containers, but there was no Docker yet, so I would have
    had to cobble the thing together and spend 99% of my time authenticating web connections
    and running EC2 instances, just getting that stuff up and running.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果五年前我遇到这个挑战，我就得建立一个架构，可能还得用一些机器学习。我甚至都不知道该如何启动一些 EC2 实例。那时候容器技术还没有普及，但也没有 Docker，所以我可能不得不将这些东西拼凑起来，花费99%的时间去进行网页连接认证和运行
    EC2 实例，仅仅是让这些东西启动并运行起来。
- en: By contrast, we managed to do all this in our training in fifteen minutes. We
    dragged a box onto this window; we then dragged another box containing Cortana
    translation services and drew an arrow, so sentiment analysis was done by Cortana.
    We put the API key in there, and we were good to go. We clicked deploy, and it
    was a fully load-balanced API, automatically created, with authentication and
    certificates already all there. We hit it with some JSON and boom. Now we could
    package that and put it in the marketplace, where we could sell that to you for
    1% per API call.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，我们在培训中用十五分钟就完成了所有这些工作。我们将一个框拖到窗口中；然后又拖了一个包含 Cortana 翻译服务的框，并画了一条箭头，所以情感分析由
    Cortana 完成。我们将 API 密钥放进去，一切准备好后点击部署，它就变成了一个完全负载均衡的 API，自动创建，认证和证书都已经搞定。我们把 JSON
    发过去，轰的一声。现在我们可以把它打包并放到市场上，在那里我们可以按每次 API 调用的 1% 来出售它。
- en: '**Viktor Farcic**: I would need to make a couple of zillion API calls, but
    at the end of the day that would still be a fraction of what it would cost me
    to probably never actually succeed in making it myself.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**: 我可能需要发出几亿次 API 调用，但归根结底，这些花费仍然只是我可能永远无法独立完成这项工作所需成本的一小部分。'
- en: '**Nirmal Mehta**: Exactly, and so it was during that training that I said,
    "We will probably be consultants and build this stuff for maybe fifteen more years,
    but there is a point in the future where there will be no more greenfield; it''s
    just going to be business intelligence applications with us composing them on
    Amazon, Azure, or Google Cloud."'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**Nirmal Mehta**: 没错，因此在那次培训中我说过：“我们可能会继续做顾问，为这些项目构建这些东西，也许再有十五年，但未来总有一天，绿地开发将不复存在；那时我们将只是在亚马逊、Azure
    或 Google Cloud 上构建商业智能应用程序。”'
- en: '"We will probably be consultants and build this stuff for maybe fifteen more
    years, but there is a point in the future where there will be no more greenfield."'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: “我们可能会继续做顾问，为这些项目构建这些东西，也许再有十五年，但未来总有一天，绿地开发将不复存在。”
- en: —Nirmal Mehta
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: —Nirmal Mehta
- en: There will be some other service that maybe combines those services together,
    but at some point, this is going to be completely vertically integrated. In fact,
    you can already see it in Amazon's video editing tools. They released a bunch
    of 3D web VR tools, so they're already starting to go against these industries
    where it would have been impossible to think that this would be done in the cloud,
    but here you are, and so at a certain point there's no reason not to just to build
    your own service anymore.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 未来可能会有其他服务将这些服务组合在一起，但在某个时刻，这一切将会完全垂直整合。事实上，你现在已经可以在亚马逊的视频编辑工具中看到这一点。他们发布了一堆
    3D 网页 VR 工具，所以他们已经开始挑战这些行业，曾经让人难以想象这些东西能够在云端完成，但现在它已经做到了，因此在某个时刻，你就不再需要去构建你自己的服务了。
- en: I mean, Lambda allows you to pay by the call, so if you're a start-up you don't
    even need to run a server anymore, and your costs can become perfectly linear
    with your customer acquisition.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，Lambda 允许按调用付费，因此如果你是一个初创公司，你甚至不需要再运行服务器，而且你的成本可以和客户获取的数量完全成正比。
- en: '**Viktor Farcic**: The cost as a start-up, right at the beginning, is basically
    zero because you''re very unlikely to reach the limits of what is free in those
    first few months.'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**: 对于初创公司而言，刚开始时成本基本为零，因为在最初的几个月里，你很不可能达到免费的使用限制。'
- en: '**Nirmal Mehta**: I predict that this will be the future. There will no longer
    be a conversation between the business owner and the internal IT team. The business
    owner will just go right to Azure. Then the business user—not the developer, not
    an operations guy, and not a security guy, but the business user—is going to have
    their Azure account.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：我预测这将是未来的趋势。业务负责人和内部IT团队之间将不再有对话。业务负责人将直接进入Azure。然后，业务用户——不是开发人员，不是运维人员，也不是安全人员，而是业务用户——将拥有他们的Azure帐户。'
- en: The business user is going to be some savvy intern and the business owner is
    going to say something like, "Okay, I need something to tell me the logistics
    shipping route of our competitor." To which, the business owner will say, "Okay,
    boom, here's a geospatial service." The business owner will then add a little
    bit of a machine learning block, put an API in, click deploy, test it, and that's
    it. They'll then simply pass a bill to the business owner.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 业务用户将是一个精明的实习生，业务负责人可能会说类似于：“好吧，我需要一些东西来告诉我我们竞争对手的物流运输路线。”对此，业务负责人会说：“好，砰，这里有一个地理空间服务。”然后，业务负责人会添加一些机器学习模块，放入一个API，点击部署，测试一下，就完成了。接着，他们会直接把账单交给业务负责人。
- en: That's something that scares me, but our DevOps careers will nearly be over
    when this stuff really takes off. If I was starting my career now, I would just
    do DevOps with data science and machine learning because if you can collect data
    and you can learn from it, that's where the real value is today and in the coming
    years.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这让我感到害怕，但当这些东西真正起飞时，我们的DevOps职业生涯几乎就结束了。如果我现在开始我的职业生涯，我会选择做带有数据科学和机器学习的DevOps，因为如果你能收集数据并从中学习，那就是今天和未来几年真正的价值所在。
- en: '"If I was starting my career now, I would just do DevOps with data science
    and machine learning."'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: “如果我现在开始我的职业生涯，我会选择做带有数据科学和机器学习的DevOps。”
- en: —Nirmal Mehta
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: —尼尔马尔·梅塔
- en: '**Viktor Farcic**: As you say, it''s okay, right? It''s like climate change;
    it won''t happen before I retire. Do you have any final remarks?'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：就像你说的，没问题，对吧？这就像气候变化一样；在我退休之前是不会发生的。你有什么最后的评论吗？'
- en: '**Nirmal Mehta**: My final remark is that I sometimes overestimate the impetus
    for change to newer systems, against the inertia of keeping older systems running.
    I mean, people are okay with really bad stuff in IT for a lot longer than you
    might think.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**尼尔马尔·梅塔**：我最后的评论是，我有时会高估转向新系统的动力，低估维持旧系统运作的惯性。我的意思是，人们在IT领域接受非常糟糕的系统，比你想象的要久得多。'
- en: That's my parting thought. We can get excited about containers, CICD, and DevOps
    itself, but one way or another, at some point in the future, there will be no
    need for all this.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我离开的思考。我们可以对容器、CICD和DevOps本身感到兴奋，但无论如何，在未来的某个时刻，这些都将不再需要。
