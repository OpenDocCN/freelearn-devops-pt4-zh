- en: '*Appendix:* Getting Ready for Professional Cloud DevOps Engineer Certification'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*附录：*为专业云DevOps工程师认证考试做准备'
- en: This book is a practical guide to learning about and understanding **site reliability
    engineering** or **SRE**, which is a prescriptive way of implementing DevOps.
    The book also provides deep insights into the Google Cloud services that are critical
    to implementing DevOps on Google Cloud Platform.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是一本实用指南，旨在学习和理解**网站可靠性工程**（**SRE**），这是一种实施DevOps的规定性方法。书中还深入探讨了在Google Cloud
    Platform上实施DevOps所必需的Google Cloud服务。
- en: Additionally, the book also helps in preparing for the Professional Cloud DevOps
    Engineer Certification exam. A professional Cloud DevOps engineer is responsible
    for efficient development operations and balancing service reliability and delivery
    speed. They are skilled at using Google Cloud Platform to build software delivery
    pipelines, deploy and monitor services, and manage and learn from incidents. The
    official exam guide can be found at [https://cloud.google.com/certification/guides/cloud-devops-engineer](https://cloud.google.com/certification/guides/cloud-devops-engineer).
    To register for the certification exam, go to [https://cloud.google.com/certification/register](https://cloud.google.com/certification/register).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，本书还帮助为专业云DevOps工程师认证考试做好准备。专业的云DevOps工程师负责高效的开发运维，并平衡服务的可靠性与交付速度。他们擅长使用Google
    Cloud Platform构建软件交付管道、部署和监控服务，并管理和学习事故。官方考试指南可以在[https://cloud.google.com/certification/guides/cloud-devops-engineer](https://cloud.google.com/certification/guides/cloud-devops-engineer)找到。要注册认证考试，请访问[https://cloud.google.com/certification/register](https://cloud.google.com/certification/register)。
- en: At a high level, the certification is centered around SRE, **Google Kubernetes
    Engine** (**GKE**), and Google Cloud's operations suite. These topics probably
    make up more than 80% of the certification exam. The chapters on SRE, GKE, and
    Google Cloud's operations suite extensively cover key concepts assessed in the
    Professional Cloud DevOps Engineer Certification exam. The *Points to remember*
    section and the practice test toward the end of this chapter should help you revise
    the critical concepts from this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 高层次上，认证主要围绕SRE、**Google Kubernetes Engine**（**GKE**）和Google Cloud的运维套件展开。这些话题可能占据认证考试的80%以上。关于SRE、GKE和Google
    Cloud运维套件的章节广泛涵盖了在专业云DevOps工程师认证考试中评估的关键概念。*记住要点*部分以及本章节末尾的练习测试将帮助你复习本章的关键概念。
- en: In addition, three additional topics that might come up on the certification
    exam will be covered at a high level. Some of these topics overlap with other
    certification exams from Google, such as Professional Cloud Architect Certification
    or Professional Cloud Developer Certification.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还将高层次地覆盖可能出现在认证考试中的三个额外话题。部分话题与Google的其他认证考试有所重叠，例如专业云架构师认证或专业云开发者认证。
- en: 'The following are the topics that will be summarized. Please note that these
    topics are not completely elaborated on here but rather only introduced. It is
    recommended to refer to the specific documentation on these topics for in-depth
    information:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将要总结的主题。请注意，这些主题在此处并没有完全详细展开，而是仅做介绍。建议查阅相关的具体文档以获取深入信息：
- en: Cloud Deployment Manager
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cloud Deployment Manager
- en: Cloud Tasks
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cloud Tasks
- en: Spinnaker
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Spinnaker
- en: Cloud Deployment Manager
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cloud Deployment Manager
- en: '**Infrastructure as Code** (**IaC**) is the process of managing and provisioning
    infrastructure through code instead of manually creating the required resources.
    **Cloud Deployment Manager** is a Google Cloud service that provides IaC. Cloud
    Deployment Manager can create a set of Google Cloud resources and facilitates
    managing these resources as a unit otherwise called a deployment. For example,
    it is possible to create a **Virtual Private Cloud** (**VPC**) using declarative
    code through a configuration file rather than manually creating it through the
    console. The following are some critical properties of Cloud Deployment Manager:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**基础设施即代码**（**IaC**）是通过代码管理和配置基础设施的过程，而不是手动创建所需资源。**Cloud Deployment Manager**是Google
    Cloud的一项服务，提供IaC功能。Cloud Deployment Manager可以创建一组Google Cloud资源，并帮助将这些资源作为一个整体进行管理，通常称为部署。例如，可以通过配置文件使用声明性代码创建**虚拟私有云**（**VPC**），而不是通过控制台手动创建。以下是Cloud
    Deployment Manager的一些关键特性：'
- en: Can create multiple resources in parallel, such as multiple VMs
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以并行创建多个资源，例如多个虚拟机
- en: Can provide input variables to create a resource with specific user-defined
    values as required
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以提供输入变量，以创建具有特定用户定义值的资源。
- en: Can get the return value of a newly created resource, such as the instance ID
    of a newly created Google Compute Engine instance
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以获取新创建资源的返回值，例如新创建的 Google Compute Engine 实例的实例 ID。
- en: Can create dependencies where one resource definition can reference another
    resource and one resource can be created after creating another resource (using
    `dependsOn`)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以创建依赖关系，其中一个资源定义可以引用另一个资源，并且一个资源可以在创建另一个资源后创建（使用`dependsOn`）。
- en: Cloud Deployment Manager allows specifying all the resources required for an
    application through a configuration file. This is the first step for implementing
    Cloud Deployment Manager. This configuration file is written in a declarative
    format using YAML.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Deployment Manager 允许通过配置文件指定应用程序所需的所有资源。这是实现 Cloud Deployment Manager
    的第一步。此配置文件以声明式格式编写，使用 YAML。
- en: 'Each configuration file can be used to define one or more resources. Each resource
    section consists of three main components: the name of the resource, the resource
    type, and the resource properties. The resource properties that need to be used
    are in most cases specific to the resource type. The resources specified in the
    configuration file are created by making API calls (which could introduce a slight
    risk as certain APIs could be deprecated in the future). The configuration file
    can either be completely spelled out or Cloud Deployment Manager allows the usage
    of templates (which are preferred for creating similar types of resources).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每个配置文件可以用来定义一个或多个资源。每个资源部分包含三个主要组件：资源的名称、资源类型和资源属性。需要使用的资源属性在大多数情况下是特定于资源类型的。配置文件中指定的资源是通过调用
    API 创建的（这可能带来一定的风险，因为某些 API 可能在未来被弃用）。配置文件可以完全明确列出，或者 Cloud Deployment Manager
    允许使用模板（模板更适合创建类似类型的资源）。
- en: A configuration can contain templates that refer to parts of the configuration
    file that is abstracted to individual building blocks. A template file is written
    in either Python or Jinja2\. Python templates are more powerful and provide the
    option to programmatically create or manage templates. Jinja2 is a simpler but
    less powerful templating language that uses the same syntax as YAML. A preview
    mode (using the `--preview` flag) can be used to verify the potential operations
    on the resources before they are applied. For more information on Cloud Deployment
    Manager, refer to [https://cloud.google.com/deployment-manager](https://cloud.google.com/deployment-manager).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 配置可以包含模板，这些模板引用了被抽象为单独构建块的配置文件部分。模板文件可以用 Python 或 Jinja2 编写。Python 模板功能更强大，提供了通过编程方式创建或管理模板的选项。Jinja2
    是一种更简单但功能较弱的模板语言，使用与 YAML 相同的语法。可以使用预览模式（通过`--preview`标志）在应用之前验证资源的潜在操作。有关 Cloud
    Deployment Manager 的更多信息，请参见 [https://cloud.google.com/deployment-manager](https://cloud.google.com/deployment-manager)。
- en: Cloud Tasks
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Cloud Tasks
- en: '**Cloud Tasks** is a fully managed service from Google Cloud that allows you
    to separate out pieces of work that could be performed independently and asynchronously
    outside of a user or a service-to-service request. An independent piece of work
    is referred to as a task. Cloud Tasks is essentially used when an application
    accepts inputs from users and needs to initiate background tasks accordingly to
    perform automated asynchronous execution.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cloud Tasks** 是 Google Cloud 提供的完全托管服务，它允许你将可以独立执行并异步处理的工作单元从用户或服务到服务的请求中分离出去。一个独立的工作单元称为任务。Cloud
    Tasks 实际上用于当应用程序接受来自用户的输入，并需要相应地启动后台任务以执行自动化的异步操作时。'
- en: 'The following is a summary of the critical features of Cloud Tasks:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Cloud Tasks 的关键特性总结：
- en: Cloud Tasks is aimed at explicit invocation, where the publisher retains full
    control of execution.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cloud Tasks 旨在显式调用，其中发布者保留对执行的完全控制。
- en: Cloud Tasks is most appropriate where the task producer can have control over
    the execution.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cloud Tasks 最适用于任务生产者可以控制执行的场景。
- en: The core difference between Cloud Tasks and Pub/Sub is the notion of explicit
    versus implicit invocation. As mentioned, Cloud Tasks is aimed at explicit invocation.
    In contrast, Pub/Sub supports implicit invocation, where a publisher implicitly
    causes the subscriber to execute by publishing an event. For more in-depth information
    on Cloud Tasks, refer to [https://cloud.google.com/tasks](https://cloud.google.com/tasks).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Tasks 与 Pub/Sub 的核心区别在于显式调用与隐式调用的概念。如前所述，Cloud Tasks 旨在显式调用。而 Pub/Sub
    支持隐式调用，其中发布者通过发布事件隐式地触发订阅者执行。有关 Cloud Tasks 的更多深入信息，请参考 [https://cloud.google.com/tasks](https://cloud.google.com/tasks)。
- en: Spinnaker
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Spinnaker
- en: '**Spinnaker** is an open source, multi-cloud continuous delivery platform that
    was initially developed by Netflix and later extended by Google. Spinnaker is
    not an official Google Cloud service. Spinnaker is not a natively integrated service,
    and no such native service exists yet from Google Cloud Platform for continuous
    deployment. Spinnaker is extensively recommended by Google to implement CI/CD
    pipelines on Google Cloud Platform. Spinnaker helps to release software changes
    at high velocity and with confidence. Spinnaker is composed of several independent
    microservices. Spinnaker creates a Cloud Storage bucket and uses a Redis database
    to maintain its assets. Spinnaker also creates a Pub/Sub topic.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Spinnaker** 是一个开源的多云持续交付平台，最初由 Netflix 开发，后来由 Google 扩展。Spinnaker 不是一个官方的
    Google Cloud 服务，也不是一个原生集成服务，目前 Google Cloud Platform 尚未推出用于持续部署的原生服务。Google 大力推荐
    Spinnaker 用于在 Google Cloud Platform 上实现 CI/CD 管道。Spinnaker 有助于高效、可靠地发布软件变更。Spinnaker
    由多个独立的微服务组成。Spinnaker 创建了一个 Cloud Storage 存储桶，并使用 Redis 数据库来维护其资源。Spinnaker 还创建了一个
    Pub/Sub 主题。'
- en: Spinnaker can be considered an application management tool where it is possible
    to view and manage GKE components, including workload resources, services, and
    load balancers. Spinnaker can support multiple deployment models, including rolling
    update, blue/green, or canary.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Spinnaker 可被视为一个应用程序管理工具，允许查看和管理 GKE 组件，包括工作负载资源、服务和负载均衡器。Spinnaker 支持多种部署模型，包括滚动更新、蓝绿部署或金丝雀发布。
- en: Spinnaker puts everything in an auto-pilot mode where there is no need for manual
    intervention, or in other words, no need to manually execute `kubectl` commands.
    Spinnaker can create and manage YAML files and can perform automated deployments
    or even create/execute YAML files for load balancers as a service. The only manual
    step involved is to provide approval to complete deployment.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Spinnaker 将所有操作置于自动驾驶模式，无需人工干预，换句话说，无需手动执行 `kubectl` 命令。Spinnaker 可以创建和管理 YAML
    文件，并可以执行自动化部署，甚至为负载均衡器作为服务创建/执行 YAML 文件。唯一需要手动操作的步骤是提供批准以完成部署。
- en: 'The following figure shows a high-level summary in terms of interactions specifically
    when Spinnaker is used to deploy to a GKE cluster:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示展示了使用 Spinnaker 部署到 GKE 集群时的交互高层概述：
- en: '![](img/B15587_Appendix_01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15587_Appendix_01.jpg)'
- en: Illustration of interactions when Spinnaker is used to deploy to GKE
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Spinnaker 部署到 GKE 时的交互示意图
- en: 'The interactions in the preceding figure are as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 上图中的交互如下：
- en: The developer changes the code by creating a Git tag and pushes to the cloud
    source repository.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开发者通过创建 Git 标签并推送到云源代码库来更改代码。
- en: The cloud source repository is configured to detect the new Git tag. This triggers
    Cloud Build to execute the build process as per the provided specification. This
    might include the running of unit tests. Once complete, a build artifact such
    as a Docker image is created.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 云源代码库配置为检测新的 Git 标签。这会触发 Cloud Build 根据提供的规范执行构建过程，可能包括运行单元测试。完成后，生成构建产物，如 Docker
    镜像。
- en: The created build artifact is stored either in Container Registry or Artifact
    Registry and once available, a message is sent to Cloud Pub/Sub if configured.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建的构建产物存储在容器注册表（Container Registry）或 Artifact Registry 中，一旦可用，如果已配置，会向 Cloud
    Pub/Sub 发送一条消息。
- en: Spinnaker, installed on GKE, will be listening to a Pub/Sub topic for the newly
    created image.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装在 GKE 上的 Spinnaker 将监听 Pub/Sub 主题，以接收新创建的镜像。
- en: Once the image is available, Spinnaker deploys the new container to a QA/staging
    environment, preferably through canary deployment so that only a small set of
    users are impacted.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦镜像可用，Spinnaker 将通过金丝雀发布方式将新容器部署到 QA/预生产环境中，从而确保只有少部分用户受到影响。
- en: Functional tests are run on the canary environment if available to verify the
    quality of the deployment. If the deployment is as per the expected standards
    in terms of quality, then after manual approval, the image is then deployed to
    the production environment.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可用，会在金丝雀环境中运行功能测试，以验证部署的质量。如果部署符合预期的质量标准，在手动批准后，该镜像将部署到生产环境。
- en: It is important to note that either while performing a blue/green deployment
    or a canary deployment, Spinnaker can update the ReplicaSet in place. When deploying
    a ReplicaSet with a Deployment, and the Deployment doesn't exist, Spinnaker first
    creates the ReplicaSet with `0` replicas and then creates the Deployment, which
    will resize the ReplicaSet. When the Deployment does exist, it does the same but
    edits the Deployment in place rather than creating it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，无论是在执行蓝绿部署还是金丝雀部署时，Spinnaker 都可以在原地更新 ReplicaSet。当使用 Deployment 部署 ReplicaSet
    且 Deployment 不存在时，Spinnaker 会先创建一个包含 `0` 副本的 ReplicaSet，然后再创建 Deployment，后者会调整
    ReplicaSet 的大小。当 Deployment 已经存在时，Spinnaker 会执行相同的操作，但会直接编辑现有的 Deployment，而不是创建新的。
- en: For more information on installing and managing Spinnaker on Google Cloud Platform,
    refer to [https://cloud.google.com/docs/ci-cd/spinnaker/spinnaker-for-gcp](https://cloud.google.com/docs/ci-cd/spinnaker/spinnaker-for-gcp).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有关在 Google Cloud Platform 上安装和管理 Spinnaker 的更多信息，请参考 [https://cloud.google.com/docs/ci-cd/spinnaker/spinnaker-for-gcp](https://cloud.google.com/docs/ci-cd/spinnaker/spinnaker-for-gcp)。
- en: This concludes our summary of additional topics such as Cloud Deployment Manager,
    Cloud Tasks, and Spinnaker.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分总结了包括 Cloud Deployment Manager、Cloud Tasks 和 Spinnaker 等其他主题的内容。
- en: You have reached the end of this book. Test your knowledge by attempting the
    mock tests. This book includes 2 mock tests of 50 questions each. These tests
    can be used as a reference. All the best if you are taking the certification exam!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你已阅读完本书内容。通过尝试模拟测试来检验你的知识。本书包括 2 次模拟测试，每次包含 50 道问题。这些测试可以作为参考。如果你正在参加认证考试，祝你好运！
