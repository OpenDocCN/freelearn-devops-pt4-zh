- en: Configuring Vagrant Using a Vagrantfile
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Vagrantfile配置Vagrant
- en: 'In this chapter, we will focus on configuring Vagrant by using Vagrantfiles.
    We will focus on the key aspects of a Vagrantfile, such as its structure and syntax.
    At the end of this section, we will have covered the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点介绍如何通过使用Vagrantfile来配置Vagrant。我们将关注Vagrantfile的关键方面，如其结构和语法。在本节结束时，我们将涵盖以下主题：
- en: Understanding Vagrantfiles
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解Vagrantfile
- en: Creating a Vagrantfile
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Vagrantfile
- en: Vagrantfile structure and syntax
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vagrantfile的结构和语法
- en: Troubleshooting a Vagrantfile
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排查Vagrantfile问题
- en: Understanding Vagrantfiles
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解Vagrantfile
- en: A Vagrantfile is the main way of configuring a Vagrant environment. This file
    has no extension as such; it is simply found on your system as `Vagrantfile` ,
    not `.Vagrantfile` or `vagrantfile.Vagrantfile`.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrantfile是配置Vagrant环境的主要方式。这个文件没有扩展名；它只是作为`Vagrantfile`出现在您的系统上，而不是`.Vagrantfile`或`vagrantfile.Vagrantfile`。
- en: Using a Vagrantfile allows you to manage your Vagrant environment dependencies
    and settings. It is a best practice to have one Vagrantfile per Vagrant project,
    and to include the Vagrantfile in your source control.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vagrantfile可以管理Vagrant环境的依赖和设置。最好每个Vagrant项目有一个Vagrantfile，并将Vagrantfile包含在源代码管理中。
- en: One of the main benefits of using a Vagrantfile is the ability to share that
    file with any other developer that has Vagrant installed. They will be able to
    simply run the `vagrant up` command to pull in any dependencies, such as boxes,
    and to set up any configuration to get the same Vagrant environment up and running
    as you.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vagrantfile的主要好处之一是能够将该文件与任何安装了Vagrant的开发人员共享。他们只需运行`vagrant up`命令，就能拉取任何依赖项，如boxes，并设置任何配置，使Vagrant环境与您的一致。
- en: Creating a Vagrantfile
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Vagrantfile
- en: 'Before we create our own Vagrantfile, let''s first create and move into a new
    directory. In this example, we will create a new directory called `vagrantfiletest`
    to keep things simple! Run the following commands in the given order:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建自己的Vagrantfile之前，首先创建并进入一个新的目录。在这个示例中，我们将创建一个名为`vagrantfiletest`的新目录，简化操作！按照以下顺序运行命令：
- en: '`mkdir vagrantfiletest`'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`mkdir vagrantfiletest`'
- en: '`cd vagrantfiletest`'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`cd vagrantfiletest`'
- en: '`vagrant init`'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`vagrant init`'
- en: 'By using the `vagrant init` command, we have now initialized a new Vagrantfile
    in our current `vagrantfiletest` directory, as shown in the following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`vagrant init`命令，我们已经在当前的`vagrantfiletest`目录中初始化了一个新的Vagrantfile，如下图所示：
- en: '![](img/00045.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00045.jpeg)'
- en: 'The default Vagrantfile has a basic structure to get you started. If you wish
    to create a very minimal shell then you can run either the `vagrant init --minimal`
    or the `vagrant init -m` command, either of which will generate a very basic Vagrantfile
    with no comments or additional settings, as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的Vagrantfile有一个基本结构，可以帮助您入门。如果您希望创建一个非常简洁的shell，您可以运行`vagrant init --minimal`或`vagrant
    init -m`命令，任一命令将生成一个非常基础的Vagrantfile，没有注释或额外设置，如下所示：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now let's move on to the next section and learn more about a Vagrantfile's syntax.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续进入下一部分，深入了解Vagrantfile的语法。
- en: Vagrantfile syntax
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrantfile语法
- en: A Vagrantfile uses the Ruby language syntax but no knowledge of Ruby is required.
    It is a simple, expressive, and easy-to-understand language when using the Vagrantfile.
    In most cases you will simply be setting a variable and a value, such as `config.vm.box
    = "ubuntu/trusty64"` , which sets the box to `ubuntu/trusty64`, the 64-bit version
    of Ubuntu 14.04.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrantfile使用Ruby语言语法，但不需要了解Ruby。使用Vagrantfile时，它是一种简单、表达力强且易于理解的语言。在大多数情况下，您只需设置一个变量和一个值，例如`config.vm.box
    = "ubuntu/trusty64"`，该设置将box设置为`ubuntu/trusty64`，即64位版本的Ubuntu 14.04。
- en: A Vagrantfile configuration is contained within the `configure` block. The first
    line is `Vagrant.configure("2") do |config|` and the last line is `end`. Within
    this block we can define all sorts of values, such as the Vagrant box, networking,
    filesystems, provisioning, and more.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Vagrantfile的配置包含在`configure`块中。第一行是`Vagrant.configure("2") do |config|`，最后一行是`end`。在这个块内，我们可以定义各种值，例如Vagrant
    box、网络、文件系统、配置和更多。
- en: Vagrantfile options
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrantfile选项
- en: In this section, we will cover the various sections that are available to configure
    in a Vagrantfile. You will learn how to configure the virtual machine directly,
    configure the provider (VirtualBox), and configure how Vagrant will connect to
    your machine via SSH or any other communicator.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍 Vagrantfile 中可配置的各个部分。你将学习如何直接配置虚拟机、配置提供者（VirtualBox），以及配置 Vagrant
    如何通过 SSH 或其他通信工具连接到你的机器。
- en: Vagrant machine configuration (config.vm)
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrant 机器配置（config.vm）
- en: 'Using the `config.vm` namespace, we will look at configuring certain parts
    of the Vagrant machine, such as box information and miscellaneous settings including
    synced folders, provision, and providers. The configurable elements are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `config.vm` 命名空间，我们将查看配置 Vagrant 机器的某些部分，如 box 信息和其他设置，包括同步文件夹、配置和提供者。可配置的元素如下：
- en: '`config.vm.boot_timeout` is used to specify (in seconds) how long Vagrant will
    wait for the machine to start up and become available for use. The default time
    is 300 seconds.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.boot_timeout` 用于指定（以秒为单位）Vagrant 等待机器启动并准备好使用的时间。默认时间为 300 秒。'
- en: '`config.vm.box` is used to set a specific box for the machine. You can reference
    a box already installed on your system or a shorthand syntax box name from the
    Vagrant cloud, such as `ubuntu/trusty64`.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box` 用于为机器设置特定的 box。你可以引用已经安装在系统上的 box，或者使用 Vagrant 云中的简写语法，如 `ubuntu/trusty64`。'
- en: '`config.vm.box_check_update` is used by Vagrant to check whether the box you
    have selected or the box being used by the current machine is up to date. The
    default setting is `true` but only certain box types can be checked for an update –
    mainly Vagrant cloud boxes. If an update is found during the Vagrant startup process,
    a yellow message will be displayed on the screen to the user.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_check_update` 被 Vagrant 用来检查你选择的 box 或当前机器正在使用的 box 是否是最新的。默认设置为
    `true`，但只有某些类型的 box 可以检查更新——主要是 Vagrant 云上的 box。如果在 Vagrant 启动过程中发现更新，屏幕上会显示黄色消息提示用户。'
- en: '`config.vm.box_download_checksum` is used to compare the checksum of a box
    and a given checksum; if they do not match then it will throw an error. Vagrant
    will only perform this check when a box needs to be downloaded. This value requires
    the `config.vm.box_download_checksum_type` value to be set.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_download_checksum` 用于比较 box 的校验和与给定的校验和；如果它们不匹配，则会抛出错误。Vagrant
    仅在需要下载 box 时执行此检查。此值需要设置 `config.vm.box_download_checksum_type` 的值。'
- en: '`config.vm.box_download_checksum_type` is the checksum hash type used when
    comparing checksum values used by the `config.vm.box_download_checksum` value.
    There are a few supported options here, and they are `md5`, `sha1`, and `sha256`.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_download_checksum_type` 是在比较 `config.vm.box_download_checksum`
    值使用的校验和哈希类型。这里有几个支持的选项，分别是 `md5`、`sha1` 和 `sha256`。'
- en: '`config.vm.box_download_client_cert` is used to supply a path to a client certificate
    that is used when downloading a box. There is no default value for this setting.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_download_client_cert` 用于提供在下载 box 时使用的客户端证书路径。此设置没有默认值。'
- en: '`config.vm.box_download_ca_cert` is used to supply the path to a CA certificate
    bundle that is used when downloading a box directly. The default value for this
    uses the Mozilla CA certificate bundle.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_download_ca_cert` 用于提供直接下载 box 时使用的 CA 证书包的路径。默认值使用 Mozilla
    CA 证书包。'
- en: '`config.vm.box_download_ca_path` is used to supply a path to a directory containing
    CA certificates when downloading a box directly. Similarly, the default value
    used is the Mozilla CA certificate bundle.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_download_ca_path` 用于提供在直接下载 box 时包含 CA 证书的目录路径。类似地，默认使用的值是 Mozilla
    CA 证书包。'
- en: '`config.vm.box_download_insecure` is used to validate SSL certificates from
    the server. If `true` is set then no validation will be done. If the box URL is
    HTTPS then the SSL certificates will be verified.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_download_insecure` 用于验证服务器的 SSL 证书。如果设置为 `true`，则不进行验证。如果 box
    的 URL 是 HTTPS，则会验证 SSL 证书。'
- en: '`config.vm.box_download_location_trusted` is used to trust all redirects when
    the value is set to `true`. The default process is for Vagrant to trust the initial
    request, using any specified credentials.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_download_location_trusted` 用于在值设置为 `true` 时信任所有重定向。默认过程中，Vagrant
    会信任初始请求，并使用任何指定的凭据。'
- en: '`config.vm.box_url` is used to set a specific box URL. This is similar to `config.vm.box`
    but it does not support the shorthand Vagrant cloud syntax for box names; if `config.vm.box`
    has been set in the Vagrantfile, you do not need to specify a value here. The
    value specified can be a single URL or multiple URLs that will be tried in order.
    If you have already configured other settings such as certificates, they will
    be applied to all URLs supplied. The Vagrantfile does also support local files
    using the `file://` abbreviation and scheme.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_url` 用于设置特定的盒子 URL。这类似于 `config.vm.box`，但不支持 Vagrant 云的简写语法，如果在
    Vagrantfile 中已设置 `config.vm.box`，则无需在此处指定值。指定的值可以是单个 URL 或多个 URL，Vagrant 会按顺序尝试这些
    URL。如果您已经配置了其他设置（如证书），它们将应用于所有提供的 URL。Vagrantfile 也支持使用 `file://` 缩写和方案来指定本地文件。'
- en: '`config.vm.box_version` is used to specify what box version to use. This value
    supports constraints separated by commas such as (greater than and equal to) >=
    0.2 and < 2.0 (less than), where Vagrant would look for a box version that''s
    between 0.2 and less then 2.0 . Vagrant will try and get the latest box version
    within these constraints. The default value used is >= 0, which signifies the
    latest version available.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.box_version` 用于指定要使用的盒子版本。此值支持以逗号分隔的约束条件，例如 (大于或等于) >= 0.2 和 < 2.0（小于），Vagrant
    会在这些约束范围内查找盒子版本。Vagrant 将尽力获取符合这些约束条件的最新盒子版本。默认值为 >= 0，表示使用最新版本。'
- en: '`config.vm.communicator` is used to set the communicator type that connects
    to the guest box. The default value is `ssh` but it is recommended that Windows
    guests use `winrm`.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.communicator` 用于设置连接到来宾机器的通信类型。默认值为 `ssh`，但建议 Windows 客户端使用 `winrm`。'
- en: '`config.vm.graceful_halt_timeout` is used to set the time (in seconds) that
    Vagrant will wait for the machine to halt. This applies when the `vagrant halt`
    command is used, and the default value is 60 seconds.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.graceful_halt_timeout` 用于设置 Vagrant 等待机器停止的时间（单位为秒）。当使用 `vagrant
    halt` 命令时应用此设置，默认值为 60 秒。'
- en: '`config.vm.guest` is used to set the guest OS that will be running within the
    machine. Vagrant will attempt to auto-detect the correct OS used. This information
    is required to perform certain OS-specific values such as network configuration.
    The default value for this is `:linux`.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.guest` 用于设置将运行在机器中的来宾操作系统。Vagrant 会尝试自动检测使用的正确操作系统。这些信息对于执行某些操作系统特定的操作（如网络配置）是必要的。默认值为
    `:linux`。'
- en: '`config.vm.hostname` is used to set a hostname for a machine. The value should
    be provided as a string, for example `elite`. The default value is `nil`, which
    means that Vagrant will not manage the hostname. This hostname (if it''s a provider)
    will be set during boot.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.hostname` 用于为机器设置主机名。值应作为字符串提供，例如 `elite`。默认值为 `nil`，这意味着 Vagrant
    不会管理主机名。如果这是一个提供者，它将在启动时设置该主机名。'
- en: '`config.vm.network` is used to set the machine''s network options. There are
    quite a few options available for this setting, and they will be covered in a
    later chapter. Some of the main options include `forwarded_port`, `private_network`,
    and `public_network`.  Each option has various sub-values or sub-options that
    you can set.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.network` 用于设置机器的网络选项。这个设置有很多可用选项，稍后的章节中会详细讲解。其中一些主要选项包括 `forwarded_port`、`private_network`
    和 `public_network`。每个选项有各种子值或子选项可以设置。'
- en: '`config.vm.post_up_message` is used to display a message to the user after
    the `vagrant up` command is run. This is similar to a message of the day found
    on servers or other pieces of software that you can log into.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.post_up_message` 用于在运行 `vagrant up` 命令后显示一条消息给用户。这类似于服务器或其他软件上找到的每日消息，您可以登录查看。'
- en: '`config.vm.provider` is a configuration block used to set provider-specific
    values. Each provider supports different values but you can have multiple configuration
    blocks that target different providers. As we are using VirtualBox as our provider,
    we can set specific values such as `memory`, which sets the RAM, `cpus`, which
    sets the CPU core count, and `gui`, which when set to `true` will actually open
    the Vagrant machine in a GUI so you can interact with it.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.provider` 是一个配置块，用于设置特定于提供者的值。每个提供者支持不同的值，但可以有多个配置块针对不同的提供者。由于我们使用
    VirtualBox 作为提供者，可以设置特定的值，例如 `memory`（设置内存）、`cpus`（设置 CPU 核心数）和 `gui`（当设置为 `true`
    时，Vagrant 会在 GUI 中打开虚拟机，您可以与其交互）。'
- en: '`config.vm.provision` is used to specify a provisioner that can install and
    configure software during the creation process. This is quite an advanced topic
    and something we will cover in later chapters. Certain providers supported are
    Chef, Ansible, Puppet, and a standard script.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.provision` 用于指定一个配置器，它可以在创建过程中安装和配置软件。这是一个相当高级的话题，我们将在后续章节中讨论。支持的某些提供程序包括
    Chef、Ansible、Puppet 和标准脚本。'
- en: '`config.vm.synced_folder` is used to configure synced folders between your
    host machine and the guest machine. This will allow you to create or edit a file
    on your system (in the synced folder) and have that change made and become visible
    in the Vagrant machine.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.synced_folder` 用于配置主机和来宾机器之间的同步文件夹。这将允许你在系统上（在同步文件夹中）创建或编辑文件，并使该更改在
    Vagrant 机器中生效并可见。'
- en: '`config.vm.usable_port_range` is used to specify a port range that Vagrant
    can use. The default value or port range is `220..2250`. Vagrant will use these
    values for any port collisions that happen.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vm.usable_port_range` 用于指定 Vagrant 可用的端口范围。默认值或端口范围为 `220..2250`。Vagrant
    会使用这些值来处理发生的任何端口冲突。'
- en: Vagrant SSH configuration (config.ssh)
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrant SSH 配置（config.ssh）
- en: 'Using the `config.ssh` namespace we will look at configuring Vagrant so it
    connects to a guest machine using SSH. Here, we will look at certain values such
    as SSH username, password, ports, and keys, as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `config.ssh` 命名空间，我们将配置 Vagrant，使其通过 SSH 连接到来宾机器。在这里，我们将查看一些值，如 SSH 用户名、密码、端口和密钥，如下所示：
- en: '`config.ssh.username` is used to set the username that Vagrant will use when
    trying to connect via SSH. The default username is `vagrant`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.username` 用于设置 Vagrant 在尝试通过 SSH 连接时使用的用户名。默认用户名为 `vagrant`。'
- en: '`config.ssh.password` is used to set the password that Vagrant will use when
    trying to connect via SSH.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.password` 用于设置 Vagrant 在尝试通过 SSH 连接时使用的密码。'
- en: '`config.ssh.host` is used to set the hostname or IP address used when SSHing
    in. This value is often left blank by default as the provider can auto-detect
    the correct value.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.host` 用于设置在 SSH 连接时使用的主机名或 IP 地址。默认情况下，这个值通常为空，因为提供者可以自动检测正确的值。'
- en: '`config.ssh.port` is used to set the port used for SSHing into. The default
    value used is 22.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.port` 用于设置用于 SSH 连接的端口。默认值为 22。'
- en: '`config.ssh.guest_port` is used to set the port number that SSH will run on
    on the guest machine. Vagrant can use this along with `config.ssh.port` to intelligently
    connect to the correct SSH port. This is often used if there is a forwarded port.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.guest_port` 用于设置在来宾机器上运行 SSH 的端口号。Vagrant 可以将此与 `config.ssh.port`
    一起使用，以智能地连接到正确的 SSH 端口。如果存在转发端口，通常会使用此设置。'
- en: '`config.ssh.private_key_path` is used to set the path to a private key that
    you want to use when connecting to a machine. The default value is an insecure
    key that Vagrant and many public boxes use.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.private_key_path` 用于设置连接机器时要使用的私钥路径。默认值是一个不安全的密钥，Vagrant 和许多公共箱子都使用这个密钥。'
- en: '`config.ssh.keys_only` is used when you wish to use Vagrant-provided SSH keys.
    The default setting is `true`.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.keys_only` 用于在希望使用 Vagrant 提供的 SSH 密钥时使用。默认设置为 `true`。'
- en: '`config.ssh.verify_host_key` is used to perform host-key validation. The default
    value is `false`.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.verify_host_key` 用于执行主机密钥验证。默认值为 `false`。'
- en: '`config.ssh.forward_agent` is used to enable agent forwarding over SSH. The
    default value is `false`.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.forward_agent` 用于启用 SSH 的代理转发。默认值为 `false`。'
- en: '`config.ssh.forward_x11` is used to enable X11 forwarding over SSH. The default
    value is `false`.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.forward_x11` 用于启用通过 SSH 转发 X11。默认值为 `false`。'
- en: '`config.ssh.forward_env` is used to supply an array of host environment variables
    to the guest machine.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.forward_env` 用于向来宾机器提供一组主机环境变量。'
- en: '`config.ssh.insert_key` is used when `true` (as per the default setting) to
    insert a new keypair to use with SSH, replacing the insecure, default Vagrant
    keypair. When set to `true`, this value is also used with the `config.ssh.password`
    option.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.insert_key` 在设置为 `true`（根据默认设置）时用于插入一个新的密钥对，以便与 SSH 一起使用，替代不安全的默认
    Vagrant 密钥对。当设置为 `true` 时，该值也会与 `config.ssh.password` 选项一起使用。'
- en: '`config.ssh.proxy_command` is used to proxy a command-line command through
    SSH via `stdin`.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.proxy_command` 用于通过 `stdin` 通过 SSH 代理一个命令行命令。'
- en: '`config.ssh.pty` is not recommended unless you really need to use it. This
    option, when set to `true`, will use `pty` for provisioning. `pty` can break certain
    parts of Vagrant so be wary when using it.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.pty` 不建议使用，除非你真的需要使用它。设置为 `true` 时，将使用 `pty` 进行配置。`pty` 可能会破坏 Vagrant
    的某些功能，因此使用时要小心。'
- en: '`config.ssh.keep_alive` will send keep alive packets via SSH every 5 seconds
    to keep the connection alive when the value is set to `true`.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.keep_alive` 在设置为 `true` 时，将每 5 秒通过 SSH 发送保持连接的包，以保持连接活跃。'
- en: '`config.ssh.shell` is used to set the shell you wish to use when running SSH
    commands from Vagrant.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.shell` 用于设置在 Vagrant 中运行 SSH 命令时使用的 shell。'
- en: '`config.ssh.export_command_template` is the template used when generating environment
    variables in the active session.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.export_command_template` 是生成活动会话中的环境变量时使用的模板。'
- en: '`config.ssh.sudo_command` is used to set the command when running a `sudo`
    command. The default value is `sudo -E -H %c`, where `%c` is replaced by the command
    to run.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.sudo_command` 用于设置运行 `sudo` 命令时的命令。默认值为 `sudo -E -H %c`，其中 `%c`
    被替换为要运行的命令。'
- en: '`config.ssh.compression` is used to send a compression setting when connecting
    via SSH if the value is set to `true`. To disable this, set the value to `false`.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.compression` 用于在通过 SSH 连接时发送压缩设置，如果设置为 `true`。要禁用此功能，将值设置为 `false`。'
- en: '`config.ssh.dsa_authentication` is used to send the DSA authentication setting
    when connecting via SSH if the value is set to `true`. To disable this, set the
    value to `false`.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.dsa_authentication` 用于在通过 SSH 连接时发送 DSA 身份验证设置，如果设置为 `true`。要禁用此功能，将值设置为
    `false`。'
- en: '`config.ssh.extra_args` is used to pass additional commands into the SSH executable.
    It supports a single value or an array of values. This can be sent to enable more
    advanced actions with SSH, such as reverse tunneling.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.ssh.extra_args` 用于将额外的命令传递到 SSH 可执行文件中。它支持单个值或一个值的数组。通过此设置，可以启用 SSH
    的更多高级操作，如反向隧道。'
- en: Vagrant settings (config.vagrant)
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrant 设置（config.vagrant）
- en: 'Using the `config.vagrant` namespace we will look at configuring Vagrant specifically.
    There are not many options available within this namespace compared to the others
    we have already looked at. The commands for the `config.vagrant` namespace are
    as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `config.vagrant` 命名空间，我们将专门看一下如何配置 Vagrant。与我们已经看过的其他命名空间相比，这个命名空间中的选项并不多。`config.vagrant`
    命名空间的命令如下：
- en: '`config.vagrant.host` is used to set the host machine that is running Vagrant.
    The default value is `:detect`, which allows Vagrant to intelligently auto-detect
    the host. Certain features Vagrant offers are host-specific and this value is
    only recommended to be changed if auto-detection fails.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vagrant.host` 用于设置运行 Vagrant 的主机。默认值为 `:detect`，允许 Vagrant 智能地自动检测主机。Vagrant
    提供的某些功能是特定于主机的，只有在自动检测失败时才建议更改此值。'
- en: '`config.vagrant.sensitive` is used to supply a list or array of items that
    will not be displayed in Vagrant''s output or logged output. These values are
    often passwords or keys.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config.vagrant.sensitive` 用于提供一个不在 Vagrant 输出或日志输出中显示的项目列表或数组。这些值通常是密码或密钥。'
- en: Other Vagrantfile settings
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他 Vagrantfile 设置
- en: There are two other namespace settings that you can configure in the Vagrantfile.
    We will not be focusing on these in detail in this book, but the following section
    will offer an overview.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 还有两个其他的命名空间设置可以在 Vagrantfile 中进行配置。虽然本书不会详细讲解这些设置，但以下章节将概述它们。
- en: WinRM settings (config.winrm)
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WinRM 设置（config.winrm）
- en: The `config.winrm` namespace is used to configure Vagrant when using a Windows
    guest machine. To use these settings, you must set your `config.vm.communicator` setting
    to `winrm`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`config.winrm` 命名空间用于在使用 Windows 客户机时配置 Vagrant。要使用这些设置，必须将 `config.vm.communicator`
    设置为 `winrm`。'
- en: There are around 12 different configuration options available, which include
    `config.winrm.username`, `config.winrm.password`, `config.winrm.port`, and `config.winrm.transport`.
    Using the `config.winrm` namespace gives you much more control over how Vagrant
    behaves when using a Windows guest machine.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有大约 12 个不同的配置选项可用，包括 `config.winrm.username`、`config.winrm.password`、`config.winrm.port`
    和 `config.winrm.transport`。使用 `config.winrm` 命名空间可以让你对使用 Windows 客户机时 Vagrant
    的行为有更多控制。
- en: WinSSH settings (config.ssh and config.winssh)
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WinSSH 设置（config.ssh 和 config.winssh）
- en: This uses the `config.ssh` namespace, similar to namespaces we discussed earlier.
    This uses the WinSSH software, which is used for the Windows-native port of OpenSSH.
    Vagrant's official documentation states that WinSSH is in the *pre-release* stage
    and is therefore not yet production-ready.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这使用了`config.ssh`命名空间，类似于我们之前讨论的命名空间。它使用了WinSSH软件，这是OpenSSH的Windows原生版本。Vagrant的官方文档指出，WinSSH处于*预发布*阶段，因此尚未准备好生产环境使用。
- en: There are around 17 different options available, which are a mixture of the
    `config.ssh` and `config.winssh` namespace, these include: `config.ssh.username`, `config.ssh.password`, `config.winssh.forward_agent`, `config.winssh.upload_directory` ,
    and `config.winssh.export_command_template`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 有大约17个不同的选项可用，它们是`config.ssh`和`config.winssh`命名空间的组合，包括：`config.ssh.username`、`config.ssh.password`、`config.winssh.forward_agent`、`config.winssh.upload_directory`以及`config.winssh.export_command_template`。
- en: Troubleshooting a Vagrantfile
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 排查Vagrantfile的错误
- en: A Vagrantfile can be quite a complex collection of configuration options. There
    are multiple options, such as basic string values, configuration blocks, array
    values, and much more. It can be quite common to write out a Vagrantfile, go to
    run `vagrant up` or a similar command, and be faced with an error.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrantfile可以是一个相当复杂的配置选项集合。它包含多个选项，如基本的字符串值、配置块、数组值等等。编写完Vagrantfile后，运行`vagrant
    up`或类似命令时遇到错误是非常常见的。
- en: 'An example of a Vagrant error after running the `vagrant up` command is as
    follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`vagrant up`命令后，Vagrant错误的一个示例如下：
- en: '![](img/00046.jpeg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00046.jpeg)'
- en: 'Let''s dissect the error in the preceding screenshot. The first clue is a reference
    to the line number `Vagrantfile:24`; in other words, line 24 of the Vagrantfile.
    This error also gives us the type of error: `syntax error, unexpected tIDENTIFIER,
    expecting keyword_end # accessing "localhost:8080" will access port on`. This
    could mean that a config block or loop has no end value set, or we have tried
    to set an incomplete variable.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们分析前面截图中的错误。第一个线索是指向行号`Vagrantfile:24`，换句话说，就是Vagrantfile的第24行。这个错误还给出了错误的类型：`syntax
    error, unexpected tIDENTIFIER, expecting keyword_end # accessing "localhost:8080"
    will access port on`。这可能意味着某个配置块或循环没有设置结束值，或者我们尝试设置了一个不完整的变量。'
- en: 'An easy way to check a Vagrantfile after making any changes and trying to run
    or provision a Vagrant machine is by using the `vagrant validate` command. In
    the following screenshot, you can see that we still get the same error and output
    from Vagrant even with the `vagrant validate` command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在对Vagrantfile进行任何更改并尝试运行或配置Vagrant虚拟机后，检查Vagrantfile的一个简单方法是使用`vagrant validate`命令。在下面的截图中，您可以看到即使使用`vagrant
    validate`命令，我们仍然会收到相同的错误和Vagrant的输出：
- en: '![](img/00047.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.jpeg)'
- en: 'Now let''s open up the Vagrantfile and take a closer look at line 24, as shown
    in the following screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们打开Vagrantfile，仔细查看第24行，如下图所示：
- en: '![](img/00048.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.jpeg)'
- en: 'Looking at line 24, we can see the value # `accessing "localhost:8080" will
    access port 80 on` mentioned in the error. Now, although this is a comment, we
    can see that the `localhost:8080` value is exposed because it is wrapped in double
    quotes (`"`). If we trace back towards the beginning of the file, we should come
    across line 15, which looks a little odd. Here, we can see the value is `config.vm.box
    = "base` but there is no closing double quote.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 查看第24行，我们可以看到错误中提到的值# `accessing "localhost:8080" will access port 80 on`。现在，虽然这只是一个注释，但我们可以看到`localhost:8080`的值被暴露出来，因为它被双引号（`"`）包裹。如果我们回溯到文件的开头，我们应该能找到第15行，它看起来有点奇怪。这里，我们看到的值是`config.vm.box
    = "base`，但没有关闭的双引号。
- en: 'So, let''s add a double quote to the end of this line, save the file, and run
    the `vagrant validate` command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们在这一行的末尾加上一个双引号，保存文件，并运行`vagrant validate`命令：
- en: '![](img/00049.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.jpeg)'
- en: Great! As you can see in the preceding screenshot, we have successfully found
    the error and fixed it.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！正如您在前面的截图中看到的，我们成功找到了错误并已修复。
- en: Summary
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at how to configure Vagrant using the Vagrantfile.
    We also looked at various parts of the Vagrantfile, such as how to create one,
    its supported commands, options, and values, its syntax and layout, and how to
    troubleshoot it when there is an issue. In the coming chapters, we will be using
    the Vagrantfile more to focus on specific areas of Vagrant, such as provisioning.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用Vagrantfile配置Vagrant。我们还查看了Vagrantfile的各个部分，例如如何创建它、它支持的命令、选项和值、它的语法和布局，以及如何在出现问题时进行故障排除。在接下来的章节中，我们将更多地使用Vagrantfile，重点关注Vagrant的特定领域，如配置。
- en: 'In [Chapter 6](part0171.html#532G60-d86fec2f29de42f086efd11bc5538d9c), *Networking
    in Vagrant*, we will look at networking in Vagrant. In it, we will learn about
    the three main types of networking configurations: port-forwarding, public networks,
    and private networks.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](part0171.html#532G60-d86fec2f29de42f086efd11bc5538d9c)，*Vagrant中的网络配置*，我们将了解Vagrant中的网络配置。在这一章中，我们将学习三种主要的网络配置类型：端口转发、公共网络和私有网络。
