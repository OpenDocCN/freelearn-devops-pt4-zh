- en: Setting Up a Test Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置测试环境
- en: The best way to learn is by doing. This chapter will help you quickly spin up
    an environment for testing so that you can safely experiment without worrying
    too much. It will provide several configuration examples and tips on how to get
    things running. This type of environment will also be used throughout this book
    in several different scenarios.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的学习方式是通过实践。本章节将帮助你快速启动测试环境，让你可以安全地进行实验而无需过多担心。它将提供几个配置示例，并提供如何运行的提示。本书中将多次使用这种环境，适用于不同的场景。
- en: 'In brief, the following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，本章节将涵盖以下主题：
- en: Code organization
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码组织
- en: Machine requirements
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器要求
- en: Spinning up a new environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动新环境
- en: Code organization
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码组织
- en: While the examples and code listings in this book can be used directly without
    any supporting material, a companion Git repository is also provided to help you
    with the setup process and the automation of test environments so that you can
    follow along easily.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的示例和代码列表可以直接使用而无需任何支持材料，但也提供了一个配套的 Git 仓库，以帮助你设置和自动化测试环境，从而便于你跟随学习。
- en: 'In this section, we''re going to explore how that repository is organized,
    explain some choices that are made in terms of the automation of the test environments,
    and give some pointers on how to customize them:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨该仓库的组织结构，解释在自动化测试环境时所做的一些选择，并提供一些关于如何自定义测试环境的建议：
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The root structure of the repository shown here should be fairly easy to understand:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示的仓库根目录结构应该很容易理解：
- en: One directory per chapter that needs its own test environment (aptly named `chapter`,
    followed by the chapter number)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个章节都有一个单独的目录，用于其独立的测试环境（目录名为`chapter`，后跟章节号）
- en: A `cache` directory, which will hold downloaded packages so that rebuilding
    test environments becomes as fast as possible
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`cache`目录，用于存放下载的包，以便重建测试环境时尽可能加速
- en: A `utils` directory, where default versions and parameters of the test environments
    can be found (and changed if wanted), along with some helper functions
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`utils`目录，存放测试环境的默认版本和参数（如果需要，可以修改），以及一些辅助函数
- en: 'Next, we are going to drill down and have a closer look at each of these, like
    so:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入探讨每个部分，具体如下：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the `utils` directory, the following files can be found:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在`utils`目录下，可以找到以下文件：
- en: '`defaults.sh`: Here, the versions of each component in the Prometheus stack
    (such as Prometheus itself, along with exporters and Alertmanager, among others)
    that will be used in the test environments can be found.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`defaults.sh`：在这里，可以找到将在测试环境中使用的 Prometheus 堆栈中每个组件的版本（例如 Prometheus 本身、exporters、Alertmanager
    等）。'
- en: '`vagrant_defaults.rb`: This file controls a couple of tunable parameters for
    the virtual machines that are used to run the test environments, like the amount
    of RAM each virtual machine will have, which base image to use, and what the environment''s
    internal network will look like.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vagrant_defaults.rb`：此文件控制运行测试环境的虚拟机的一些可调参数，如每台虚拟机的内存大小、使用的基础镜像以及环境的内部网络结构。'
- en: '`helpers.sh`: This is a shell library that''s used by the provisioning scripts
    with some helper functions to manage the downloading and caching of archives:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`helpers.sh`：这是一个 shell 库，供配置脚本使用，包含一些帮助函数来管理归档文件的下载和缓存：'
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'While each test environment will differ in some ways between chapters, the
    basic structure will remain the same:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然每个测试环境在各章节之间可能有所不同，但基本结构将保持一致：
- en: A `Vagrantfile` to describe how many virtual machines are needed for the test
    environment, along with how to configure and provision them
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`Vagrantfile`，用于描述测试环境所需的虚拟机数量，以及如何配置和配置它们
- en: A `configs` directory to house configuration files that will be used in the
    provision step
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`configs`目录，存放将在配置步骤中使用的配置文件
- en: A `provision` directory with scripts to download, install, and configure each
    of the Prometheus components that are required for the current test environment
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个`provision`目录，包含用于下载、安装和配置当前测试环境所需的 Prometheus 组件的脚本
- en: 'We can see an example of this by looking at the tree structure for this chapter:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过查看本章节的目录结构来看到一个示例：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `configs` directory has sub-directories for each of the components that's
    used in this chapter. The `provision` directory follows the same model, with an
    added `hosts.sh` shell script to automate the management of `/etc/hosts` file
    on the guests.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`configs`目录包含本章节中使用的各个组件的子目录。`provision`目录遵循相同的模式，并增加了`hosts.sh`脚本，以自动化管理来宾机上的`/etc/hosts`文件。'
- en: 'By now, the question of *Why not just use configuration management?* might
    have risen in the minds of some. All the provisioning automation was done in a
    shell for a couple of reasons:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，可能有人会产生*为什么不直接使用配置管理？*这个问题。所有的自动化配置工作都是通过 shell 完成的，原因有几个：
- en: This was a conscious effort to expose every detail, not abstract them away.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是有意识的努力，旨在暴露每个细节，而非将其抽象化。
- en: Shell scripting is the lowest common denominator of automation in Unix-like
    systems.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shell 脚本是类 Unix 系统中自动化的最基本手段。
- en: The purpose of this book is to focus on the inner workings of Prometheus, not
    the specific implementation of a given configuration management tool.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书的目的是聚焦于 Prometheus 的内部工作原理，而不是某个特定配置管理工具的实现。
- en: Machine requirements
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器要求
- en: The machine requirements for this setup can comfortably run on a modern laptop,
    as long it has CPU virtualization extensions enabled and its operating system
    is compatible with the software requirements. All the software requirements that
    are covered here were thought-out. We will be using free and open source software,
    so no extra cost should be necessary when you try out the test environments.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 该设置的机器要求可以在现代笔记本电脑上舒适运行，只要其启用了 CPU 虚拟化扩展，并且操作系统与软件要求兼容。这里涉及的所有软件要求都经过深思熟虑。我们将使用免费且开源的软件，因此在尝试测试环境时不需要额外费用。
- en: Hardware requirements
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬件要求
- en: 'The minimal requirements for the host deploying the provided examples are as
    follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 部署提供示例的主机最低要求如下：
- en: At least 2 CPU cores
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少 2 个 CPU 核心
- en: At least 4 GB of memory
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少 4 GB 内存
- en: At least 20 GB of free disk space
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少 20 GB 可用磁盘空间
- en: With these specifications, you should be able to spin up the test environment
    without encountering any issues.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这些规格，你应该能够顺利启动测试环境，且不会遇到任何问题。
- en: Regarding connectivity, the host machine should have internet access and the
    ability to resolve external DNS records. The provision scripts will have to download
    dependencies during their execution, though most of the dependencies will be cached
    locally to avoid being downloaded in every deployment.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 关于连接性，主机应该具有互联网访问权限，并能够解析外部 DNS 记录。提供的脚本在执行过程中需要下载依赖项，但大部分依赖项会被缓存到本地，以避免每次部署时都下载。
- en: 'The default network for the example environment is `192.168.42.0/24`, and the
    following diagram illustrates the configuration you would get when running this
    chapter''s example:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 示例环境的默认网络为`192.168.42.0/24`，下图展示了运行本章节示例时的配置：
- en: '![](img/326e5b7a-81c1-4e5e-8eda-b3893b98753c.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/326e5b7a-81c1-4e5e-8eda-b3893b98753c.png)'
- en: 'Figure 3.1: Virtual network configuration'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1：虚拟网络配置
- en: When launching a test environment, the subnet `192.168.42.0/24` will be used.
    Each environment belongs to a specific chapter, and should be destroyed before
    switching to a new one. If you encounter a conflict with your local address space,
    you can change the test environment subnet by editing the NETWORK option in the
    provided `./utils/vagrant_defaults.rb` file.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 启动测试环境时，将使用子网`192.168.42.0/24`。每个环境属于特定的章节，在切换到新环境之前，应该销毁当前环境。如果你的本地地址空间发生冲突，可以通过编辑提供的`./utils/vagrant_defaults.rb`文件中的
    NETWORK 选项来更改测试环境的子网。
- en: Recommended software
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐软件
- en: 'The environment was tested using the following software, and so the standard
    disclaimer applies: although other versions within their respective major releases
    might work without additional changes, care should be taken when using versions
    that are different from the ones we''ve recommended:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 环境使用以下软件进行测试，因此适用标准免责声明：尽管相同主版本的其他版本可能无需额外修改即可工作，但在使用与我们推荐版本不同的版本时应谨慎：
- en: '| Software | Version |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 软件 | 版本 |'
- en: '| --- | --- |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| VirtualBox | 6.0.4 |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| VirtualBox | 6.0.4 |'
- en: '| Vagrant | 2.2.4 |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| Vagrant | 2.2.4 |'
- en: '| Minikube | 1.0.1 |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| Minikube | 1.0.1 |'
- en: '| kubectl | 1.14.1 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| kubectl | 1.14.1 |'
- en: 'Regarding supported operating systems, all the tests were conducted using the
    following versions of Linux and macOS:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 关于支持的操作系统，所有的测试都是在以下版本的 Linux 和 macOS 上进行的：
- en: Ubuntu 18.04 LTS (Bionic Beaver)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 18.04 LTS（Bionic Beaver）
- en: macOS 10.14.3 (Mojave)
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 10.14.3 (Mojave)
- en: Other operating systems/distributions might be able to run the test environments,
    although it's not ensured.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 其他操作系统/发行版可能能够运行测试环境，尽管无法保证。
- en: VirtualBox
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VirtualBox
- en: Oracle VirtualBox is a free and open source hypervisor, which runs on all major
    operating systems (macOS, Linux, and Windows). It allows you to not only launch
    virtual machine images, but also create virtual networks and mount host filesystem
    paths into the guests, among other features. This software requires hardware virtualization
    to be enabled.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle VirtualBox 是一款免费的开源虚拟机管理程序，支持所有主流操作系统（macOS、Linux 和 Windows）。它不仅允许启动虚拟机镜像，还可以创建虚拟网络，并将主机文件系统路径挂载到客户机中，具备其他功能。此软件要求启用硬件虚拟化。
- en: You can find all the installation files for VirtualBox at [https://www.virtualbox.org/wiki/Downloads ](https://www.virtualbox.org/wiki/Downloads)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)找到
    VirtualBox 的所有安装文件。
- en: Vagrant
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrant
- en: HashiCorp Vagrant allows for the creation of portable environments. In the context
    of this book, it will become the interface with VirtualBox, allowing for the launch
    and configuration of virtual machines. In our examples, we chose to use Chef Bento
    as the virtual machine image, as recommended by HashiCorp.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: HashiCorp Vagrant 允许创建可移植的环境。在本书的上下文中，它将成为与 VirtualBox 的接口，允许启动和配置虚拟机。在我们的示例中，我们选择使用
    Chef Bento 作为虚拟机镜像，这是 HashiCorp 推荐的。
- en: You can find all the installation files for Vagrant at [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)找到
    Vagrant 的所有安装文件。
- en: Minikube
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Minikube
- en: Minikube is the easiest way to test Kubernetes locally. We will be using Minikube
    in conjunction with VirtualBox to guarantee that the examples in this book behave
    the same way across operating systems.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Minikube 是测试 Kubernetes 本地环境的最简单方法。我们将结合使用 Minikube 和 VirtualBox，确保本书中的示例在不同操作系统上表现一致。
- en: You can find all the installation information for Minikube at [https://kubernetes.io/docs/tasks/tools/install-minikube/#install-minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/#install-minikube).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://kubernetes.io/docs/tasks/tools/install-minikube/#install-minikube](https://kubernetes.io/docs/tasks/tools/install-minikube/#install-minikube)找到有关
    Minikube 的所有安装信息。
- en: kubectl
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: kubectl
- en: The client tool for interacting with the Kubernetes API is called **kubectl**,
    and is fundamental for some of the examples in this book.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Kubernetes API 交互的客户端工具叫做 **kubectl**，它是本书中一些示例的基础。
- en: You can find all the installation information for kubectl at [https://kubernetes.io/docs/tasks/tools/install-minikube/#install-kubectl](https://kubernetes.io/docs/tasks/tools/install-minikube/#install-kubectl).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://kubernetes.io/docs/tasks/tools/install-minikube/#install-kubectl](https://kubernetes.io/docs/tasks/tools/install-minikube/#install-kubectl)找到有关
    kubectl 的所有安装信息。
- en: Spinning up a new environment
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动一个新的环境
- en: After you have ensured that all the required software is available on your host,
    you may proceed with one or both of the following walkthroughs.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 确保主机上已经安装所有必需的软件后，你可以继续进行以下一个或两个指南。
- en: Automated deployment walkthrough
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化部署指南
- en: This method will abstract all the deployment and configuration details, allowing
    you to have a fully running test environment with only a couple of commands. You'll
    still be able to connect to each of the guest instances and change configurations.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法将抽象化所有部署和配置细节，允许你仅通过几个命令便能拥有一个完全运行的测试环境。你仍然可以连接到每个客户机实例并更改配置。
- en: 'The steps to spin up the environment are as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 启动环境的步骤如下：
- en: 'Clone this book''s repository:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆本书的代码仓库：
- en: '[PRE4]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Step into the newly created directory and chapter number:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入新创建的目录并进入章节编号：
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Spin up this chapter''s test environment:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动本章的测试环境：
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The first run will take a few minutes because the Vagrant image and some of
    the software dependencies will have to be downloaded. After this setup process,
    subsequent runs will be much faster since all those assets will be kept in the
    cache.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次运行会花费几分钟，因为需要下载 Vagrant 镜像和一些软件依赖项。完成设置过程后，后续的运行会更快，因为所有这些资源将被缓存。
- en: 'Now, you can run `vagrant status`. You will be presented with the following
    output:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以运行 `vagrant status`。你将看到以下输出：
- en: '[PRE7]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Prometheus
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Prometheus
- en: 'You can find the Prometheus HTTP endpoint at `http://192.168.42.10:9090/targets`:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 `http://192.168.42.10:9090/targets` 找到 Prometheus HTTP 端点：
- en: '![](img/949b676e-24f7-4732-be42-a6f2f78522cf.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/949b676e-24f7-4732-be42-a6f2f78522cf.png)'
- en: 'Figure 3.2: Prometheus HTTP endpoint – showing all configured targets'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '图 3.2：Prometheus HTTP 端点 —— 显示所有已配置的目标  '
- en: Grafana
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**Grafana**  '
- en: You can find the Grafana HTTP endpoint at `http://192.168.42.11:3000`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以在 `http://192.168.42.11:3000` 找到 Grafana HTTP 端点。  '
- en: 'Grafana''s default credentials are as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 'Grafana 的默认凭证如下：  '
- en: '| **Username** | **Password** |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| **用户名** | **密码** |  '
- en: '| `admin` | `admin` |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `admin` | `admin` |  '
- en: 'You''ll be greeted by two automatically provisioned dashboards. We''ll have
    an entire chapter dedicated to Grafana and dashboards later in this book, in [Chapter
    10](02331a85-bad1-4a4f-b56e-150b69b46edb.xhtml), *Discovering and Creating Grafana
    Dashboards*:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '你将看到两个自动配置的仪表板。我们将在本书后续的章节中专门讨论 Grafana 和仪表板，参考 [第 10 章](02331a85-bad1-4a4f-b56e-150b69b46edb.xhtml)，*发现和创建
    Grafana 仪表板*：  '
- en: '![](img/509dc02d-bdad-4b95-b34a-5a64b0a83e46.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/509dc02d-bdad-4b95-b34a-5a64b0a83e46.png)  '
- en: 'Figure 3.3: An automatically provisioned Grafana dashboard'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '图 3.3：自动配置的 Grafana 仪表板  '
- en: Alertmanager
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**警报管理器**  '
- en: You can find the Alertmanager HTTP endpoint at `http://192.168.42.12:9093`.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以在 `http://192.168.42.12:9093` 找到警报管理器 HTTP 端点。  '
- en: 'We also configured an always-firing alert on Prometheus and a custom Alertmanager
    integration via webhook so that you can start to get a feel for how both are related.
    We''ll go into much more detail on Alertmanager in a different chapter, but for
    now, you may look at the logs that the example alert generates in the code repository
    root at `./cache/alerting.log`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '我们还在 Prometheus 上配置了一个始终触发的警报，并通过 Webhook 集成了自定义的警报管理器，这样你就可以开始了解它们之间的关系。我们将在其他章节详细介绍警报管理器，但现在，你可以查看示例警报在代码库根目录下生成的日志，路径为
    `./cache/alerting.log`：  '
- en: '![](img/ac51788e-a403-430a-adfe-b3fdc06f5926.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac51788e-a403-430a-adfe-b3fdc06f5926.png)  '
- en: 'Figure 3.4: Alertmanager – firing an example alert'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '图 3.4：警报管理器 —— 触发一个示例警报  '
- en: Cleanup
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '清理  '
- en: 'When you''ve finish testing, just make sure that''s you''re inside `chapter03`
    and execute the following:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '测试完成后，只需确保你在 `chapter03` 目录下并执行以下命令：  '
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Don't worry too much – you can easily spin up the environment again if you so
    desire.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '不用担心 —— 如果你愿意，环境可以轻松重新启动。  '
- en: Advanced deployment walkthrough
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '高级部署演练  '
- en: 'Using this method, the guest virtual machines will be spun up but no provision
    will take place, so you''ll need to set up the environment yourself with a hands-on
    approach. We won''t go into detailed explanations of the available configuration
    files and command-line arguments – those will be thoroughly explored in the following
    chapters. So, as a high-level overview, for each software component, we are going
    to do the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '使用此方法，来宾虚拟机将被启动，但不会进行任何配置，因此你需要亲自通过实践方式来设置环境。我们不会深入解释可用的配置文件和命令行参数 —— 这些内容将在接下来的章节中详细探讨。总体来说，对于每个软件组件，我们将执行以下操作：  '
- en: Set up basic networking between the virtual machines in the environment
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在环境中的虚拟机之间设置基本的网络连接  '
- en: Create an individual system user
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '创建一个独立的系统用户  '
- en: Download and install the software
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '下载并安装软件  '
- en: Create support files and directories
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '创建支持文件和目录  '
- en: Start the daemon
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '启动守护进程  '
- en: 'To start, clone this book''s repository:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '首先，克隆本书的代码库：  '
- en: '[PRE9]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Step into the newly created directory and chapter number and run Vagrant without
    provisioning the guest instances. This will leave you with just off-the-shelf
    virtual machines:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '进入新创建的目录并输入章节号，运行 Vagrant，不进行来宾实例的配置。这样你就会得到即开即用的虚拟机：  '
- en: '[PRE10]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: After all the guests have started, we will continue by configuring our instances
    one by one.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '所有来宾启动完成后，我们将继续一一配置我们的实例。  '
- en: Prometheus
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**Prometheus**  '
- en: 'Perform the following steps:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '执行以下步骤：  '
- en: 'Log in to the Prometheus guest instance:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '登录到 Prometheus 来宾实例：  '
- en: '[PRE11]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Inside the guest instance, drop to the root:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '进入来宾实例，切换到 root 用户：  '
- en: '[PRE12]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Add all the guests'' addresses to the instance host''s file:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '将所有访客的地址添加到实例主机的文件中：  '
- en: '[PRE13]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create a new system user:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '创建一个新的系统用户：  '
- en: '[PRE14]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Go into `/tmp` and download the Prometheus archive:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '进入 `/tmp` 并下载 Prometheus 压缩包：  '
- en: '[PRE15]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Uncompress the archive:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '解压该压缩包：  '
- en: '[PRE16]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Place every file in its correct location:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '将每个文件放在正确的位置：  '
- en: '[PRE17]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Add a `systemd` unit file for the Prometheus service:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '为 Prometheus 服务添加 `systemd` 单元文件：  '
- en: '[PRE18]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Enable and start the Prometheus service:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用并启动 Prometheus 服务：
- en: '[PRE19]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You should now have the Prometheus HTTP endpoint available on your host.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '你现在应该可以在主机上访问 Prometheus HTTP 端点了。  '
- en: 'Exit the root account and then the Vagrant user account:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '退出 root 账户，再退出 Vagrant 用户账户：  '
- en: '[PRE20]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Grafana
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**Grafana**  '
- en: 'Perform the following steps:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '执行以下步骤：  '
- en: 'Log in to the Grafana guest instance:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '登录到 Grafana 来宾实例：  '
- en: '[PRE21]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Inside the guest instance, drop to the root:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在客机实例内，切换到 root 用户：
- en: '[PRE22]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Add all the guests'' addresses to the instance host''s file:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有来宾的地址添加到实例主机的文件中：
- en: '[PRE23]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Go into `/tmp` and download the Grafana package:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 `/tmp` 并下载 Grafana 包：
- en: '[PRE24]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Install the package and all dependencies:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装包和所有依赖项：
- en: '[PRE25]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Place all the provided configurations on their correct location:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有提供的配置文件放到正确的位置：
- en: '[PRE26]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Enable and start the Grafana service:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用并启动 Grafana 服务：
- en: '[PRE27]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: You should now have the Grafana HTTP endpoint available on your host.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该可以在主机上访问到 Grafana HTTP 端点。
- en: 'Exit the root account and then the Vagrant user account:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出 root 账户，然后退出 Vagrant 用户账户：
- en: '[PRE28]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Alertmanager
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Alertmanager
- en: 'Perform the following steps:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: 'Log in to the Alertmanager guest instance:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Alertmanager 客机实例：
- en: '[PRE29]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Inside the guest instance, drop to the root:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在客机实例内，切换到 root 用户：
- en: '[PRE30]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Add all the guests'' addresses to the instance host''s file:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有来宾的地址添加到实例主机的文件中：
- en: '[PRE31]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Create a new system user:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的系统用户：
- en: '[PRE32]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Go into `/tmp` and download the Alertmanager archive:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 `/tmp` 并下载 Alertmanager 归档文件：
- en: '[PRE33]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Uncompress the archive:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压归档文件：
- en: '[PRE34]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Place every file in its correct location:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个文件放到正确的位置：
- en: '[PRE35]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Add a `systemd` unit file for the Alertmanager service:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 Alertmanager 服务添加一个 `systemd` 单元文件：
- en: '[PRE36]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Enable and start the Alertmanager service:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用并启动 Alertmanager 服务：
- en: '[PRE37]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: You should now have the Alertmanager HTTP endpoint available on your host.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该可以在主机上访问到 Alertmanager HTTP 端点。
- en: 'Exit the root account and then the Vagrant user account:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出 root 账户，然后退出 Vagrant 用户账户：
- en: '[PRE38]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Node Exporter
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Node Exporter
- en: 'To ensure that system-level metrics will be collected, Node Exporter must be
    installed in all three virtual machines. To log in to each virtual machine, use
    the commands that we explored in the previous sections:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保收集系统级别的指标，必须在所有三个虚拟机中安装 Node Exporter。要登录到每个虚拟机，请使用我们在前面章节中探讨的命令：
- en: 'Inside the guest instance, drop to the root:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在客机实例内，切换到 root 用户：
- en: '[PRE39]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Create a new system user:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的系统用户：
- en: '[PRE40]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Go into `/tmp` and download the Node Exporter archive:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 `/tmp` 并下载 Node Exporter 归档文件：
- en: '[PRE41]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Place every file in its correct location:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将每个文件放到正确的位置：
- en: '[PRE42]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Add a `systemd` unit file for the Node Exporter service:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 Node Exporter 服务添加一个 `systemd` 单元文件：
- en: '[PRE43]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Enable and start the Node Exporter service:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用并启动 Node Exporter 服务：
- en: '[PRE44]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Exit the root account and then the Vagrant user account:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出 root 账户，然后退出 Vagrant 用户账户：
- en: '[PRE45]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Validating your test environment
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证你的测试环境
- en: 'After running through these steps, you''ll be able to validate your environment
    by using the following endpoints on your host machine:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些步骤后，你可以使用以下端点验证你的环境：
- en: '| **Service** | **Endpoint** |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| **服务** | **端点** |'
- en: '| Prometheus | `http://192.168.42.10:9090` |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| Prometheus | `http://192.168.42.10:9090` |'
- en: '| Grafana | `http://192.168.42.11:3000` |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| Grafana | `http://192.168.42.11:3000` |'
- en: '| Alertmanager | `http://192.168.42.12:9093` |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| Alertmanager | `http://192.168.42.12:9093` |'
- en: Summary
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: With a test environment at your disposal, you can now inspect, change, and validate
    configurations without worrying about breaking things. Throughout this book, this
    approach to testing will be used extensively, because nothing beats experimenting
    when learning new skills.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 有了测试环境后，你可以在不担心破坏系统的情况下检查、修改和验证配置。全书将广泛使用这种测试方法，因为没有什么比实验更能帮助学习新技能。
- en: In the next chapter, we'll go over the fundamentals of Prometheus metrics. The
    test environment we just built will be helpful to demonstrate them.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍 Prometheus 指标的基本知识。我们刚刚搭建的测试环境将有助于展示这些指标。
- en: Questions
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are the recommended tools to set up a reproducible test environment?
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置可重现的测试环境的推荐工具是什么？
- en: Where can you change the default versions of the Prometheus components for the
    test environment?
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何更改测试环境中 Prometheus 组件的默认版本？
- en: What is the default subnet that's used on all examples?
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有示例中使用的默认子网是什么？
- en: At a high level, what are the steps to get a Prometheus instance up and running?
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从高层次来看，启动 Prometheus 实例的步骤有哪些？
- en: Node Exporter is installed on every guest instance. How can you quickly validate
    if all of them are exposing metrics correctly?
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个来宾实例上都安装了 Node Exporter。你如何快速验证它们是否正确暴露指标？
- en: In our test environment, where can you find the alert log?
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的测试环境中，在哪里可以找到警报日志？
- en: How can you create a clean test environment from scratch?
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何从零开始创建一个干净的测试环境？
- en: Further reading
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '**Bash manual**: [https://www.gnu.org/software/bash/manual/html_node/index.html](https://www.gnu.org/software/bash/manual/html_node/index.html)'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Bash 手册**: [https://www.gnu.org/software/bash/manual/html_node/index.html](https://www.gnu.org/software/bash/manual/html_node/index.html)'
- en: '**Recommended Vagrant boxes**: [https://www.vagrantup.com/docs/boxes.html](https://www.vagrantup.com/docs/boxes.html)'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**推荐的 Vagrant 镜像**: [https://www.vagrantup.com/docs/boxes.html](https://www.vagrantup.com/docs/boxes.html)'
