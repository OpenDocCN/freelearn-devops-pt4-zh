- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: Chapter 1, Monitoring Fundamentals
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章，监控基础
- en: A consensual definition of monitoring is hard to come by because it quickly
    shifts from industry or even in job-specific contexts. The diversity of viewpoints,
    the components comprising the monitoring system, and even how the data is collected
    or used, are all factors that contribute to the struggle to reach a clear definition.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于监控的共识定义很难达成，因为它在行业甚至是特定工作领域的背景下会迅速发生变化。观点的多样性、构成监控系统的组件，甚至数据如何收集或使用，都是导致很难达成清晰定义的因素。
- en: System administrators are interested in high resolution, low latency, high diversity
    data. Within this scope, the primary objective of monitoring is so that problems
    are discovered quickly and the root causes identified as soon as possible.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统管理员关注的是高分辨率、低延迟和高多样性的数据。在这个范围内，监控的主要目标是尽早发现问题，并尽快找出根本原因。
- en: Low resolution, high latency, and high diversity data.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 低分辨率、高延迟和高多样性的数据。
- en: It depends on how broad you want to make the monitoring definition. Within the
    scope of this book, logging is not considered monitoring.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这取决于你希望监控定义的范围有多广。在本书的范围内，日志记录不被视为监控。
- en: 'The monitoring service''s location needs to be propagated to all targets. Staleness
    is a big drawback of this approach: if a system hasn''t reported in for some time,
    does that mean it''s having problems, or was it purposely decommissioned? Furthermore,
    when you manage a distributed fleet of hosts and services that push data to a
    central point, the risk of a thundering herd (overload due to many incoming connections
    at the same time) or a misconfiguration causing an unforeseen flood of data becomes
    much more complex and time-consuming to mitigate.'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监控服务的位置需要传播到所有目标。时效性是这种方法的一个大缺点：如果系统一段时间没有报告，是否意味着它有问题，还是被故意停用？此外，当你管理一个分布式的主机和服务集群，数据推送到中央点时，成群涌来的请求（由于大量同时到来的连接导致的超载）或配置错误导致的数据洪流的风险变得更加复杂和耗时，需要缓解。
- en: The RED method is a very good starting point, opting for rate, errors, and duration
    metrics.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: RED 方法是一个非常好的起点，选择速率、错误和持续时间指标。
- en: This is a blackbox approach to monitoring and should instead rely on instrumenting
    said process directly or via an exporter.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一种黑箱式的监控方法，应该依赖于直接或通过 exporter 仪表化该过程。
- en: Chapter 2, An Overview of the Prometheus Ecosystem
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章，Prometheus 生态系统概述
- en: The main components are Prometheus, Alertmanager, Pushgateway, Native Instrumented
    Applications, Exporters, and Visualization solutions.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主要组件包括 Prometheus、Alertmanager、Pushgateway、原生仪表化应用程序、Exporters 和可视化解决方案。
- en: Only Prometheus and scrape targets (whether they are natively instrumented or
    use exporters) are essential for a Prometheus deployment. However, to have alert
    routing and management, you also need Alertmanager; Pushgateway is only required
    in very specific use cases, such as batch jobs; while Prometheus does have basic
    dashboarding functionality built in, Grafana can be added to the stack as the
    visualization option.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅 Prometheus 和抓取目标（无论它们是原生仪表化的还是使用 exporters）是 Prometheus 部署所必需的。然而，为了实现警报路由和管理，你还需要
    Alertmanager；Pushgateway 仅在某些特定用例中需要，比如批处理作业；虽然 Prometheus 自带基本的仪表盘功能，但可以将 Grafana
    添加到堆栈中作为可视化选项。
- en: Not all applications are built with Prometheus-compatible instrumentation. Sometimes,
    no metrics at all are exposed. In these cases, we can rely on exporters.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并非所有应用程序都采用 Prometheus 兼容的仪表化。某些情况下，根本没有暴露任何指标。在这些情况下，我们可以依赖 exporters。
- en: The information should be quickly gathered and exposed in a synchronous operation.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 信息应该迅速收集并以同步操作方式暴露。
- en: Alerts will be sent from both sides of the partition, if possible.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果可能，警报将从分区的两侧发送。
- en: The quickest option would be to use the webhook integration.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最快捷的选项是使用 webhook 集成。
- en: The Prometheus server comes with an expression browser and consoles.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Prometheus 服务器自带表达式浏览器和控制台。
- en: Chapter 3, Setting Up a Test Environment
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章，设置测试环境
- en: While the Prometheus stack can be deployed in almost every mainstream operating
    system, and thus, it will most certainly run in your desktop environment, it is
    more reproducible to use a Vagrant-based test environment for simulating machine
    deployments, and minikube to do the same for Kubernetes-based production environments.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然 Prometheus 堆栈几乎可以在所有主流操作系统中部署，因此它很可能在你的桌面环境中运行，但使用基于 Vagrant 的测试环境来模拟机器部署，以及使用
    minikube 来模拟基于 Kubernetes 的生产环境，会更具可重复性。
- en: The `defaults.sh` file located in the `utils` directory allows the software
    versions to be changed for the virtual machine-based examples.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 位于 `utils` 目录下的 `defaults.sh` 文件允许为基于虚拟机的示例更改软件版本。
- en: The default subnet is `192.168.42.0/24` in all virtual machine-based examples.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有基于虚拟机的示例中的默认子网是 `192.168.42.0/24`。
- en: 'The steps to get a Prometheus instance up and running are as follows:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Prometheus 实例的步骤如下：
- en: Ensure that software versions match the ones recommended.
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保软件版本与推荐版本匹配。
- en: Clone the code repository provided.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆提供的代码仓库。
- en: Move into the chapter directory.
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入章节目录。
- en: Run `vagrant up`.
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `vagrant up`。
- en: When finished, run `vagrant destroy -f`.
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，运行 `vagrant destroy -f`。
- en: That information is available in the Prometheus web interface under `/targets`.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该信息可以在 Prometheus Web 界面的 `/targets` 下查看。
- en: Under `./cache/alerting.log`.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 位于 `./cache/alerting.log`。
- en: In any chapter, when you are done with the test environment, just run `vagrant
    destroy -f` under the said chapter's directory.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任何章节中，当你完成测试环境后，只需在该章节的目录下运行 `vagrant destroy -f`。
- en: Chapter 4, Prometheus Metrics Fundamentals
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章，Prometheus 指标基础
- en: Time series data can be defined as a sequence of numerical data points collected
    chronologically from the same source – usually at a fixed interval. As such, this
    kind of data, when represented in a graphical form, will plot the evolution of
    the data through time, with the *x*-axis being time and the *y*-axis the data
    value.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 时间序列数据可以定义为按时间顺序从同一来源收集的数值数据点序列——通常是以固定的间隔收集。因此，这种数据在图形化表示时，会描绘数据随时间的演变，其中 *x*
    轴是时间，*y* 轴是数据值。
- en: A timestamp, a value, and tags/labels.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个时间戳，一个值，以及标签/标签。
- en: The **write-ahead log** (**WAL**).
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**预写日志**（**WAL**）。'
- en: The default is 2h and should not be changed.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认值是 2 小时，不应更改。
- en: A float64 value and a timestamp with millisecond precision.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个 float64 值和具有毫秒精度的时间戳。
- en: Histograms are especially useful for tracking bucketed latencies and sizes (for
    example, request durations or response sizes) as they can be freely aggregated
    across different dimensions. Another great use is to generate heatmaps (the evolution
    of histograms over time).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直方图对于跟踪分桶的延迟和大小（例如，请求持续时间或响应大小）特别有用，因为它们可以跨不同维度自由聚合。另一个很好的用途是生成热图（直方图随时间的演变）。
- en: Summaries without quantiles are quite cheap to generate, collect, and store.
    The main reason for using summary quantiles is when accurate quantile estimation
    is needed, irrespective of the distribution and range of the observed events.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不带分位数的摘要生成、收集和存储的成本非常低。使用摘要分位数的主要原因是在需要准确的分位数估计时，无论观察到的事件的分布和范围如何。
- en: Cross-sectional aggregation combines multiple time series into one by aggregated
    dimension; longitudinal aggregation combines samples from a single time series
    over a time range into a single data point.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 横向聚合通过聚合维度将多个时间序列合并为一个；纵向聚合则将来自单一时间序列的样本在时间范围内合并为一个数据点。
- en: Chapter 5, Running a Prometheus Server
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章，运行 Prometheus 服务器
- en: Then, `scrape_timeout` will be set to its default – 10 seconds.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，`scrape_timeout` 将被设置为其默认值——10 秒。
- en: Besides restarting, the configuration file can be reloaded by either sending
    a `SIGHUP` signal to the Prometheus process or sending an HTTP POST request to
    the `/-/reload` endpoint if `--web.enable-lifecycle` is used at startup.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了重启外，配置文件还可以通过向 Prometheus 进程发送 `SIGHUP` 信号或如果启动时使用了 `--web.enable-lifecycle`，通过向
    `/-/reload` 端点发送 HTTP POST 请求来重新加载。
- en: Prometheus will look back up to five minutes by default, unless it finds a stale
    marker, in which case it will immediately consider the series stale.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Prometheus 默认会回溯最多五分钟，除非发现过时标记，在这种情况下，它会立即将该系列视为过时。
- en: While `relabel_configs` is used to rewrite the target list before the scrape
    is performed, `metric_relabel_configs` is used to rewrite labels or drop samples
    after the scrape has occurred.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 `relabel_configs` 用于在抓取前重写目标列表时，`metric_relabel_configs` 用于在抓取后重写标签或丢弃样本。
- en: As we're scraping through a Kubernetes service (which is similar in function
    to a load balancer), the scrapes will hit only a single instance of the *Hey*
    application at a time.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们是通过 Kubernetes 服务（其功能类似于负载均衡器）进行抓取的，因此每次抓取仅会命中 *Hey* 应用程序的一个实例。
- en: Due to the ephemeral nature of Kubernetes pods, it would be almost impossible
    to accurately manage the scrape targets using static configurations without additional
    automation.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于 Kubernetes pod 的短暂性质，几乎不可能在没有额外自动化的情况下使用静态配置准确管理抓取目标。
- en: The Prometheus Operator leverages Kubernetes Custom Resources and Custom Controllers
    to declare domain-specific definitions that can be used to automatically manage
    a Prometheus stack and its scrape jobs.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Prometheus Operator 利用 Kubernetes 自定义资源和自定义控制器声明特定领域的定义，这些定义可以用来自动管理 Prometheus
    堆栈及其抓取任务。
- en: Chapter 6, Exporters and Integrations
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章，导出器和集成
- en: The textfile collector enables the exposition of custom metrics by watching
    a directory for files with the `.prom` extension that contain metrics in the Prometheus
    exposition format.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文本文件收集器通过监视目录中的`.prom`扩展名文件，启用自定义指标的展示，这些文件包含 Prometheus 展示格式的指标。
- en: Data is collected from the container runtime daemon and from Linux cgroups.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据是从容器运行时守护进程和 Linux cgroups 中收集的。
- en: You can restrict the number of collectors (`--collectors`) to enable, or use
    the metric whitelist (`--metric-whitelist`) or blacklist (`--metric-blacklist`)
    flags.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以限制启用的收集器数量（`--collectors`），或者使用指标白名单（`--metric-whitelist`）或黑名单（`--metric-blacklist`）标志。
- en: When debugging probes, you can append `&debug=true` to the HTTP GET URL to enable
    debug information.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在调试探针时，你可以将 `&debug=true` 附加到 HTTP GET URL，以启用调试信息。
- en: We can use `mtail` or `grok_exporter` to extract metrics from the application
    logs.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用 `mtail` 或 `grok_exporter` 从应用程序日志中提取指标。
- en: One possible problem is the lack of high availability, making it a single point
    of failure. This also impacts scalability, as the only way to scale is vertically
    or by sharding. By using Pushgateway, Prometheus does not scrape an instance directly,
    which prevents having the `up` metric be a proxy for health monitoring. Additionally,
    and like the textfile collector from `node_exporter`, metrics need to be manually
    deleted from Pushgateway, via its API, or they will forever be exposed to Prometheus
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个可能的问题是缺乏高可用性，导致其成为单点故障。这也影响了可扩展性，因为唯一的扩展方式是垂直扩展或分片。通过使用 Pushgateway，Prometheus
    不直接抓取实例，这避免了将 `up` 指标作为健康监控的代理。此外，和 `node_exporter` 的文本文件收集器类似，指标需要通过 Pushgateway
    的 API 手动删除，否则它们将永远暴露给 Prometheus。
- en: In this particular case, the textfile collector from Node Exporter can be a
    valid solution, particularly when the life cycle of the produced metric matches
    the life cycle of the instance.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这种特殊情况下，Node Exporter 的文本文件收集器可以是一个有效的解决方案，特别是当生成的指标的生命周期与实例的生命周期匹配时。
- en: Chapter 7, Prometheus Query Language - PromQL
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七章，Prometheus 查询语言 - PromQL
- en: The comparison operators are `<` (less than), `>` (greater than), `==` (equals),
    `!=` (differs), `=>` (greater than or equal to), and `<=` (less than or equal
    to).
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较运算符包括 `<`（小于）、`>`（大于）、`==`（等于）、`!=`（不等于）、`=>`（大于或等于）和 `<=`（小于或等于）。
- en: When the time series you want to enrich are on the right-hand side of the PromQL
    expression.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你想要丰富的时间序列位于 PromQL 表达式的右侧时。
- en: '`topk` already sorts its results.'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`topk` 已经对结果进行了排序。'
- en: While the `rate()` function provides the per-second average rate of change over
    the specified interval by using the first and last values in the range scaled
    to fit the range window, the `irate()` function uses the last two values in the
    range for the calculation, which produces the instant rate of change.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然 `rate()` 函数通过使用范围内的第一个和最后一个值，并按范围窗口缩放来提供指定时间间隔内每秒的平均变化率，但 `irate()` 函数则使用范围内的最后两个值进行计算，从而得出瞬时变化率。
- en: Metrics of type info have their names ending in `_info` and are regular gauges
    with one possible value, `1`. This special kind of metric was designed to be a
    place where labels whose values might change over time are stored, such as versions
    (for example, exporter version, language version, and kernel version), assigned
    roles, or VM metadata information.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类型为 info 的指标名称以 `_info` 结尾，是常规的仪表，只有一个可能的值 `1`。这种特殊类型的指标被设计用来存储那些随着时间变化的标签值，例如版本（例如，导出器版本、语言版本和内核版本）、分配的角色或虚拟机元数据等信息。
- en: The `rate` function expects a counter, but a sum of counters is actually a gauge,
    as it can go down when one of the counters resets; this would translate into seemingly
    random spikes when graphed, because `rate` would consider any decrease a counter
    reset, but the total sum of the other counters would be considered a huge delta
    between zero and the current value.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rate` 函数期望一个计数器，但计数器的总和实际上是一个仪表，因为当计数器之一重置时，它可以下降；这在绘制图表时会导致看似随机的尖峰，因为 `rate`
    会将任何下降视为计数器重置，但其他计数器的总和会被认为是从零到当前值的巨大增量。'
- en: 'When a CPU core is being used 100%, it uses 1 CPU second. Conversely, when
    it''s idle, it will use 0 CPU seconds. This makes it easy to calculate the percentage
    of usage, as we can utilize the CPU seconds directly. A virtual machine might
    have more than one core, which means that it might use more than 1 CPU second
    per second. The following expression calculates how many CPU seconds per second
    each core was idling in the last 5 minutes:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当CPU核心使用100%时，它使用1个CPU秒。相反，当它处于空闲状态时，它将使用0个CPU秒。通过直接利用CPU秒，我们可以轻松计算使用百分比。虚拟机可能拥有多个核心，这意味着每秒可能使用超过1个CPU秒。以下表达式计算每个核心在过去5分钟内每秒空闲了多少CPU秒：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'A simple way to calculate the average CPU idle seconds per second for the last
    five minutes is to average the value for each core:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 计算过去五分钟内每个核心每秒的平均CPU空闲秒数的简单方法是对每个核心的值进行平均：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As CPU seconds used, plus CPU seconds idle, should total `1` CPU second per
    second per core, to get the CPU usage, we do the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于使用的CPU秒数加上空闲的CPU秒数应总计为每核心每秒`1`个CPU秒，为了获得CPU使用率，我们执行以下操作：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To get a percentage, we just need to multiply by `100`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得百分比，我们只需将其乘以`100`：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Chapter 8, Troubleshooting and Validation
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章，故障排除与验证
- en: 'Prometheus is distributed with `promtool` which, among other functions, can
    check a configuration file for issues:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Prometheus随附`promtool`，该工具具有其他功能，其中之一是检查配置文件中的问题：
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The `promtool` utility can also read metrics in the Prometheus exposition format
    from `stdin` and validate them according to the current Prometheus standards:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`promtool`工具还可以从`stdin`读取Prometheus展示格式的度量，并根据当前的Prometheus标准进行验证：'
- en: '[PRE5]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `promtool` utility can be used to run instant queries against a Prometheus
    instance:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`promtool`工具可以用来对Prometheus实例执行即时查询：'
- en: '[PRE6]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can use `promtool` to find every label value for a given label name. One
    example is the following:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用`promtool`查找给定标签名称的每个标签值。一个例子如下：
- en: '[PRE7]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: By adding `--log.level=debug` to the start-up parameters.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将`--log.level=debug`添加到启动参数中。
- en: The `/-/healthy` endpoint will tell you (or the orchestration system) whether
    the instance has issues and needs to be redeployed, while the `/-/ready` endpoint
    will tell you (or your instance's load balancer) whether it is ready to receive
    traffic.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/-/healthy`端点将告诉你（或编排系统）实例是否有问题，需要重新部署，而`/-/ready`端点将告诉你（或实例的负载均衡器）是否准备好接收流量。'
- en: 'While the Prometheus database is unlocked (for example, when no Prometheus
    is using that directory), you can run the `tsdb` utility to analyze a specific
    block of data for metric and label churn:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当Prometheus数据库处于解锁状态时（例如，当没有Prometheus使用该目录时），你可以运行`tsdb`工具来分析特定的数据块，检查指标和标签的变化：
- en: '[PRE8]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Chapter 9, Defining Alerting and Recording Rules
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章，定义告警与记录规则
- en: This type of rules can help take the load off heavy dashboards by pre-computing
    expensive queries, aggregate raw data into time series that can then be exported
    to external systems, and assist the creation of compound range vector queries.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这种规则可以通过预先计算昂贵的查询、将原始数据聚合为时间序列并导出到外部系统，帮助减轻重型仪表板的负担，并协助创建复合范围向量查询。
- en: '`instance_job:latency_seconds_bucket:rate30s` needs to have at least the `instance`
    and `job` labels. It was calculated by applying the rate to the `latency_seconds_bucket_total`
    metric, using a 30-second range vector. Thus, the originating expression could
    probably be as follows:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`instance_job:latency_seconds_bucket:rate30s`需要至少具有`instance`和`job`标签。它是通过对`latency_seconds_bucket_total`度量应用速率计算得出的，使用了30秒的范围向量。因此，源表达式可能是以下形式：'
- en: '[PRE9]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As that label changes its value, so will the identity of the alert.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随着该标签值的变化，警报的身份也会发生变化。
- en: An alert enters the *pending* state when it starts triggering (its expression
    starts returning results), but the `for` interval hasn't elapsed yet to be considered
    *firing*.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当警报开始触发（其表达式开始返回结果）时，它进入*待处理*状态，但`for`时间间隔尚未过去，因此不会被视为*触发*。
- en: It would be immediate. When the `for` clause isn't specified, the alert will
    be considered firing as soon as its expression produces results.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将是即时的。当没有指定`for`子句时，只要表达式产生结果，警报就会被视为触发。
- en: The `promtool` utility has a `test` sub-command that can run unit tests for
    recording and alerting rules.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`promtool`工具具有一个`test`子命令，可以为记录和告警规则运行单元测试。'
- en: Chapter 10, Discovering and Creating Grafana Dashboards
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章，发现与创建Grafana仪表板
- en: Grafana supports automatic provisioning of data sources by reading YAML definitions
    from a provisioning path at startup.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Grafana支持通过在启动时从配置路径读取YAML定义来自动配置数据源。
- en: 'Steps to import a dashboard from the Grafana gallery are as follows:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Grafana画廊导入仪表盘的步骤如下：
- en: Choose a dashboard ID from the [grafana.com](https://grafana.com/dashboards)
    gallery.
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[grafana.com](https://grafana.com/dashboards)画廊中选择一个仪表盘ID。
- en: In the target Grafana instance, click on the plus sign in the main menu on the
    left-hand side and select **Import** from the sub-menu.
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在目标Grafana实例中，点击左侧主菜单中的加号，然后从子菜单中选择**导入**。
- en: Paste the chosen ID in the appropriate text field.
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将选定的ID粘贴到适当的文本字段中。
- en: Variables allow a dashboard to configure placeholders that can be used in expressions
    and title strings, and those placeholders can be filled with values from either
    a static or dynamic list, which are usually presented to the dashboard user in
    the form of a drop-down menu. Whenever the selected value changes, Grafana will
    automatically update the queries in panels and title strings that use that respective
    variable.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 变量允许仪表盘配置占位符，这些占位符可以用于表达式和标题字符串，并且这些占位符可以从静态或动态列表中填充值，通常以下拉菜单的形式展示给仪表盘用户。每当选择的值发生变化时，Grafana会自动更新使用该变量的面板查询和标题字符串。
- en: In Grafana, the building block is the panel.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Grafana中，构建块是面板。
- en: No, it does not. The dashboard ID will remain the same, but the iteration will
    be incremented.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，实际上不会。仪表盘ID保持不变，但迭代次数会递增。
- en: Consoles are custom dashboards that are served directly from a Prometheus instance.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 控制台是直接从Prometheus实例提供的自定义仪表盘。
- en: They are generated from console templates, which are written in raw HTML/CSS/JavaScript
    and leverage the power of the Go templating language, making them endlessly customizable.
    Since the templating runs inside Prometheus, it can access the TSDB directly instead
    of going through the HTTP API, which makes console generation amazingly quick.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它们是从控制台模板生成的，这些模板用原始的HTML/CSS/JavaScript编写，并利用Go模板语言的强大功能，使得它们具有无限的可定制性。由于模板运行在Prometheus内部，它可以直接访问TSDB，而无需通过HTTP
    API，这使得控制台生成速度惊人地快。
- en: Chapter 11, Understanding and Extending Alertmanager
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章，理解和扩展Alertmanager
- en: 'In the case of a network partition, each side of the partition will send notifications
    for the alerts they are aware of: in a clustering failure scenario, it''s better
    to receive duplicate notifications for an issue than to not get any at all.'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网络分区的情况下，分区的每一方都会发送它们已知的告警通知：在集群故障场景下，收到重复的告警通知总比完全没有告警好。
- en: By setting `continue` to `true` on a route, it will make the matching process
    keep going through the routing tree until the next match, thereby allowing multiple
    receivers to be triggered.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在路由上将`continue`设置为`true`，它会使匹配过程继续遍历路由树，直到找到下一个匹配，从而允许触发多个接收器。
- en: The `group_interval` configuration defines how long to wait for additional alerts
    in a given alert group (defined by `group_by`) before sending an updated notification
    when a new alert is received; `repeat_interval` defines how long to wait until
    resending notifications for a given alert group when there are no changes.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`group_interval`配置定义了在接收到新告警时，等待额外告警加入给定告警组（由`group_by`定义）多长时间，才会发送更新通知；`repeat_interval`定义了在没有变化的情况下，等待多长时间才会重新发送给定告警组的通知。'
- en: The top-level route, also known as the catch-all or fallback route, will trigger
    a default receiver when incoming alerts aren't matched in other sub-routes.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 顶级路由，也称为捕获所有路由或后备路由，在其他子路由未匹配到传入的告警时，会触发默认的接收器。
- en: The webhook integration allows Alertmanager to issue an HTTP POST request with
    the JSON payload of the notification to a configurable endpoint. This allows you
    to run a bridge that can convert notifications from Alertmanager to your chosen
    notification provider's format, and then forward them to it.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Webhook集成允许Alertmanager向一个可配置的端点发送HTTP POST请求，并带上通知的JSON有效负载。这允许你运行一个桥接程序，将Alertmanager的通知转换为你选择的通知提供商格式，然后转发给它。
- en: The `CommonLabels` field is populated with the labels that are common to all
    alerts in the notification. The `CommonAnnotations` field does exactly the same,
    but for annotations.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`CommonLabels`字段包含了所有通知中通用的告警标签。`CommonAnnotations`字段的作用完全相同，但适用于注释。'
- en: 'A good approach is to use a deadman''s switch alert: create an alert that is
    guaranteed to always be firing, and then configure Alertmanager to route that
    alert to a (hopefully) external system that will be responsible for letting you
    know whether it ever stops receiving notifications.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个好的方法是使用“死人开关”警报：创建一个始终会触发的警报，然后配置Alertmanager将该警报路由到一个（希望是）外部系统，该系统将负责通知你该警报是否停止接收通知。
- en: Chapter 12, Choosing the Right Service Discovery
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章，选择合适的服务发现
- en: Managing scrape targets in a highly dynamic environment becomes an arduous task
    without automatic discovery.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在一个高度动态的环境中管理抓取目标，若没有自动发现机制，会变得十分艰巨。
- en: Having a set of access credentials with sufficient permissions to list all the
    required resources through its API.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拥有一组具有足够权限的访问凭证，可以通过其API列出所有所需资源。
- en: It supports A, AAAA, and SRV DNS records.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它支持A、AAAA和SRV DNS记录。
- en: Due to the large number of API objects available to query, the Kubernetes discovery
    configuration for Prometheus has the concept of *role*, which can be either `node`,
    `service`, `pod`, `endpoint`, or `ingress`. Each will make available their corresponding
    set of objects for target discovery.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于可查询的API对象数量庞大，Prometheus的Kubernetes发现配置引入了*角色*的概念，角色可以是`node`、`service`、`pod`、`endpoint`或`ingress`。每个角色将提供相应的对象集以供目标发现。
- en: The best mechanism for implementing a custom service discovery is to use file-based
    discovery integration to inject targets into Prometheus.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现自定义服务发现的最佳机制是使用基于文件的发现集成，将目标注入到Prometheus中。
- en: No. Prometheus will try to use filesystem watches to automatically detect when
    there are changes and then reload the target list, and will fall back to re-reading
    target files on a schedule if watches aren't available.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不是的。Prometheus会尝试使用文件系统监视自动检测何时发生变化，然后重新加载目标列表，如果监视不可用，则会回退到定期重新读取目标文件。
- en: It's recommended to use the adapter code available in the Prometheus code repository,
    as it abstracts much of the boilerplate needed to implement a discovery mechanism.
    Additionally, if you intend to contribute your custom service discovery to the
    project, the adapter makes it easy to incorporate the service discovery code into
    the main Prometheus binary, were it to gain traction and community support.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 推荐使用在Prometheus代码库中提供的适配器代码，因为它抽象了实现发现机制所需的大部分样板代码。此外，如果你打算将自定义的服务发现功能贡献给项目，适配器使得将服务发现代码轻松地集成到主Prometheus二进制文件中，假如它能够获得广泛支持和社区支持的话。
- en: Chapter 13, Scaling and Federating Prometheus
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章，Prometheus的扩展与联邦
- en: You should consider sharding when you're sure a single instance isn't enough
    to handle the load, and you can't run it with more resources.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你确认单个实例不足以处理负载，而且无法通过增加资源来运行时，你应该考虑分片。
- en: Vertical sharding is used to split scrape workload according to responsibility
    (for example, by function or team), where each Prometheus shard scrapes different
    jobs. Horizontal sharding splits loads from a single scrape job into multiple
    Prometheus instances.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 垂直分片用于根据职责（例如按功能或团队）拆分抓取工作负载，每个Prometheus分片抓取不同的任务。水平分片则将单个抓取任务的负载拆分到多个Prometheus实例中。
- en: To reduce the ingestion load on a Prometheus instance, you should consider dropping
    unnecessary metrics through the use of `metric_relabel_configs` rules, or by increasing
    the scrape interval so that fewer samples are ingested in total.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了减少Prometheus实例的接收负载，你应该考虑通过使用`metric_relabel_configs`规则来丢弃不必要的指标，或者通过增加抓取间隔来减少总体抓取样本数量。
- en: Instance-level Prometheus servers should federate job-level aggregate metrics.
    Job-level Prometheus servers should federate datacenter-level aggregate metrics.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实例级的Prometheus服务器应该联合作业级的聚合指标。作业级的Prometheus服务器应该联合数据中心级的聚合指标。
- en: You might need to use metrics only available in other Prometheus instances in
    recording and alerting rules.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能需要在记录和警报规则中使用其他Prometheus实例中才有的指标。
- en: The protocol used is gRPC.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用的协议是gRPC。
- en: You will lose the ability to use the Thanos deduplication feature.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将失去使用Thanos去重功能的能力。
- en: Chapter 14, Integrating Long-Term Storage with Prometheus
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章，Prometheus与长期存储的集成
- en: 'The main advantages of basing the remote write feature on the WAL are: it makes
    streaming of metrics possible, has a much smaller memory footprint, and it’s more
    resilient to crashes.'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将远程写入功能基于WAL的主要优点是：它使得指标流式传输成为可能，具有更小的内存占用，并且对崩溃更具恢复力。
- en: You can request Prometheus to produce a snapshot of the TSDB by using the `/api/v1/admin/tsdb/snapshot`
    API endpoint (only available when the `--web.enable-admin-api` flag is enabled),
    and then back up the snapshot.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过使用`/api/v1/admin/tsdb/snapshot` API端点请求 Prometheus 生成 TSDB 快照（仅在启用`--web.enable-admin-api`标志时可用），然后备份该快照。
- en: You can delete time series from the TSDB by using the `/api/v1/admin/tsdb/delete_series`
    API endpoint and then using the `/api/v1/admin/tsdb/clean_tombstones` to make
    Prometheus clean up the deleted series (these endpoints will only be available
    when the `--web.enable-admin-api` flag is enabled).
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过使用`/api/v1/admin/tsdb/delete_series` API端点从 TSDB 中删除时间序列，然后使用`/api/v1/admin/tsdb/clean_tombstones`来让
    Prometheus 清理已删除的序列（这些端点仅在启用`--web.enable-admin-api`标志时可用）。
- en: Object storage usually provides 99.999999999% durability and 99.99% availability
    service-level agreements, and it’s quite cheap in comparison to block storage.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对象存储通常提供 99.999999999% 的耐久性和 99.99% 的可用性服务水平协议，与块存储相比，它的费用非常低廉。
- en: Yes. For example, keeping the raw data is useful for zooming into short time
    ranges in the past.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的。例如，保留原始数据对于缩放到过去的短时间范围非常有用。
- en: Thanos store provides an API gateway between Thanos Querier and object storage.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Thanos store 提供了 Thanos Querier 与对象存储之间的 API 网关。
- en: Data in object storage can be inspected using the `thanos bucket` sub-command,
    which also allows verifying, repairing, listing and inspecting storage buckets.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以使用`thanos bucket`子命令检查对象存储中的数据，该命令还支持验证、修复、列出和检查存储桶。
