- en: Developing a Customized Solution for Dynamics 365 Business Central
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Dynamics 365 Business Central 开发定制化解决方案
- en: In the previous chapter, we saw the fundamentals of extension development for
    Dynamics 365 Business Central and we analyzed all of the building blocks for creating
    extensions, such as events and basic objects definitions, and how to extend standard
    objects.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了 Dynamics 365 Business Central 扩展开发的基本知识，并分析了创建扩展的所有构建模块，如事件和基本对象定义，以及如何扩展标准对象。
- en: In this chapter, we'll put all of these concepts together and create a real-world
    extension for Dynamics 365 Business Central. These extensions will be created
    by using **AppSource** guidelines and best code practices.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将把所有这些概念结合起来，并为 Dynamics 365 Business Central 创建一个实际的扩展。这些扩展将按照**AppSource**的指导原则和最佳代码实践进行创建。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Translating a business case into a real-world extension
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将业务案例转化为实际扩展
- en: Understanding dependent extension
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解依赖扩展
- en: Translating a business case into a real-world extension
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将业务案例转化为实际扩展
- en: In this section, let's imagine having a Dynamics 365 Business Central customer
    with various business requirements. We want to create an extension to satisfy
    this customer's needs.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，让我们假设有一个拥有各种业务需求的 Dynamics 365 Business Central 客户。我们希望创建一个扩展来满足该客户的需求。
- en: Our customer is a big commercial company that has adopted Dynamics 365 Business
    Central as the company's ERP and has various business requirements that require
    customization of the standard features to be satisfied.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的客户是一家大型商业公司，已将 Dynamics 365 Business Central 作为公司 ERP，并且有多种业务需求，要求定制化标准功能以满足其需求。
- en: 'The business requirements are as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 业务需求如下：
- en: 'Sales: These requirements include the following:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 销售：这些要求包括以下内容：
- en: The company wants to classify customers based on custom categories that they
    can define as needed and that can change in the future. Each `Customer Category`
    must have its own details that can be used for some business processes.
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该公司希望根据自定义类别对客户进行分类，这些类别可以根据需要定义，并且将来可以更改。每个`客户类别`必须有其详细信息，这些信息可以用于某些业务流程。
- en: The sales office must be able to create a default `Customer Category` and assign
    this default value to a customer automatically.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 销售部门必须能够创建默认的`客户类别`，并将此默认值自动分配给客户。
- en: The sales office needs the possibility to create gift campaigns for customer
    categories. A gift campaign is related to a limited period of time and a limited
    set of items.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 销售部门需要能够为客户类别创建赠品活动。赠品活动与特定的时间段和一组限定的商品相关。
- en: A gift campaign can be set to inactive for a certain period of time.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 赠品活动可以在某一段时间内设置为非活动状态。
- en: When a gift campaign is active, the sales order manager must be able to automatically
    assign free gifts on a customer's sales order (they need a button on a sales order
    document that analyzes the order content, checks whether a campaign is active,
    and creates the free gift lines accordingly).
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当赠品活动处于激活状态时，销售订单经理必须能够在客户的销售订单上自动分配赠品（他们需要在销售订单文档上有一个按钮，分析订单内容，检查是否有活动促销，并相应地创建赠品行）。
- en: When a sales operator inserts a sales order line, they should be alerted if
    the customer is ordering an item quantity near to an active campaign promotion.
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当销售操作员插入销售订单行时，如果客户订购的商品数量接近于一个正在进行的活动促销，他们应该被提醒。
- en: When a sales order is posted, the generated item ledger entry must store the
    `Customer Category` value (at the time of this order) for reporting purposes.
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当销售订单过账时，生成的商品账单条目必须存储`客户类别`值（订单生成时的值），以供报告使用。
- en: 'Vendor quality: These requirements include the following:'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 供应商质量：这些要求包括以下内容：
- en: 'The company has a quality process in place (CSQ, international institute for
    the certification of business quality) and they need to classify vendors according
    to their CSQ requirements:'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公司已实施质量管理流程（CSQ，国际商业质量认证机构），并需要根据其 CSQ 要求对供应商进行分类：
- en: Score related to item quality (from 1 to 10)
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与商品质量相关的评分（从1到10）
- en: Score related to delivery on time (from 1 to 10)
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与按时交付相关的评分（从1到10）
- en: Score related to item packaging (from 1 to 10)
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与商品包装相关的评分（从1到10）
- en: Score related to pricing (from 1 to 10)
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定价相关的评分（从1到10）
- en: 'The `Vendor Quality Card` must also display some financial data:'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`供应商质量卡`还必须显示一些财务数据：'
- en: Invoiced for current year *N*
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本年度已开票 *N*
- en: Invoiced for the year *N-1*
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本年度已开票 *N-1*
- en: Invoiced for the year *N-2*
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开具 *N-2* 年度的发票
- en: Amount due for this vendor
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此供应商的应付金额
- en: Amount to pay (not already due) for this vendor
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此供应商的应付金额（尚未到期）
- en: The assigned scores determine a vendor rating (a numeric value) based on an
    algorithm.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配的分数根据算法确定供应商评分（一个数字值）。
- en: The purchase office cannot release a purchase order if the vendor does not meet
    standard company requirements (the vendor rating).
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果供应商不符合公司标准要求（供应商评分），采购部门不能发布采购订单。
- en: The application's behavior could be extended in the future.
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该应用的行为将来可能会扩展。
- en: These customizations will be developed as a single extension by using the per-tenant
    range (50.000 – 99.999). We will use AppSource rules and we'll use the **PKT**
    tag (registered with Microsoft as our AppSource prefix/suffix) to target all of
    our objects. The project's `.al` files will be named according to the AppSource
    naming conventions.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些自定义将作为一个单一的扩展进行开发，使用每租户范围（50.000 – 99.999）。我们将使用 AppSource 规则，并使用 **PKT**
    标签（已在 Microsoft 注册为我们的 AppSource 前缀/后缀）来定位所有对象。项目的 `.al` 文件将按照 AppSource 命名约定命名。
- en: We start our development tasks by opening Visual Studio Code and creating a
    new extension project (View | Command Palette | AL:GO!), selecting the Wave 2
    release as the target.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过打开 Visual Studio Code 并创建一个新的扩展项目（查看 | 命令面板 | AL:GO!），选择 Wave 2 发布版本作为目标，开始我们的开发任务。
- en: 'We set the extension''s manifest file (`app.json`) as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了扩展的清单文件（`app.json`），如下所示：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, we set the extension details, such as the name, publisher, version, description,
    the path of the logo image, the admitted object range IDs (from 50100 to 50149),
    and the supported runtime version.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们设置扩展的详细信息，例如名称、发布者、版本、描述、徽标图像路径、已批准的对象范围 ID（从 50100 到 50149）和支持的运行时版本。
- en: 'We also set the following option:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还设置了以下选项：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `TranslationFile` feature means that we want to have an XLIFF translation
    file that handles the multilanguage capabilities of this extension.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`TranslationFile` 功能意味着我们希望拥有一个 XLIFF 翻译文件，用于处理此扩展的多语言功能。'
- en: 'We want to organize our project structure with subfolders for functionalities
    and then for object types. Our base project structure will be as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望通过为功能和对象类型分别设置子文件夹来组织项目结构。我们的基本项目结构将如下所示：
- en: '![](img/3ab7a209-2c6d-4bdf-9985-db65ddf18427.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ab7a209-2c6d-4bdf-9985-db65ddf18427.png)'
- en: 'Here, we have an `Src` folder, and inside that, we have three main folders
    for functionalities:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有一个 `Src` 文件夹，里面有三个主要功能文件夹：
- en: '`CustomerCategory`: This contains the implementation of the `Customer Category`
    requirements.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CustomerCategory`：这是实现 `Customer Category` 需求的部分。'
- en: '`Gifts`: This contains the implementation of the gift campaign requirements.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Gifts`：这是实施赠品活动要求的部分。'
- en: '`VendorQuality`: This contains the implementation of the vendor quality requirements.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VendorQuality`：这是实施供应商质量要求的部分。'
- en: Inside each of these folders, we have subfolders organized into object types.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些文件夹内部，我们有按对象类型组织的子文件夹。
- en: Let's start working on each of these three modules.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始处理这三个模块中的每一个。
- en: Customer Category implementations
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户类别实现
- en: 'To handle the customer category management requirements, we need to do the
    following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理客户类别管理需求，我们需要执行以下操作：
- en: Define the `Customer Category` table.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义 `Customer Category` 表。
- en: Create the pages (user interface) that will handle the `Customer Category` entity
    (the `List` and `Card` pages).
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建将处理 `Customer Category` 实体的页面（`List` 和 `Card` 页面）。
- en: Add a new `Customer Category` field to the standard `Customer` table.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向标准 `Customer` 表添加一个新的 `Customer Category` 字段。
- en: Add the new field to the standard `Customer Card` page and add some actions
    to the `Customer` pages to handle some tasks.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新字段添加到标准的 `Customer Card` 页面，并在 `Customer` 页面上添加一些操作来处理某些任务。
- en: Create the business logic to handle the requirements.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建处理需求的业务逻辑。
- en: In the next sections, we'll see the definitions and implementations of the various
    objects in detail.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将详细查看各种对象的定义和实现。
- en: Tables definition
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表定义
- en: 'By using the `ttable` snippet, we define the `Customer Category` table as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `ttable` 代码片段，我们定义 `Customer Category` 表如下：
- en: '[PRE2]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The name of the object has the registered `_PKT` suffix (to be unique across
    the application).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对象的名称具有注册的 `_PKT` 后缀（确保在应用中唯一）。
- en: 'In this table definition, we have defined the following fields:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在此表定义中，我们定义了以下字段：
- en: '`Code`: This is the code of the category (the `key` field).'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Code`：这是类别的代码（`key` 字段）。'
- en: '`Description`: This is the description of the category.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Description`：这是类别的描述。'
- en: '`Default`: This is a `Boolean` field used to set the default category.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Default`：这是一个`Boolean`字段，用于设置默认类别。'
- en: '`FreeGiftsAvailable`: This is a `Boolean` field used to set whether the category
    can be used with gift campaigns.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FreeGiftsAvailable`：这是一个`Boolean`字段，用于设置该类别是否可以与赠品活动一起使用。'
- en: '`Blocked`: This is a `Boolean` field used to set the category as blocked (cannot
    be used).'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Blocked`：这是一个`Boolean`字段，用于设置类别为已阻止（不能使用）。'
- en: '`EnableNewsletter`: This is an option field used to select the newsletter type
    to send for this category (commercial purposes). This field is of the `enum` type.
    As described in the previous chapter, the `enum` type allows us to have an extendable
    option field.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`EnableNewsletter`：这是一个选项字段，用于选择要为该类别发送的通讯类型（商业用途）。该字段是`enum`类型。正如上一章所述，`enum`类型允许我们拥有一个可扩展的选项字段。'
- en: '`TotalCustomersForCategory`: This is a calculated field (`flowfield`) used
    to automatically calculate the number of customers associated with the selected
    category.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TotalCustomersForCategory`：这是一个计算字段（`flowfield`），用于自动计算与所选类别相关的客户数量。'
- en: 'This table''s definition has a keys section, where we have defined a primary
    key (the `No` field) and a secondary key with the `Description` field. This secondary
    key is defined with the `Unique` property set to `true`, and this ensures that
    you cannot have records in this table with the same value as this field:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 该表的定义包含一个键部分，在这里我们定义了主键（`No`字段）和一个次键（`Description`字段）。这个次键被定义为设置了`Unique`属性为`true`，确保在该表中不能有相同值的记录：
- en: '[PRE3]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `NewsletterType` enum is defined as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`NewsletterType`枚举定义如下：'
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As a generic programming rule, a table acts like a class and, in the table definition,
    we want to expose the methods related to that class. This is why we have defined
    a method (procedure) here called `GetSalesAmount` (which is used to return the
    total sales amount for the selected category). The method's implementation will
    be on an external codeunit (which will contain our business logic).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种通用编程规则，表格类似于类，在表的定义中，我们希望公开与该类相关的方法。这就是为什么我们在这里定义了一个名为`GetSalesAmount`（用于返回所选类别的总销售额）的方法。该方法的实现将在外部代码单元中（包含我们的业务逻辑）。
- en: We've also defined a setup table for this extension (the `Packt Extension Setup`
    table, which we'll use also in the next sections) to handle all of the variable
    parameters needed for the company's business configuration.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为该扩展定义了一个设置表（`Packt Extension Setup`表，我们将在接下来的章节中使用），用于处理公司业务配置所需的所有可变参数。
- en: 'This setup table is defined as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 该设置表定义如下：
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Having a dedicated setup table for an extension is a best practice because it
    permits you to consolidate the settings in a single place. If possible, please
    avoid adding setup settings to different standard Dynamics 365 Business Central
    setup tables.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 为扩展创建一个专用的设置表是最佳实践，因为它允许你将设置集中在一个地方。如果可能，请避免将设置添加到不同的标准Dynamics 365 Business
    Central设置表中。
- en: Pages definition
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面定义
- en: To handle the `Customer Category` records (insert, modify, delete, and select),
    we need to have a list page and a card page.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理`Customer Category`记录（插入、修改、删除和选择），我们需要有一个列表页面和一个卡片页面。
- en: By using the `tpage` snippet, we have defined a card page (`PageType = Card`)
    and a list page (`PageType = List`).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用` tpage`代码片段，我们定义了一个卡片页面（`PageType = Card`）和一个列表页面（`PageType = List`）。
- en: The list page (`Customer Category List_PKT`) has an action for creating a default
    `Customer Category` record (it calls a method defined in an external codeunit
    because we don't want business logic on pages).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 列表页面（`Customer Category List_PKT`）有一个创建默认`Customer Category`记录的操作（它调用了一个在外部代码单元中定义的方法，因为我们不希望在页面上有业务逻辑）。
- en: 'The code for the list page definition is as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 列表页面定义的代码如下：
- en: '[PRE6]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As a best practice, to improve the search experience and help users to easily
    find the correct page by using the search feature of Dynamics 365 Business Central,
    we have also defined the `AdditionalSearchTerms` property. These terms will be
    used in addition to the `Caption` page property to find the page via the search
    engine.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最佳实践，为了改善搜索体验并帮助用户通过Dynamics 365 Business Central的搜索功能轻松找到正确的页面，我们还定义了`AdditionalSearchTerms`属性。这些术语将与`Caption`页面属性一起用于通过搜索引擎查找页面。
- en: 'The CUSTOMER CATEGORY LIST page appears as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: CUSTOMER CATEGORY LIST页面如下所示：
- en: '![](img/80a4f4e9-52f6-4453-a81e-d4d6069aafe6.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80a4f4e9-52f6-4453-a81e-d4d6069aafe6.png)'
- en: 'The `card` page (`CustomerCategoryCard_PKT`) has different groups for displaying
    data on separate `FastTabs`. In the `OnAfterGetRecord` trigger, we calculate the
    total sales amount for the category, we assign that value to a global decimal
    field (called `TotalSalesAmount`), and we display this variable as a page field.
    The code is as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`card`页面（`CustomerCategoryCard_PKT`）有不同的组来分别在不同的`FastTabs`上显示数据。在`OnAfterGetRecord`触发器中，我们计算了该类别的总销售额，并将该值分配给一个全局小数字段（叫做`TotalSalesAmount`），然后将这个变量显示为页面字段。代码如下：'
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The ...CUSTOMER CATEGORY CARD page looks like this:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '...CUSTOMER CATEGORY CARD页面看起来是这样的：'
- en: '![](img/cbb62da8-8cf4-4fa0-9a84-9855f2944d59.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cbb62da8-8cf4-4fa0-9a84-9855f2944d59.png)'
- en: 'We''ve also created a page for the extension setup (called `Packt Extension
    Setup`), defined as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还创建了一个用于扩展设置的页面（叫做`Packt Extension Setup`），定义如下：
- en: '[PRE8]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This page looks like this:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个页面看起来是这样的：
- en: '![](img/f722db3c-e640-4c86-b330-9fe63288a840.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f722db3c-e640-4c86-b330-9fe63288a840.png)'
- en: This will permit the users to handle the settings for our extension.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这将允许用户处理我们扩展的设置。
- en: The tableextension definition
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`tableextension`定义'
- en: We need to create a new field in the `Customer` table to handle the `Customer
    Category` assignment and, in order to do that, we need to create a `tableextension`
    object. This can be done in AL by using the `ttableext` snippet.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在`Customer`表中创建一个新字段来处理`Customer Category`的分配，为了做到这一点，我们需要创建一个`tableextension`对象。这可以通过使用`ttableext`代码段在AL中完成。
- en: 'The `tableextension` object for the `Customer` table is defined as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`Customer`表的`tableextension`对象定义如下：'
- en: '[PRE9]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Here, we've also handled the `OnValidate` trigger for this field to avoid the
    insertion of a blocked category.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们还处理了该字段的`OnValidate`触发器，以避免插入被阻止的类别。
- en: 'We''ve also created a new secondary key on the `Customer` table based on this
    new field:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在`Customer`表上基于这个新字段创建了一个新的辅助键：
- en: '[PRE10]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'One of the requirements for this is to also add the `Customer Category Code`
    field to the `Item Ledger Entry` table (this must be written during posting for
    reporting purposes), so we have also defined the following `tableextension` object:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 其中一个需求是还需要将`Customer Category Code`字段添加到`Item Ledger Entry`表中（这个字段在过账时必须写入，以便于报告），因此我们还定义了以下`tableextension`对象：
- en: '[PRE11]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This new custom field will be used for statistical purposes.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个新的自定义字段将用于统计目的。
- en: The pageextension definition
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`pageextension`定义'
- en: This newly created `Customer Category` field must be visible on the `Customer
    Card` and `Customer List` pages.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这个新创建的`Customer Category`字段必须在`Customer Card`和`Customer List`页面上可见。
- en: 'To do that, we have defined two `pageextension` objects (by using the `tpageext`
    snippet). The following is the definition of the `pageextension` object for the
    `Customer Card` page:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们定义了两个`pageextension`对象（通过使用`tpageext`代码段）。以下是`Customer Card`页面的`pageextension`对象定义：
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This is the `pageextension` object definition for the `Customer List` page:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是`Customer List`页面的`pageextension`对象定义：
- en: '[PRE13]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Here, on the `Customer List` page, we've added an action to assign the category
    set as default to all customers. On `Customer Card`, the same action works on
    the currently selected record.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，在`Customer List`页面上，我们添加了一个操作，将默认设置的类别分配给所有客户。在`Customer Card`上，相同的操作将在当前选定的记录上执行。
- en: You can see here that these two functions call a method on an external codeunit
    called `AssignDefaultCategory`. This method has two implementations (it is overloaded),
    which we'll look at later in this chapter.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这两个函数调用了一个外部代码单元中的方法，叫做`AssignDefaultCategory`。这个方法有两个实现（是重载的），我们将在本章后面进一步探讨。
- en: 'The standard `Customer List` page now looks like this:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 标准的`Customer List`页面现在看起来像这样：
- en: '![](img/da668ba5-c50a-47f4-a193-0a27fce01d42.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/da668ba5-c50a-47f4-a193-0a27fce01d42.png)'
- en: '`Customer Card` looks like this:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`Customer Card`看起来像这样：'
- en: '![](img/0093a3a5-03ab-4e12-87ef-47114f1a8508.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0093a3a5-03ab-4e12-87ef-47114f1a8508.png)'
- en: Here, we have the newly added `Customer Category` field and the new action for
    assigning `Customer Category`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们添加了新创建的`Customer Category`字段和用于分配`Customer Category`的新操作。
- en: Codeunit definition
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码单元定义
- en: To handle the `Customer Category` business requirements that our customer has,
    all of the required business logic is defined in a dedicated codeunit called `Customer
    Category Mgt_PKT`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理客户的`Customer Category`业务需求，所有必需的业务逻辑都在一个名为`Customer Category Mgt_PKT`的专用代码单元中定义。
- en: 'The codeunit is defined as follows:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 代码单元定义如下：
- en: '[PRE14]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here, we have the following functions:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们有以下函数：
- en: '`CreateDefaultCategory`: This creates an entry in the `Customer Category` table
    with a predefined code and with the `Default` flag set to `true`.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CreateDefaultCategory`：此方法在`Customer Category`表格中创建一个带有预定义代码且`Default`标志设置为`true`的条目。'
- en: '`AssignDefaultCategory`: This assigns the default category to customers. Here,
    we use overloading (supported in AL) and we have the same function with the following
    two different implementations (one without parameters and one with a `Code[20]`
    parameter):'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AssignDefaultCategory`：此方法将默认类别分配给客户。这里我们使用了重载（AL中支持），并且有两个不同实现的相同函数（一个没有参数，一个带有`Code[20]`参数）：'
- en: '`AssignDefaultCategory(CustomerCode: Code[20])`: Works on the current customer'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AssignDefaultCategory(CustomerCode: Code[20])`：仅适用于当前客户'
- en: '`AssignDefaultCategory()`: Works on all customers'
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AssignDefaultCategory()`：适用于所有客户'
- en: '`GetTotalCustomersWithoutCategory`: This returns the number of customers without
    a category assigned.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GetTotalCustomersWithoutCategory`：返回未分配类别的客户数量。'
- en: '`GetSalesAmount`: This returns the total amount of the sales order for the
    `Customer Category` selected.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GetSalesAmount`：返回所选`Customer Category`的销售订单总金额。'
- en: After this, we move on to implementing the gift campaign's business requirements.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，我们将继续实现礼品促销的业务需求。
- en: Gift campaign implementations
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 礼品促销实现
- en: 'To handle the gift campaign requirements, we need to do the following:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理礼品促销要求，我们需要执行以下操作：
- en: 'Define the `Gift Campaign` table. This table must be able to store data as
    follows:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义`Gift Campaign`表格。该表格必须能够存储以下数据：
- en: '| **Customer Category** | **Item** | **Start Date** | **End Date** | **Minimum
    Quantity Ordered** | **Gift Quantity** |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| **Customer Category** | **Item** | **Start Date** | **End Date** | **Minimum
    Quantity Ordered** | **Gift Quantity** |'
- en: '| GOLD | ITEM1 | 01/01/2019 | 30/03/2019 | 5 | 1 |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| GOLD | ITEM1 | 01/01/2019 | 30/03/2019 | 5 | 1 |'
- en: '| GOLD | ITEM2 | 01/01/2019 | 30/03/2019 | 10 | 2 |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| GOLD | ITEM2 | 01/01/2019 | 30/03/2019 | 10 | 2 |'
- en: '| SILVER | ITEM1 | 01/01/2019 | 30/03/2019 | 7 | 1 |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| SILVER | ITEM1 | 01/01/2019 | 30/03/2019 | 7 | 1 |'
- en: Create the page (user interface) for handling the gift campaign data (a list
    page).
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建处理礼品促销数据的页面（列表页面）。
- en: Handling the business logic for assigning gifts to a sales order is based on `Customer
    Category` and the active campaign for this category. This will be done in an external
    codeunit.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理销售订单分配礼品的业务逻辑基于`Customer Category`和该类别的当前活动促销。这将通过外部代码单元完成。
- en: Add a new function to the `Sales Order` page interface in order to permit the
    sales operator to automatically insert a gift line when the sales order is finished.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`Sales Order`页面界面中添加一个新功能，以便销售操作员在销售订单完成时自动插入礼品行。
- en: When the sales operator inserts the `Quantity` in a sales order line, we want
    to check the active campaigns and alert the user if the ordered quantity is near
    to an active promotion.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当销售操作员在销售订单行中插入`Quantity`时，我们希望检查活动促销，并在订购数量接近活动促销时提醒用户。
- en: Table definition
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表定义
- en: 'By using the `ttable` snippet, we define the `Gift Campaign` table as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`ttable`片段，我们定义`Gift Campaign`表格，如下所示：
- en: '[PRE15]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The primary key for this table is a composite key, defined as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 该表格的主键是一个复合键，定义如下：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here, we''ve handled the `OnValidate` trigger of the `CustomerCategoryCode`
    field, which performs some validations:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们处理了`CustomerCategoryCode`字段的`OnValidate`触发器，该触发器执行一些验证：
- en: If the `Customer Category` selected is blocked, an error is thrown.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果所选`Customer Category`被阻止，则会抛出错误。
- en: If the `Customer Category` selected is not available for gift promotions (`FreeGiftsAvailable
    = false`), then an error is thrown.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果所选`Customer Category`不适用于礼品促销（`FreeGiftsAvailable = false`），则会抛出错误。
- en: Page definition
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面定义
- en: 'By using the `tpage` snippet, we define the `Gift Campaign List` page as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`tpage`片段，我们定义`Gift Campaign List`页面，如下所示：
- en: '[PRE17]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'When published, the page appears as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 发布后，页面显示如下：
- en: '![](img/62fea46d-9cc6-432b-badc-c3ec3fc474bd.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/62fea46d-9cc6-432b-badc-c3ec3fc474bd.png)'
- en: To handle the gift assignment logic in a sales order, by creating a `pageextension`
    object, we have added a new action to the `Sales Order` page, and from this action,
    we call the `AddGifts` method defined in a codeunit in the next section.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在销售订单中处理礼品分配逻辑，我们通过创建一个`pageextension`对象，在`Sales Order`页面上添加了一个新操作，并通过此操作调用下一节中在代码单元中定义的`AddGifts`方法。
- en: 'The `pageextension` object is defined as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`pageextension`对象定义如下：'
- en: '[PRE18]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The `Sales Order` page (with the new action) now looks like this:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 带有新操作的`Sales Order`页面现在如下所示：
- en: '![](img/58c20b38-2516-488f-b3b7-6b88574ac181.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/58c20b38-2516-488f-b3b7-6b88574ac181.png)'
- en: Codeunit definition
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码单元定义
- en: 'All of the business logic for handling the requirements is defined in a `GiftManagement`
    codeunit, as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 所有处理这些需求的业务逻辑都在`GiftManagement`代码单元中定义，具体如下：
- en: '[PRE19]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Here, we have some procedures, some event subscribers, and some event publishers.
    The main procedure is called `AddGifts` and it adds the gift lines (promotions)
    to the sales order passed as the argument. It raises some integration events,
    and the main code is handled by the `AddFreeGiftSalesLine` procedure.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们有一些程序、一些事件订阅者和一些事件发布者。主程序叫做`AddGifts`，它将礼品行（促销）添加到传入的销售订单中。它触发了一些集成事件，主代码由`AddFreeGiftSalesLine`程序处理。
- en: 'The integration events defined in this codeunit are as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码单元中定义的集成事件如下：
- en: '[PRE20]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here, we've implemented the `Handled` pattern (to guarantee extensibility).
    In this way, a dependent extension can change the gift assignment logic as needed
    without modifying the base code of the main extension.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们实现了`Handled`模式（以保证可扩展性）。通过这种方式，依赖的扩展可以根据需要修改礼品分配逻辑，而无需修改主扩展的基础代码。
- en: 'The `Handled` pattern implementation is as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`Handled`模式的实现如下：'
- en: '[PRE21]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In this code, we have the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们有以下内容：
- en: We have a global variable called `Handled` set to `false`.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有一个全局变量`Handled`，它的初始值为`false`。
- en: We raise an integration event called `OnBeforeFreeGiftSalesLineAdded` by passing
    the sales line we're working on and the `Handled` variable.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们通过传递我们正在处理的销售行和`Handled`变量来触发一个名为`OnBeforeFreeGiftSalesLineAdded`的集成事件。
- en: 'We implement the business logic in a procedure called `AddFreeGiftSalesLine`.
    In this procedure, if the event is handled, we skip the standard logic:'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在一个名为`AddFreeGiftSalesLine`的程序中实现了业务逻辑。在这个程序中，如果事件被处理，我们就跳过标准逻辑：
- en: '[PRE22]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: At the end of the process, we raise an integration event called `OnAfterFreeGiftSalesLineAdded`.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在过程结束时，我们触发一个名为`OnAfterFreeGiftSalesLineAdded`的集成事件。
- en: So, why does this pattern guarantee extensibility? This is because, in a dependent
    extension, you can subscribe to the `OnBeforeFreeGiftSalesLineAdded` event and
    set the `Handled` variable to `true`and implement your new business logic for
    adding gifts.Then, the standard business logic (`AddFreeGiftSalesLine`) is skipped.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么这个模式能保证可扩展性呢？这是因为在依赖的扩展中，你可以订阅`OnBeforeFreeGiftSalesLineAdded`事件，并将`Handled`变量设置为`true`，然后实现你自己的添加礼品的业务逻辑。然后，标准的业务逻辑（`AddFreeGiftSalesLine`）将被跳过。
- en: After this, you can subscribe to the `OnAfterFreeGiftSalesLineAdded` event and
    implement other custom business logic that must be executed after the process
    of adding gifts. We'll see an example of a dependent extension that alters the
    standard business logic of our extension in the *Understanding dependent extensions* section
    of this chapter.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，你可以订阅`OnAfterFreeGiftSalesLineAdded`事件，并实现必须在添加礼品过程后执行的其他自定义业务逻辑。我们将在本章的*理解依赖扩展*部分看到一个依赖扩展如何改变我们扩展的标准业务逻辑。
- en: 'In this codeunit, we''ve also created a procedure called `CheckGiftEligibility`,
    which is an event subscriber of the `OnAfterValidateEvent` event of the `Quantity`
    field of the `Sales Line` table. The following code shows this:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个代码单元中，我们还创建了一个名为`CheckGiftEligibility`的程序，它是`Sales Line`表的`Quantity`字段的`OnAfterValidateEvent`事件的事件订阅者。以下代码展示了这一点：
- en: '[PRE23]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: In this function, we handle the business logic for the alert that must be triggered
    when the sales operator inserts the quantity in a sales line. As you can see in
    the preceding code, we've implemented the `Handled` pattern again here to provide
    extensibility.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个函数中，我们处理了销售操作员在销售行中插入数量时必须触发的警告的业务逻辑。如你所见，在前面的代码中，我们再次实现了`Handled`模式以提供可扩展性。
- en: 'In this codeunit, we''ve also handled the event subscriber for the `OnAfterInsertEvent`
    event of the `Item Ledger Entry` table to transfer the `Customer Category` data
    to the `Item Ledger Entry` field (this was one of the requested requirements):'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个代码单元中，我们还处理了`Item Ledger Entry`表的`OnAfterInsertEvent`事件的事件订阅者，将`Customer
    Category`数据传递到`Item Ledger Entry`字段中（这是要求的功能之一）：
- en: '[PRE24]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'What happens when, from a sales order, you trigger the Add Free Gifts action?
    Refer to the following screenshot:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从销售订单中触发“添加免费赠品”操作时，会发生什么？请参考以下截图：
- en: '![](img/4c91fbaf-d9af-4a31-9046-d71ef5ed419d.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4c91fbaf-d9af-4a31-9046-d71ef5ed419d.png)'
- en: We can see that the events are raised, the `AddGifts` function is executed,
    and the gift promotions (if any) are inserted in the `Sales Line` table (a new
    line with the LINE DISCOUNT % field value set to `100`).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到事件被触发，`AddGifts`函数被执行，并且赠品促销（如果有的话）被插入到`Sales Line`表中（新的一行，`LINE DISCOUNT
    %`字段值设置为`100`）。
- en: We've now implemented all of the business requirements needed to manage the
    customer's gift campaigns. Now, let's move on to the vendor quality implementation
    details.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经实现了管理客户赠品活动所需的所有业务需求。接下来，让我们进入供应商质量实现的详细内容。
- en: Vendor quality implementations
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 供应商质量实现
- en: 'To handle the vendor quality management requirements, we need to do the following:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理供应商质量管理需求，我们需要执行以下操作：
- en: Define a `Vendor Quality` table (related to the standard `Vendor` table) that
    will contain details about the quality scores for vendor and quality-related financial
    data.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个`Vendor Quality`表（与标准的`Vendor`表相关），该表将包含有关供应商的质量得分和质量相关的财务数据的详细信息。
- en: Define the relevant card page and attach it to the vendor card (this will be
    the quality detail card for a vendor as per our requirements).
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义相关的卡片页面并将其附加到供应商卡片（这将是根据我们的需求用于供应商的质量详细卡片）。
- en: Add a new action to the standard `Vendor card` page to open `Vendor Quality
    card`.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向标准的`Vendor card`页面添加一个新动作，以打开`Vendor Quality card`。
- en: Define a codeunit that handles all of the business logic related to this implementation
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个处理所有与此实现相关的业务逻辑的代码单元
- en: In the following sections, we'll see the various object implementations in detail.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将详细查看各种对象的实现。
- en: Table definition
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表定义
- en: 'By using the `ttable` snippet, we define the `Vendor Quality` table as follows:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`ttable`代码片段，我们定义了`Vendor Quality`表，具体如下：
- en: '[PRE25]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: In this table, we have the definitions of the required score fields (rating)
    and the required financial fields. For the score rates, we handle the `OnValidate`
    trigger to dynamically update the rate calculation when the user inserts values
    in the fields (this is done by calling the `UpdateVendorRate` function defined
    in the table (as a class method) but implemented in the external codeunit that
    we'll see later).
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在此表中，我们定义了所需的得分字段（评分）和所需的财务字段。对于评分率，我们处理了`OnValidate`触发器，以便在用户插入字段值时动态更新率的计算（这是通过调用在表中定义的`UpdateVendorRate`函数来完成的，该函数作为类方法定义，但在稍后会看到的外部代码单元中实现）。
- en: We've also handled the table's `OnInsert` and `OnModify` triggers to save the
    insertion or modification date of the record (business requirements).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还处理了表的`OnInsert`和`OnModify`触发器，以保存记录的插入或修改日期（业务需求）。
- en: Page definition
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面定义
- en: 'For our business requirements, we need to create a `Vendor Quality card` page.
    We create a new page of the `Card` type by using the `tpage` snippet, as follows:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的业务需求，我们需要创建一个`Vendor Quality card`页面。我们通过使用`tpage`代码片段创建一个新的`Card`类型页面，具体如下：
- en: '[PRE26]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'This page is designed by creating different groups (`FastTabs` in the UI):'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 该页面通过创建不同的组（UI中的`FastTabs`）来设计：
- en: '`General`: Contains the general quality classification of the selected vendor,
    such as the name, a description of the activity, and the calculation rate'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`General`：包含所选供应商的一般质量分类，例如名称、活动描述和计算率'
- en: '`Scoring`: Contains the quality scores (as assigned by the company''s quality
    manager)'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Scoring`：包含质量得分（由公司质量经理分配）'
- en: '`Financials`: Contains the financial data required from the quality requirements'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Financials`：包含质量要求所需的财务数据'
- en: This page has the `InsertAllowed` property set to `true` because the record
    here is inserted automatically when the page is opened from `Vendor card` (we
    handle the `OnOpenPage` trigger here) and the user can't directly insert new records
    from this page.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面的`InsertAllowed`属性设置为`true`，因为当从`Vendor card`打开页面时，记录会自动插入（我们在这里处理`OnOpenPage`触发器），并且用户不能直接从此页面插入新记录。
- en: We also handle the `OnAfterGetRecord` page trigger, and from here, we call a
    function that refreshes the financial statistics.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还处理了`OnAfterGetRecord`页面触发器，从这里调用一个刷新财务统计信息的函数。
- en: The pageextension definition
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 页面扩展定义
- en: 'We need a `pageextension` object to create the action of opening the previously
    created `Vendor Quality card` page from the standard `Vendor Card` page. By using
    the `tpageext` snippet, we create the following object:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个`pageextension`对象，以便从标准的`Vendor Card`页面打开之前创建的`Vendor Quality card`页面。通过使用`tpageext`代码片段，我们创建了以下对象：
- en: '[PRE27]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Here, we have defined a `QualityClassification` action, which opens the `Vendor
    Quality card` page for the selected `Vendor` record (by using the `RunPageLink`
    property).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们定义了一个`QualityClassification`操作，它会为所选的`Vendor`记录打开`Vendor Quality card`页面（通过使用`RunPageLink`属性）。
- en: 'The page action appears as follows:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 页面操作显示如下：
- en: '![](img/e38809fe-84d4-4ffc-a92c-7c71120423d6.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e38809fe-84d4-4ffc-a92c-7c71120423d6.png)'
- en: 'When triggering the action, the `Vendor Quality Card` is opened and looks like
    this:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 当触发该操作时，`Vendor Quality Card`页面会被打开，显示如下：
- en: '![](img/2b1082df-0cf4-488c-b16a-b6239f2b49a8.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b1082df-0cf4-488c-b16a-b6239f2b49a8.png)'
- en: When the quality manager inserts score values, the `Vendor Rate` value is automatically
    calculated. Financial statistics are automatically calculated when opening the
    page (in real time).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 当质量经理输入分数值时，`Vendor Rate`值会自动计算。财务统计数据在打开页面时会自动计算（实时计算）。
- en: Codeunit definition
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码单元定义
- en: 'As usual, we define all of our business logic in an external codeunit called `VendorQualityMgt`using
    the `tcodeunit` snippet, defined as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如同往常一样，我们在一个名为`VendorQualityMgt`的外部代码单元中定义了所有业务逻辑，使用了如下的`tcodeunit`片段：
- en: '[PRE28]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Here, we have defined the following functions:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们定义了以下函数：
- en: '`CalculateVendorRate`: This is the function that calculates the vendor rate
    based on the quality scores assigned by the quality manager. We want this function
    to be extendable to be able to change the standard rate algorithm as needed in
    the future. To do that, we use the HANDLE pattern:'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CalculateVendorRate`：这是根据质量经理分配的质量分数来计算供应商费率的函数。我们希望这个函数是可扩展的，以便在未来需要时可以更改标准费率算法。为此，我们使用了HANDLE模式：'
- en: We raise an `OnBeforeCalculateVendorRate` event with the current `Vendor Quality`
    record and the `Handled` Boolean variable as event parameters.
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用当前的`Vendor Quality`记录和`Handled`布尔变量作为事件参数，触发`OnBeforeCalculateVendorRate`事件。
- en: We perform the standard rate calculation in the `VendorRateCalculation` function
    by checking the `Handled` parameter, and we exit from the function if we want
    to skip the standard calculation (by setting `Handled = true`).
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们通过检查`Handled`参数，在`VendorRateCalculation`函数中执行标准费率计算，并在需要跳过标准计算时退出该函数（通过设置`Handled
    = true`）。
- en: We raise an `OnAfterCalculateVendorRate` event for handling post calculation
    operations or for handling a totally new calculation.
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们触发`OnAfterCalculateVendorRate`事件，用于处理计算后的操作或完全重新计算。
- en: '`UpdateVendorQualityStatistics`: This function calculates the financial statistics
    required by the quality manager:'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UpdateVendorQualityStatistics`：此函数计算质量经理所需的财务统计数据：'
- en: '`GetInvoicedAmount`: For a given `Vendor No.` field and date period (start/end
    date), it calculates the invoiced amount by checking the `Vendor Ledger Entry`
    table (the `Purchase (LCY)` field). The returned result is `-1` because we want
    the absolute value.'
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GetInvoicedAmount`：对于给定的`Vendor No.`字段和日期区间（开始/结束日期），通过检查`Vendor Ledger Entry`表中的`Purchase
    (LCY)`字段，计算发票金额。返回的结果是`-1`，因为我们需要绝对值。'
- en: '`GetDueAmount`: For a given `Vendor No.` field, it calculates the due amount
    (the `Due` parameter is set to `true`) or the amount to pay (the `Due` parameter
    is set to `false`) by checking the `Vendor Ledger Entry` table (the `Remaining
    Amt. (LCY)` field). The returned result is multiplied by `-1` because we want
    the absolute value.'
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GetDueAmount`：对于给定的`Vendor No.`字段，它通过检查`Vendor Ledger Entry`表中的`Remaining
    Amt. (LCY)`字段，计算应付金额（`Due`参数设置为`true`）或待支付金额（`Due`参数设置为`false`）。返回的结果会乘以`-1`，因为我们需要绝对值。'
- en: 'The codeunits events are defined as follows:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 代码单元的事件定义如下：
- en: '[PRE29]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'In this codeunit, we''ve also defined an event subscriber (the `teventsub`
    snippet) for the `OnBeforeManualReleasePurchaseDoc` standard event defined in
    Microsoft''s `Release Purchase Document` codeunit, which is defined as follows:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个代码单元中，我们还为Microsoft的`Release Purchase Document`代码单元中定义的`OnBeforeManualReleasePurchaseDoc`标准事件定义了一个事件订阅者（使用`teventsub`片段），定义如下：
- en: '[PRE30]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: We use this event to raise an error during the order release phase if the vendor
    does not meet the company's rate criteria (that is, the minimum acceptable rate)
    defined in the extension's setup table.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用此事件，在订单释放阶段如果供应商未达到公司在扩展设置表中定义的费率标准（即最低可接受费率），则抛出错误。
- en: 'The event subscriber implementation is as follows:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 事件订阅者的实现如下：
- en: '[PRE31]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: All of the customer's business requirements are now handled by our extension.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，所有客户的业务需求都由我们的扩展处理。
- en: In the next section, we'll see how to enhance the customer's user experience
    by creating customized page views in Dynamics 365 Business Central.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何通过在Dynamics 365 Business Central中创建定制页面视图来增强客户的用户体验。
- en: Creating page views
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建页面视图
- en: Since the fall 2019 release of Dynamics 365 Business Central, you can create
    customized views for your list pages. These customized views can be used in a
    dedicated section of the Dynamics 365 Business Central user interface to immediately
    apply filters to the list.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 自2019年秋季发布以来，您可以为列表页面创建定制视图。这些定制视图可以在Dynamics 365 Business Central用户界面的专用部分中使用，以立即对列表应用过滤器。
- en: 'You can create a view definition in a page object by using the `tview` snippet.
    In the previously created `Gift Campaign List` page, we have defined the following
    `view` objects:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`tview`片段在页面对象中创建视图定义。在先前创建的`Gift Campaign List`页面中，我们定义了以下`view`对象：
- en: '[PRE32]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The first view (called `ActiveCampaigns`) shows all of the active gift campaigns
    (the `Inactive` field is set to `false`), while the second view (called `InactiveCampaigns`)
    shows all of the inactive gift campaigns (the `Inactive` field is set to `true`).
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个视图（称为`ActiveCampaigns`）显示所有活动的礼品活动（`Inactive`字段设置为`false`），而第二个视图（称为`InactiveCampaigns`）显示所有非活动的礼品活动（`Inactive`字段设置为`true`）。
- en: 'These views in the Dynamics 365 Business Central user interface look like this:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 这些在Dynamics 365 Business Central用户界面中的视图看起来像这样：
- en: '![](img/317615a4-6c30-4733-8565-c33d99454f72.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/317615a4-6c30-4733-8565-c33d99454f72.png)'
- en: 'If you select the Active Gift Campaigns view, the list is filtered accordingly
    (`Inactive` is set to `false`):'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择活动礼品活动视图，则列表会相应地进行过滤（`Inactive`设置为`false`）：
- en: '![](img/1183bc8a-9e40-42cf-8732-76051f877e02.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1183bc8a-9e40-42cf-8732-76051f877e02.png)'
- en: 'If you select the `Inactive Gift Campaigns` view, the list is automatically
    filtered by `Inactive` being set to `true`:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择`Inactive Gift Campaigns`视图，则列表会根据`Inactive`设置为`true`自动进行过滤：
- en: '![](img/e63e6244-df4e-4612-b836-bc0269edea95.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e63e6244-df4e-4612-b836-bc0269edea95.png)'
- en: We have also added a view to the `Customer List` page to show all of the customers
    who do not have an associated category.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在`Customer List`页面上添加了一个视图，显示所有没有关联类别的客户。
- en: 'The view definition in the `Customer List pageextension` object is defined
    as follows:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`Customer List pageextension`对象中的视图定义如下：'
- en: '[PRE33]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'We have placed this newly created view as the last of the available views for
    the page:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已将此新创建的视图放置为页面上可用视图的最后一个：
- en: '![](img/10530861-a83c-4560-908f-62cba1d3c183.png)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10530861-a83c-4560-908f-62cba1d3c183.png)'
- en: As shown in the preceding screenshot, this view appears in the user interface
    of the application and, when selected, it automatically filters all of the customers
    without an associated category (so `Customer Category = Blank`). In this way,
    our customers can immediately filter records by selecting a pre-defined view (just
    a click) and without reinserting the required filters.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的屏幕截图所示，此视图显示在应用程序的用户界面中，选择后会自动按照没有关联类别的所有客户进行过滤（因此`Customer Category = Blank`）。通过这种方式，我们的客户可以通过选择预定义视图（仅需点击）立即按需重新插入所需的过滤器。
- en: After this, let's move on and see how installing and upgrading codeunits works.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们继续看看如何安装和升级代码单元。
- en: Installing and upgrading codeunits
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和升级代码单元
- en: When you create an extension, you need to check some conditions for the installation
    to be successful, or you need to initiate some setup tables or pre-populate other
    tables. To do this, you need to create **Install codeunit**.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 创建扩展时，需要检查某些条件以确保安装成功，或者需要初始化某些设置表或预填充其他表。为此，您需要创建**Install codeunit**。
- en: 'The extension''s install logic must be written in a codeunit with the `SubType`
    property set to `Install`. This logic is triggered when the following is true:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展的安装逻辑必须在具有设置为`Install`的`SubType`属性的代码单元中编写。当以下条件为真时，将触发此逻辑：
- en: You're installing the extension for the first time.
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您正在第一次安装扩展。
- en: You have uninstalled the extension and then you're installing it again.
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您已卸载扩展，然后再次安装它。
- en: 'An `Install` codeunit supports the following system triggers:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 一个`Install`代码单元支持以下系统触发器：
- en: '`OnInstallAppPerCompany()`: The code inside this trigger runs once for each
    company in the Dynamics 365 Business Central database.'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnInstallAppPerCompany()`: 此触发器中的代码对Dynamics 365 Business Central数据库中的每个公司运行一次。'
- en: '`OnInstallAppPerDatabase()`: The code inside this trigger runs once for the
    entire install process.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnInstallAppPerDatabase()`: 此触发器中的代码在整个安装过程中运行一次。'
- en: The same logic occurs when upgrading the extension. If you need to create a
    new version of your extension (the version number in the `app.json` file must
    be greater than the previous version number) and this version involves data modifications
    from previous versions, you need to create **Upgrade codeunit**.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级扩展时，会发生相同的逻辑。如果你需要创建一个新的扩展版本（`app.json`文件中的版本号必须大于之前的版本号），且该版本涉及对旧版本数据的修改，你需要创建**Upgrade
    codeunit**。
- en: The extension's upgrade logic must be written in a codeunit with the `SubType`
    property set to `Upgrade`.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展的升级逻辑必须编写在`SubType`属性设置为`Upgrade`的codeunit中。
- en: 'An `Upgrade` codeunit supports the following system triggers:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`Upgrade` codeunit支持以下系统触发器：'
- en: '`OnCheckPreconditionsPerCompany()`: The code inside this trigger is used to
    check the preconditions for the upgrade process. This code runs once for each
    company in the database.'
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnCheckPreconditionsPerCompany()`：此触发器中的代码用于检查升级过程的前提条件。此代码会在数据库中的每个公司中运行一次。'
- en: '`OnCheckPreconditionsPerDatabase()`: The code inside this trigger is used to
    check the preconditions for the upgrade process. This code runs once for the entire
    upgrade process.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnCheckPreconditionsPerDatabase()`：此触发器中的代码用于检查升级过程的前提条件。此代码会在整个升级过程中运行一次。'
- en: '`OnUpgradePerCompany()`: The code inside this trigger contains the upgrade
    logic. This code runs once for each company in the database.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnUpgradePerCompany()`：此触发器中的代码包含升级逻辑。此代码会在数据库中的每个公司中运行一次。'
- en: '`OnUpgradePerDatabase()`: The code inside this trigger contains the upgrade
    logic. This code runs once for the entire upgrade process.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnUpgradePerDatabase()`：此触发器中的代码包含升级逻辑。此代码会在整个升级过程中运行一次。'
- en: '`OnValidateUpgradePerCompany()`: The code inside this trigger is used to check
    the results of the upgrade process. This code runs once for each company in the
    database.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnValidateUpgradePerCompany()`：此触发器中的代码用于检查升级过程的结果。此代码会在数据库中的每个公司中运行一次。'
- en: '`OnValidateUpgradePerDatabase()`: The code inside this trigger is used to check
    the results of the upgrade process. This code runs once for the entire upgrade
    process.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnValidateUpgradePerDatabase()`：此触发器中的代码用于检查升级过程的结果。此代码会在整个升级过程中运行一次。'
- en: 'For our extension, we have created an `Install` codeunit as follows:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的扩展，我们已创建如下的`Install` codeunit：
- en: '[PRE34]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'In the `OnInstallAppPerCompany` trigger, we check whether there''s an archived
    version of our extension (this could happen if someone has uninstalled the extension):'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在`OnInstallAppPerCompany`触发器中，我们检查是否存在已归档的扩展版本（如果有人卸载了扩展，可能会发生这种情况）：
- en: '[PRE35]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If so, we restore the archived data from the `NavApp` system table (so the user
    has their old data retrieved automatically).
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是这样，我们将从`NavApp`系统表中恢复已归档的数据（这样用户就可以自动恢复其旧数据）。
- en: If there's nothing restored, we initialize the `Customer Category` table and
    the extension's setup table (`Packt Extension Setup` table) with default data.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有恢复的内容，我们将初始化`Customer Category`表和扩展的设置表（`Packt Extension Setup`表）并填充默认数据。
- en: 'More information about the `Install` and `Upgrade` codeunits can be found in
    [Chapter 9](076505ca-e2a0-40ab-8640-c720c9aa68ee.xhtml), *Debugging*, of this
    book and at the following links:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 有关`Install`和`Upgrade` codeunit的更多信息，请参阅本书的[第9章](076505ca-e2a0-40ab-8640-c720c9aa68ee.xhtml)，《调试》一章，以及以下链接：
- en: '[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-extension-install-code](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-extension-install-code)[ and ](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions)[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions)[.](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions)'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-extension-install-code](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-extension-install-code)[和](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions)[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions)[.](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-upgrading-extensions)'
- en: 'When published from Visual Studio Code on Dynamics 365 Business Central, our
    extension appears as *installed* on the EXTENSION MANAGEMENTpage:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 当从Visual Studio Code在Dynamics 365 Business Central中发布时，我们的扩展会显示为*已安装*状态，在EXTENSION
    MANAGEMENT页面上：
- en: '![](img/2d1b194b-8d7d-4299-b41c-3bc6617635f2.png)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d1b194b-8d7d-4299-b41c-3bc6617635f2.png)'
- en: We have now learned how to handle the install and upgrade operations required
    when publishing an extension in Dynamics 365 Business Central.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经学习了在发布扩展到Dynamics 365 Business Central时，如何处理安装和升级操作。
- en: In the next section, we'll explore the concept of dependent extensions and learn
    how to use a dependency to make customizations to our previously deployed application.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨依赖扩展的概念，并学习如何使用依赖项对我们先前部署的应用程序进行定制。
- en: Understanding a dependent extension
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解依赖扩展
- en: In the previous sections, we developed our extension and deployed it.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们已经开发了扩展并进行了部署。
- en: 'Imagine now that you''ve deployed this extension to a customer tenant and now
    the customer asks you for some customization:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想象一下，您已经将这个扩展部署到客户租户，并且客户要求您进行一些定制：
- en: They want to add the `Certification No.` field to the Vendor Quality table.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们希望向Vendor Quality表中添加`Certification No.`字段。
- en: They want to change the gift assignment logic by always assigning a fixed gift
    quantity of 2.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们希望更改赠品分配逻辑，总是分配固定的赠品数量为2。
- en: To create a customization for your customer, you should *never* directly modify
    your standard extension code, but instead, you should create a new extension that
    will be *dependent* on your base extension.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为客户创建定制内容，你*永远不要*直接修改标准扩展代码，而应创建一个新的扩展，这个新扩展将是*依赖*于基础扩展的。
- en: To do this, we create a new extension project in Visual Studio Code called `PacktDemoDependencyExtension`.
    This new extension must be dependent on our previously created `PacktDemoExtension`;
    otherwise, we won't be able to see the objects defined in that extension.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们在Visual Studio Code中创建一个名为`PacktDemoDependencyExtension`的新扩展项目。这个新扩展必须依赖于我们之前创建的`PacktDemoExtension`，否则我们将无法看到在该扩展中定义的对象。
- en: 'First, we need to retrieve the `appId`, `name`, `publisher`, and `version`
    of the base extension. Then, we have to open the `app.json` file of our new extension,
    go to the `dependencies` block, and insert the details of the dependent extension
    as follows:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要获取基础扩展的`appId`、`name`、`publisher`和`version`。然后，我们需要打开新扩展的`app.json`文件，进入`dependencies`块，并按如下方式插入依赖扩展的详细信息：
- en: '[PRE36]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, if we download the symbols (`AL:Download Symbols`), you will see that
    the symbols of our dependent extension are downloaded into the `.alpackages` folder
    in our project:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们下载符号（`AL:Download Symbols`），你将看到我们依赖扩展的符号已经下载到我们项目中的`.alpackages`文件夹中：
- en: '![](img/74be4420-7834-407d-bed8-b5316994ae0e.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![](img/74be4420-7834-407d-bed8-b5316994ae0e.png)'
- en: We're now ready to create our new extension.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备好创建新的扩展了。
- en: 'To add the `Certification No.` field to `Vendor Quality Card`, we need to do
    the following:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 要将`Certification No.`字段添加到`Vendor Quality Card`，我们需要做如下操作：
- en: Extend the `Vendor Quality` table by adding a new field.
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过添加一个新字段来扩展`Vendor Quality`表。
- en: Extend the `Vendor Quality Card` page to add the new field to the UI.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展`Vendor Quality Card`页面，将新字段添加到UI中。
- en: We can do that because we have the symbols downloaded; otherwise, it's impossible
    to see the objects defined in another extension.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之所以能这么做，是因为我们已经下载了符号；否则，无法看到在另一个扩展中定义的对象。
- en: 'The `tableextension` object code that extends the `Vendor Quality` table is
    defined as follows:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展`Vendor Quality`表的`tableextension`对象代码定义如下：
- en: '[PRE37]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The `pageextension` object that extends the `Vendor Quality Card` page is defined
    as follows:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展`Vendor Quality Card`页面的`pageextension`对象定义如下：
- en: '[PRE38]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The second requirement is to customize a standard business process defined in
    the base extension (`PacktDemoExtension`*)* that creates the gifts line on a sales
    order if there's an active campaign (in the standard business process, the gift
    quantity is the quantity defined in the `Gift Campaign` table).
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个要求是定制基础扩展(`PacktDemoExtension`*)中定义的标准业务流程，如果有活动的促销活动，则在销售订单中创建赠品行（在标准业务流程中，赠品数量是`Gift
    Campaign`表中定义的数量）。
- en: You can do that **only** if the base extension has events to subscribe because
    you cannot directly modify the code of another extension.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 你**只能**在基础扩展有事件可以订阅时这样做，因为你不能直接修改另一个扩展的代码。
- en: 'To handle extensibility, we used the `Handled` pattern in our base extension.
    In the `PacktDemoExtension` extension, we have the `AddGifts` procedure defined
    as follows:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理可扩展性，我们在基础扩展中使用了`Handled`模式。在`PacktDemoExtension`扩展中，我们定义了如下的`AddGifts`过程：
- en: '[PRE39]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'To skip the standard business process (`AddFreeGiftSalesLine`) and add a new
    custom gift assignment process, we do the following:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跳过标准的业务流程（`AddFreeGiftSalesLine`）并添加一个新的自定义礼品分配过程，我们做了以下操作：
- en: 'We subscribe to the `OnBeforeFreeGiftSalesLineAdded` event, and we set the
    `Handled` parameter to `true`. This ensures that the standard business logic will
    be skipped because, in the `AddFreeGiftSalesLine` procedure, we have used the
    following code as the first line:'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们订阅了`OnBeforeFreeGiftSalesLineAdded`事件，并将`Handled`参数设置为`true`。这样可以确保跳过标准的业务逻辑，因为在`AddFreeGiftSalesLine`过程的第一行，我们使用了以下代码：
- en: '[PRE40]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: We call our custom business logic from this event subscriber.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从这个事件订阅器中调用了自定义的业务逻辑。
- en: 'All of this logic is defined in a codeunit object as follows:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些逻辑都在一个代码单元对象中定义，如下所示：
- en: '[PRE41]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'When published, we now have two extensions installed (the standard extension
    and the new customization extension):'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 发布后，我们现在安装了两个扩展（标准扩展和新的自定义扩展）：
- en: '![](img/cc3cdd5c-f700-4285-905e-81b0b7751fec.png)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cc3cdd5c-f700-4285-905e-81b0b7751fec.png)'
- en: 'To test whether our customization works, we create a new sales order with an
    item that has an associated gift campaign, and then we start the gift assignment
    process:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试我们的自定义功能是否有效，我们创建了一个新的销售订单，订单中包含一个与礼品活动关联的商品，然后我们开始了礼品分配过程：
- en: '![](img/756a266d-f924-4369-8163-01b39e11eadc.png)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![](img/756a266d-f924-4369-8163-01b39e11eadc.png)'
- en: 'So, what happens now? The `OnBeforeFreeGiftSalesLineAdded` event is raised,
    we skip the standard event (`Handled = true`), and then our new custom function
    (`CreateCustomGiftLine`) is triggered:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，现在会发生什么呢？`OnBeforeFreeGiftSalesLineAdded`事件被触发，我们跳过了标准事件（`Handled = true`），然后触发了我们的新自定义函数（`CreateCustomGiftLine`）：
- en: '![](img/e4cc8499-c1ab-4b0a-b4f5-8374e5ffba22.png)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4cc8499-c1ab-4b0a-b4f5-8374e5ffba22.png)'
- en: As we can see in the preceding screenshot, a new gift line with a fixed quantity
    of 2 and a discount of 100% is inserted in our sales order.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中可以看到，销售订单中插入了一条数量为2、折扣为100%的新礼品行。
- en: We have customized our gift campaign business logic without modifying the base
    code (our base extension), but instead by creating a new dependent extension.
    This should be the mandatory model to use with Dynamics 365 Business Central.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经自定义了礼品活动的业务逻辑，而无需修改基础代码（我们的基础扩展），而是通过创建一个新的依赖扩展来实现。这应该是使用Dynamics 365 Business
    Central时的强制模型。
- en: Summary
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we saw the implementation of a real-world extension for Dynamics
    365 Business Central. We defined the backend of our solution (tables) and we created
    the pages (the user interface) and the required business logic (codeunits and
    events) according to the initial needs of the business. We saw how to make our
    code extensible by using the `Handled` pattern and how to create installation
    and upgrade code.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了Dynamics 365 Business Central的一个实际扩展的实现。我们定义了解决方案的后端（表）并创建了页面（用户界面）以及根据业务初步需求所需的业务逻辑（代码单元和事件）。我们看到了如何通过使用`Handled`模式使我们的代码具有扩展性，以及如何创建安装和升级代码。
- en: In the last part of this chapter, we created a new extension that modifies the
    standard behavior of our base extension, and we looked at the concept of dependency
    between extensions.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后部分，我们创建了一个新的扩展，它修改了我们基础扩展的标准行为，并且我们探讨了扩展之间的依赖关系概念。
- en: You have also learned how to create extensions with objects and events, how
    to use coding rules, and how to create customizations without modifying the base
    code of your application.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 你还学会了如何通过对象和事件创建扩展，如何使用编码规则，以及如何在不修改应用程序基础代码的情况下进行自定义。
- en: In the next chapter, we'll see how to handle some advanced topics with AL and
    the extension model, such as files, media, XML and JSON objects, web services,
    and asynchronous programming.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何处理一些使用AL和扩展模型的高级主题，例如文件、媒体、XML和JSON对象、Web服务和异步编程。
