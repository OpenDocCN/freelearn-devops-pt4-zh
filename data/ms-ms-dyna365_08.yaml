- en: Advanced AL Development
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级 AL 开发
- en: In the previous chapter, we developed a complete extension for Dynamics 365
    Business Central, and during development, we looked at many aspects of AL programming.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们为 Dynamics 365 Business Central 开发了一个完整的扩展，并且在开发过程中，我们研究了 AL 编程的多个方面。
- en: In this chapter, we'll focus on other development topics that you need to manage
    when developing real-world solutions for Dynamics 365 Business Central. These
    topics are important and useful, especially for improving the user experience
    and when you need to handle integrations with external services from AL.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将重点讲解在为 Dynamics 365 Business Central 开发实际解决方案时，需要管理的其他开发主题。这些主题非常重要且实用，特别是在改善用户体验以及需要处理来自
    AL 的外部服务集成时。
- en: 'This chapter will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Understanding immutable keys
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解不可变键
- en: Handling files with AL
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AL 处理文件
- en: Handling BLOBs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理 BLOBs
- en: Handling XMLports
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理 XMLports
- en: Handling XML and JSON objects with AL
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AL 处理 XML 和 JSON 对象
- en: Creating and extending Role Centers and headlines
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和扩展角色中心和标题
- en: Consuming web services and APIs from AL code
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 AL 代码中消费 Web 服务和 API
- en: Using Azure functions from AL code
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 AL 代码中使用 Azure 函数
- en: Using Isolated Storage to handle sensitive data
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用隔离存储处理敏感数据
- en: Creating control add-ins for Dynamics 365 Business Central
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 Dynamics 365 Business Central 创建控制 add-ins
- en: Handling notifications
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理通知
- en: Page background tasks and asynchronous programming
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面后台任务和异步编程
- en: Understanding immutable keys
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解不可变键
- en: With the Dynamics 365 Business Central wave 2 release, all tables now have a
    (unique) immutable key (a `GUID` field) that can be used for integration scenarios
    and for replacing the old `RECORDID` property. This new field is called `SystemId`
    and it's a GUID data type field that specifies a unique, immutable (read-only)
    identifier for records in a table.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Dynamics 365 Business Central wave 2 版本发布后，所有表现在都有一个（唯一的）不可变键（一个 `GUID` 字段），可以用于集成场景以及替换旧的
    `RECORDID` 属性。这个新字段叫做 `SystemId`，它是一个 GUID 数据类型的字段，用于指定表中记录的唯一、不可变（只读）标识符。
- en: 'The new `SystemId` field (identified with the field number `2000000000` on
    every table object) has the following characteristics:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 新的 `SystemId` 字段（在每个表对象中用字段号 `2000000000` 标识）具有以下特点：
- en: It has a value for every record in a table.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它为表中的每一条记录提供一个值。
- en: You can assign a value at insert time; otherwise, the platform automatically
    assigns one.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在插入时指定一个值；否则，平台会自动分配一个值。
- en: Once `SystemId` has been set, it cannot be changed.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦`SystemId`被设置，就无法更改。
- en: There is always a unique secondary key in the `SystemId` field.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SystemId`字段中总是有一个唯一的次级键。'
- en: 'As a platform rule, modifying `SystemId` of an existing record is not allowed.
    The `INSERT` function now has a new override:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作为平台规则，不允许修改现有记录的 `SystemId`。`INSERT` 函数现在有了一个新的重载：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`SystemId` can be manually specified when inserting a new record, as in the
    following example:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`SystemId` 在插入新记录时可以手动指定，如以下示例所示：'
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You can now use the `GetBySystemId` function to retrieve a record via its `SystemId`,
    as in the following example:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用`GetBySystemId`函数通过其`SystemId`检索记录，如以下示例所示：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also set table relations by using the new `SystemId` field, as in the
    following code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用新的 `SystemId` 字段来设置表之间的关系，如以下代码所示：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `Integration Record` table before version 15 has GUIDs for records. The
    upgrade process to Dynamics 365 Business Central version 15 will use these values
    to initialize the new `SystemId` field. In the future, the `Integration Record`
    table will be declared obsolete. The `SystemID` field is also useful on API pages.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 版本 15 之前的 `Integration Record` 表为记录提供了 GUID。在升级到 Dynamics 365 Business Central
    版本 15 的过程中，将使用这些值初始化新的 `SystemId` 字段。未来，`Integration Record` 表将被声明为过时。`SystemId`
    字段在 API 页面上也非常有用。
- en: In the next section, we'll see how to handle files with AL in an **s****oftware
    as a service** (**SaaS**) environment.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何在 **软件即服务**（**SaaS**）环境中使用 AL 处理文件。
- en: Handling files with AL
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AL 处理文件
- en: Working with files is one of the tricky points with Dynamics 365 Business Central.
    While in the on-premises version you have full access to your local resources
    and a filesystem, in the SaaS version of Dynamics 365 Business Central, things
    are different. Here, you don't have a filesystem and you don't have access to
    local resources (all processes runs in Microsoft's data centers).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dynamics 365 Business Central中处理文件是一个棘手的地方。在本地版本中，你可以完全访问本地资源和文件系统，而在Dynamics
    365 Business Central的SaaS版本中，情况有所不同。在这里，你没有文件系统，也无法访问本地资源（所有的处理都在微软的数据中心进行）。
- en: 'If you create a function, you declare a `File` variable and then you invoke
    one of the common file management methods (such as `Create`, which creates and
    opens an ASCII or binary file), and this is the error that Visual Studio Code
    spits out:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你创建一个函数，你声明一个`File`变量，然后调用一个常见的文件管理方法（例如`Create`，它用于创建并打开一个ASCII或二进制文件），然后Visual
    Studio Code会显示如下错误：
- en: '![](img/673d3d70-d729-454e-b741-8d80612ab5af.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/673d3d70-d729-454e-b741-8d80612ab5af.png)'
- en: 'This error occurs because the extension you''re trying to create targets the
    Dynamics 365 Business Central SaaS environment by default (`"target": "Extension"`
    in the `app.json` file).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '这个错误发生是因为你尝试创建的扩展默认针对的是Dynamics 365 Business Central SaaS环境（`app.json`文件中的`"target":
    "Extension"`）。'
- en: 'If you add `"target": "Internal"` to your `app.json` file (in this way, you''re
    declaring that your extension is for the on-premise world only), then the error
    disappears and you can use the classic `File` object methods, as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你在`app.json`文件中添加`"target": "Internal"`（这样你声明你的扩展仅针对本地环境），那么错误就会消失，你可以使用经典的`File`对象方法，如下所示：'
- en: '![](img/e0741ea7-a5a7-43c5-a2a0-7260d3971332.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0741ea7-a5a7-43c5-a2a0-7260d3971332.png)'
- en: 'The same thing happens if you use the `File Management` codeunit to handle
    files. Some of its methods cannot be used in an SaaS extension:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用`File Management`代码单元来处理文件，也会发生同样的情况。它的一些方法在SaaS扩展中无法使用：
- en: '![](img/f295c1a4-93fd-49af-afaf-241d370b9fe1.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f295c1a4-93fd-49af-afaf-241d370b9fe1.png)'
- en: To handle files in the cloud environment, you need to use **Streams** (the `InStream`
    and `OutStream` objects).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要在云环境中处理文件，你需要使用**Streams**（`InStream`和`OutStream`对象）。
- en: The `InStream` and `OutStream` data types are generic stream objects used for
    reading from or writing to files and BLOBs.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`InStream`和`OutStream`数据类型是用于从文件和BLOB中读取或写入的通用流对象。'
- en: 'More information about these objects can be found at the following links:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 有关这些对象的更多信息，请参考以下链接：
- en: '[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type)
    [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/outstream/outstream-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/outstream/outstream-data-type)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type)
    [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/outstream/outstream-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/outstream/outstream-data-type)'
- en: 'To upload a file from the client computer to a server-side stream object, you
    need to call the `UploadIntoStream` method:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件从客户端计算机上传到服务器端流对象，你需要调用`UploadIntoStream`方法：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The method''s parameters are the following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法的参数如下：
- en: '`DialogTitle` (string): This is the text displayed in the title bar of the
    file selection dialog box. This parameter is not supported by the web client (the
    title is determined by the user''s browser).'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DialogTitle`（字符串）：这是文件选择对话框中显示的标题栏文本。此参数不被Web客户端支持（标题由用户的浏览器确定）。'
- en: '`FromFolder` (string): This is the path of the folder that is displayed in
    the file selection dialog box. This is the default folder, but the user can browse
    to any available location. This parameter is not supported by the web client (by
    default, the browser uses the folder that was last accessed).'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FromFolder`（字符串）：这是在文件选择对话框中显示的文件夹路径。这个文件夹是默认文件夹，但用户可以浏览到任何可用的位置。此参数不被Web客户端支持（默认情况下，浏览器使用上次访问的文件夹）。'
- en: '`FromFilter` (string): This is the type of file that can be uploaded to the
    server. In the Windows client, the type is displayed in the upload dialog box,
    so the user can only select files of the specified type. For the web client, this
    filter is not supported in the user interface. The user can try to upload any
    file type but an error occurs if the file is not as the specified type.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FromFilter`（字符串）：这是可以上传到服务器的文件类型。在Windows客户端中，该类型会显示在上传对话框中，用户只能选择指定类型的文件。对于Web客户端，用户界面不支持此筛选器。用户可以尝试上传任何类型的文件，但如果文件类型不符合指定类型，则会出现错误。'
- en: '`FromFile` (text): This is the default file to upload to the service. The user
    can change the file. This parameter is not supported by the web client.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FromFile`（文本）：这是上传到服务的默认文件。用户可以更改该文件。Web客户端不支持此参数。'
- en: '`InStream`: This is the `InStream` object to load data in.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InStream`：这是用于加载数据的`InStream`对象。'
- en: More details about the method can be found at [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-uploadintostream-method](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-uploadintostream-method).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 有关该方法的更多详细信息，请参见 [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-uploadintostream-method](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-uploadintostream-method)。
- en: 'As an example, this is a function that loads an image file from the client
    side (using an `InStream` object and `UploadIntoStream` to load the client file
    into the `InStream` object) and adds it as an `Item` object:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，这是一个从客户端加载图像文件的函数（使用`InStream`对象和`UploadIntoStream`方法将客户端文件加载到`InStream`对象中），并将其作为`Item`对象添加：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As another example, this is a function that reads a CSV file that contains
    `Item` details into an `InStream` object, loads its content into the `CSV Buffer`
    table, and then updates the `Item` fields accordingly:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子，这是一个函数，它将包含`Item`详细信息的CSV文件读取到`InStream`对象中，将其内容加载到`CSV Buffer`表中，然后根据需要更新`Item`字段：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To download a file from the server side (the SaaS environment) to the client
    side (the user machine), you need to use the `DownloadFromStream` method:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件从服务器端（SaaS环境）下载到客户端（用户机器），需要使用`DownloadFromStream`方法：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The method''s parameters are as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法的参数如下：
- en: '`InStream`: The `InStream` object ([https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type))
    contains the file data.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InStream`：`InStream`对象（[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/instream/instream-data-type)）包含文件数据。'
- en: '`DialogTitle` string ([https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type)):
    This is the title that you want to display in the dialog box for downloading the
    file. This parameter is not supported by the web client (here, the title is determined
    by the end user''s browser).'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DialogTitle`字符串（[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type)）：这是要在下载文件的对话框中显示的标题。Web客户端不支持此参数（在此，标题由最终用户的浏览器决定）。'
- en: '`ToFolder` string ([https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type)):
    This is the default folder in which to save the downloaded file. The folder name
    is displayed in the dialog box for the download, and the folder can be changed
    by the user. This parameter is not supported by the web client (because default
    files are saved to the default download location that is configured in the end
    user''s browser).'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ToFolder`字符串（[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type)）：这是保存下载文件的默认文件夹。文件夹名称会显示在下载的对话框中，用户可以更改该文件夹。Web客户端不支持此参数（因为默认文件会保存到最终用户浏览器中配置的默认下载位置）。'
- en: '`ToFilter` string ([https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type)):
    This is the type of file that can be downloaded to the client. The type is displayed
    in the dialog box for downloading the file. This parameter is not supported by
    the web client.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ToFilter` 字符串 ([https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/string/string-data-type))：这是可以下载到客户端的文件类型。该类型会在下载文件的对话框中显示。此参数不支持网页客户端。'
- en: '`ToFile` text ([https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/text/text-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/text/text-data-type)):
    This is the name assigned to the downloaded file. This value can be changed by
    the user.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ToFile` 文本 ([https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/text/text-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/text/text-data-type))：这是分配给下载文件的名称。此值可以由用户更改。'
- en: More information about this method can be found at [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-downloadfromstream-method](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-downloadfromstream-method).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此方法的更多信息，请参阅[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-downloadfromstream-method](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/file/file-downloadfromstream-method)。
- en: 'As an example, this code exports the images associated with an `Item` card
    as the `MediaSet` type. It uses `DownloadFromStream` to download the file to the
    client. The images are retrieved from the `Tenant Media` table and saved with
    a filename made up of `Item Number`, the image index, and the image extension
    (the `GetImageExtension` function retrieves the image file extension according
    to its `Mime Type`):'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 作为示例，这段代码将与`Item`卡片相关的图像导出为`MediaSet`类型。它使用`DownloadFromStream`将文件下载到客户端。这些图像从`Tenant
    Media`表中检索，并保存为由`Item Number`、图像索引和图像扩展名组成的文件名（`GetImageExtension`函数根据其`Mime Type`检索图像文件的扩展名）：
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you need to create a file from Dynamics 365 Business Central, you need to
    create it on the server side using the new `Temp Blob` codeunit defined in the
    `System Application` and `OutStream` objects.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要从 Dynamics 365 Business Central 创建文件，您需要在服务器端使用`System Application`和`OutStream`对象中定义的新`Temp
    Blob`代码单元来创建。
- en: 'This is an example of an AL function that receives a filename as input, creates
    a text file with three lines, and downloads it to the client side:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个AL函数的示例，该函数接收一个文件名作为输入，创建一个包含三行的文本文件，并将其下载到客户端：
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: With Dynamics 365 Business Central, you cannot directly save a file to a local
    folder (a local machine or network folder). To perform this action, you need to
    use something different, such as Azure Functions (we'll see that later in this
    chapter).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Dynamics 365 Business Central 中，您不能直接将文件保存到本地文件夹（本地计算机或网络文件夹）。要执行此操作，您需要使用其他方式，例如
    Azure Functions（我们将在本章稍后部分讨论）。
- en: With the Dynamics 365 Business Central wave 2 release, the old `TempBlob` table
    is deprecated and has been replaced by some system codeunits (`Temp Blob`, `Persistent
    Blob`, and `Temp Blob List`).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 随着 Dynamics 365 Business Central wave 2 版本的发布，旧的`TempBlob`表已被弃用，并被一些系统代码单元（`Temp
    Blob`、`Persistent Blob`和`Temp Blob List`）替代。
- en: In this section, you saw how to use streams to handle files in Dynamics 365
    Business Central. In the next section, we'll see how to handle attachments to
    documents and entities in Dynamics 365 Business Central.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您学习了如何使用流处理 Dynamics 365 Business Central 中的文件。在下一节中，我们将学习如何处理 Dynamics
    365 Business Central 中文档和实体的附件。
- en: Handling attachments
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理附件
- en: 'Attachments are files that you can link to entities or documents in Dynamics
    365 Business Central. Two main tables are used to store attachments:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 附件是您可以链接到 Dynamics 365 Business Central 中的实体或文档的文件。用于存储附件的两个主要表格如下：
- en: Document attachment (`ID = 1173`)
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档附件（`ID = 1173`）
- en: Attachment (`ID = 5062`)
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 附件（`ID = 5062`）
- en: To store an attachment in these tables and then download an attachment from
    these tables, you need to use the previously mentioned `UploadIntoStream` and
    `DownloadFromStream` methods and load the BLOB field by using `Streams`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要将附件存储到这些表中，并从这些表中下载附件，您需要使用前面提到的`UploadIntoStream`和`DownloadFromStream`方法，并通过使用`Streams`加载BLOB字段。
- en: 'An example of a function that uploads a file to the `Attachment` table is as
    follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一个将文件上传到 `Attachment` 表的函数示例如下：
- en: '[PRE10]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'An example of a function that downloads a file from the `Attachment` table
    is as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一个从 `Attachment` 表下载文件的函数示例如下：
- en: '[PRE11]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We can use the same process for the `Document Attachment` table; you've only
    to add the reference to the `attachment` record to the document itself.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对 `Document Attachment` 表使用相同的过程；您只需要将对 `attachment` 记录的引用添加到文档本身。
- en: We've seen how to handle attachments (a useful feature to add to your extensions).
    In the next section, we'll see how to read and write data to and from BLOB fields.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了如何处理附件（这是一个可以添加到扩展中的有用功能）。在接下来的部分中，我们将看到如何从 BLOB 字段读取和写入数据。
- en: Reading and writing text data to and from BLOB fields
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取和写入文本数据到 BLOB 字段
- en: To read data from and write text data to a BLOB field, you need to use the `InStreams`
    and `OutStreams` objects as previously described.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 BLOB 字段读取数据并写入文本数据，您需要使用前面描述的 `InStreams` 和 `OutStreams` 对象。
- en: 'The two methods in the following code read and write text data from and to
    a `BLOB` field defined in a custom table:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码中的两个方法从自定义表中定义的 `BLOB` 字段读取和写入文本数据：
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here, we have defined a table with a BLOB field and we have created two methods
    for reading and writing data to this BLOB field:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们定义了一个包含 BLOB 字段的表，并创建了两个方法用于读取和写入数据到该 BLOB 字段：
- en: The `SetBlobValue` function writes data (passed as input) to a BLOB field.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SetBlobValue` 函数将数据（作为输入传递）写入 BLOB 字段。'
- en: The `GetBlobValue` function reads data from a BLOB field.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GetBlobValue` 函数从 BLOB 字段读取数据。'
- en: With these two methods, we've achieved the goal to read and write text to our
    BLOB field. In the next section, we'll see how to use XMLports from AL.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两个方法，我们已经实现了读取和写入文本到 BLOB 字段的目标。在接下来的部分中，我们将看到如何从 AL 中使用 XMLport。
- en: Using XMLports in AL code
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 AL 代码中使用 XMLport
- en: As we said in [Chapter 2](215c2304-db18-4145-bb3f-8c10cdca949d.xhtml), *Mastering
    a Modern Development Environment*, **XMLports** are objects used to import and
    export data between Dynamics 365 Business Central and external data sources (this
    is managed by the `Direction` property, which can be set to `Import`, `Export`,
    or `Both`). Data can be imported or exported in XML or CSV (text) format (the `Format`
    property can be set to `Xml`, `Variable Text`, or `Fixed Text`).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在 [第 2 章](215c2304-db18-4145-bb3f-8c10cdca949d.xhtml)中所说的，*掌握现代开发环境*，**XMLport**
    是用于在 Dynamics 365 Business Central 与外部数据源之间导入和导出数据的对象（这一操作通过 `Direction` 属性来管理，可以设置为
    `Import`、`Export` 或 `Both`）。数据可以以 XML 或 CSV（文本）格式导入或导出（`Format` 属性可以设置为 `Xml`、`Variable
    Text` 或 `Fixed Text`）。
- en: XMLport properties are detailed at [https://docs.microsoft.com/en-us/dynamics-nav/xmlport-properties](https://docs.microsoft.com/en-us/dynamics-nav/xmlport-properties).
    [](https://docs.microsoft.com/en-us/dynamics-nav/xmlport-properties) XMLport triggers
    are detailed at [https://docs.microsoft.com/en-us/dynamics-nav/xmlport-triggers](https://docs.microsoft.com/en-us/dynamics-nav/xmlport-triggers).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: XMLport 属性的详细信息请见 [https://docs.microsoft.com/en-us/dynamics-nav/xmlport-properties](https://docs.microsoft.com/en-us/dynamics-nav/xmlport-properties)。
    [](https://docs.microsoft.com/en-us/dynamics-nav/xmlport-properties) XMLport 触发器的详细信息请见
    [https://docs.microsoft.com/en-us/dynamics-nav/xmlport-triggers](https://docs.microsoft.com/en-us/dynamics-nav/xmlport-triggers)。
- en: 'Now, consider the sample XMLport defined in [Chapter 4](a5f2cdb5-019d-4b63-bc12-4b51b3c617f2.xhtml),
    *Extension Development Fundamentals*:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，考虑在 [第 4 章](a5f2cdb5-019d-4b63-bc12-4b51b3c617f2.xhtml)中定义的示例 XMLport，*扩展开发基础*：
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: To execute an XMLport in Dynamics 365 Business Central, you need to run it from
    a page or a codeunit object (you cannot directly run it). XMLport request pages
    (used to set filters or insert parameters) in the Dynamics 365 Business Central
    web client are not supported.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Dynamics 365 Business Central 中执行 XMLport，您需要通过页面或代码单元对象运行它（不能直接运行）。在 Dynamics
    365 Business Central Web 客户端中不支持 XMLport 请求页面（用于设置过滤器或插入参数）。
- en: 'To execute an XMLport in Dynamics 365 Business Central to import data from
    a file, you need to use the following code:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Dynamics 365 Business Central 中执行 XMLport 从文件导入数据，您需要使用以下代码：
- en: '[PRE14]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Here, the file is loaded into an `InStream` object and then the XMLport is executed
    by passing the `InStream` object as input.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，文件被加载到一个 `InStream` 对象中，然后通过将 `InStream` 对象作为输入来执行 XMLport。
- en: 'To execute an XMLport in Dynamics 365 Business Central to export data to a
    file, you need to use the following code:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Dynamics 365 Business Central 中执行 XMLport 导出数据到文件，您需要使用以下代码：
- en: '[PRE15]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here, we have seen how to use XMLports from AL code to import or export data.
    In the next section, we'll see how to create and extend Role Centers in Dynamics
    365 Business Central.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们已经看到如何使用AL代码中的XMLports导入或导出数据。在下一部分，我们将看到如何在Dynamics 365 Business Central中创建和扩展角色中心。
- en: Creating and extending Role Centers
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和扩展角色中心
- en: When a user logs in to Dynamics 365 Business Central, they are presented with
    a page that shows information and actions tailored to their role inside the company.
    This page is called a **Role Center**, and it's an integral part of the role-tailored
    experience of the application.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户登录Dynamics 365 Business Central时，他们会看到一个展示与其公司角色相关的信息和操作的页面。这个页面叫做**角色中心**，它是应用程序角色定制体验的一个核心部分。
- en: Dynamics 365 Business Central offers about 20 Role Centers out of the box (as
    standard) that you can extend and customize, and you can create new Role Centers.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central提供约20个开箱即用的角色中心（作为标准），你可以扩展和自定义，并且可以创建新的角色中心。
- en: 'A Role Center is a page that has the `PageType` property set to `RoleCenter`.
    The page structure is as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 角色中心是一个`PageType`属性设置为`RoleCenter`的页面。页面结构如下：
- en: '![](img/5a4e6a9b-83ab-4ca0-ab67-00a4a3b89e22.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5a4e6a9b-83ab-4ca0-ab67-00a4a3b89e22.png)'
- en: 'In the structure diagram, the sections are as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在结构图中，部分如下：
- en: Section 1 is the **Navigation Menu** area (one or more items that, when clicked,
    show other sub-menus). This is used to provide access to the relevant entities
    for the role to which this Role Center page is assigned.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1部分是**导航菜单**区域（一个或多个项目，点击时显示其他子菜单）。用于提供对该角色中心页面所分配角色的相关实体的访问。
- en: Section 2 is the **Navigation Bar** area, which displays a list of links to
    other pages that will be opened in the Content area. This is normally used to
    add links to the user's most useful entities for their business role.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第2部分是**导航栏**区域，用于显示链接到其他页面的链接列表，这些页面将在内容区域中打开。通常用于添加链接到用户在其业务角色中最有用的实体。
- en: Section 3 is the **Action** area, used to add links for running the most important
    tasks for this role (links to pages, reports, or codeunits).
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第3部分是**操作**区域，用于添加链接以执行此角色的最重要任务（指向页面、报告或代码单元的链接）。
- en: Section 4 is the **Headline** area, used to display dynamically generated information
    about the business. We'll see more details about this area in the *Customizing
    the Headline* section of this chapter.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第4部分是**标题**区域，用于显示动态生成的关于业务的信息。我们将在本章的*定制标题*部分中看到更多关于此区域的细节。
- en: Section 5 is the **Wide Cue** area, a set of cues that display numerical values
    about the business. This area is created with a `cuegroup` control on a page with
    `PageType = CardPart` and with the `Layout` property set to `wide`.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第5部分是**宽数据提示**区域，一组显示有关业务的数值信息的数据提示。此区域是在页面上使用`cuegroup`控件创建的，页面的`PageType =
    CardPart`，并将`Layout`属性设置为`wide`。
- en: Section 6 is the **Data Cue** area, used to provide a visual representation
    of aggregated business data (such as KPIs). This part is created with a `cuegroup`
    control on a page with `PageType = CardPart`.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第6部分是**数据提示**区域，用于提供汇总业务数据的可视化表示（如关键绩效指标）。此部分是在页面上使用`cuegroup`控件并设置`PageType
    = CardPart`创建的。
- en: Section 7 is the `Action Cue` area, which shows tiles that link to some business
    tasks. This area is created with a `cuegroup` control on a page with `PageType
    = CardPart`.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7部分是`操作提示`区域，显示链接到一些业务任务的瓷砖。此区域是在页面上使用`cuegroup`控件创建的，页面的`PageType = CardPart`。
- en: Section 8 is the **Chart** area, used to show information as charts (custom
    business chart control add-ins or embedded Power BI reports).
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第8部分是**图表**区域，用于以图表形式显示信息（自定义业务图表控件或嵌入的Power BI报告）。
- en: Section 9 is the **CardPart or ListPart page** area, used to display data from
    the application with a card or a list layout.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第9部分是**CardPart或ListPart页面**区域，用于以卡片或列表布局显示来自应用程序的数据。
- en: Section 10 is the *C***ontrol add-in** area, used for displaying custom content
    using HTML-based control add-ins (written in JavaScript).
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第10部分是*控制添加项**区域，用于通过基于HTML的控制添加项（用JavaScript编写）显示自定义内容。
- en: 'A Role Center page can be created in AL using the following code:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 角色中心页面可以通过以下代码在AL中创建：
- en: '[PRE16]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Here, we have created a Role Center page with three **parts** (sub-pages).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们创建了一个包含三个**部分**（子页面）的角色中心页面。
- en: 'You can customize an existing Role Center page by creating a `pageextension`
    object:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过创建`pageextension`对象来自定义现有的角色中心页面：
- en: '[PRE17]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Here, we have extended the `Sales Manager Role Center` page by adding a new
    custom headline part to the content and a new action to open the `Customer Ledger
    Entries` page.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们通过向内容中添加一个新的自定义头条部分和一个新动作来打开 `Customer Ledger Entries` 页面，扩展了 `Sales Manager
    Role Center` 页面。
- en: Customizing or creating Role Centers is important because it gives your users a
    better user experience.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义或创建角色中心非常重要，因为这可以为您的用户提供更好的用户体验。
- en: In the next section, we'll see how we can customize the Headline part of a Role
    Center.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将看到如何自定义角色中心的头条部分。
- en: Customizing the Headline
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义头条
- en: 'As described earlier, the **Headline** is a new part introduced with the Dynamics
    365 Business Central web client that''s used to dynamically display important
    information about your business. Consider the following screenshot:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，**头条**是随着 Dynamics 365 Business Central 网页客户端一起引入的新部分，用于动态显示有关您业务的重要信息。请参阅以下截图：
- en: '![](img/d3747504-fd2b-4e09-9379-39a75b7dbf73.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d3747504-fd2b-4e09-9379-39a75b7dbf73.png)'
- en: This is an important part of the Dynamics 365 Business Central role-tailored
    user experience, and it's recommended to use and customize it to give your users a
    better experience.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Dynamics 365 Business Central 角色定制用户体验的重要部分，建议使用并自定义它，以便为您的用户提供更好的体验。
- en: A Headline is essentially a page that contains one or more fields (each field
    is a headline line) and with `PageType` set as `HeadlinePart`. This page is only
    visible inside a Role Center page.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 头条本质上是一个页面，包含一个或多个字段（每个字段是一个头条行），并且 `PageType` 被设置为 `HeadlinePart`。此页面仅在角色中心页面内部可见。
- en: 'Dynamics 365 Business Central has nine standard headlines available:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 提供了九个标准头条：
- en: Headline RC Business Manager
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 商务经理
- en: Headline RC Order Processor
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 订单处理员
- en: Headline RC Accountant
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 会计
- en: Headline RC Project Manager
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 项目经理
- en: Headline RC Relationship Management
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 关系管理
- en: Headline RC Administrator
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 管理员
- en: Headline RC Team Member
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 团队成员
- en: Headline RC Production Planner
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 生产计划员
- en: Headline RC Service Dispatcher
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 头条 RC 服务调度员
- en: You can also create your own Headlines by using AL and Visual Studio Code.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用 AL 和 Visual Studio Code 创建自己的头条。
- en: 'A Headline page can be defined in AL as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在 AL 中定义一个头条页面，如下所示：
- en: '[PRE18]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Here, we have defined a Headline page with four text fields that appears in
    the Dynamics 365 Business Central UI with the appropriate text.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们定义了一个头条页面，包含四个文本字段，并在 Dynamics 365 Business Central 界面中显示适当的文本。
- en: In the second headline, we have handled the `OnDrillDown` event, and if you
    click on the second headline in this example, you're redirected to a URL. By handling
    this event, you can have a clickable headline that shows business details (for
    example, it can open a Dynamics 365 Business Central detail page). A headline
    page can also be hidden and visibility can be programmatically set by code (as
    in Headline 4 in the previous example).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二个头条中，我们处理了 `OnDrillDown` 事件，如果您点击本示例中的第二个头条，将会跳转到一个 URL。通过处理此事件，您可以拥有一个可点击的头条，显示业务详细信息（例如，它可以打开一个
    Dynamics 365 Business Central 详细页面）。头条页面也可以被隐藏，且其可见性可以通过代码程序性地设置（如前一个示例中的头条 4）。
- en: 'The text displayed on a headline page can be formatted according to the following
    `Expression` property:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 头条页面上显示的文本可以根据以下 `Expression` 属性进行格式化：
- en: '| **Expression TAG** | **Description** |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| **Expression 标签** | **描述** |'
- en: '| `<qualifier></qualifier>` | This specifies the title that appears above the
    headline. If it''s not present, the text `HEADLINE` will be used by default. |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| `<qualifier></qualifier>` | 这指定了在头条上方显示的标题。如果没有该元素，默认将使用文本 `HEADLINE`。 |'
- en: '| `<payload></payload>` | This specifies the displayed headline text. |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| `<payload></payload>` | 这指定了显示的头条文本。 |'
- en: '| `<emphasize></emphasize>` | The text on this tag is displayed with the biggest
    size. |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| `<emphasize></emphasize>` | 该标签中的文本显示为最大尺寸。 |'
- en: 'To modify an existing headline, you need to create a `pageextension` object
    and extend it. As an example, here we are modifying the standard `Headline RC
    Business Manager` page by adding a new headline panel with dynamically created
    content:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改现有的头条，您需要创建一个 `pageextension` 对象并对其进行扩展。作为示例，我们在这里通过添加一个新的头条面板，并动态创建内容，来修改标准的
    `Headline RC Business Manager` 页面：
- en: '[PRE19]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Here, we've added a new field called `newHeadlineText`, and this field is populated
    in the `OnOpenPage` trigger of the Headline page with the information that we
    want to display to our users.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们添加了一个名为 `newHeadlineText` 的新字段，并且在头条页面的 `OnOpenPage` 触发器中填充该字段，显示我们希望呈现给用户的信息。
- en: This section has explained how to customize the Headline of a Role Center page
    and how to show relevant business information to our users.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 本节已解释了如何自定义角色中心页面的标题，以及如何向我们的用户展示相关的业务信息。
- en: Handling XML and JSON files with the AL language
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AL语言处理XML和JSON文件
- en: The AL language extension has native support for handling XML and JSON documents.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: AL语言扩展原生支持处理XML和JSON文档。
- en: An XML document is represented by using the `XmlDocument` data type, as explained
    at [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/xmldocument/xmldocument-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/xmldocument/xmldocument-data-type).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: XML文档通过使用`XmlDocument`数据类型来表示，详细说明见[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/xmldocument/xmldocument-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/xmldocument/xmldocument-data-type)。
- en: 'The following code shows how you can import an XML file and load it into an
    `XmlDocument` object:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了如何导入XML文件并将其加载到`XmlDocument`对象中：
- en: '[PRE20]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here, we have created an `XmlDocument` object with an XML declaration, then
    we have created an `InStream` object to load the XML file, and we have read the
    `InStream` content into the `XmlDocument` object.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们创建了一个带有XML声明的`XmlDocument`对象，然后创建了一个`InStream`对象来加载XML文件，并将`InStream`的内容读取到`XmlDocument`对象中。
- en: 'If you reference the `TargetXmlDoc` object, you see all of the available methods
    for handling and manipulating the XML file:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你引用`TargetXmlDoc`对象，你将看到所有可用的处理和操作XML文件的方法：
- en: '![](img/b535351e-ec2e-4b12-9e01-23c1a6b8a1d6.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b535351e-ec2e-4b12-9e01-23c1a6b8a1d6.png)'
- en: 'To create an XML document directly from AL code, you can use the `XmlDocument`
    and `XmlElement` classes:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要直接从AL代码创建XML文档，可以使用`XmlDocument`和`XmlElement`类：
- en: '[PRE21]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This code creates an XML document with a root node (called `node1`) and a child
    node (called `node2`) with an ID attribute that has a value of `3` (`<node2 ID="3">`).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码创建了一个XML文档，包含一个根节点（称为`node1`）和一个子节点（称为`node2`），该子节点有一个ID属性，其值为`3`（`<node2
    ID="3">`）。
- en: Native support for JSON documents is provided by using the `JsonObject` and
    `JsonArray` data types. Each of these data types contains the methods for handling
    a JSON file (both reading and writing) and for manipulating the JSON data (tokens).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: JSON文档的原生支持通过使用`JsonObject`和`JsonArray`数据类型提供。这些数据类型包含处理JSON文件（包括读写）以及操作JSON数据（令牌）的方法。
- en: 'A detailed explanation of all of the available methods for these data types
    can be found at the following links:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 所有可用方法的详细说明可以在以下链接中找到：
- en: '[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonobject/jsonobject-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonobject/jsonobject-data-type)
    [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonarray/jsonarray-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonarray/jsonarray-data-type)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonobject/jsonobject-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonobject/jsonobject-data-type)
    [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonarray/jsonarray-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/jsonarray/jsonarray-data-type)'
- en: 'The following code shows an example of how to create a JSON representation
    of a sales order document:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了如何创建销售订单文档的JSON表示形式：
- en: '[PRE22]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This procedure receives an order number as input, retrieves the `Sales Header`
    and `Sales Line` details, and creates a JSON representation. The final result
    is as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程接收订单号作为输入，检索`Sales Header`和`Sales Line`的详细信息，并创建一个JSON表示形式。最终结果如下：
- en: '[PRE23]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Obviously, you can also receive a JSON representation as input (for example,
    as a response from an API call) and handle it using the same data types.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，你也可以将JSON表示形式作为输入（例如，作为API调用的响应），并使用相同的数据类型进行处理。
- en: Here, we have seen how to handle JSON documents in AL by using the native JSON
    types.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们已经看到了如何通过使用原生JSON类型在AL中处理JSON文档。
- en: In the next section, we'll see a complete example on how to call an API, receive
    a JSON response, parse it, and save data to a Dynamics 365 Business Central entity.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将看到一个完整的示例，展示如何调用API，接收JSON响应，解析它，并将数据保存到Dynamics 365 Business Central实体中。
- en: Consuming web services and APIs from AL
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从AL中使用Web服务和API
- en: The AL `HttpClient` object provides a base class for handling HTTP requests
    and responses from web resources (identified by a URI). With the `HttpClient`
    class, you can send `GET`, `DELETE`, `POST`, and `PUT` HTTP request messages (`HttpRequestMessage`
    with `HttpHeaders` and `HttpContent`) and receive an `HttpResponseMessage` object
    as a result of this request (including the status code and the response data).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: AL 的`HttpClient`对象提供了一个基类，用于处理来自 Web 资源（通过 URI 标识）的 HTTP 请求和响应。使用`HttpClient`类，你可以发送`GET`、`DELETE`、`POST`和`PUT`
    HTTP 请求消息（`HttpRequestMessage`，包含`HttpHeaders`和`HttpContent`），并接收一个`HttpResponseMessage`对象作为该请求的结果（包括状态码和响应数据）。
- en: 'You can find more details about all of the exposed methods at the following
    link: [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/httpclient/httpclient-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/httpclient/httpclient-data-type).'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下链接中找到所有公开方法的更多详细信息：[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/httpclient/httpclient-data-type](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/httpclient/httpclient-data-type)。
- en: As an example, in the following code, we create an extension that permits you
    to pull customers' address details by calling a service called `Fullcontact` ([https://www.fullcontact.com](https://www.fullcontact.com)).
    When you are registered for the free account, `Fullcontact` gives you an API with
    an access key that you can use to retrieve customer details by providing the customer's
    name.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在以下代码中，我们创建了一个扩展，允许通过调用名为`Fullcontact`的服务（[https://www.fullcontact.com](https://www.fullcontact.com)）来获取客户的地址详细信息。当你注册免费账户时，`Fullcontact`会提供一个
    API，并附带一个访问密钥，你可以用这个密钥通过提供客户姓名来检索客户详细信息。
- en: 'What we want is the following: if you insert the domain name of a company in
    the `Name` field of the Customer Card (for example, [packt.com](https://www.packtpub.com/)),
    the system must call the API and retrieve the customer'' details for this domain
    name.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要的是：如果在客户卡片的`Name`字段中插入一个公司的域名（例如，[packt.com](https://www.packtpub.com/)），系统必须调用
    API 并检索该域名对应的客户详细信息。
- en: 'We create a `pageextension` object by extending the Customer Card, and in the
    `OnAfterValidate` trigger of the `Name` field, we call a custom method (called
    `LookupAddressInfo` and defined in a codeunit called `TranslationManagement`)
    to handle the data retrieval logic:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过扩展客户卡片来创建一个`pageextension`对象，并在`Name`字段的`OnAfterValidate`触发器中调用一个自定义方法（名为`LookupAddressInfo`，定义在一个名为`TranslationManagement`的代码单元中）来处理数据检索逻辑：
- en: '[PRE24]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The `TranslationManagement` codeunit is defined as follows:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`TranslationManagement`代码单元定义如下：'
- en: '[PRE25]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Here, the `LookupAddressInfo` procedure calls the `Fullcontact` API (with an
    authorization header that contains the key provided by the API registration) by
    using the `HttpClient` object and sending a `POST` request to the provided URL
    by passing the `HttpContent` to the call (this content contains the name to check
    in the format as per API specifications).
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`LookupAddressInfo`过程通过使用`HttpClient`对象调用`Fullcontact` API（并通过 API 注册时提供的密钥设置授权头），并发送`POST`请求到提供的
    URL，将`HttpContent`传递给该请求（该内容按 API 规范的格式包含要检查的姓名）。
- en: The HTTP request returns an `HttpResponseMessage` object that contains the response
    message. If the HTTP response is successful, we read the content of the HTTP response
    message (which is a JSON string). Then, we parse this JSON string by using some
    helper methods (which you can see defined in the previous code) that permit us
    to read JSON tokens and retrieve their values in a specified format (or return
    an error string or a default value if the token data is not available).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP 请求返回一个`HttpResponseMessage`对象，该对象包含响应消息。如果 HTTP 响应成功，我们将读取 HTTP 响应消息的内容（该内容为一个
    JSON 字符串）。然后，我们使用一些辅助方法（你可以在前面的代码中看到这些方法的定义）解析这个 JSON 字符串，这些方法允许我们读取 JSON 令牌并按指定格式获取它们的值（如果令牌数据不可用，则返回错误字符串或默认值）。
- en: 'With the `HttpClient` class, you can handle authentication to your web service
    or the API that you want to call. For example, this is how you can use basic authentication
    with `HttpClient`:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`HttpClient`类，你可以处理对你要调用的 Web 服务或 API 的身份验证。例如，以下是如何使用`HttpClient`进行基本身份验证的示例：
- en: '[PRE26]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: In this section, we saw how to consume web services and APIs from AL and how
    to handle requests, responses, and authentication. In the next section, we'll
    see how to automatically publish objects as web services in Dynamics 365 Business
    Central when installing an extension.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，我们了解了如何从AL消费Web服务和API，以及如何处理请求、响应和身份验证。在接下来的部分，我们将看到如何在安装扩展时自动将对象发布为Dynamics
    365 Business Central中的Web服务。
- en: Publishing Dynamics 365 Business Central objects as web services from AL
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从AL发布Dynamics 365 Business Central对象作为Web服务
- en: When developing extensions, you may need to automatically publish a Dynamics
    365 Business Central object as a web service instance for external applications.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发扩展时，你可能需要自动将Dynamics 365 Business Central对象发布为外部应用程序的Web服务实例。
- en: 'There are essentially two different ways to automate this process:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，有两种不同的方式来自动化这个过程：
- en: Create an `Install` codeunit and, in this codeunit, create the web service instance
    by inserting a record in the `Tenant Web Service` table via AL code.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个`Install`代码单元，并在此代码单元中通过AL代码在`Tenant Web Service`表中插入记录来创建Web服务实例。
- en: Create an XML file with a `TenantWebService` definition.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个包含`TenantWebService`定义的XML文件。
- en: 'With the first method, you define an `Install` codeunit, and (for example,
    in the `OnInstallAppPerCompany` trigger) you can create the web service definition
    by creating a new entry in the `Tenant Web Service` table, as follows:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 使用第一种方法，你定义一个`Install`代码单元，并且（例如，在`OnInstallAppPerCompany`触发器中）你可以通过在`Tenant
    Web Service`表中创建一个新条目来创建Web服务定义，如下所示：
- en: '[PRE27]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Here, we have published the `Vendor Card` page as a web service with a SERVICE
    NAME of `VendorCardWS`. This web service will be visible in the `Web Services`
    page in Dynamics 365 Business Central, as follows:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们已经将`Vendor Card`页面作为Web服务发布，SERVICE NAME为`VendorCardWS`。这个Web服务将在Dynamics
    365 Business Central的`Web Services`页面中可见，如下所示：
- en: '![](img/5bf79e34-81ed-429b-a08e-f5ff06032d20.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5bf79e34-81ed-429b-a08e-f5ff06032d20.png)'
- en: 'With the second method, you can use the `twebservices` snippet to create a
    `TenantWebService` XML definition file. The following screenshot shows this:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用第二种方法，你可以通过`twebservices`代码片段来创建一个`TenantWebService` XML定义文件。以下截图展示了这一点：
- en: '![](img/c460768d-a07d-48f5-bb73-b2f16bfa313b.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c460768d-a07d-48f5-bb73-b2f16bfa313b.png)'
- en: 'With the XML definition file, to publish the `Vendor Card` page as a web service,
    you have to write the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 使用XML定义文件，要将`Vendor Card`页面作为Web服务发布，你需要编写以下内容：
- en: '[PRE28]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This XML definition file will be part of your AL project extension's code.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这个XML定义文件将成为你AL项目扩展代码的一部分。
- en: 'The two methods described here have the same effect when installing the extension:
    your web service will be published and visible on the `Web Services` page in Dynamics
    365 Business Central. But what happens when you uninstall the extension?'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这里描述的两种方法在安装扩展时效果相同：你的Web服务将被发布并在Dynamics 365 Business Central的`Web Services`页面中可见。但当你卸载扩展时，会发生什么呢？
- en: When you uninstall the extension, if the web service is published using the
    XML definition file, it is automatically removed from the `Tenant Web Service`
    table, while if the web service is published directly via AL code, it's not removed
    from that table. If you need to automatically publish a web service from an extension
    at the installation phase, it's recommended to use the `TenantWebService` XML
    definition file.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当你卸载扩展时，如果Web服务是使用XML定义文件发布的，它会自动从`Tenant Web Service`表中移除；而如果Web服务是通过AL代码直接发布的，则不会从该表中移除。如果你需要在安装阶段自动发布Web服务，建议使用`TenantWebService`
    XML定义文件。
- en: In the next section, we'll see how to use Azure Functions to execute serverless
    processes in the cloud and to replace standard .NET code.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将看到如何使用Azure Functions在云端执行无服务器流程，并替代标准的.NET代码。
- en: Using Azure Functions to replace .NET code
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure Functions替代.NET代码
- en: With Dynamics 365 Business Central, usage of .NET assemblies (the `DotNet` variable
    type) is supported only in an on-premise scenario. With Dynamics 365 Business
    Central in the cloud (SaaS), you cannot use DotNet objects (for security reasons)
    and the official way to replace a `DotNet` variable is by using an HTTP call to
    an **Azure function**.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dynamics 365 Business Central中，.NET程序集的使用（`DotNet`变量类型）仅支持本地部署的场景。在云端的Dynamics
    365 Business Central（SaaS）中，你不能使用DotNet对象（出于安全原因），而替代`DotNet`变量的官方方式是使用HTTP调用**Azure函数**。
- en: '**Azure Functions** is a serverless compute service offered by the Azure platform
    that permits you to run code in the cloud without managing the infrastructure.
    We''ll talk about Azure Functions in more depth in [Chapter 14](3d538864-81c5-4077-9596-2a17aace1e3a.xhtml),
    *Monitoring, Scaling, and CI/CD with Azure Functions*, so here we''ll not see
    how to create an Azure function from scratch, but only how to call it from your
    extension''s code.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**Azure Functions**是Azure平台提供的一种无服务器计算服务，允许你在云中运行代码，而无需管理基础设施。我们将在[第14章](3d538864-81c5-4077-9596-2a17aace1e3a.xhtml)，*使用Azure
    Functions进行监控、扩展和CI/CD*中更深入地讨论Azure函数，因此这里我们不会讨论如何从头创建一个Azure函数，而仅介绍如何从扩展的代码中调用它。'
- en: Now, imagine having an Azure function called `PostCodeValidator` that validates
    post codes. This function (of the `HttpTrigger` function type) receives a post
    code via a query string, validates it, and the function returns a JSON response
    with a Boolean value that indicates whether the post code is valid or not.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设有一个名为`PostCodeValidator`的Azure函数，它验证邮政编码。这个函数（属于`HttpTrigger`类型的函数）通过查询字符串接收一个邮政编码，验证它，然后函数返回一个包含布尔值的JSON响应，指示邮政编码是否有效。
- en: 'The Azure function can be called via a query string with the following URL:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下URL使用查询字符串调用Azure函数：
- en: '[PRE29]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Here, `POSTCODE` is the post code to validate.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`POSTCODE`是要验证的邮政编码。
- en: 'The JSON response message from the Azure function is as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 来自Azure函数的JSON响应消息如下：
- en: '[PRE30]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'For this example, we want to call this function in the `OnAfterValidate` event
    of the `Post Code` field of the `Customer` table:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们希望在`Customer`表的`Post Code`字段的`OnAfterValidate`事件中调用这个函数：
- en: '![](img/a088d968-4deb-4ce9-b78e-a2a2849d558e.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a088d968-4deb-4ce9-b78e-a2a2849d558e.png)'
- en: 'The code to call the Azure function from AL is as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 从AL调用Azure函数的代码如下：
- en: '[PRE31]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Here, by using the `HttpClient` object, we send an HTTP `GET` request to the
    Azure function URI by passing the requested code function''s parameter with the
    value of the `Post Code` field to validate. Then, we read the `HttpResponseMessage`
    content returned by the Azure function (which is a JSON object) with the following:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，通过使用`HttpClient`对象，我们发送一个HTTP `GET`请求到Azure函数的URI，传递请求的代码函数的参数（即要验证的`Post
    Code`字段的值）。然后，我们读取由Azure函数返回的`HttpResponseMessage`内容（这是一个JSON对象），如下所示：
- en: '[PRE32]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This method loads the `json` text variable from the HTTP response content.
    After that, we search for the `IsValid` token in the JSON object:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法从HTTP响应内容中加载`json`文本变量。之后，我们在JSON对象中查找`IsValid`标记：
- en: '[PRE33]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: If the token is found, its value is saved into the `token` variable. We read
    its Boolean value and if it's false, an error is raised (`InvalidCodeError`).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果找到了该标记，它的值将被保存到`token`变量中。我们读取它的布尔值，如果是false，则会抛出错误（`InvalidCodeError`）。
- en: We have seen how to call an Azure function and then how to read and handle its
    response. We'll talk in more depth about Azure Functions in [Chapter 13](45e3cb96-0df4-43be-89d0-697822f4b159.xhtml), *Serverless
    Business Processes with Business Central and Azure*.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何调用Azure函数，然后如何读取和处理它的响应。在[第13章](45e3cb96-0df4-43be-89d0-697822f4b159.xhtml)，*无服务器业务流程与Business
    Central和Azure*中，我们将更深入地讨论Azure函数。
- en: In the next section, we'll see how to use the Isolated Storage feature to handle
    and secure sensitive data from a Dynamics 365 Business Central extension.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将看到如何使用隔离存储功能来处理和保护来自Dynamics 365 Business Central扩展的敏感数据。
- en: Understanding Isolated Storage
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解隔离存储
- en: '**Isolated Storage** is key-value-based storage that provides data isolation
    between extensions. Isolated Storage can be used to store data that must be preserved
    inside the extension scope, and this data is accessible via AL code. The `DataScope`
    option type identifies the scope of stored data in Isolated Storage.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**Isolated Storage**是一种基于键值的存储，它提供了扩展之间的数据隔离。隔离存储可用于存储必须保留在扩展范围内的数据，这些数据可以通过AL代码访问。`DataScope`选项类型标识隔离存储中存储数据的范围。'
- en: '`DataScope` is an optional parameter and the default value is `Module`. All
    possible values are listed in the following table:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataScope`是一个可选参数，默认值为`Module`。所有可能的值列在下表中：'
- en: '| **Member** | **Description** |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| **Member** | **描述** |'
- en: '| `Module` | It indicates that the record is available in the scope of the
    app context. |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| `Module` | 它表示记录在应用程序上下文中的范围内可用。 |'
- en: '| `Company` | It indicates that the record is available in the scope of the
    company within the app context. |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| `Company` | 它表示记录在应用程序上下文中的公司范围内可用。 |'
- en: '| `User` | It indicates that the record is available for a user within the
    app context. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| `User` | 表示该记录在应用程序上下文中对用户可用。 |'
- en: '| `CompanyAndUser` | It indicates that the record is available for a user and
    specific company within the app context. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| `CompanyAndUser` | 表示该记录在应用程序上下文中对特定用户和公司可用。 |'
- en: 'To manage data in Isolated Storage, you have the following methods:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要管理Isolated Storage中的数据，您可以使用以下方法：
- en: '| **Method** | **Description** |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| **方法** | **描述** |'
- en: '| `[Ok := ] IsolatedStorage.**Set**(Key: String, Value: String, [DataScope:
    DataScope])` | This sets the value associated with the specified key within the
    extension. The optional `DataScope` parameter is the scope of the stored data.
    |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| `[Ok := ] IsolatedStorage.**Set**(Key: String, Value: String, [DataScope:
    DataScope])` | 该方法设置与指定键相关联的值。可选的`DataScope`参数是存储数据的范围。 |'
- en: '| `[Ok := ] IsolatedStorage.**Get**(Key: String, [DataScope: DataScope], var
    Value: Text)` | This gets the value associated with the specified key within the
    extension. The optional `DataScope` parameter is the scope of the data to retrieve.
    |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| `[Ok := ] IsolatedStorage.**Get**(Key: String, [DataScope: DataScope], var
    Value: Text)` | 该方法获取与指定键相关联的值。可选的`DataScope`参数是要检索的数据范围。 |'
- en: '| `HasValue :=  IsolatedStorage.**Contains**(Key: String, [DataScope: DataScope])`
    | This determines whether the storage contains a value with the specified key
    within the extension. The optional `DataScope` parameter is the scope to check
    for the existence of the value with the given key. |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| `HasValue := IsolatedStorage.**Contains**(Key: String, [DataScope: DataScope])`
    | 该方法判断存储中是否包含与指定键关联的值。可选的`DataScope`参数是检查该键值是否存在的范围。 |'
- en: '| `[Ok := ] IsolatedStorage.**Delete**(Key: String, [DataScope: DataScope])`
    | This deletes the value with the specified key from the Isolated Storage within
    the extension. The optional `DataScope` parameter is the scope to remove the value
    with the given key. |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| `[Ok := ] IsolatedStorage.**Delete**(Key: String, [DataScope: DataScope])`
    | 该方法删除Isolated Storage中指定键相关联的值。可选的`DataScope`参数是要删除的键值的范围。 |'
- en: Isolated Storage is useful for storing sensitive data, user options, and license
    keys.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: Isolated Storage适用于存储敏感数据、用户选项和许可证密钥。
- en: 'Let''s consider the following example:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个示例：
- en: '[PRE34]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'From the preceding code, we get the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的代码中，我们得到了以下内容：
- en: In the first step, we save, in Isolated Storage, a key called `mykey` with a
    value of `myvalue` and `DataScope` set to `Company`. The key is visible in the
    scope of the company within the app context, so no other extensions can access
    this key.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一步，我们将一个名为`mykey`的键值对存储在Isolated Storage中，值为`myvalue`，并将`DataScope`设置为`Company`。该键在应用程序上下文中属于公司的范围，因此其他扩展无法访问此键。
- en: In the second step, we check whether a key called `mykey` is saved in Isolated
    Storage with `DataScope` set to `Company`. If a match is found (key and scope),
    the key is retrieved (with the `Get` method) and the value is returned in the
    `keyValue` text variable.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二步，我们检查名为`mykey`的键是否已存储在Isolated Storage中，且`DataScope`设置为`Company`。如果找到匹配项（键和值的范围），则通过`Get`方法获取该键，并将值返回到`keyValue`文本变量中。
- en: In the last step, we delete the key for this `DataScope`.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最后一步，我们删除此`DataScope`的键。
- en: 'As previously said, you could also use Isolated Storage to save license keys
    or license details for your extension. The following code shows how to export
    the records of a table called `License` to JSON, then how to encrypt the JSON
    value, and finally how to store the encrypted text in Isolated Storage:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，您也可以使用Isolated Storage保存许可证密钥或许可证详细信息。以下代码展示了如何将名为`License`的表中的记录导出为JSON，然后如何加密该JSON值，最后如何将加密后的文本存储到Isolated
    Storage中：
- en: '[PRE35]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Here, the `License` table is declared as a temporary table. In this way, the
    data is isolated into the calling codeunit.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`License`表被声明为临时表。这样，数据就被隔离到调用的代码单元中。
- en: 'With the Dynamics 365 Business Central wave 2 release, there are some changes related
    to secret management with Isolated Storage. Here are the details:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Dynamics 365 Business Central wave 2版本的发布，Isolated Storage的密钥管理方式有所变化。具体细节如下：
- en: In Dynamics 365 Business Central SaaS, sensitive data stored in Isolated Storage
    is always encrypted.
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Dynamics 365 Business Central SaaS版中，存储在Isolated Storage中的敏感数据始终是加密的。
- en: 'In Dynamics 365 Business Central on-premise, encryption is controlled by the
    end user (via the Data Encryption Management page):'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Dynamics 365 Business Central本地版中，加密由最终用户控制（通过数据加密管理页面）：
- en: If encryption is turned on, a secret stored in the Isolated Storage is automatically
    encrypted.
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果启用了加密，存储在Isolated Storage中的密钥会自动加密。
- en: A secret that was inserted while encryption was turned off will remain unencrypted
    if encryption is turned on.
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在加密关闭时插入的秘密，如果加密开启，则将保持未加密状态。
- en: If you turn off encryption, the secret will be decrypted.
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果关闭加密，秘密将被解密。
- en: According to these changes, if you have an extension that works for Dynamics
    365 Business Central SaaS and on-premise and you're using Isolated Storage to
    store secrets, you need to check whether encryption is enabled (which is always
    true for SaaS) and then save the secret accordingly.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这些更改，如果您有一个适用于 Dynamics 365 Business Central SaaS 和本地部署的扩展，并且您使用隔离存储来存储秘密，则需要检查加密是否启用（对于
    SaaS 总是启用）并相应地保存秘密。
- en: 'So, a function that saves a license key to Isolated Storage and that works
    for Dynamics 365 Business Central SaaS and on-premise will be as follows:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个将许可证密钥保存到隔离存储并适用于 Dynamics 365 Business Central SaaS 和本地部署的函数将如下所示：
- en: '[PRE36]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: With the `SetEncrypted` method, you can now automatically save a secret by using
    encryption (no more calls to the `Cryptography Management` codeunit).
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `SetEncrypted` 方法，您现在可以通过加密自动保存秘密（无需再调用 `Cryptography Management` 代码单元）。
- en: We have seen how to use Isolated Storage to improve data security in our extensions.
    In the next section, we'll see how to create control add-ins.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到如何使用隔离存储在扩展中提高数据安全性。在下一部分，我们将看到如何创建控制插件。
- en: Working with control add-ins
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用控制插件
- en: '**Control add-in** objects are a way to add custom functionalities (functions
    or UI customizations) to the Dynamics 365 Business Central client. A control add-in
    can interact with Dynamics 365 Business Central events and can raise events for
    your AL code.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制插件** 对象是一种向 Dynamics 365 Business Central 客户端添加自定义功能（函数或 UI 自定义）的方式。控制插件可以与
    Dynamics 365 Business Central 事件进行交互，并且可以为 AL 代码触发事件。'
- en: 'A control add-in can be defined in AL code by using the `tcontroladdin` snippet,
    which has the following structure:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过使用 `tcontroladdin` 代码片段在 AL 代码中定义一个控制插件（control add-in），该片段具有以下结构：
- en: '[PRE37]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: As you can see from the code snippet, when you define a `controladdin` object,
    you need to set the `Scripts` property to include the scripts of your control
    add-in (in a JavaScript file). These scripts can be local `.js` files or external
    files referenced via HTTP or HTTPS.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从代码片段中看到的，当定义 `controladdin` 对象时，您需要设置 `Scripts` 属性，以包含您的控制插件的脚本（在 JavaScript
    文件中）。这些脚本可以是本地的 `.js` 文件，也可以是通过 HTTP 或 HTTPS 引用的外部文件。
- en: The `StartupScript` property permits you to call a script that must be executed
    when the page that hosts the `controladdin` object is loaded. You can style your
    `controladdin` object by using the `StyleSheet` property (which permits you to
    reference a CSS file) and the `Images` property (which permits you to load images
    into your add-in).
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`StartupScript` 属性允许您调用必须在托管 `controladdin` 对象的页面加载时执行的脚本。您可以通过使用 `StyleSheet`
    属性（允许您引用 CSS 文件）和 `Images` 属性（允许您将图像加载到插件中）来对 `controladdin` 对象进行样式设置。'
- en: When defining the style of a `controladdin` object in Dynamics 365 Business
    Central, please always refer to the *Control Add-in Style Guide* at the following
    link: [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-style](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-style).
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义 Dynamics 365 Business Central 中 `controladdin` 对象的样式时，请始终参考以下链接中的 *控制插件样式指南*：[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-style](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-style)。
- en: As a basic example, here we create a control add-in object that will be placed
    in a Dynamics 365 Business Central page (specifically, an Item Card).
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个基本示例，这里我们创建一个将被放置在 Dynamics 365 Business Central 页面（具体来说是 Item Card）中的控制插件对象。
- en: 'The `controladdin` object is composed of two JavaScript files:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '`controladdin` 对象由两个 JavaScript 文件组成：'
- en: '`Start.js`, which contains the startup script and is loaded when the Dynamics
    365 Business Central object that contains the add-in starts'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Start.js`，包含启动脚本，并在包含插件的 Dynamics 365 Business Central 对象启动时加载'
- en: '`Main.js`, which contains the add-in business logic'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Main.js`，包含插件的业务逻辑'
- en: 'The `Start.js` JavaScript file is defined as follows:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`Start.js` JavaScript 文件的定义如下：'
- en: '[PRE38]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Here, we initialize the add-in object, we print some HTML text inside the add-in,
    and we use the `InvokeExtensibilityMethod` method to invoke the AL trigger on
    the page that contains the add-in.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们初始化控制插件对象，打印一些 HTML 文本到插件中，并使用 `InvokeExtensibilityMethod` 方法在包含插件的页面上调用
    AL 触发器。
- en: More information about the `InvokeExtensibilityMethod` method can be found at [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods/devenv-invokeextensibility-method](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods/devenv-invokeextensibility-method).
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 `InvokeExtensibilityMethod` 方法的更多信息，请参阅 [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods/devenv-invokeextensibility-method](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods/devenv-invokeextensibility-method)。
- en: 'The `Main.js` JavaScript file is defined as follows:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '`Main.js` JavaScript 文件定义如下：'
- en: '[PRE39]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Now, in Visual Studio Code, we create the `controladdin` object, as follows:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在 Visual Studio Code 中，我们创建 `controladdin` 对象，如下所示：
- en: '[PRE40]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'In the preceding code, we can see the following:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们可以看到以下内容：
- en: '`VerticalStretch` specifies that the add-in can be enlarged vertically.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VerticalStretch`指定插件可以垂直放大。'
- en: '`VerticalShrink` specifies that the add-in can be made smaller vertically.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VerticalShrink`指定插件可以垂直缩小。'
- en: '`HorizontalStretch` specifies that the add-in can be enlarged horizontally.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HorizontalStretch`指定插件可以水平放大。'
- en: '`HorizontalShrink` specifies that the add-in can be made smaller horizontally.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HorizontalShrink`指定插件可以水平缩小。'
- en: '`MinimumHeight`/`MaximumHeight` specifies the minimum/maximum height that the
    control add-in can be shrunk or stretched to.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MinimumHeight`/`MaximumHeight`指定控件插件可以收缩或拉伸到的最小/最大高度。'
- en: '`MinimumWidth`/`MaximumWidth` specifies the minimum/maximum width that the
    control add-in can be shrunk or stretched to.'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MinimumWidth`/`MaximumWidth`指定控件插件可以收缩或拉伸到的最小/最大宽度。'
- en: '`RequestedHeight` and `RequestedWidth` specify the height and width of the
    add-in control inside the page.'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RequestedHeight` 和 `RequestedWidth`指定插件控件在页面中的高度和宽度。'
- en: 'The `controladdin` object references the previously described scripts, and
    it can reference a stylesheet (CSS) file, where you can handle the appearance
    of the add-in. In this example, we have used a simple stylesheet:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '`controladdin` 对象引用了前面描述的脚本，它还可以引用样式表（CSS）文件，在这里你可以处理插件的外观。在此示例中，我们使用了一个简单的样式表：'
- en: '[PRE41]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'To add the `controladdin` object to the Item Card page, we create a `pageextension`
    object, and here we add a `usercontrol` field as follows:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将 `controladdin` 对象添加到物料卡页面，我们创建了一个 `pageextension` 对象，并在此处添加了一个 `usercontrol`
    字段，如下所示：
- en: '[PRE42]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The `usercontrol` field triggers the `ControlReady` event, and from this event,
    we call the `HelloWord` method (defined in the `main.js` file).
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '`usercontrol` 字段触发 `ControlReady` 事件，从此事件中，我们调用 `HelloWorld` 方法（定义在 `main.js`
    文件中）。'
- en: 'The final result is the following. When the page is loaded, the `INIT` method
    is triggered:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结果如下。当页面加载时，`INIT` 方法会被触发：
- en: '![](img/73cca272-0aba-4758-8abb-16eb7b22efc8.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73cca272-0aba-4758-8abb-16eb7b22efc8.png)'
- en: 'This is the HTML of the Dynamics 365 Business Central page, where you can see
    the control add-in in the `div` element:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Dynamics 365 Business Central 页面的 HTML，你可以在 `div` 元素中看到控件插件：
- en: '![](img/2ccd5464-6207-4138-a801-a0cb0d87720c.png)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2ccd5464-6207-4138-a801-a0cb0d87720c.png)'
- en: 'Then, the add-in triggers the `ControlReady` event and our JavaScript `HelloWorld`
    function is executed:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，插件触发 `ControlReady` 事件，我们的 JavaScript `HelloWorld` 函数被执行：
- en: '![](img/06f2037b-6f76-4db4-844c-16ecc5a92a0e.png)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![](img/06f2037b-6f76-4db4-844c-16ecc5a92a0e.png)'
- en: We have seen how to create visual control add-ins and how to use them inside
    a Dynamics 365 Business Central page. In the next section, we'll see how to create
    and use a timer-based control add-in.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了如何创建视觉控件插件以及如何在 Dynamics 365 Business Central 页面中使用它们。在下一部分中，我们将看到如何创建和使用基于计时器的控件插件。
- en: Creating a timer-based control add-in
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建基于计时器的控件插件
- en: Control add-ins are useful also for creating timer-based logic inside a Dynamics
    365 Business Central page (which is called **ping-pong** logic) to execute business
    logic every *N* times.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 控件插件也可以用于在 Dynamics 365 Business Central 页面中创建基于计时器的逻辑（称为 **乒乓** 逻辑），用于每 *N*
    次执行一次业务逻辑。
- en: 'In our AL project, we define our `controladdin` object as follows:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的 AL 项目中，我们这样定义 `controladdin` 对象：
- en: '[PRE43]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The `start.js` file contains the add-in initialization:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '`start.js` 文件包含插件的初始化：'
- en: '[PRE44]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The `pingpong.js` file contains the JavaScript business logic of our add-in:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '`pingpong.js` 文件包含我们的插件的 JavaScript 业务逻辑：'
- en: '[PRE45]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'We can now insert our add-in object to a Dynamics 365 Business Central page
    (for example, the Item Card) and from here, we can call the add-in methods, as
    follows:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将插件对象插入到 Dynamics 365 Business Central 页面（例如，物料卡）中，从这里我们可以调用插件方法，如下所示：
- en: '[PRE46]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Here, we set a timer interval (for example, 10 seconds) and start the timer.
    When the timer tick has elapsed, the `TimerElapsed` trigger is called and your
    custom business logic is executed. When the `TimerElapsed` trigger is raised,
    it's important to stop the timer to avoid raising a new event while the message
    is still displayed (as you can see, we stop the timer, run the custom code, and
    then restart the timer).
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们设置一个定时器间隔（例如，10秒），然后启动定时器。当定时器的计时器滴答时间过去时，`TimerElapsed` 触发器会被调用，并执行你的自定义业务逻辑。当
    `TimerElapsed` 触发器被触发时，重要的是停止定时器，以避免在消息仍然显示时触发新的事件（正如你所看到的，我们停止定时器，运行自定义代码，然后重新启动定时器）。
- en: More information about **control add-in** objects and properties can be found
    at [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-object](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-object).
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于 **控制插件** 对象和属性的信息，请访问 [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-object](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-control-addin-object)。
- en: A timer-based add-in is useful for executing timer-based operations or refreshing pages.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 基于定时器的插件对于执行基于定时器的操作或刷新页面非常有用。
- en: In the next section, we'll see how to use notifications in Dynamics 365 Business
    Central to better handle errors and messages in the standard UI.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分中，我们将展示如何在 Dynamics 365 Business Central 中使用通知，以更好地处理标准 UI 中的错误和消息。
- en: Notifications inside Dynamics 365 Business Central
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 中的通知
- en: Dynamics 365 Business Central permits you to programmatically send non-intrusive
    notifications to your users inside the web client user interface to display information,
    messages, or error notifications. These notifications are non-modal, so they don't
    require your users to stop working and perform some action on the notification
    message immediately. They can also be dismissed if necessary.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 允许你通过编程方式向用户在 Web 客户端界面中发送非侵入性的通知，以显示信息、消息或错误通知。这些通知是非模态的，因此不要求用户立即停止工作并执行一些操作。它们也可以在必要时被关闭。
- en: Notifications appear in the **notification bar** at the top of the page in which
    the user is currently working. The application can send multiple notifications
    to the user, and they will all appear in the notification bar in chronological
    order. They will remain in the notification bar until the user takes action on
    them, dismisses them or for the duration of the page instance.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 通知将出现在用户当前工作页面顶部的 **通知栏** 中。应用程序可以向用户发送多个通知，这些通知会按时间顺序依次出现在通知栏中。它们将一直显示在通知栏中，直到用户采取行动、关闭它们或页面实例持续存在。
- en: As a developer, you can programmatically create notifications by using the `Notification`
    and `NotificationScope` AL objects.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，你可以通过使用 `Notification` 和 `NotificationScope` AL 对象以编程方式创建通知。
- en: As an example of how to use `Notifications` inside Dynamics 365 Business Central,
    we will create a notification in the `Purchase Order` page that appears if the
    selected `Vendor` has a balance due.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 作为如何在 Dynamics 365 Business Central 中使用 `Notifications` 的示例，我们将在 `采购订单` 页面中创建一个通知，如果所选的
    `供应商` 有余额到期，该通知将显示。
- en: 'The `pageextension` object is defined as follows:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`pageextension` 对象定义如下：'
- en: '[PRE47]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'We are checking whether the vendor has a balance due. If so, a `Notification`
    object is created. A `Notification` object has a `Message` property (that defines
    the content of the notification that will appear in the UI) and `Scope`. Now, `Scope`
    defines where the message will appear to the user, and it could be one of the
    following:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在检查供应商是否有余额到期。如果有，则创建一个 `Notification` 对象。`Notification` 对象具有一个 `Message`
    属性（定义将出现在 UI 中的通知内容）和 `Scope` 属性。现在，`Scope` 定义了消息将在哪里显示给用户，它可能是以下之一：
- en: '`LocalScope` (default): The notification will appear on the user''s current
    page.'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LocalScope`（默认）：通知将出现在用户当前的页面上。'
- en: '`GlobalScope` (not currently supported): The notification will appear regardless
    of which page the user is working on.'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GlobalScope`（当前不支持）：通知将无论用户在哪个页面上，都将显示。'
- en: When defining the `Notification` object, we use the `SetData` method to set
    a data property value to the notification (in this case, the `Vendor` number)
    and we use the `AddAction` method to add an action to the notification message
    (we want an action that immediately opens the `Vendor Card` page). The `AddAction`
    method starts a method called `OpenVendor`, defined in a codeunit called `ActionHandler`.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义`Notification`对象时，我们使用`SetData`方法将数据属性值设置为通知（在此案例中是`Vendor`编号），并使用`AddAction`方法将操作添加到通知消息中（我们希望有一个操作能立即打开`Vendor
    Card`页面）。`AddAction`方法启动一个名为`OpenVendor`的方法，该方法在名为`ActionHandler`的代码单元中定义。
- en: 'The codeunit object for this is defined as follows:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码单元对象定义如下：
- en: '[PRE48]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Here, when the action inside the notification is clicked, the code retrieves
    the `VendorNo` parameter from the `Notification` object, retrieves the `Vendor`
    record, and opens the `Vendor Card` by passing the retrieved record.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，当点击通知中的操作时，代码从`Notification`对象中获取`VendorNo`参数，检索`Vendor`记录，并通过传递获取的记录打开`Vendor
    Card`页面。
- en: 'When you open a Purchase Order from Dynamics 365 Business Central and the selected
    vendor has a balance due, you will now see the following notification:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从 Dynamics 365 Business Central 打开采购订单，并且选择的供应商有未结余额时，你现在将看到以下通知：
- en: '![](img/21afe6f0-1557-49d1-bb79-81ab85c265b7.png)'
  id: totrans-335
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21afe6f0-1557-49d1-bb79-81ab85c265b7.png)'
- en: If you click on the Check balance due action inside the notification, the `Vendor
    Card` page with the selected vendor record is opened and the user can act accordingly.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击通知中的“检查余额到期”操作，选定供应商记录的`Vendor Card`页面将被打开，用户可以根据需要进行操作。
- en: Notifications are extremely important to use when you create extensions for
    Dynamics 365 Business Central because they will permit you to give a better experience
    to your users.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在为 Dynamics 365 Business Central 创建扩展时，通知极为重要，因为它们将允许你为用户提供更好的体验。
- en: In the next section, we'll see how to use asynchronous programming inside Dynamics
    365 Business Central.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分中，我们将了解如何在 Dynamics 365 Business Central 中使用异步编程。
- en: Understanding page background tasks
  id: totrans-339
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解页面后台任务
- en: Dynamics 365 Business Central version 15 introduces a new feature to handle
    asynchronous programming called **page background tasks**.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 版本 15 引入了一项新功能，称为**页面后台任务**，用于处理异步编程。
- en: '**Page background tasks** permit you to define a read-only and long-running
    process on a page that can be executed asynchronously in a background thread (isolated
    from the parent session). You can start the task and continue working on the page
    without waiting for the task to complete. The following diagram (provided by Microsoft)
    shows the flow of a background task:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '**页面后台任务**允许你在页面上定义一个只读且长时间运行的过程，可以在后台线程中异步执行（与父会话隔离）。你可以启动任务并继续在页面上工作，而无需等待任务完成。以下图（由微软提供）显示了后台任务的流程：'
- en: '![](img/4d170a66-b44b-4fad-bd3c-236a9668ee30.png)'
  id: totrans-342
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d170a66-b44b-4fad-bd3c-236a9668ee30.png)'
- en: 'A page background task has the following properties:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 页面后台任务具有以下属性：
- en: It's a read-only session (it cannot write or lock the database).
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个只读会话（不能写入或锁定数据库）。
- en: It can be canceled and it has a default and maximum timeout.
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以被取消，并且具有默认和最大超时。
- en: Its lifetime is controlled by the current record (it is canceled when the current
    record is changed, the page is closed, or the session ends).
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的生命周期由当前记录控制（当当前记录发生变化、页面关闭或会话结束时，它会被取消）。
- en: Completion triggers are invoked on the page session (such as updating page records
    and refreshing the UI).
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成触发器在页面会话中触发（例如更新页面记录和刷新 UI）。
- en: It can be queued up.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以排队等待。
- en: The parameters passed to and returned from page background tasks are in the
    form of a `Dictionary<string,string>` object.
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递给页面后台任务的参数以及返回的参数采用`Dictionary<string,string>`对象的形式。
- en: The callback triggers cannot execute operations on the UI, except notifications
    and control updates.
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回调触发器不能在 UI 上执行操作，除了通知和控制更新。
- en: There is a limit on the number of background tasks per session (if the limit
    is reached, the tasks are queued).
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个会话的后台任务数量有限（如果达到限制，任务将排队等待）。
- en: 'To create a page background task, the basic steps are as follows:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 创建页面后台任务的基本步骤如下：
- en: Create a codeunit that contains the business logic to execute in the background.
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个包含在后台执行的业务逻辑的代码单元。
- en: 'On the page where the task must be started, do the following:'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在必须启动任务的页面上，请执行以下操作：
- en: Add code that creates the background task (`EnqueueBackgroundTask`).
  id: totrans-355
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加创建后台任务的代码（`EnqueueBackgroundTask`）。
- en: Handle the task completion results by using the `OnPageBackgroundTaskCompleted`
    trigger (this is where you can update the page UI).
  id: totrans-356
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`OnPageBackgroundTaskCompleted`触发器来处理任务完成结果（在此处可以更新页面UI）。
- en: You can also use the `OnPageBackgroundTaskError` trigger to handle possible
    task errors.
  id: totrans-357
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你也可以使用`OnPageBackgroundTaskError`触发器来处理可能的任务错误。
- en: Here is an example of how to implement the preceding logic. In the Customer
    Card, we want to execute a background task that calculates some sales statistics
    values for the selected customer without blocking the UI (in a more complex scenario,
    imagine retrieving this data from an external service).
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何实现前述逻辑的示例。在客户卡片中，我们希望执行一个后台任务，计算所选客户的销售统计数据，而不阻塞UI（在更复杂的场景中，可以想象从外部服务检索这些数据）。
- en: Our calling page (`Customer Card`) passes a `Dictionary<string,string>` object
    (a key-value pair) to the background task with the key set to `CustomerNo` and
    the value set to the `No.` field of our selected Customer record. The task codeunit
    retrieves the `CustomerNo` value, calculates the total sales amount for this customer,
    the number of items sold, and the number of items shipped and returns a `Dictionary<string><string>`
    object with the key set to `TotalSales` and a value that is the calculated sales
    amount.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的调用页面（`客户卡片`）将一个`Dictionary<string,string>`对象（键值对）传递给后台任务，键设置为`CustomerNo`，值设置为我们所选客户记录的`No.`字段。任务代码单元获取`CustomerNo`值，计算该客户的总销售额、销售的商品数量和已发货的商品数量，并返回一个`Dictionary<string,string>`对象，键设置为`TotalSales`，值为计算出的销售金额。
- en: 'The task codeunit is defined as follows:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 任务代码单元定义如下：
- en: '[PRE49]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Then, we create a `pageextension` object to extend the Customer Card to add
    the new `SalesAmount`, `NoOfSales`, and `NoOfItemsShipped` fields (calculated
    by the background task) and to add code to start the task and read the results.
    The `pageextension` object is defined as follows:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 接着，我们创建一个`pageextension`对象，扩展客户卡片，添加新的`SalesAmount`、`NoOfSales`和`NoOfItemsShipped`字段（由后台任务计算），并添加代码来启动任务和读取结果。`pageextension`对象定义如下：
- en: '[PRE50]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: In the `OnAfterGetCurrRecord` trigger, we add the parameters required to start
    our background task and call the `EnqueueBackgroundTask` method. The `EnqueueBackgroundTask`
    methodcreates and queues a background task that runs the specified codeunit (without
    a UI) in a read-only child session of the page session. If the task completes
    successfully, the `OnPageBackgroundTaskCompleted` trigger is invoked. If an error
    occurs, the `OnPageBackgroundTaskError` trigger is invoked. If the page is closed
    before the task completes, or the page record ID on the task changed, the task
    is canceled.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 在`OnAfterGetCurrRecord`触发器中，我们添加了启动后台任务所需的参数，并调用`EnqueueBackgroundTask`方法。`EnqueueBackgroundTask`方法创建并排队一个后台任务，该任务在页面会话的只读子会话中运行指定的代码单元（没有UI）。如果任务成功完成，将调用`OnPageBackgroundTaskCompleted`触发器。如果发生错误，将调用`OnPageBackgroundTaskError`触发器。如果页面在任务完成前关闭，或任务中的页面记录ID发生变化，任务将被取消。
- en: In the `OnPageBackgroundTaskCompleted` trigger, we retrieve the `TotalSales`
    parameter from the dictionary and the UI (the relative field on the page) is updated
    accordingly.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 在`OnPageBackgroundTaskCompleted`触发器中，我们从字典中获取`TotalSales`参数，并相应更新UI（页面上的相应字段）。
- en: We have seen how to use the new asynchronous programming features inside Dynamics
    365 Business Central pages. This is an important feature that improves general
    application performance in many scenarios.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了如何在Dynamics 365 Business Central页面中使用新的异步编程功能。这是一个重要特性，在许多场景中能提升应用的整体性能。
- en: Summary
  id: totrans-367
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we covered a lot of advanced topics and saw some tricks for
    implementing particular tasks with the AL language extension, especially how to
    handle files and pictures, using XMLports, creating and extending Role Centers
    and headlines, handling XML and JSON serializations, consuming web services and
    APIs via AL code, and publishing a web service from an extension. Apart from this,
    we can use Isolated Storage to store sensitive data in an extension and we learned
    how to create control add-ins, how to handle notifications, and how to use asynchronous
    programming features (page background tasks) in your extensions.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们讨论了许多高级话题，并看到了使用AL语言扩展实现特定任务的一些技巧，特别是如何处理文件和图片，使用XMLports，创建和扩展角色中心与标题，处理XML和JSON序列化，使用AL代码调用Web服务和API，以及如何从扩展发布Web服务。除此之外，我们还可以使用Isolated
    Storage存储扩展中的敏感数据，学习了如何创建控件插件，如何处理通知，以及如何在扩展中使用异步编程功能（页面后台任务）。
- en: After reading this chapter, you're now able to create advanced customizations
    to improve general user experience and to handle different business tasks.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完本章后，你现在能够进行高级自定义，以改善整体用户体验并处理不同的业务任务。
- en: In the next chapter, we'll see how to customize, develop, and publish reports
    for Dynamics 365 Business Central.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解如何为 Dynamics 365 Business Central 自定义、开发和发布报告。
