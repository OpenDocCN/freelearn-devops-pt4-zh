- en: Dynamics 365 Business Central APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central API
- en: In the previous chapter, we saw how we can use DevOps techniques with Dynamics
    365 Business Central projects, and we focused on aspects such as source control
    management and CI/CD pipelines.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何在 Dynamics 365 Business Central 项目中使用 DevOps 技术，并重点讨论了源代码管理和 CI/CD
    管道等方面。
- en: 'In this chapter, we''ll see how to integrate Dynamics 365 Business Central
    with external applications by using the RESTful APIs exposed by the platform,
    and the focus will be on the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何通过使用平台暴露的 RESTful API，将 Dynamics 365 Business Central 与外部应用集成，重点将放在以下主题：
- en: Comparing OData and RESTful APIs
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较 OData 和 RESTful API
- en: Using the Dynamics 365 Business Central standard
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Dynamics 365 Business Central 标准
- en: Creating custom APIs with Dynamics 365 Business Central for new and existing
    entities
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为新实体和现有实体创建自定义 API
- en: Creating applications that use Dynamics 365 Business Central APIs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建使用 Dynamics 365 Business Central API 的应用程序
- en: Using bound actions
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用绑定动作
- en: Using Dynamics 365 Business Central webhooks
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Dynamics 365 Business Central Webhook
- en: Working with Dynamics 365 Business Central APIs in Microsoft Graph automation
    APIs
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Microsoft Graph 自动化 API 中使用 Dynamics 365 Business Central API
- en: By the end of this chapter, you will be able to create RESTful APIs for Dynamics
    365 Business Central and use them to integrate with external applications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将能够为 Dynamics 365 Business Central 创建 RESTful API，并使用它们与外部应用集成。
- en: Comparing OData and APIs in Dynamics 365 Business Central
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较 Dynamics 365 Business Central 中的 OData 和 API
- en: Every client that can make HTTP calls can consume RESTful APIs. Using the GET,
    POST, PATCH, and DELETE verbs of the HTTP protocol, entities can be **Created,
    Read, Updated, and Deleted** (**CRUD**). To make integrations with Dynamics 365
    Business Central, OData and RESTful APIs are the recommended tools to work with.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 每个能够发出 HTTP 调用的客户端都可以使用 RESTful API。通过使用 HTTP 协议的 GET、POST、PATCH 和 DELETE 动词，实体可以**创建、读取、更新和删除**（**CRUD**）。为了与
    Dynamics 365 Business Central 进行集成，OData 和 RESTful API 是推荐的工具。
- en: '**Open Data Protocol** (**OData**) is a web protocol that permits you to perform CRUD
    operations on tabular data with HTTP calls by using URIs for resource identification.
    Exposing an object as OData in Dynamics 365 Business Central is quite simple:
    open the WEB SERVICES page, insert a new record with the Page type, select the
    page you want to expose, and click on *Publish*.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**开放数据协议**（**OData**）是一个 Web 协议，允许你使用 URI 进行资源标识，通过 HTTP 调用对表格数据执行 CRUD 操作。在
    Dynamics 365 Business Central 中将对象暴露为 OData 非常简单：打开 Web 服务页面，插入一个新记录，选择你想要暴露的页面类型，然后点击*发布*。'
- en: 'Dynamics 365 Business Central automatically assigns to the published entity
    an OData and OData V4 URL, and then you can use this published entity (our page)
    as a web service by performing HTTP REST calls (GET, POST, PUT, DELETE, and PATCH)
    to the provided endpoints (as you can see in the following screenshot):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 会自动为发布的实体分配 OData 和 OData V4 URL，然后你可以通过执行 HTTP
    REST 调用（GET、POST、PUT、DELETE 和 PATCH）到提供的端点（如下面的截图所示），将此发布的实体（我们的页面）作为 Web 服务使用：
- en: '![](img/c98816aa-87ea-4ec0-a24b-4abc52287ad5.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c98816aa-87ea-4ec0-a24b-4abc52287ad5.png)'
- en: When calling an OData endpoint, you can apply filters, use grouping, use Flow
    Filters, and call business logic by using bound actions (we'll discuss them later
    in this chapter, in the *Using bound actions* section).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当调用 OData 端点时，你可以应用过滤器、使用分组、使用流过滤器，并通过使用绑定动作调用业务逻辑（我们将在本章稍后的*使用绑定动作*部分进行讨论）。
- en: 'APIs in Dynamics 365 Business Central use the same OData stack under the hood,
    but they have three main advantages when we talk about integration:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 中的 API 在后台使用相同的 OData 栈，但在我们谈论集成时，它们有三个主要优势：
- en: They have **versioning** (one of the most important things when doing service
    integration, because you will need a stable contract).
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们有**版本控制**（在进行服务集成时，这是最重要的事情之一，因为你需要一个稳定的合同）。
- en: They are **webhook supported** (you can publish your API page and then call `/api/microsoft/runtime/beta/webhookSupportedResources` to
    verify that the entity is supported by webhooks).
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们**支持 Webhook**（你可以发布你的 API 页面，然后调用`/api/microsoft/runtime/beta/webhookSupportedResources`来验证该实体是否支持
    Webhook）。
- en: 'They have **namespaces **so you can isolate and group your APIs according to
    their scope or functional area: `{{shortUrl}}/api/APIPublisher/APIGroup/v1.0/mycustomers(''01121212'')`.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们有**命名空间**，因此你可以根据作用域或功能领域来隔离和分组你的 API：`{{shortUrl}}/api/APIPublisher/APIGroup/v1.0/mycustomers('01121212')`。
- en: 'The fixed contract is the main reason that Microsoft prevents the opportunity
    to extend standard API pages. If you try to extend a standard API page (for example,
    the `Customer Entity` page), Visual Studio Code throws an error:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 固定合同是微软阻止扩展标准 API 页面的主要原因。如果您尝试扩展标准 API 页面（例如 `Customer Entity` 页面），Visual Studio
    Code 会抛出错误：
- en: '![](img/28547ffb-41b7-41f4-aebb-843e11dc5951.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/28547ffb-41b7-41f4-aebb-843e11dc5951.png)'
- en: For more information on how to use RESTful APIs in general, I recommend the
    following link: [https://www.odata.org/getting-started/basic-tutorial/](https://www.odata.org/getting-started/basic-tutorial/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解如何使用 RESTful API 的更多信息，我推荐以下链接：[https://www.odata.org/getting-started/basic-tutorial/](https://www.odata.org/getting-started/basic-tutorial/)。
- en: Now that we have explained the main differences between OData web services and
    RESTful APIs, in the next sections, we'll see how to use the Dynamics 365 Business
    Central APIs in your applications.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经解释了 OData Web 服务和 RESTful API 之间的主要区别，在接下来的章节中，我们将看到如何在应用程序中使用 Dynamics
    365 Business Central API。
- en: Using Dynamics 365 Business Central standard APIs
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Dynamics 365 Business Central 标准 API
- en: 'The Dynamics 365 Business Central platform exposes some standard entities as
    RESTful APIs. The entities exposed are summarized in the following table:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 平台将一些标准实体暴露为 RESTful API。暴露的实体总结如下表：
- en: '![](img/7bf5d66c-9ea0-40de-a991-ef4d309a4521.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7bf5d66c-9ea0-40de-a991-ef4d309a4521.png)'
- en: 'Dynamics 365 Business Central API endpoints have the following format:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central API 端点具有以下格式：
- en: '| **Endpoint URL section** | **Description** |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| **端点 URL 部分** | **描述** |'
- en: '| `https://api.businesscentral.dynamics.com` | Dynamics 365 Business Central
    base URL (the same for standard and custom APIs) |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `https://api.businesscentral.dynamics.com` | Dynamics 365 Business Central
    基础 URL（标准 API 和自定义 API 相同） |'
- en: '| `/v2.0` | API version |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `/v2.0` | API 版本 |'
- en: '| `/your tenant domain` | Domain name or ID of the Dynamics 365 Business Central
    tenant |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `/your tenant domain` | Dynamics 365 Business Central 租户的域名或 ID |'
- en: '| `/environment name` | Name of the environment (production, sandbox, and so
    on). This can be retrieved from the Dynamics 365 Business Central Admin portal
    |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `/environment name` | 环境名称（生产、沙盒等）。可以从 Dynamics 365 Business Central 管理门户中检索
    |'
- en: '| `/api` | Fixed value |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| `/api` | 固定值 |'
- en: '| `/beta ` | Indicates the version of the API in use |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| `/beta ` | 表示正在使用的 API 版本 |'
- en: At the time of writing, Dynamics 365 Business Central APIs are on endpoint version
    2.0, and API `version_number = 1.0`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 截至撰写本文时，Dynamics 365 Business Central API 正在使用端点版本 2.0，API `version_number =
    1.0`。
- en: 'The tenant ID is needed when using basic authentication. This is how you do
    it:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用基本身份验证时需要租户 ID。操作方法如下：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you''re using OAuth authentication, the tenant ID is not needed:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 OAuth 认证，则不需要租户 ID：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Version 1.0 of the Dynamics 365 Business Central APIs only supports production
    and primary sandbox environments. If you need to use the APIs in a sandbox environment
    that''s different than the default one (which is called `Sandbox`) or in a different
    production environment, you need to use version 2.0 of the APIs, as shown in the
    following endpoint:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central API 的版本 1.0 仅支持生产和主要沙盒环境。如果您需要在与默认沙盒环境（即 `Sandbox`）不同的沙盒环境或不同的生产环境中使用
    API，则需要使用版本 2.0 的 API，如下所示的端点：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When using APIs, the first thing you have to do is use a specific company ID.
    To retrieve the list of available companies on your Dynamics 365 Business Central
    tenant, you need to send an HTTP GET request to the `/companies` API endpoint.
    An example of this API call is as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 API 时，首先要做的是使用特定的公司 ID。要检索您在 Dynamics 365 Business Central 租户中可用的公司列表，您需要向
    `/companies` API 端点发送 HTTP GET 请求。以下是此 API 调用的示例：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This is the response we receive:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们收到的响应：
- en: '![](img/45abce03-adfd-4ed1-a570-4907b6cfb9fd.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45abce03-adfd-4ed1-a570-4907b6cfb9fd.png)'
- en: 'If we want to retrieve the list of `Customer` records for a specific company
    (for example, `Cronus IT`), we need to send an HTTP GET request to the following
    API endpoint:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要检索特定公司（例如 `Cronus IT`）的 `Customer` 记录列表，我们需要向以下 API 端点发送 HTTP GET 请求：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This is the response we receive from it:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们从中收到的响应：
- en: '![](img/ed085ecb-7366-49a5-82a0-f1cc76497d3d.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed085ecb-7366-49a5-82a0-f1cc76497d3d.png)'
- en: 'You can also apply filters when calling the APIs. For example, here, we retrieve
    all `Item` records where `unitPrice` is greater than 100:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您在调用 API 时还可以应用过滤器。例如，在这里，我们检索所有 `Item` 记录，其中 `unitPrice` 大于 100：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is the response:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是响应：
- en: '![](img/7acfdb8a-14f2-41f9-a0c8-e2854ed360e0.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7acfdb8a-14f2-41f9-a0c8-e2854ed360e0.png)'
- en: 'Dynamics 365 Business Central standard APIs also support features such as **expand**,
    in which, in a single call, you can expand the relationships between entities,
    and retrieve the main entity along with the related entities. For example, to
    retrieve a sales invoice and all of its sales invoice line records in a single
    HTTP call, you can perform an HTTP GET call to the following API endpoint:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 标准 API 还支持**expand**等功能，在一次调用中，您可以扩展实体之间的关系，并检索主实体及其相关实体。例如，要在一次
    HTTP 调用中检索销售发票及其所有销售发票行记录，您可以执行对以下 API 端点的 HTTP GET 调用：
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'As a result, you have a single JSON response object with the sales invoice
    header and its related sales invoice line detail. Here is the header object:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，您将得到一个包含销售发票头信息及其相关销售发票行详细信息的单一 JSON 响应对象。以下是头部对象：
- en: '![](img/243dead6-3fab-4545-96da-cc2af0bb7d3b.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/243dead6-3fab-4545-96da-cc2af0bb7d3b.png)'
- en: 'Also, here is the related line''s details:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这里是相关行的详细信息：
- en: '![](img/fce0475a-103f-454d-95dd-389552a2c1cc.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fce0475a-103f-454d-95dd-389552a2c1cc.png)'
- en: You can now parse this JSON object and use its data as per your needs.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以解析这个 JSON 对象，并根据需要使用其数据。
- en: In the next section, we will see how to create a custom API page for a new entity
    added to Dynamics 365 Business Central and how to create a new API page for an
    existing entity.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何为 Dynamics 365 Business Central 中新增的自定义实体创建 API 页面，以及如何为现有实体创建新的
    API 页面。
- en: Creating a custom API in Dynamics 365 Business Central
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Dynamics 365 Business Central 中创建自定义 API
- en: With Dynamics 365 Business Central extensions, you can create custom entities
    and you can expose a custom entity as a RESTful API.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Dynamics 365 Business Central 扩展，您可以创建自定义实体，并且可以将自定义实体作为 RESTful API 对外暴露。
- en: 'To create a new API in Dynamics 365 Business Central, you need to define a
    new `Page` object with `PageType = API`. To do this, you can use the `tpage` snippet
    and then select Page of type API, as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Dynamics 365 Business Central 中创建一个新的 API，您需要定义一个新的`Page`对象，`PageType = API`。为此，您可以使用`
    tpage`代码段，然后选择类型为 API 的页面，如下所示：
- en: '![](img/fc9eed41-f330-4ba8-8278-91dc7b5074e8.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fc9eed41-f330-4ba8-8278-91dc7b5074e8.png)'
- en: 'When creating API pages, remember the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 API 页面时，请记住以下几点：
- en: Fields must have a name in the REST-API-compliant format (only alphanumeric
    values, and no spaces or special characters (`camelCase`)).
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段必须具有符合 REST-API 规范的名称格式（仅限字母数字字符，且不能包含空格或特殊字符（`camelCase`））。
- en: You should use the ID of the entity (`SystemId`).
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应使用实体的 ID（`SystemId`）。
- en: When you insert modify, or delete an entity through APIs, triggers on the underlying
    table are not executed. You need to call the table's trigger by handling the corresponding
    triggers at the page level.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您通过 API 插入、修改或删除实体时，底层表的触发器不会执行。您需要通过在页面级别处理相应的触发器来调用表的触发器。
- en: In the `OnModify` trigger of the API page, you need to handle the possibility
    of renaming a record (an API call via a record ID can issue a primary key rename).
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 API 页面中的`OnModify`触发器中，您需要处理重命名记录的可能性（通过记录 ID 进行 API 调用可能会触发主键重命名）。
- en: 'Here, we''ll see two main scenarios:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将看到两种主要情况：
- en: How to implement an API for a custom entity (assuming that there's an extension
    that adds the `Car` entity to Dynamics 365 Business Central for managing car details
    inside the ERP)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何为自定义实体实现 API（假设有一个扩展将`Car`实体添加到 Dynamics 365 Business Central 中，以便在 ERP 中管理汽车详细信息）
- en: How to implement a new API for an existing entity
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何为现有实体实现新 API
- en: We will look into each of these scenarios in the following sections.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在以下章节中详细讨论每种情况。
- en: Implementing a new API for a custom entity
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为自定义实体实现新的 API
- en: 'In this example, we will be creating a new entity in Dynamics 365 Business
    Central to handle the details of `Cars`, and this entity will also be exposed
    as an API for external applications:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将在 Dynamics 365 Business Central 中创建一个新的实体来处理`Cars`的详细信息，并且该实体还将作为 API
    对外暴露，供外部应用程序使用：
- en: 'To do this, we first create a new `Car` table, as follows:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们首先创建一个新的`Car`表，如下所示：
- en: '[PRE7]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `Car` table has the required fields, and it has an `ID` field defined as
    `Guid` that is automatically assigned in the `OnInsert` trigger.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`Car`表包含所需的字段，并且它有一个`ID`字段，定义为`Guid`，该字段会在`OnInsert`触发器中自动分配。'
- en: 'The `Engine Type` field is of the `Enum EngineType` type, and the `enum` is
    defined as follows:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Engine Type`字段是`Enum EngineType`类型，`enum`定义如下：'
- en: '[PRE8]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We also create a `Car List` page (a standard list page) for managing `Car`
    data in Dynamics 365 Business Central. The `Car List` page is defined as follows:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还创建了一个 `Car List` 页面（标准列表页面），用于在 Dynamics 365 Business Central 中管理 `Car` 数据。`Car
    List` 页面定义如下：
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, we need to create the API page (by using the `tpage` snippet and then
    selecting the Page of type API). The `CarAPI` page is defined as follows:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要创建 API 页面（通过使用 `tpage` 代码片段并选择 API 类型的页面）。`CarAPI` 页面定义如下：
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This page exposes the fields that we want to have in our API by applying the
    naming rules according to the OData specifications.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面暴露了我们希望在 API 中展示的字段，按照 OData 规范应用命名规则。
- en: We then handle the `OnInsertRecord`, `OnModifyRecord`, and `OnDeleteRecord`
    page triggers to call the table's triggers and to handle renaming a record.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们处理 `OnInsertRecord`、`OnModifyRecord` 和 `OnDeleteRecord` 页面触发器，以调用表的触发器并处理记录重命名。
- en: 'Now, press *F5* in Visual Studio Code and publish your extension. When it''s
    published, search for `Car List` and then insert some example `Car` records, such
    as the following:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 Visual Studio Code 中按 *F5* 并发布你的扩展。当发布完成后，搜索 `Car List`，然后插入一些示例 `Car`
    记录，例如以下内容：
- en: '![](img/f9446d19-55fe-43da-9e9f-4852b6171b75.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f9446d19-55fe-43da-9e9f-4852b6171b75.png)'
- en: 'Now, we can test our custom API. When published in a SaaS tenant, a custom
    API endpoint has the following format:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以测试我们的自定义 API。当它在 SaaS 租户中发布时，自定义 API 端点的格式如下：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If you''re testing it on a Docker-based sandbox (for example, on an Azure VM
    as I''m doing here), the API endpoint is like this:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是在基于 Docker 的沙盒环境中进行测试（例如，我在这里使用的是 Azure 虚拟机），API 端点如下所示：
- en: '[PRE12]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can check the metadata for the published API with the following URL (here,
    `d365bcita0918vm` is the name of my Azure VM that''s hosting the container):'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下 URL 检查已发布 API 的元数据（这里，`d365bcita0918vm` 是托管容器的 Azure 虚拟机的名称）：
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The APIs are invoked per company. To have the list of companies on your database,
    you have to send a GET request to the following URL:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: API 按公司调用。要获取数据库中公司的列表，你必须发送一个 GET 请求到以下 URL：
- en: '[PRE14]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To have the list of cars for the selected company, you need to send a GET request
    to the following URL (by passing the company ID that was retrieved with the preceding
    call):'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取所选公司车辆的列表，你需要发送一个 GET 请求到以下 URL（通过传递前面调用中检索到的公司 ID）：
- en: '[PRE15]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In our environment, the URL is as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的环境中，URL 如下所示：
- en: '[PRE16]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This is the response that we get:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们收到的响应：
- en: '![](img/65185f83-17be-4343-b409-7e877dd30d9f.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65185f83-17be-4343-b409-7e877dd30d9f.png)'
- en: As you can see, we have the JSON representation of the inserted records, and
    every field (JSON token) has the name that we assigned in our API definition.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们有已插入记录的 JSON 表示，每个字段（JSON token）都具有我们在 API 定义中分配的名称。
- en: 'To insert a new `Car` record via our previously published custom `cars` API,
    you need to send a POST request to the following URL by passing the JSON record
    to create in the body:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过我们之前发布的自定义 `cars` API 插入一条新的 `Car` 记录，你需要发送一个 POST 请求到以下 URL，并将 JSON 记录作为请求体传递：
- en: '[PRE17]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This is the HTTP request we send:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们发送的 HTTP 请求：
- en: '![](img/4d187f52-ab3c-4746-be53-37356fafb782.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d187f52-ab3c-4746-be53-37356fafb782.png)'
- en: 'The response received is as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的响应如下所示：
- en: '![](img/f222ec68-ee03-4ede-99e4-8085818b81a2.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f222ec68-ee03-4ede-99e4-8085818b81a2.png)'
- en: We receive `HTTP/1.1 201 Created` and the JSON details of the `Car` record are
    added to Dynamics 365 Business Central.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们收到 `HTTP/1.1 201 Created` 响应，并且 `Car` 记录的 JSON 详情被添加到 Dynamics 365 Business
    Central 中。
- en: 'If you look at `Car List` in Dynamics 365 Business Central, you can see that
    the new record has been created:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看 Dynamics 365 Business Central 中的 `Car List`，你可以看到新记录已被创建：
- en: '![](img/b90a5159-d150-49a2-b03b-35e1b46e8954.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b90a5159-d150-49a2-b03b-35e1b46e8954.png)'
- en: When sending a POST request, remember to correctly set the content type of the
    request to `application/json`*.* Otherwise, you can receive a quite confusing
    error in the response message, such as `{"error":{"code":"BadRequest","message":"Cannot
    create an instance of an interface."}}`.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 发送 POST 请求时，记得正确设置请求的内容类型为 `application/json`*.* 否则，你可能会在响应消息中收到一个相当困惑的错误，如
    `{"error":{"code":"BadRequest","message":"Cannot create an instance of an interface."}}`。
- en: 'To retrieve the details of a specific car record, just send a GET request to
    the following URL:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要检索特定汽车记录的详细信息，只需发送一个 GET 请求到以下 URL：
- en: '[PRE18]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This is done by passing the GUID of the car record to retrieve.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过传递要检索的汽车记录的 GUID 来完成的。
- en: 'In our example, if we want to retrieve the details of the Mercedes record,
    we have to send an HTTP GET request to the following URL:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，如果我们想要检索 Mercedes 记录的详细信息，我们必须向以下 URL 发送 HTTP GET 请求：
- en: '[PRE19]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This is the response we receive:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们收到的响应：
- en: '![](img/c9094066-a3b3-4b6b-8f95-5bea016a5324.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c9094066-a3b3-4b6b-8f95-5bea016a5324.png)'
- en: As you can see, we have retrieved the JSON representation of the `Car` record.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们已经检索到了 `Car` 记录的 JSON 表示。
- en: Implementing a new API for an existing entity
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为现有实体实现一个新的 API
- en: As we discussed in the *Comparing OData and APIs in Dynamics 365 Business Central* section,
    you cannot extend an existing standard Dynamics 365 Business Central API page.
    If you need to retrieve new fields for a standard Dynamics 365 Business Central
    entity, you need to create a new API page in your namespace.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在 *比较 Dynamics 365 Business Central 中的 OData 和 API* 部分中讨论的，你不能扩展现有的标准 Dynamics
    365 Business Central API 页面。如果需要检索标准 Dynamics 365 Business Central 实体的新字段，你需要在你的命名空间中创建一个新的
    API 页面。
- en: 'For example, here, I am creating a simple new API that retrieves a customer''s
    details, which are not natively exposed in the standard `Customer` API. The API
    page is defined as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在这里，我正在创建一个简单的新 API，用于检索客户的详细信息，这些信息在标准的 `Customer` API 中并未原生暴露。API 页面定义如下：
- en: '[PRE20]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'When this is published on our Dynamics 365 Business Central tenant, we can
    reach this API at the following endpoint:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将其发布到 Dynamics 365 Business Central 租户时，可以通过以下端点访问此 API：
- en: '[PRE21]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If we send an HTTP GET request to this endpoint to retrieve the `Customer`
    records, we get the following API response:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们向此端点发送 HTTP GET 请求以检索 `Customer` 记录，我们将获得以下 API 响应：
- en: '![](img/17137bef-cc4f-46de-ae38-2f43c92d18e5.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/17137bef-cc4f-46de-ae38-2f43c92d18e5.png)'
- en: As you can see, the custom API shows all of the `Customer` fields we have added
    to our API page (the `Normal` and `Flowfields` fields).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，自定义 API 显示了我们已添加到 API 页面中的所有 `Customer` 字段（包括 `Normal` 和 `Flowfields`
    字段）。
- en: In the next section, we'll see how to use Dynamics 365 Business Central APIs
    from an external application.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将看到如何从外部应用程序使用 Dynamics 365 Business Central API。
- en: Creating an application that uses Dynamics 365 Business Central APIs
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个使用 Dynamics 365 Business Central API 的应用程序
- en: As we've mentioned in this chapter, APIs are extremely useful for integrating
    external applications with Dynamics 365 Business Central (they permit us to use
    simple HTTP calls to manage ERP entities and business logic). As an example, here,
    we will create a C# .NET application that creates `Customer` records in a Dynamics
    365 Business Central SaaS tenant.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本章中提到的，API 对于将外部应用程序与 Dynamics 365 Business Central 集成非常有用（它们允许我们使用简单的
    HTTP 调用来管理 ERP 实体和业务逻辑）。例如，在这里，我们将创建一个 C# .NET 应用程序，用于在 Dynamics 365 Business
    Central SaaS 租户中创建 `Customer` 记录。
- en: This scenario is very useful for implementing custom data loading procedures.
    By using APIs, you can create very powerful data transfer routines that permit
    you to load tons of data by avoiding standard tools such as configuration packages.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这个场景非常适用于实现自定义数据加载程序。通过使用 API，你可以创建非常强大的数据传输例程，避免使用标准工具，如配置包，从而加载大量数据。
- en: 'This application is a .NET Console application that does the following:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序是一个 .NET 控制台应用程序，执行以下操作：
- en: Connects to a Dynamics 365 Business Central tenant by using basic authentication
    (a username and a web service access key)
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用基本身份验证（用户名和 Web 服务访问密钥）连接到 Dynamics 365 Business Central 租户
- en: Reads the company in this tenant and retrieves the company IDs
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取此租户中的公司并检索公司 ID
- en: Creates a JSON object that represents a `Customer` record
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个 JSON 对象，表示一个 `Customer` 记录
- en: Sends a POST request to the `Customer` API endpoint by passing the JSON of the
    `Customer` record to create
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过向 `Customer` API 端点发送 POST 请求，传递要创建的 `Customer` 记录的 JSON 数据
- en: The complete source code is on the GitHub repository of this book.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的完整源代码可以在该书的 GitHub 仓库中找到。
- en: 'The main function of this application is defined as follows:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序的主要功能定义如下：
- en: '[PRE22]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In the `Main` method, we read the application settings parameters by calling
    the `GetSettingsParameters`function, and then we asynchronously start the tasks
    that read the companies (`GetCompanies`) and create the `Customer` record (`CreateCustomer`)
    via the API.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `Main` 方法中，我们通过调用 `GetSettingsParameters` 函数读取应用程序设置参数，然后异步启动读取公司（`GetCompanies`）和通过
    API 创建 `Customer` 记录（`CreateCustomer`）的任务。
- en: 'The `GetSettingsParameters` function defines the mandatory parameters for using
    the Dynamics 365 Business Central APIs (such as tenant ID, API URL, user, and
    access key), and it''s defined as follows:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`GetSettingsParameters` 函数定义了使用 Dynamics 365 Business Central API 所需的必填参数（例如租户
    ID、API URL、用户和访问密钥），并按如下方式定义：'
- en: '[PRE23]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: We invoke the Dynamics 365 Business Central APIs in the `GetCompanies` and `CreateCustomer`
    methods.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 `GetCompanies` 和 `CreateCustomer` 方法中调用了 Dynamics 365 Business Central 的
    API。
- en: 'In the `GetCompanies` method, we send an HTTP GET request to the following
    endpoint:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `GetCompanies` 方法中，我们向以下端点发送一个 HTTP GET 请求：
- en: '[PRE24]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then, we retrieve the list of companies in the specified tenant. The response
    is in JSON format, so we need to parse it (we are retrieving the `id` and `name`
    tokens). The code for this is as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们检索指定租户中的公司列表。响应是 JSON 格式的，因此我们需要解析它（我们正在检索 `id` 和 `name` 字段）。相关代码如下：
- en: '[PRE25]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Here, we want to work with a specific company, so we save the desired company
    ID in a global variable called `workingCompanyID` to use that company ID on the
    entire application.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们希望与特定公司合作，因此我们将所需的公司 ID 保存到一个名为 `workingCompanyID` 的全局变量中，以便在整个应用程序中使用该公司
    ID。
- en: 'In the `CreateCustomer` method, we send a POST request to the following API
    endpoint:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `CreateCustomer` 方法中，我们向以下 API 端点发送一个 POST 请求：
- en: '[PRE26]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This is done by passing a JSON object in the request body. This object is a
    JSON representation of a `Customer` record (the request's content type must be
    `application/json`). Then, the API response is read.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过在请求体中传递一个 JSON 对象来完成的。这个对象是一个表示 `Customer` 记录的 JSON（请求的内容类型必须是 `application/json`）。然后，读取
    API 响应。
- en: 'The `CreateCustomer`method''s code is as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`CreateCustomer` 方法的代码如下：'
- en: '[PRE27]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Here, we create a JSON object that represents a `Customer` entity, we send (asynchronously)
    this JSON object as the body of an HTTP POST request to the Dynamics 365 Business
    Central `/customers` API, and we read the API response. When this is invoked,
    the `Customer` record is created in Dynamics 365 Business Central.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们创建一个表示 `Customer` 实体的 JSON 对象，异步发送该 JSON 对象作为 HTTP POST 请求的正文到 Dynamics
    365 Business Central `/customers` API，并读取 API 响应。当此操作被调用时，`Customer` 记录将在 Dynamics
    365 Business Central 中创建。
- en: 'Remember that Dynamics 365 Business Central limits the number of simultaneous
    API calls that you can perform in a certain sliding window. If you have an external
    service that performs too many requests on a tenant, you could receive an HTTP
    429 error (`Too Many Requests`):'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，Dynamics 365 Business Central 限制您在一定时间窗口内可以执行的 API 调用数量。如果外部服务对租户发起了过多请求，可能会收到
    HTTP 429 错误（`请求过多`）：
- en: '[PRE28]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The purpose of this is mainly to avoid things such as **Denial-of-Service**
    (**DoS**) attacks and insufficient resources in the tenant.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的主要目的是避免例如**拒绝服务**（**DoS**）攻击和租户资源不足等问题。
- en: 'The actual permitted maximum number of requests per minute is as follows:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 实际允许的每分钟最大请求数如下：
- en: 'Sandbox environment: 300 requests/minute for OData (5 requests per second),
    and 300 requests/minute for SOAP'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 沙盒环境：OData 每分钟 300 次请求（每秒 5 次请求），SOAP 每分钟 300 次请求。
- en: 'Production environment: 600 requests/minute for OData (10 requests per second),
    and 600 requests/minute for SOAP'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产环境：OData 每分钟 600 次请求（每秒 10 次请求），SOAP 每分钟 600 次请求。
- en: To avoid this situation, you should handle how you perform requests to a Dynamics
    365 Business Central API endpoint and, if you receive this error, you should adopt
    something such as a retry policy on the API calls in your external application.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 为避免这种情况，您应该处理如何向 Dynamics 365 Business Central API 端点发出请求，如果收到此错误，您应采取类似重试策略等措施，来处理外部应用中的
    API 调用。
- en: This is an example of how you can use Dynamics 365 Business Central APIs on
    your custom applications. The example provided uses .NET and C#, but you can use
    the APIs on every platform and with every language that supports HTTP calls.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个如何在自定义应用中使用 Dynamics 365 Business Central API 的示例。所提供的示例使用了 .NET 和 C#，但您可以在任何支持
    HTTP 调用的平台和语言中使用这些 API。
- en: Using bound actions
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用绑定操作
- en: We can use **bound actions** to use RESTful APIs not only to perform CRUD operations
    but also to invoke standard business logic defined in the application (both custom
    and standard code).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用**绑定操作**，不仅通过 RESTful API 执行 CRUD 操作，还可以调用应用中定义的标准业务逻辑（包括自定义和标准代码）。
- en: Bound actions can be used in the OData V4 endpoint (as described at [https://demiliani.com/2019/06/12/dynamics-365-business-central-using-odata-v4-bound-actions/](https://demiliani.com/2019/06/12/dynamics-365-business-central-using-odata-v4-bound-actions/))
    and standard Dynamics 365 Business Central APIs.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 绑定操作可以在 OData V4 端点中使用（如在[https://demiliani.com/2019/06/12/dynamics-365-business-central-using-odata-v4-bound-actions/](https://demiliani.com/2019/06/12/dynamics-365-business-central-using-odata-v4-bound-actions/)中所述）以及标准的
    Dynamics 365 Business Central API 中。
- en: 'Imagine you have a codeunit (in the example described here, it''s called `CustomerWSManagement`)
    that defines a business logic (a set of functions) to work on the `Customer` entity
    and you want to call some of these methods from APIs. Our codeunit has two business
    functions:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个代码单元（在这里描述的示例中，它被称为`CustomerWSManagement`），该代码单元定义了一些业务逻辑（函数集合），用于操作`Customer`实体，并且你想从
    API 调用其中的一些方法。我们的代码单元有两个业务函数：
- en: '`CloneCustomer`: This creates a new customer based on an existing customer
    record.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloneCustomer`：这将基于现有的客户记录创建一个新客户。'
- en: '`GetSalesAmount`: This gives the total sales amount for a given customer.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GetSalesAmount`：这会返回给定客户的总销售金额。'
- en: 'The `CustomerWSManagement`codeunit code is defined as follows:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`CustomerWSManagement`代码单元的代码定义如下：'
- en: '[PRE29]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: To use OData V4 bound actions, you need to declare a function in a page, and
    this function must have the `[ServiceEnabled]` attribute.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 OData V4 绑定操作，你需要在页面中声明一个函数，并且这个函数必须具有`[ServiceEnabled]`属性。
- en: If you declare a `[ServiceEnabled]`function in a `pageextension` object and
    you try to access the metadata of the OData endpoint (`baseurl/ODataV4/$metadata`),
    you will not see the action published.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在`pageextension`对象中声明了一个`[ServiceEnabled]`函数，并且尝试访问 OData 端点的元数据（`baseurl/ODataV4/$metadata`），你将看不到已发布的操作。
- en: 'To publish your action attached to the `Customer` entity, you need to create
    a new page like the following and then publish it as a web service:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 要发布与`Customer`实体相关联的操作，你需要创建一个新的页面，如下所示，然后将其发布为 Web 服务：
- en: '[PRE30]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Here, the `ODataKeyFields` property specifies the field to use as the key when
    calling the OData endpoint (I want the `No.` field of the `Customer` record).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`ODataKeyFields`属性指定了在调用 OData 端点时作为键使用的字段（我想要的是`Customer`记录的`No.`字段）。
- en: 'Inside this page, I am declaring two procedures to call the two methods defined
    in our AL codeunit:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个页面中，我声明了两个过程来调用我们 AL 代码单元中定义的两个方法：
- en: '[PRE31]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'From the preceding code, we can see the following:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的代码中，我们可以看到以下内容：
- en: '`CloneCustomer`is a procedure called without parameters. It takes the context
    of the call and calls the `CloneCustomer` method defined in our codeunit.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CloneCustomer`是一个无参数调用的过程。它获取调用的上下文，并调用我们代码单元中定义的`CloneCustomer`方法。'
- en: '`GetSalesAmount`is a procedure that takes a code parameter, calls the `GetSalesAmount` procedure
    defined in our codeunit, and returns the result as a response.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GetSalesAmount`是一个过程，它接受一个代码参数，调用我们代码单元中定义的`GetSalesAmount`过程，并将结果作为响应返回。'
- en: What happens with these procedure definitions when we publish the `MyCustomerCard` page
    as a web service (called `MyCustomerCardWS` here)?
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将`MyCustomerCard`页面发布为 Web 服务（在这里称为`MyCustomerCardWS`）时，这些过程定义会发生什么？
- en: 'If we go to the OData V4 metadata endpoint, we can now see that the actions
    are published:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们访问 OData V4 元数据端点，现在可以看到操作已经发布：
- en: '![](img/54407ba0-e13e-4710-af02-9f5790219f56.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/54407ba0-e13e-4710-af02-9f5790219f56.png)'
- en: 'Now, we can try to call our bound actions via OData. As the first step, we
    want to call the `CloneCustomer` function. To do this, we need to send an HTTP
    POST request to the following endpoint:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以尝试通过 OData 调用绑定的操作。作为第一步，我们想要调用`CloneCustomer`函数。为此，我们需要向以下端点发送 HTTP
    POST 请求：
- en: '[PRE32]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The following is the output we get after the call:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们在调用后获得的输出：
- en: '![](img/f6c96e77-d604-4184-9eaa-29d7926d6a7d.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f6c96e77-d604-4184-9eaa-29d7926d6a7d.png)'
- en: 'The code in our codeunit is called and a `Customer` record has been created
    (that is, cloned by the customer with `"No." = 10000` as the input):'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们代码单元中的代码被调用，并且创建了一个`Customer`记录（即通过编号为`"No." = 10000`的客户进行克隆）：
- en: '![](img/0e86665c-2142-4e3f-8819-8a9e91cdf4c9.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e86665c-2142-4e3f-8819-8a9e91cdf4c9.png)'
- en: 'Our second function to call (`GetSalesAmount`) wants a `Code[20]` parameter
    as input (it''s not strictly necessary; it''s only to show how to pass parameters
    to a bound action). We need to send a POST request to the following endpoint:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要调用的第二个函数（`GetSalesAmount`）需要一个`Code[20]`参数作为输入（这不是严格要求的，仅仅是为了展示如何将参数传递给绑定操作）。我们需要向以下端点发送
    POST 请求：
- en: '[PRE33]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: As we can see, it is done by passing a JSON body with the required parameter.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，这是通过传递包含所需参数的 JSON 正文来完成的。
- en: 'This is the POST request that was sent:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 发送的 POST 请求如下：
- en: '[PRE34]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The following is the response received from the POST request:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 发送 POST 请求后收到的响应如下：
- en: '![](img/049d1b71-05f1-44fe-a357-ed84b08ebdac.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/049d1b71-05f1-44fe-a357-ed84b08ebdac.png)'
- en: As you can see, the response is a JSON object with the value of the total sales
    amount for the given customer (retrieved by calling our codeunit method).
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，响应是一个 JSON 对象，其值为给定客户的总销售金额（通过调用我们的代码单元方法获取）。
- en: The name of the parameter to pass in the JSON object must match the OData metadata,
    not your function's parameters.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 JSON 对象中传递的参数名称必须与 OData 元数据匹配，而不是您函数的参数。
- en: In the next section, we'll examine the concept of webhooks inside Dynamics 365
    Business Central and we'll explore how to subscribe to notifications sent from
    a Dynamics 365 Business Central entity.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨 Dynamics 365 Business Central 中 Webhooks 的概念，并探讨如何订阅从 Dynamics 365
    Business Central 实体发送的通知。
- en: Using Dynamics 365 Business Central webhooks
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Dynamics 365 Business Central Webhooks
- en: '**Webhooks** are a way to create event-driven service integrations: instead
    of polling another system to check whether there are any changes in entities with
    webhooks, a client subscribes to events that will be pushed to it from the source
    system. Dynamics 365 Business Central supports webhooks, so a client can subscribe
    to a webhook notification (event) and will then automatically receive notifications
    if an entity in Dynamics 365 Business Central changes.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '**Webhooks** 是创建事件驱动服务集成的一种方法：客户端不需轮询其他系统以检查实体是否有更改，而是订阅将从源系统推送到其的事件。Dynamics
    365 Business Central 支持 Webhooks，因此客户端可以订阅 Webhook 通知（事件），并将自动接收到 Dynamics 365
    Business Central 实体更改的通知。'
- en: 'To use webhooks with Dynamics 365 Business Central, we need to perform the
    following steps:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Dynamics 365 Business Central 的 Webhooks，我们需要执行以下步骤：
- en: 'A subscriber must register the webhook subscription with Dynamics 365 Business
    Central by making a POST request to the **subscription** API and by passing a
    notification URL in the request body. The endpoint URL is as follows:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 订阅者必须通过向 **subscription** API 发送 POST 请求并在请求主体中传递通知 URL 来向 Dynamics 365 Business
    Central 注册 Webhook 订阅。端点 URL 如下：
- en: '[PRE35]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The request body to establish a subscription is the following (here, we''re
    using the `customers` entity as an example):'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 建立订阅的请求主体如下（这里，我们以 `customers` 实体为例）：
- en: '[PRE36]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Dynamics 365 Business Central returns a validation token to the subscriber.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 向订阅者返回验证令牌。
- en: The subscriber needs to return the validation token in the response body and
    provide status code `200` (this is the mandatory handshake phase).
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 订阅者需要在响应主体中返回验证令牌，并提供状态码 `200`（这是强制性的握手阶段）。
- en: If Dynamics 365 Business Central receives the validation token in the response
    body, the subscription is registered and notifications will be sent to the notification
    URL.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 Dynamics 365 Business Central 在响应主体中收到验证令牌，则注册订阅并将通知发送到通知 URL。
- en: When a subscription is established, the subscriber receives a notification for
    every update on the subscribed entity. Webhook subscriptions expire after 3 days
    if they are not renewed before that.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅建立后，订阅者将收到有关已订阅实体每次更新的通知。如果在此之前不续订，Webhook 订阅将在 3 天后过期。
- en: 'To renew a webhook subscription, a subscriber must send a PATCH request to
    the subscription endpoint (this request requires the handshake phase too). The
    request endpoint to renew a webhook subscription is as follows:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 要续订 Webhook 订阅，订阅者必须向订阅端点发送 PATCH 请求（此请求也需要握手阶段）。用于续订 Webhook 订阅的请求端点如下：
- en: '[PRE37]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: To renew a webhook subscription, you need to pass the `@odata.etag` tag of your
    previously established subscription as an `If-Match` block in the PATCH request
    header.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新 Webhook 订阅，您需要在 PATCH 请求头中作为 `If-Match` 块传递之前建立的订阅的 `@odata.etag` 标签。
- en: 'This is the HTTP response that you receive when the subscription is established:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 当订阅建立时收到的 HTTP 响应如下：
- en: '![](img/6aaa518f-cb30-4b05-b385-957769f38583.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6aaa518f-cb30-4b05-b385-957769f38583.png)'
- en: 'If you try to issue a subscription request again to the same endpoint where
    an active subscription has been established, you receive the following error:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尝试再次向已建立活动订阅的同一端点发出订阅请求，将收到以下错误：
- en: '![](img/9ec3d49a-e51b-4296-9700-d54fb05fb7f7.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ec3d49a-e51b-4296-9700-d54fb05fb7f7.png)'
- en: 'When a subscription is established, a subscriber can receive notifications
    when the subscribed entities in Dynamics 365 Business Central are modified. This
    is an example of a notification sent to a subscriber (the notification is a JSON
    object that contains all of the modified entities):'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 当建立订阅时，订阅者可以在Dynamics 365 Business Central中的订阅实体被修改时接收通知。这是发送给订阅者的通知示例（该通知是一个包含所有修改实体的JSON对象）：
- en: '[PRE38]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Webhooks are also exposed for custom objects in our extensions. A page with
    `PageType = API` will expose webhooks with the following limitations (these also
    apply to standard API pages):'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Webhooks也可用于我们的扩展中的自定义对象。具有`PageType = API`的页面将暴露具有以下限制的Webhooks（这些限制也适用于标准API页面）：
- en: The page cannot have composite keys.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面不能使用复合键。
- en: The page cannot use temporary tables or system tables as `SourceTable`.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面不能使用临时表或系统表作为`SourceTable`。
- en: A subscription to a webhook can be deleted by sending a DELETE request to the
    `/subscriptions({id})` endpoint. Also, to delete a subscription, you need to send
    a request with the `If-Match` header containing `@odata.etag` of the subscription
    to delete.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过向`/subscriptions({id})`端点发送DELETE请求来删除Webhook的订阅。此外，要删除订阅，您需要发送包含`@odata.etag`的`If-Match`头信息的请求。
- en: 'For more information about Dynamics 365 Business Central webhooks, I recommend
    checking this post:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Dynamics 365 Business Central Webhooks的更多信息，我建议查看这篇文章：
- en: '[http://demiliani.com/2019/12/10/webhooks-with-dynamics-365-business-central/](http://demiliani.com/2019/12/10/webhooks-with-dynamics-365-business-central/)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://demiliani.com/2019/12/10/webhooks-with-dynamics-365-business-central/](http://demiliani.com/2019/12/10/webhooks-with-dynamics-365-business-central/)'
- en: In this section, you saw how webhooks work in Dynamics 365 Business Central.
    In the next section, we'll see how to use Microsoft Graph APIs with Dynamics 365
    Business Central.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您了解了Dynamics 365 Business Central中Webhook的工作原理。在下一节中，我们将展示如何使用Microsoft
    Graph API与Dynamics 365 Business Central配合使用。
- en: Working with Dynamics 365 Business Central APIs in Microsoft Graph
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Microsoft Graph中使用Dynamics 365 Business Central API
- en: '**Microsoft Graph** ([https://graph.microsoft.io/](https://graph.microsoft.io/))
    is an interesting platform that provides a unique gateway for RESTful APIs that
    spans multiple Microsoft services. Dynamics 365 Business Central is now one of
    the endpoints available in Microsoft Graph.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**Microsoft Graph** ([https://graph.microsoft.io/](https://graph.microsoft.io/))
    是一个有趣的平台，提供了一个独特的网关，用于跨多个Microsoft服务的RESTful API。现在，Dynamics 365 Business Central是Microsoft
    Graph中可用的端点之一。'
- en: 'To work with Dynamics 365 Business Central in Graph, you first need to change
    your Dynamics 365 Business Central user''s permission in Graph and then enable
    the Financials.ReadWrite.All permission scope. You can do that by using the Graph
    Explorer tool:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Graph中使用Dynamics 365 Business Central，您首先需要更改Dynamics 365 Business Central用户在Graph中的权限，然后启用`Financials.ReadWrite.All`权限范围。您可以通过使用Graph
    Explorer工具来完成：
- en: '![](img/f1ba0a01-dbda-42f8-a12d-2ee0bf59c4f2.png)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f1ba0a01-dbda-42f8-a12d-2ee0bf59c4f2.png)'
- en: After setting the permissions, you can start using the Dynamics 365 Business
    Central APIs available in Graph (actually, you need to use the BETA API endpoint).
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 设置权限后，您可以开始使用在Graph中可用的Dynamics 365 Business Central API（实际上，您需要使用BETA API端点）。
- en: 'As an example, to retrieve the available companies in your Dynamics 365 Business
    Central tenant, you need to send an HTTP GET request to `https://graph.microsoft.com/beta/financials/companies`,
    as follows:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要检索您Dynamics 365 Business Central租户中的可用公司，您需要向`https://graph.microsoft.com/beta/financials/companies`发送HTTP
    GET请求，如下所示：
- en: '![](img/e6d0b09c-38bf-4fe4-892b-cc7b08c2a2da.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6d0b09c-38bf-4fe4-892b-cc7b08c2a2da.png)'
- en: You can parse this JSON response and retrieve the company's ID, which you will
    use in all of the next API calls.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以解析此JSON响应并检索公司ID，之后将在所有后续API调用中使用此ID。
- en: 'To retrieve the list of `Customer` records for a given company, you need to
    send an HTTP GET request to the following URL (by passing the company''s ID):'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要检索某个公司`Customer`记录的列表，您需要向以下URL发送HTTP GET请求（并传递该公司的ID）：
- en: '[PRE39]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'As a response, you will get some JSON data with the list of all of your customers:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 作为响应，您将收到包含所有客户列表的JSON数据：
- en: '![](img/27873133-374d-4a8c-b164-e4102fdc68f6.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27873133-374d-4a8c-b164-e4102fdc68f6.png)'
- en: 'To retrieve `general ledger entries` for a given company ordered by descending
    `posting date`, you can perform an HTTP GET request to the following URL:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 要按降序`posting date`检索某个公司的一般账簿条目，可以向以下URL发送HTTP GET请求：
- en: '[PRE40]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'This is the response received from the API:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从API接收到的响应：
- en: '![](img/33417869-e843-41ed-b143-976cfe626fb5.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/33417869-e843-41ed-b143-976cfe626fb5.png)'
- en: 'To retrieve, for example, the details for a certain `Currency` (for example,
    USD), you need to send an HTTP GET request to the following URL:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要获取某个`Currency`（例如USD）的详细信息，你需要向以下URL发送HTTP GET请求：
- en: '[PRE41]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The response retrieved will be like the following:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 获取的响应将如下所示：
- en: '![](img/25e76ca5-e2a1-49a5-818c-930b366c855a.png)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25e76ca5-e2a1-49a5-818c-930b366c855a.png)'
- en: From this response, we can retrieve the ID of the currency because we can use
    it later to create a new `Customer` record in Dynamics 365 Business Central by
    using Graph APIs.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个响应中，我们可以获取货币的ID，因为我们可以稍后使用它，通过Graph API在Dynamics 365 Business Central中创建新的`Customer`记录。
- en: 'To create a `Customer `record in a company with `Currency` `Code` set to USD,
    you need to send an HTTP POST request to the following endpoint and set `Content-type` to `application/json`:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 要在公司中创建一个`Customer`记录，并将`Currency` `Code`设置为USD，你需要向以下端点发送HTTP POST请求，并将`Content-type`设置为`application/json`：
- en: '[PRE42]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The request body of this POST request must be JSON content with the customer''s
    details that we want to create, as in the following:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 该POST请求的请求体必须是包含我们想要创建的客户详细信息的JSON内容，如下所示：
- en: '[PRE43]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'As a response, we get some JSON data with the created `Customer` record:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 作为响应，我们将得到一些包含已创建的`Customer`记录的JSON数据：
- en: '![](img/95c529a6-fd84-474a-9d21-3fa9c7dab93a.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95c529a6-fd84-474a-9d21-3fa9c7dab93a.png)'
- en: 'If you now open Dynamics 365 Business Central, you will see that the new `Customer`
    record has been created:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在打开Dynamics 365 Business Central，你会看到新创建的`Customer`记录：
- en: '![](img/b3d8d45c-005e-419f-878d-06e2f1a164ed.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b3d8d45c-005e-419f-878d-06e2f1a164ed.png)'
- en: The Dynamics 365 Business Central APIs available in Graph are listed at [https://docs.microsoft.com/en-us/graph/api/resources/dynamics-graph-reference?view=graph-rest-beta](https://docs.microsoft.com/en-us/graph/api/resources/dynamics-graph-reference?view=graph-rest-beta).
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在Graph中可用的Dynamics 365 Business Central API列在[https://docs.microsoft.com/en-us/graph/api/resources/dynamics-graph-reference?view=graph-rest-beta](https://docs.microsoft.com/en-us/graph/api/resources/dynamics-graph-reference?view=graph-rest-beta)。
- en: Consider them as beta versions for now, as they will be improved in the future.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 目前将其视为Beta版本，因为它们将在未来得到改进。
- en: We've covered how to use Graph APIs to interact with Dynamics 365 Business Central.
    In the next section, we'll get an overview of the automation APIs.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经介绍了如何使用Graph API与Dynamics 365 Business Central进行交互。在接下来的章节中，我们将概述自动化API。
- en: Automation APIs in Dynamics 365 Business Central
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central中的自动化API
- en: 'Dynamics 365 Business Central also exposes APIs for automating tenant-related
    tasks, such as the following:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central还暴露了用于自动化租户相关任务的API，例如以下内容：
- en: Creating companies
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建公司
- en: Managing users, groups, and permissions
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理用户、组和权限
- en: Handling extensions (the installation/uninstallation of per-tenant extensions)
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理扩展（租户扩展的安装/卸载）
- en: Importing and applying configuration packages
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入和应用配置包
- en: 'Automation APIs are under the `/microsoft/automation` namespace. For example,
    to create a company in a Dynamics 365 Business Central tenant, you can send an
    HTTP POST request to the following endpoint:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化API位于`/microsoft/automation`命名空间下。例如，要在Dynamics 365 Business Central租户中创建公司，你可以向以下端点发送HTTP
    POST请求：
- en: '[PRE44]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'To retrieve users on your tenant, you need to send a GET request to the following
    endpoint:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取你租户中的用户信息，你需要向以下端点发送GET请求：
- en: '[PRE45]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'When you have retrieved your user''s details, to assign a permission set to
    a user via an automation API, you need to send a POST request to the following
    endpoint:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 当你获取到用户的详细信息后，要通过自动化API为用户分配权限集，你需要向以下端点发送POST请求：
- en: '[PRE46]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'To modify the details of a Dynamics 365 Business Central user, you need to
    send an HTTP PATCH request to the following endpoint:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改Dynamics 365 Business Central用户的详细信息，你需要向以下端点发送HTTP PATCH请求：
- en: '[PRE47]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'To get a list of the extensions installed on a tenant, you can send a GET request
    to the following endpoint:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取已安装在租户上的扩展列表，你可以向以下端点发送GET请求：
- en: '[PRE48]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'To handle the installation and uninstallation of extensions, you can send a
    POST request to the following bound actions:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理扩展的安装和卸载，你可以向以下绑定的操作发送POST请求：
- en: '`Microsoft.NAV.install`'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.NAV.install`'
- en: '`Microsoft.NAV.uninstall`'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Microsoft.NAV.uninstall`'
- en: 'For example, to uninstall a previously installed extension, you can send a
    POST request to the following endpoint:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要卸载一个之前安装的扩展，你可以向以下端点发送POST请求：
- en: '[PRE49]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: AppSource extensions must be previously installed on the tenant; then, you can
    install/uninstall them via the automation API.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: AppSource扩展必须先在租户上安装，然后你可以通过自动化API安装/卸载它们。
- en: 'If you have a per-tenant extension, you can upload and install it on the SaaS
    tenant by sending a PATCH request to the following endpoint:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个每租户扩展，可以通过向以下端点发送 PATCH 请求将其上传并安装到 SaaS 租户上：
- en: '[PRE50]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Here, the request body content must have the `.app` package file (binary) to
    upload on the tenant. With automation APIs, authentication must be OAuth 2.0 Authorization
    (Bearer Token).
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，请求体内容必须包含要上传到租户的 `.app` 包文件（二进制）。使用自动化 APIs 进行身份验证时，必须使用 OAuth 2.0 授权（Bearer
    Token）。
- en: More information about Dynamics 365 Business Central APIs can be found at [https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/itpro-introduction-to-automation-apis](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/itpro-introduction-to-automation-apis).
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Dynamics 365 Business Central APIs 的更多信息，请访问[https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/itpro-introduction-to-automation-apis](https://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/itpro-introduction-to-automation-apis)。
- en: Automation APIs are extremely important and powerful if you need to activate
    a CI/CD pipeline and if you need to hydrate tenants.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要激活 CI/CD 流水线并且需要为租户提供初始数据，自动化 APIs 就显得极其重要和强大。
- en: Summary
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we gave an overview of how to use the OData stack (and RESTful
    APIs, in particular) for integration with Dynamics 365 Business Central. We saw
    how to use standard APIs, create custom APIs, create applications that use Dynamics
    365 Business Central APIs, and use advanced concepts such as webhooks and Graph
    APIs. Then, we gave an overview of automation APIs.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们概述了如何使用 OData 栈（特别是 RESTful APIs）与 Dynamics 365 Business Central 进行集成。我们看到了如何使用标准
    APIs，创建自定义 APIs，创建使用 Dynamics 365 Business Central APIs 的应用程序，以及如何使用 Webhooks
    和 Graph APIs 等高级概念。然后，我们概述了自动化 APIs。
- en: At the end of this chapter, you were given a complete overview of how to expose
    Dynamics 365 Business Central business logic and entities and how to handle integrations
    with external applications by using REST HTTP calls. APIs are the future of Dynamics
    365 Business Central integrations, and here, you have learned how to use them
    on your applications and extensions.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 本章结束时，您已经全面了解了如何暴露 Dynamics 365 Business Central 的业务逻辑和实体，并如何通过使用 REST HTTP
    调用处理与外部应用程序的集成。APIs 是 Dynamics 365 Business Central 集成的未来，您已经学会了如何在您的应用程序和扩展中使用它们。
- en: In the next chapter, we'll see how to use Azure Functions and other serverless
    services with Dynamics 365 Business Central extensions.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何在 Dynamics 365 Business Central 扩展中使用 Azure Functions 和其他无服务器服务。
