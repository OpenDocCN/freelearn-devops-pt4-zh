- en: Useful and Proficient Tools for AL Developers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对 AL 开发者有用且高效的工具
- en: In the previous chapter, we provided some guidance and best practices on moving
    existing ISV solutions to the new Dynamics 365 Business Central development model
    based on extensions.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们提供了将现有 ISV 解决方案迁移到基于扩展的全新 Dynamics 365 Business Central 开发模型的一些指导和最佳实践。
- en: Having the correct tools when working with extensions and Visual Studio Code
    can save you lots of time and energy. In this chapter, we want to give you an
    overview of some third-party development tools that you can use in your everyday
    developer life with AL to be more proficient in many tasks. We will focus here
    on tools developed by a famous name in the Microsoft Dynamics ERP world: Waldo.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用扩展和 Visual Studio Code 时，拥有正确的工具可以节省大量的时间和精力。在本章中，我们将概述一些你可以在日常开发中使用的第三方开发工具，帮助你在
    AL 开发中更加高效。我们将重点介绍微软 Dynamics ERP 世界中著名人物 Waldo 开发的工具。
- en: 'We''ll cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Who is Waldo?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Waldo 是谁？
- en: What tools to use
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用哪些工具
- en: Who is Waldo?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Waldo 是谁？
- en: Waldo's real name is Eric Wauters and he is one of the founding partners of
    *iFacto Business Solutions* and *Cloud Ready Software*. With his 18 years of technical
    expertise, he is an everyday inspiration to its development teams. As a development
    manager, he continually acts upon the technical readiness of iFacto and CRS.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Waldo 的真实姓名是 Eric Wauters，他是 *iFacto Business Solutions* 和 *Cloud Ready Software*
    的创始合伙人之一。凭借 18 年的技术经验，他每天都为开发团队提供灵感。作为开发经理，他持续推动 iFacto 和 CRS 的技术准备工作。
- en: Apart from that, Eric is also very active in the Microsoft Dynamics 365 Business
    Central community, where he tries to solve technical issues and shares his knowledge
    with other Dynamics enthusiasts. Surely, a lot of you will have read some of Eric's
    posts, which he invariably signs with `waldo`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，Eric 还非常活跃于 Microsoft Dynamics 365 Business Central 社区，他在其中尝试解决技术问题，并与其他
    Dynamics 爱好者分享知识。相信很多人都读过 Eric 的帖子，他通常都会署名 `waldo`。
- en: Lots of people have been using and even contributing to tools he shares for
    free on MiBuSo, GitHub, the PowerShell Gallery, and the Visual Studio Marketplace.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人使用并且还为他在 MiBuSo、GitHub、PowerShell Gallery 和 Visual Studio Marketplace 上免费分享的工具做出了贡献。
- en: His proven track record led to him being given a **Microsoft Most Valuable Professional**
    (**MVP**) award each year since 2007.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 他凭借卓越的成绩，每年自 2007 年以来都获得了 **微软最有价值专家** (**MVP**) 奖项。
- en: After learning about Waldo, in the next section, we'll see an overview of most
    of his tools for AL developers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 了解了 Waldo 后，在下一部分中，我们将概述他为 AL 开发者提供的大多数工具。
- en: What tools to use
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用哪些工具
- en: Over the years, Waldo has created quite a lot of tools. The first tool Waldo
    ever put online was back in 2004, `WaldoNavPad`, a tool that helps to work with
    bigger texts in Microsoft Dynamics NAV. It helped to break up code into smaller
    pieces, which was necessary because, back then, we could only have a maximum of
    250 characters in one field.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，Waldo 创建了许多工具。Waldo 第一个上线的工具是在 2004 年发布的 `WaldoNavPad`，它是一个帮助在 Microsoft
    Dynamics NAV 中处理大文本的工具。它帮助将代码拆分成更小的部分，因为当时我们在一个字段中只能输入最多 250 个字符。
- en: The tool was downloaded over 11,000 times from MiBuSo. Because of its popularity,
    Waldo updated the tool to a version that worked in the RTC and as an AL extension,
    where he extended the functionality a bit to have an HTML editor inside Business
    Central.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 该工具在 MiBuSo 上已被下载超过 11,000 次。由于它的受欢迎程度，Waldo 将工具更新到了一个适用于 RTC 和作为 AL 扩展的版本，并在功能上进行了扩展，使其在
    Business Central 内部拥有了一个 HTML 编辑器。
- en: Following this tool, quite a few minor tools made it to the download list of
    MiBuSo, which you can find at [https://mibuso.com/downloads/results?keywords=waldo](https://mibuso.com/downloads/results?keywords=waldo).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 紧随其后的是一些较小的工具，它们被添加到了 MiBuSo 的下载列表中，你可以在 [https://mibuso.com/downloads/results?keywords=waldo](https://mibuso.com/downloads/results?keywords=waldo)
    找到这些工具。
- en: 'Since 2013, when Microsoft released more and more PowerShell building blocks,
    Waldo decided to dive into that to help the uptake in the community. This resulted
    in some very extended libraries of helper functions, which are categorized and
    published on the PowerShell Gallery. Just search for `waldo` ([https://www.powershellgallery.com/packages?q=waldo](https://www.powershellgallery.com/packages?q=waldo))
    and you will find six PowerShell modules:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 自2013年微软发布越来越多的PowerShell构建模块以来，Waldo决定深入研究，帮助社区的采用。这导致了一些非常广泛的辅助功能库，这些库经过分类并发布在PowerShell
    Gallery上。只需搜索`waldo` ([https://www.powershellgallery.com/packages?q=waldo](https://www.powershellgallery.com/packages?q=waldo))，你将找到六个PowerShell模块：
- en: '`Ready.Software.SQL`: These include some functions that help you to work with
    SQL Server (and Business Central), such as taking backups and restoring them.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Ready.Software.SQL`：这些包括一些帮助你与SQL Server（和Business Central）一起工作的功能，例如备份和恢复。'
- en: '`Ready.Software.PowerShell`: This is a very small set of functions for some
    PowerShell-related challenges.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Ready.Software.PowerShell`：这是一个非常小的函数集合，用于一些PowerShell相关的挑战。'
- en: '`Ready.Software.Windows`: These include Windows-related functions such as zipping
    and unzipping items.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Ready.Software.Windows`：这些包括与Windows相关的功能，如压缩和解压缩文件。'
- en: '`Ready.Software.NAV`: This module contains most functions, all related to NAV
    (Business Central):'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Ready.Software.NAV`：这个模块包含了大多数功能，全部与NAV（Business Central）相关：'
- en: Working with objects (upgrade, version list, languages, and so on)
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与对象的工作（升级、版本列表、语言等）
- en: Working with servers (such as permissions and companies)
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与服务器的工作（例如权限和公司）
- en: '`RemoteNAVDockerHostHelper`: This is a module to help you to work with a `DockerHost`
    when that `DockerHost` is not on your local PC (hence the word `Remote` in `RemoteNAVDockerHost`).'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RemoteNAVDockerHostHelper`：这是一个帮助你在`DockerHost`不在本地PC上的时候使用`DockerHost`的模块（因此“Remote”出现在`RemoteNAVDockerHost`中）。'
- en: '`NavContainerHelperExtension`: This is just a set of functions that Waldo needed
    to work with Docker. Similar to `NavContainerHelper`, these functions were not
    part of that module at the time they were created.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NavContainerHelperExtension`：这只是Waldo为了与Docker一起工作而创建的一组功能。类似于`NavContainerHelper`，这些功能在当时创建时并不属于那个模块。'
- en: 'All of these functions have had a purpose in Waldo''s life as a developer.
    Every single script in which he uses these modules is online on his GitHub: [https://github.com/waldo1001/Cloud.Ready.Software.PowerShell](https://github.com/waldo1001/Cloud.Ready.Software.PowerShell).
    You will find all modules there and the scripts in which he puts these modules
    to use.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些功能在Waldo作为开发人员的生活中都有一定的目的。他使用这些模块的每个脚本都在线上GitHub上： [https://github.com/waldo1001/Cloud.Ready.Software.PowerShell](https://github.com/waldo1001/Cloud.Ready.Software.PowerShell)。你可以在这里找到所有模块和他将这些模块应用到的脚本。
- en: 'A large number of these PowerShell scripts were created to be able to help
    the development of V1 Extensions. But when these were discontinued (for the better),
    there was a new kid on the block: Visual Studio Code, in which we can develop
    for what we call Extensions V2\. In Waldo''s opinion, this tool needed some help
    with the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 许多这些PowerShell脚本的创建是为了帮助开发V1扩展。然而，当这些扩展被终止（为了更好的发展）时，一个新的工具出现了：Visual Studio
    Code，在这里我们可以开发我们称之为扩展V2的东西。在Waldo看来，这个工具在以下方面需要一些帮助：
- en: Automatically naming files
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动命名文件
- en: Running objects
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行对象
- en: Snippets
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码片段
- en: So, Waldo started to build an extension for Visual Studio Code to help AL developers
    to do their jobs more efficiently. The **CRS AL Language Extension** was born: [https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension](https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，Waldo开始为Visual Studio Code构建一个扩展，帮助AL开发人员更加高效地完成工作。**CRS AL语言扩展**应运而生：[https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension](https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension)。
- en: 'This is just a peek at Waldo''s tools and how he came to build them. Here are
    a few resources where you can find his tools:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是对Waldo工具的一个简短介绍，以及他是如何构建这些工具的。以下是一些你可以找到他工具的资源：
- en: 'MiBuSo: [https://mibuso.com/downloads/results?keywords=waldo](https://mibuso.com/downloads/results?keywords=waldo)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MiBuSo：[https://mibuso.com/downloads/results?keywords=waldo](https://mibuso.com/downloads/results?keywords=waldo)
- en: 'The PowerShell Gallery: [https://www.powershellgallery.com/packages?q=waldo](https://www.powershellgallery.com/packages?q=waldo)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell Gallery：[https://www.powershellgallery.com/packages?q=waldo](https://www.powershellgallery.com/packages?q=waldo)
- en: 'GitHub: [https://github.com/waldo1001](https://github.com/waldo1001)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub：[https://github.com/waldo1001](https://github.com/waldo1001)
- en: 'DevOps: [https://dev.azure.com/waldo1001/WaldoDemos](https://dev.azure.com/waldo1001/WaldoDemos)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DevOps: [https://dev.azure.com/waldo1001/WaldoDemos](https://dev.azure.com/waldo1001/WaldoDemos)'
- en: In this chapter, we will talk about a few of his tools, focused on making your
    life as an AL developer a little bit easier.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将讨论他的一些工具，重点是让你作为AL开发者的工作变得更加轻松。
- en: The AL Extension Pack
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AL扩展包
- en: The smallest tool that Waldo ever built is the Visual Studio Code | Extension
    Packs. In fact, it's a collection of all of the Visual Studio Code extensions
    that Waldo values and uses in everyday development tasks.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Waldo曾经构建的最小工具是Visual Studio Code | 扩展包。事实上，它是Waldo在日常开发任务中使用并重视的所有Visual Studio
    Code扩展的集合。
- en: 'You can find the Extension Packs on the Marketplace under the name AL Extension
    Pack. Here is a direct link:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Marketplace中找到这个扩展包，名称为AL扩展包。这里是直接链接：
- en: '[https://marketplace.visualstudio.com/items?itemName=waldo.al-extension-pack](https://marketplace.visualstudio.com/items?itemName=waldo.al-extension-pack)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://marketplace.visualstudio.com/items?itemName=waldo.al-extension-pack](https://marketplace.visualstudio.com/items?itemName=waldo.al-extension-pack)'
- en: 'This is what the home page looks like:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是主页的样子：
- en: '![](img/7bdff342-32f5-41cd-bae4-1caa35c34866.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7bdff342-32f5-41cd-bae4-1caa35c34866.png)'
- en: By simply installing this extension, it will automatically install all extensions
    that are in the pack, and when Waldo adds an extension, it will automatically
    be installed on your system as well.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 只需安装此扩展，它将自动安装包中的所有扩展，当Waldo添加新的扩展时，它也会自动安装到你的系统中。
- en: 'There''s also a similar package that we highly recommend installing if you
    want to have a full-featured Visual Studio Code environment:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想拥有一个功能完备的Visual Studio Code环境，我们强烈推荐安装一个类似的包：
- en: '![](img/07f95b71-c4e3-45a8-b9bf-df374bca0b2b.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/07f95b71-c4e3-45a8-b9bf-df374bca0b2b.png)'
- en: 'You can find this tool at the following link:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下链接找到这个工具：
- en: '[https://marketplace.visualstudio.com/items?itemName=StefanoDemiliani.sd-extpack-d365bc](https://marketplace.visualstudio.com/items?itemName=StefanoDemiliani.sd-extpack-d365bc)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://marketplace.visualstudio.com/items?itemName=StefanoDemiliani.sd-extpack-d365bc](https://marketplace.visualstudio.com/items?itemName=StefanoDemiliani.sd-extpack-d365bc)'
- en: The CRS AL Language Extension
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CRS AL语言扩展
- en: 'A somewhat bigger extension that Waldo has written for the community is the
    **CRS AL Language Extension**:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Waldo为社区编写的一个稍大的扩展是**CRS AL语言扩展**：
- en: '![](img/e3d26504-2b2e-4ebd-90c8-0b9e5b9c9f94.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3d26504-2b2e-4ebd-90c8-0b9e5b9c9f94.png)'
- en: 'The extension can be found at the following link:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下链接找到此扩展：
- en: '[https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension](https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension](https://marketplace.visualstudio.com/items?itemName=waldo.crs-al-language-extension)'
- en: 'The main reason why so many people are using it is that it manages filename
    conventions: developers don''t have to worry anymore about how to name their files—this
    extension can take care of that automatically. But it does a lot more.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人使用它的主要原因是它管理文件名约定：开发人员不再需要担心如何命名文件——这个扩展可以自动处理这个问题。但它还做了很多其他事情。
- en: Let's have an overview of its functionality.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来概览一下它的功能。
- en: Run objects
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行对象
- en: We all know that we can run a table or page whenever we publish an app by changing
    some settings in the `launch.json` file. But that's not convenient.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都知道，我们可以通过修改`launch.json`文件中的一些设置，在发布应用时运行表或页面，但这并不方便。
- en: 'In a way, we need to be able to do the following:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从某种意义上讲，我们需要能够做到以下几点：
- en: Run any object in the windows, web, tablet, or phone client.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行Windows、Web、平板或手机客户端中的任何对象。
- en: 'Run some tools directly, such as the following:'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接运行一些工具，例如以下内容：
- en: Test Tool
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试工具
- en: Event Subscribers
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件订阅者
- en: Database Locks Page
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库锁定页面
- en: Run the current object that is open in the client.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行当前在客户端中打开的对象。
- en: The `launch.json` way of running objects isn't going to help us here.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`launch.json`方式运行对象在这里帮不上忙。'
- en: 'The CRS AL Language Extension comes with these new commands, which can be found
    in the command palette:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: CRS AL语言扩展带有这些新命令，可以在命令面板中找到：
- en: 'CRS: Run Object (Web Client).'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CRS: 运行对象（Web客户端）。'
- en: 'CRS: Run Object (Tablet Client).'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CRS: 运行对象（平板客户端）。'
- en: 'CRS: Run Object (Phone Client).'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CRS: 运行对象（手机客户端）。'
- en: 'CRS: Run Object (Windows Client).'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CRS: 运行对象（Windows客户端）。'
- en: 'CRS: Run Current Object (Web Client) (*Ctrl* + *Shift* + *R*)—this runs the
    object from the open file (the extension needs to be published first). You can
    also run this command from the status bar (Run In Web Client) and the context
    menu from the explorer.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：运行当前对象（Web 客户端）（*Ctrl* + *Shift* + *R*）——此命令会运行打开文件中的对象（扩展需要先发布）。你也可以从状态栏（在
    Web 客户端中运行）和资源管理器的上下文菜单运行此命令。
- en: 'CRS: Run CAL Test Tool in Web Client.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：在 Web 客户端中运行 CAL 测试工具。
- en: 'CRS: Run Event Subscribers Page in Web Client.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：在 Web 客户端中运行事件订阅页面。
- en: 'CRS: Run Database Locks Page in Web Client.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：在 Web 客户端中运行数据库锁页面。
- en: The nice thing is it will find the settings in `launch.json` and use these to
    run the actual objects.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 好的一点是，它会在 `launch.json` 中找到设置并使用这些设置来运行实际的对象。
- en: Renaming/reorganizing files
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重命名/重新组织文件
- en: 'As mentioned earlier, this is the most widely used functionality of the tool:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，这是该工具最广泛使用的功能：
- en: '`Renaming` is renaming the file.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`重命名` 是仅重命名文件。'
- en: '`Reorganizing` is renaming the file `AND` placing it in a subfolder that matches
    its object type.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`重新组织` 是重命名文件 `并且` 将其放入与对象类型匹配的子文件夹中。'
- en: 'The essence is captured in four commands that are again available from the
    Visual Studio Code command palette:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，这些命令被归纳为四个命令，可以通过 Visual Studio Code 命令面板再次访问：
- en: 'CRS: Rename – Current File.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：重命名 - 当前文件。
- en: 'CRS: Rename – All Files.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：重命名 - 所有文件。
- en: 'CRS: Reorganize – Current File.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：重新组织 - 当前文件。
- en: 'CRS: CRS: Reorganize – All Files—note that `Reorganize` will move a test codeunit
    to the test folder.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：CRS：重新组织 - 所有文件——请注意，`重新组织` 将会把测试代码单元移动到测试文件夹。
- en: 'There''s also a setting to start the file renaming/reorganizing automatically
    when saving a `.al` file:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个设置，可以在保存 `.al` 文件时自动启动文件重命名/重新组织：
- en: '[PRE0]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Another interesting functionality of rename/reorganize is the ability to change
    the patterns of filenames:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名/重新组织的另一个有趣功能是能够更改文件名模式：
- en: '[PRE1]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here is an overview of all of the available tool settings:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是所有可用工具设置的概览：
- en: '`CRS.nstfolder`: This is the folder of the NST.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.nstfolder`：这是 NST 的文件夹。'
- en: '`CRS.WebServerInstancePort`: This is the port number for the web client.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.WebServerInstancePort`：这是 Web 客户端的端口号。'
- en: '`CRS.WinServer`: This is the server that the Windows client is connecting to.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.WinServer`：这是 Windows 客户端连接的服务器。'
- en: '`CRS.WinServerInstance`: This is the server instance that the windows client
    is connecting to.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.WinServerInstance`：这是 Windows 客户端连接的服务器实例。'
- en: '`CRS.WinServerInstancePort`: This is the port number of the server instance
    that the Windows client is connecting to.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.WinServerInstancePort`：这是 Windows 客户端连接的服务器实例的端口号。'
- en: '`CRS.PublicWebBaseUrl`: Override `Launch.json` settings with this setting if
    necessary to run objects from VS Code.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.PublicWebBaseUrl`：如果需要运行来自 VS Code 的对象，可以通过此设置覆盖 `Launch.json` 设置。'
- en: '`CRS.ExtensionObjectNamePattern`: This is the pattern for the object name;
    if set (it''s not set by default), it will perform an automatic object name for
    extension objects:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.ExtensionObjectNamePattern`：这是对象名称的模式；如果设置了（默认未设置），它将为扩展对象执行自动命名：'
- en: '`<Prefix>`'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Prefix>`'
- en: '`<Suffix>`'
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Suffix>`'
- en: '`<ObjectType>`'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectType>`'
- en: '`<ObjectTypeShort>`: A short notation of the object type'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShort>`：对象类型的简短表示'
- en: '`<ObjectTypeShortUpper>`: The same as `ObjectTypeShort` but uppercase'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShortUpper>`：与 `ObjectTypeShort` 相同，但为大写字母'
- en: '`<ObjectId>`'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectId>`'
- en: '`<BaseName>`: Weird characters are removed—does NOT include prefix or suffix'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseName>`：移除奇怪的字符——不包括前缀或后缀'
- en: '`<BaseNameShort>`: Does NOT include prefix or suffix'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseNameShort>`：不包括前缀或后缀'
- en: '`<BaseId>`: If you want this to work, you need to put `Id` in a comment after
    the base name'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseId>`：如果你希望此功能正常工作，你需要在基本名称后加上 `Id` 注释'
- en: '`CRS.FileNamePattern`: This is the pattern of the filename for non-extension
    objects. These variables can be used:'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.FileNamePattern`：这是非扩展对象文件名的模式。可以使用以下变量：'
- en: '`<Prefix>`: Just the prefix separately'
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Prefix>`：仅单独的前缀'
- en: '`<Suffix>`: Just the suffix separately'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Suffix>`：仅单独的后缀'
- en: '`<ObjectType>`'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectType>`'
- en: '`<ObjectTypeShort>`: A short notation of the object type'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShort>`：对象类型的简短表示'
- en: '`<ObjectTypeShortUpper>`: The same as `ObjectTypeShort` but uppercase'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShortUpper>`：与 `ObjectTypeShort` 相同，但为大写字母'
- en: '`<ObjectId>`'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectId>`'
- en: '`<ObjectName>`: Weird characters are removed, including prefix and suffix'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectName>`：移除奇怪的字符，包括前缀和后缀'
- en: '`<ObjectNameShort>`'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectNameShort>`'
- en: '`CRS.FileNamePatternExtensions`: This is the pattern of the filename for extension
    objects. These variables can be used:'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.FileNamePatternExtensions`：这是扩展对象文件名的模式。可以使用以下变量：'
- en: '`<Prefix>`: Just the prefix separately'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Prefix>`：仅单独的前缀'
- en: '`<Suffix>`: Just the suffix separately'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Suffix>`: 仅后缀部分'
- en: '`<ObjectType>`'
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectType>`'
- en: '`<ObjectTypeShort>`: A short notation of the object type'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShort>`: 对象类型的简短表示'
- en: '`<ObjectTypeShortUpper>`: The same as `ObjectTypeShort` but uppercase'
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShortUpper>`: 与`ObjectTypeShort`相同，但为大写字母'
- en: '`<ObjectId>`'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectId>`'
- en: '`<ObjectName>`: Weird characters are removed, including prefix and suffix'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectName>`: 移除奇怪字符，包括前缀和后缀'
- en: '`<ObjectNameShort>`'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectNameShort>`'
- en: '`<BaseName>`: Weird characters are removed, but this does not include prefix
    nor suffix'
  id: totrans-123
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseName>`: 移除奇怪字符，但不包括前缀和后缀'
- en: '`<BaseNameShort>`: Does not include prefix nor suffix'
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseNameShort>`: 不包括前缀和后缀'
- en: '`<BaseId>`: If you want this to work, you need to put `Id` in a comment after
    the base name, like in this example:'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseId>`: 如果希望此功能生效，您需要在基本名称后面加上`Id`注释，如本例所示：'
- en: '[PRE2]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`CRS.FileNamePatternPageCustomizations`: This is the pattern of the filename
    for page customizations. These variables can be used:'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.FileNamePatternPageCustomizations`: 这是页面自定义文件名的模式。可以使用以下变量：'
- en: '`<Prefix>`: Just the prefix separately'
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Prefix>`: 仅前缀部分'
- en: '`<Suffix>`: Just the suffix separately'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Suffix>`: 仅后缀部分'
- en: '`<ObjectType>`'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectType>`'
- en: '`<ObjectTypeShort>`: A short notation of the object type'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShort>`: 对象类型的简短表示'
- en: '`<ObjectTypeShortUpper>`: The same as `ObjectTypeShort` but uppercase'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectTypeShortUpper>`: 与`ObjectTypeShort`相同，但为大写字母'
- en: '`<ObjectName>`: Weird characters are removed—includes prefix and suffix'
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectName>`: 移除奇怪字符——包括前缀和后缀'
- en: '`<ObjectNameShort>`: Includes prefix and suffix'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<ObjectNameShort>`: 包含前缀和后缀'
- en: '`<BaseName>`: Weird characters are removed and does NOT include prefix nor
    suffix'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseName>`: 移除奇怪字符，不包括前缀和后缀'
- en: '`<BaseNameShort>`: Does NOT include prefix nor suffix'
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseNameShort>`: 不包括前缀和后缀'
- en: '`<BaseId>`: Same remarks as before'
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<BaseId>`: 与之前的说明相同'
- en: '`CRS.ObjectNamePrefix`: When using the reorganize/rename commands, this setting
    will make sure the object name (and filename) will have a prefix:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.ObjectNamePrefix`: 使用重组/重命名命令时，此设置将确保对象名称（和文件名）有前缀：'
- en: 'Tip 1: Use as a workspace setting'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示 1：将其用作工作区设置
- en: 'Tip 2: Use an ending space if you want the prefix to be separated by a space'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示 2：如果希望前缀与后缀之间有空格，请使用结束空格
- en: '`CRS.ObjectNameSuffix`: When using the reorganize/rename commands, this setting
    will make sure the object name (and filename) has a suffix:'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.ObjectNameSuffix`: 使用重组/重命名命令时，此设置将确保对象名称（和文件名）有后缀：'
- en: 'Tip 1: Use as a workspace setting'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示 1：将其用作工作区设置
- en: 'Tip 2: Use a start space if you want the suffix to be separated by a space'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示 2：如果希望后缀与前缀之间有空格，请使用起始空格
- en: '`CRS.RemovePrefixFromFilename`: When using the reorganize/rename commands,
    this setting will remove any prefix from the filename (but keep it in the object
    name). Tip: Use as a workspace setting.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.RemovePrefixFromFilename`: 使用重组/重命名命令时，此设置将移除文件名中的任何前缀（但保留在对象名称中）。提示：将其用作工作区设置。'
- en: '`CRS.RemoveSuffixFromFilename`: When using the reorganize/rename commands,
    this setting will remove any suffix from the filename (but keep it in the object
    name). Tip: Use as a workspace setting.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.RemoveSuffixFromFilename`: 使用重组/重命名命令时，此设置将移除文件名中的任何后缀（但保留在对象名称中）。提示：将其用作工作区设置。'
- en: '`CRS.AlSubFolderName`: This is the variable subfolder name. "None" means you
    want to disable the command to move files to a subfolder.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.AlSubFolderName`: 这是可变子文件夹名称。“None”表示您希望禁用将文件移动到子文件夹的命令。'
- en: '`CRS.OnSaveAlFileAction`: This will automatically rename/reorganize the file
    you are editing. This takes into account the prefix/suffix as well.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CRS.OnSaveAlFileAction`: 此操作将自动重命名/重组您正在编辑的文件。它也会考虑前缀和后缀。'
- en: '`DisableDefaultAlSnippets`: This disables the default snippets that come with
    the `Microsoft.al-language` extension. When you change the setting, you need to
    restart Visual Studio Code twice—once to disable the snippets on activation (at
    that time, the snippets are still loaded), and once to not load the snippets anymore.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DisableDefaultAlSnippets`: 禁用随`Microsoft.al-language`扩展提供的默认片段。更改此设置后，您需要重启
    Visual Studio Code 两次——第一次是禁用激活时的片段（此时片段仍然加载），第二次是彻底不再加载片段。'
- en: '`DisableCRSSnippets`: This disables the CRS snippets that come with this extension.
    When you change the setting, you need to restart Visual Studio Code twice—once
    to disable the snippets on activation (at that time, the snippets are still loaded),
    and once to not load the snippets anymore.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DisableCRSSnippets`: 禁用随此扩展提供的 CRS 片段。更改此设置后，您需要重启 Visual Studio Code 两次——第一次是禁用激活时的片段（此时片段仍然加载），第二次是彻底不再加载片段。'
- en: '`RenameWithGit`: Use `git mv` to rename a file. This keeps the history of the
    file but stages the rename, which you should commit separately. **The feature
    is still in preview-mode, therefore the default value is** `false`**.**'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RenameWithGit`：使用`git mv`重命名文件。这样可以保留文件的历史记录，但会暂存重命名，你应该单独提交它。**该功能仍处于预览模式，因此默认值为**`false`**。**'
- en: Search on Google/Microsoft Docs
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Google/Microsoft文档上搜索
- en: 'A small addition, but very handy when coding, is being able to easily find
    documentation using two new commands in the command palette:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 一个小的新增功能，但在编码时非常方便，能够通过命令面板中的两个新命令轻松查找文档：
- en: 'CRS: Search Microsoft Docs'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：搜索Microsoft文档
- en: 'CRS: Search Google'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRS：搜索Google
- en: It will take the selected word, and search that word on Google or Microsoft
    Docs, with Business Central as the main topic.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 它将获取选中的单词，并在Google或Microsoft Docs上搜索该单词，以Business Central作为主要话题。
- en: Snippets
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码片段
- en: Last, but definitely not least, several snippets are included in the CRS AL
    Language extension.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但绝对不容忽视的是，多个代码片段已包含在CRS AL语言扩展中。
- en: 'First of all, there are improved versions of the Microsoft snippets:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，Microsoft的代码片段已经得到了改进：
- en: Removed unused triggers
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除了未使用的触发器
- en: Improved tab stops
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了制表符停靠
- en: Improved uncompilable code
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进了无法编译的代码
- en: Removed default global variables
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除了默认全局变量
- en: 'There are also new snippets that implement some default design patterns:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些新的代码片段实现了某些默认设计模式：
- en: '`tmynotifications` (CRS): The implementation of my notifications for your own
    notifications'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tmynotifications` (CRS)：为你自己的通知实现我的通知功能'
- en: '`tassistedsetup` (CRS): The implementation of the assisted setup for your own
    wizards'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tassistedsetup` (CRS)：为你自己的向导实现辅助设置功能'
- en: '`tcodeunit` (CRS Method): Snippets for implementing a default encapsulated
    method design pattern that implements an `OnBefore` and `OnAfter` event by default'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tcodeunit` (CRS方法)：用于实现默认封装方法设计模式的代码片段，默认实现`OnBefore`和`OnAfter`事件'
- en: It's a good thing to explore all snippets and familiarize yourself with them.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 探索所有代码片段并熟悉它们是件好事。
- en: Feedback
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反馈
- en: If you have feedback, or you want to contribute to this project, then don't
    hesitate to fork or create issues on the repository for the CRS AL Language extension,
    which you can find on GitHub at [https://github.com/waldo1001/crs-al-language-extension](https://github.com/waldo1001/crs-al-language-extension).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有反馈，或者你想为这个项目做贡献，请不要犹豫，分叉或者在GitHub上的CRS AL语言扩展的代码库中创建问题，你可以在[https://github.com/waldo1001/crs-al-language-extension](https://github.com/waldo1001/crs-al-language-extension)找到它。
- en: WaldoNavPad
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WaldoNavPad
- en: The goal of `WaldoNavPad` has always been to be able to easily work with an
    unlimited amount of text by easily splitting the text into pieces to save in a
    Business Central (or NAV) database (not just by saving it as a BLOB, but as text)
    so that you can still filter and search for parts of the texts.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`WaldoNavPad`的目标一直是能够轻松处理无限量的文本，通过将文本轻松分割成多个片段，以便将其保存在Business Central（或NAV）数据库中（不仅仅是将其作为BLOB保存，而是以文本形式保存），这样你仍然可以过滤和搜索文本的部分内容。'
- en: On top of this, the text should be split intelligently by preserving paragraphs,
    carriage returns, and full words. This still preserves the format of the text
    as much as possible, which makes it as readable as possible in the small field
    lengths that NAV had at its disposal.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在此基础上，文本应该智能地分割，保留段落、换行符和完整的单词。这仍然尽可能地保留文本格式，使其在NAV所能使用的小字段长度中尽可能可读。
- en: How to get it to work
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使其正常工作
- en: 'The latest version of `WaldoNavPad` can be found on Waldo''s GitHub:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`WaldoNavPad`的最新版本可以在Waldo的GitHub上找到：'
- en: '[https://github.com/waldo1001/Waldo.NAV.Pad](https://github.com/waldo1001/Waldo.NAV.Pad)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/waldo1001/Waldo.NAV.Pad](https://github.com/waldo1001/Waldo.NAV.Pad)'
- en: It can easily be downloaded, forked, or cloned from there.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以轻松地从那里下载、分叉或克隆。
- en: 'If you do so, you''ll have the AL code of an app that implements `WaldoNavPad`:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你这么做，你将拥有一个实现了`WaldoNavPad`的应用程序的AL代码：
- en: '![](img/faca539c-f2cb-414d-b467-c26cd6788c2c.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/faca539c-f2cb-414d-b467-c26cd6788c2c.png)'
- en: This set of files is intended to allow you to copy, renumber, rename, and do
    more to your own project. It's not intended to be created as an app, nor has it
    been uploaded to AppSource, so you can use it as a dependency from your own app.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这组文件旨在允许你复制、重新编号、重命名，并对自己的项目进行更多操作。它并不打算作为一个应用程序创建，也没有上传到AppSource，因此你可以将它作为你自己应用程序的依赖项使用。
- en: Running the app for the first time
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一次运行应用程序
- en: 'Once in Visual Studio Code, the app builds and publishes as is. You can simply
    create your `launch.json`, download the symbols, and build the app right away.
    This will get you to the Customer List page, where there are the following two
    new actions:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入 Visual Studio Code，应用程序按原样构建并发布。你只需创建 `launch.json`，下载符号，并立即构建应用程序。这将带你到客户列表页面，其中有以下两个新操作：
- en: 'Open WaldoNAVPad Text: A normal page with a multiline textbox to handle large
    texts'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 WaldoNAVPad 文本：一个常规页面，包含一个多行文本框来处理大文本
- en: 'Open WaldoNAVPad HTML: A JavaScript-based HTML editor (based on TinyMCE)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开 WaldoNAVPad HTML：一个基于 JavaScript 的 HTML 编辑器（基于 TinyMCE）
- en: 'The actions appear as follows:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 操作显示如下：
- en: '![](img/b24d2744-2bcb-4d55-8565-6025b7f082f5.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b24d2744-2bcb-4d55-8565-6025b7f082f5.png)'
- en: 'Here is the text editor on the normal page:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这是常规页面上的文本编辑器：
- en: '![](img/3b240969-8ba7-4843-a79c-5136e374638e.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b240969-8ba7-4843-a79c-5136e374638e.png)'
- en: 'The HTML text editor is as follows:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 文本编辑器如下：
- en: '![](img/e0f3bda7-fe66-48f4-a6b9-13999d65efef.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0f3bda7-fe66-48f4-a6b9-13999d65efef.png)'
- en: Next, let's see how the background for the text appears.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看文本的背景是如何显示的。
- en: The background
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 背景
- en: 'When you dive into the code, you''ll see that the app consists of two parts:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 当你深入查看代码时，你会看到应用程序由两部分组成：
- en: '**NAVpad Handling**: This subfolder contains the code to handle the NAVpad.
    The idea is you only use the `WaldoNAVPad` Class codeunit, where you can show/save/get
    the texts from the NAVpad. To save the texts, it will use the text handling functionality.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NAVpad 处理**：此子文件夹包含处理 NAVpad 的代码。其思路是你只使用 `WaldoNAVPad` 类代码单元，在其中你可以展示/保存/获取来自
    NAVpad 的文本。为了保存文本，它将使用文本处理功能。'
- en: '**Text Handling**: This subfolder contains the code to intelligently handle
    the texts that have to be saved to the database or have to be loaded from the
    database. If you want to use the NAVPad text-tables, there is no need to use these
    methods. However, if you want to save texts to your own table, you can simply
    use the functions in the `WaldoNAVPad` Text Class codeunit, which lets you get
    text and loop through it to save it to your own tables.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文本处理**：此子文件夹包含用于智能处理需要保存到数据库或从数据库加载的文本的代码。如果你想使用 NAVPad 文本表格，则无需使用这些方法。然而，如果你想将文本保存到自己的表格中，你可以直接使用
    `WaldoNAVPad` 文本类代码单元中的函数，这些函数允许你获取文本并循环处理它，将其保存到你自己的表格中。'
- en: By looping through your text, the system is going to cut sentences at spaces
    or carriage returns to preserve the formatting of your text as much as possible.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 通过循环处理文本，系统会在空格或回车符处切割句子，尽量保留文本的格式。
- en: 'In the following example, you see the NAVPad Handling routine looping through
    the text to save the text:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，你可以看到 NAVPad 处理程序通过循环文本来保存文本：
- en: '![](img/075dd6a5-8ce8-4105-80a4-d7e9bb82f053.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![](img/075dd6a5-8ce8-4105-80a4-d7e9bb82f053.png)'
- en: 'By default, the system saves the text in two tables:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，系统将文本保存到两个表格中：
- en: '`WaldoNAVPad` Blobstore: This is a table with formatted HTML tags to preserve
    all of the formatting the user has been doing to the text.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WaldoNAVPad` 二进制大对象存储：这是一个包含格式化 HTML 标签的表格，用于保留用户对文本所做的所有格式化。'
- en: '`WaldoNAVPad` Textstore: This is a table where all of the HTML tags are stripped
    to be able to show it decently in Business Central.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WaldoNAVPad` 文本存储：这是一个表格，其中所有 HTML 标签都被去除，以便能够在 Business Central 中体面地显示。'
- en: 'To show the content of these tables, the app has two pages in the `_JustForTexting`
    folder:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 为了显示这些表格的内容，应用程序在 `_JustForTexting` 文件夹中有两个页面：
- en: page 82,150 WaldoNAVPad Blobs
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面 82,150 WaldoNAVPad 二进制大对象
- en: page 82,149 WaldoNAVPad Texts
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面 82,149 WaldoNAVPad 文本
- en: 'Here is an example of how the records are saved by running the page called
    WaldoNAVPad Texts:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这是运行名为 WaldoNAVPad 文本的页面时，记录如何被保存的示例：
- en: '![](img/2e2ea6a1-8cd2-48f0-9c5b-5d7e275c55c9.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e2ea6a1-8cd2-48f0-9c5b-5d7e275c55c9.png)'
- en: Next, we will see how to implement these actions.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看到如何实现这些操作。
- en: Implementing the logic
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现逻辑
- en: 'To show you how to implement this in your own business logic, the app has a
    `_JustForTesting` subfolder, which contains a page extension for page 22 (Customer
    List) that shows how you can simply create an action on a page and implement `WaldoNAVPad`
    by calling the class functions:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 为了向你展示如何在自己的业务逻辑中实现这一点，应用程序有一个 `_JustForTesting` 子文件夹，包含页面 22（客户列表）的页面扩展，展示了如何在页面上简单地创建一个操作，并通过调用类函数实现
    `WaldoNAVPad`：
- en: '![](img/adfbdb05-5721-4fab-806c-960572909af2.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![](img/adfbdb05-5721-4fab-806c-960572909af2.png)'
- en: The `Initialize` function will load the text that is linked to the current record.
    The `ShowAndSaveTexts` method will show the texts (in this case, in the HTML editor)
    if the user chooses to see it.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '`Initialize` 函数将加载与当前记录关联的文本。`ShowAndSaveTexts` 方法将在用户选择查看时，显示文本（在这种情况下，是在
    HTML 编辑器中）。'
- en: MostUselessAppEver
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MostUselessAppEver
- en: A not-so-important, but rather interesting, repository of Waldo is something
    he calls *the most useless app ever*. It is an AL app intended for demos, prototyping,
    tryouts, or tests—you name it. It contains a lot of different tryouts and demos
    of different parts and topics of AL development.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Waldo 有一个并非特别重要，但相当有趣的仓库，名为 *最无用的应用程序*。它是一个 AL 应用程序，旨在用于演示、原型设计、试验或测试——你可以任意定义。它包含了
    AL 开发中许多不同部分和主题的尝试和演示。
- en: 'A few examples of this are as follows:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是几个示例：
- en: Translations
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 翻译
- en: The different .NET wrappers
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的 .NET 封装
- en: Some editing hacks to work with Visual Studio Code
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些与 Visual Studio Code 配合使用的编辑技巧
- en: Included SQL files to check the tables of an app
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含 SQL 文件以检查应用程序的表
- en: Publish web services
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布 Web 服务
- en: Included HTTP files to check web services
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含用于检查 Web 服务的 HTTP 文件
- en: Function overloading
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数重载
- en: The Tenant Management codeunit
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 租户管理代码单元
- en: You can find `MostUselessAppEver` on Waldo's GitHub at [https://github.com/waldo1001/MostUselessAppEver](https://github.com/waldo1001/MostUselessAppEver).
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 Waldo 的 GitHub 上找到 `MostUselessAppEver`：[https://github.com/waldo1001/MostUselessAppEver](https://github.com/waldo1001/MostUselessAppEver)。
- en: You can simply clone the repository and start working with it. There is not
    a single piece of business logic that is useful, but it will show you some tricks
    to work with AL development.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以简单地克隆仓库并开始使用。这里没有一块有用的业务逻辑，但它会向你展示一些关于 AL 开发的技巧。
- en: PowerShell tools
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PowerShell 工具
- en: As mentioned before, Waldo has been diving into PowerShell quite heavily. There
    has been a strong focus on C/AL and merging, upgrading, and all that, but for
    AL, there hasn't been much need in terms of PowerShell (yet).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Waldo 已经深入使用 PowerShell 进行开发。虽然重点放在 C/AL 上，包括合并、升级等，但在 AL 上，PowerShell
    的使用需求目前还不大（暂时）。
- en: Still, let's point out a few areas in his scripts that can be of any use in
    terms of AL development.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 但让我们指出他脚本中一些在 AL 开发中可能有用的地方。
- en: GitHub
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub
- en: All of Waldo's PowerShell modules and scripts can be found on GitHub at [https://github.com/waldo1001/Cloud.Ready.Software.PowerShell](https://github.com/waldo1001/Cloud.Ready.Software.PowerShell).
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: Waldo 的所有 PowerShell 模块和脚本都可以在 GitHub 上找到：[https://github.com/waldo1001/Cloud.Ready.Software.PowerShell](https://github.com/waldo1001/Cloud.Ready.Software.PowerShell)。
- en: 'You will see two folders:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到两个文件夹：
- en: '`PSModules`: This contains all of the code for the modules. These modules can
    be found on the PowerShell Gallery as well: [https://www.powershellgallery.com/packages?q=waldo](https://www.powershellgallery.com/packages?q=waldo).'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PSModules`：此文件夹包含所有模块的代码。这些模块也可以在 PowerShell Gallery 上找到：[https://www.powershellgallery.com/packages?q=waldo](https://www.powershellgallery.com/packages?q=waldo)。'
- en: '`PSScripts`: This contains scripts that mostly put the functions of these modules
    to work.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PSScripts`：此文件夹包含大多数使这些模块功能得以实现的脚本。'
- en: Docker scripts
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker 脚本
- en: Waldo has been using Docker in quite a number of ways. First, he ran a Windows
    2016 Server VM on his laptop, where he had installed Docker—so, in a way, it was
    a remote Docker host. Then, he moved to Docker on his own PC, which simplified
    the development experience a bit. All of his scripts to manage Docker are in the
    `PSScripts`/`NAVDocker` folder.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Waldo 在多种方式中使用 Docker。首先，他在自己的笔记本电脑上运行了一个 Windows 2016 服务器虚拟机，并在其中安装了 Docker——因此，从某种程度上说，它是一个远程
    Docker 主机。接着，他转向了在自己 PC 上使用 Docker，这使得开发体验有所简化。他管理 Docker 的所有脚本都位于 `PSScripts`/`NAVDocker`
    文件夹中。
- en: 'Here, you find scripts to create containers, but also to work with apps in
    these Docker containers, such as the following:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你会找到创建容器的脚本，也有一些在 Docker 容器中与应用程序交互的脚本，例如：
- en: '`CleanApp`: This will remove all apps from a Docker container.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CleanApp`：这将从 Docker 容器中移除所有应用程序。'
- en: '`InstallApp`: This will install an app with PowerShell.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InstallApp`：这将使用 PowerShell 安装一个应用程序。'
- en: '`ExportObjectsAsAL`: This will export objects as an AL file. It''s very convenient
    to use for reports, which you can export, rename, and replace easily.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ExportObjectsAsAL`：这将把对象导出为 AL 文件。它对于报告非常方便，可以轻松导出、重命名和替换。'
- en: Publishers
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布者
- en: In another repository (`blog.CALAnalysis`), Waldo has been documenting all of
    the publishers from a certain version of NAV or Business Central, which results
    in a file that lists all of the event publishers and where they are called.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个代码库（`blog.CALAnalysis`）中，Waldo 记录了从某个版本的 NAV 或 Business Central 中的所有发布者，这将生成一个列出所有事件发布者及其调用位置的文件。
- en: 'Following is an example of the publishers:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是发布者的示例：
- en: '![](img/55221a07-06a4-4972-a857-438a33f790d1.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/55221a07-06a4-4972-a857-438a33f790d1.png)'
- en: 'This is where they are called:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是它们被调用的地方：
- en: '![](img/46e2d0e9-d4d5-4d4a-a05c-eb128c0fe342.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46e2d0e9-d4d5-4d4a-a05c-eb128c0fe342.png)'
- en: Quite a lot of people refer to this for trying to find out that the event that
    they are about to use is actually being called on the place they expect.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人会参考这个内容，试图确认他们即将使用的事件是否在预期的位置被调用。
- en: ALOps
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ALOps
- en: '**ALOps** is the current tool Waldo is working on. The goal of this tool is
    to provide the easiest way possible for Dynamics 365 Business Central partners
    to set up build and release pipelines in Azure DevOps.'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '**ALOps** 是 Waldo 当前正在开发的工具。该工具的目标是为 Dynamics 365 Business Central 合作伙伴提供一种尽可能简单的方式，以便在
    Azure DevOps 中设置构建和发布管道。'
- en: 'In essence, build and release pipelines are a crucial part of **continuous
    integration/continuous deployment** (**CI/CD**), but very far from the daily knowledge
    of an AL developer. `ALOps` is there to close that bridge: with very limited knowledge,
    you can set up your own build pipeline in a matter of minutes.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，构建和发布管道是 **持续集成/持续部署**（**CI/CD**）的重要组成部分，但这离 AL 开发者的日常知识相去甚远。`ALOps` 的作用就是弥合这座桥梁：即使知识有限，你也可以在几分钟内设置自己的构建管道。
- en: DevOps extension
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 扩展
- en: '**ALOps** is a DevOps extension that is available on the Marketplace for Azure
    DevOps:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '**ALOps** 是一个可在 Azure DevOps 市场上获取的 DevOps 扩展：'
- en: '![](img/d9fedc9d-97c7-4c57-914f-240ff1f0d79a.png)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d9fedc9d-97c7-4c57-914f-240ff1f0d79a.png)'
- en: And it is free for any open source repository.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何开源代码库，都是免费的。
- en: The extension is actually a structured collection of PowerShell scripts. And
    the nice thing is, the user does not have to have any PowerShell knowledge to
    set up the most complex build pipeline, including the signing of apps, compilations,
    tests, and so on.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 该扩展实际上是一个结构化的 PowerShell 脚本集合。更棒的是，用户无需具备任何 PowerShell 知识即可设置最复杂的构建管道，包括应用签名、编译、测试等。
- en: Steps
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤
- en: 'As `ALOps` is there to set up pipelines, it includes what we call steps. The
    steps it includes today are as follows:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`ALOps` 用于设置管道，它包含我们所称的步骤。今天它包含的步骤如下：'
- en: Compile app
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译应用
- en: Sign app
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 签名应用
- en: Verify signed app
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证已签名的应用
- en: Publish app
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布应用
- en: Test app
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试应用
- en: Clean apps from the environment
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从环境中清除应用
- en: Copy app between environments
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同环境之间复制应用
- en: Import a RapidStart package
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 RapidStart 包
- en: Import a license
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入许可证
- en: Build a Docker container
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建 Docker 容器
- en: Wait for a Docker container to finish building
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等待 Docker 容器构建完成
- en: Remove a Docker container
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除 Docker 容器
- en: Import **for side-by-side development** (**fob**)
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入 **用于并行开发**（**fob**）
- en: Export objects (`txt` or `fob`)
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出对象（`txt` 或 `fob`）
- en: Compile (C/AL)
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译（C/AL）
- en: All of these steps work on Docker or non-Docker environments if you wish.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些步骤都可以在 Docker 或非 Docker 环境中运行，视你需要而定。
- en: Documentation on GitHub
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub 上的文档
- en: Waldo documents ALOps on GitHub, in a repository that is also used to gather
    issues or other feedback. You can find it at [https://github.com/HodorNV/ALOps](https://github.com/HodorNV/ALOps).
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: Waldo 在 GitHub 上记录 ALOps，代码库也用于收集问题或其他反馈。你可以在 [https://github.com/HodorNV/ALOps](https://github.com/HodorNV/ALOps)
    找到它。
- en: That repository is actually just a set of documents that describe the DevOps
    extension.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码库实际上只是描述 DevOps 扩展的一组文档。
- en: App templates
  id: totrans-274
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用模板
- en: To make it even easier for app developers to set up build and release pipelines,
    there is an ever-developing repository with template apps including build pipelines
    that app developers can simply use to import so they start with a ready-made set
    of files, including a working build pipeline.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让应用开发者更容易设置构建和发布管道，已有一个不断发展的代码库，里面有模板应用和构建管道，应用开发者可以直接使用这些模板导入，这样他们就可以从一套现成的文件开始，包括一个可工作的构建管道。
- en: 'All of the repositories are being hosted in this public project on DevOps:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 所有代码库都托管在这个公共 DevOps 项目中：
- en: '[https://dev.azure.com/HodorNV/ALOps%20Templates](https://dev.azure.com/HodorNV/ALOps%20Templates)'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dev.azure.com/HodorNV/ALOps%20Templates](https://dev.azure.com/HodorNV/ALOps%20Templates)'
- en: Example of using ALOps
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ALOps 的示例
- en: 'The `WaldoNavPad` app we talked about earlier is actually set up with a working
    build pipeline in Azure DevOps, even while the repository of `WaldoNavPad` is
    on GitHub. Waldo has set it up in this public repository:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前提到的`WaldoNavPad`应用实际上已经在 Azure DevOps 中设置了一个有效的构建管道，即使`WaldoNavPad`的仓库是在
    GitHub 上。Waldo 已在这个公共仓库中进行了设置：
- en: '[https://dev.azure.com/msdyn365bc/WaldoGitHubBuilds/](https://dev.azure.com/msdyn365bc/WaldoGitHubBuilds/)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://dev.azure.com/msdyn365bc/WaldoGitHubBuilds/](https://dev.azure.com/msdyn365bc/WaldoGitHubBuilds/)'
- en: 'Just navigate to the builds and click one of the builds to see the details:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 只需导航到构建页面并点击其中一个构建，就可以查看详细信息：
- en: '![](img/5c3a4d34-9961-4aa1-9820-812ab9a5b819.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5c3a4d34-9961-4aa1-9820-812ab9a5b819.png)'
- en: 'For the settings of this build, you have to open the `azure-pipelines.yml`
    file in the repository here:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此构建的设置，你需要在仓库中打开`azure-pipelines.yml`文件：
- en: '[https://github.com/waldo1001/Waldo.NAV.Pad](https://github.com/waldo1001/Waldo.NAV.Pad)'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/waldo1001/Waldo.NAV.Pad](https://github.com/waldo1001/Waldo.NAV.Pad)'
- en: 'It gives you a readable, ready-to-go build pipeline that is part of the repository.
    All of the settings and steps required to build the app are there:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 它为你提供了一个可读的、即刻可用的构建管道，并且它是仓库的一部分。所有构建应用所需的设置和步骤都在那里：
- en: '[PRE3]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For any more information on how to set it up, the place to be is the app on
    the Marketplace or the GitHub repository mentioned before, which can get you to
    all of the information you need to set it up.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何设置的更多信息，请查看市场上的应用或之前提到的 GitHub 仓库，它们可以为你提供所有需要的设置信息。
- en: Summary
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw an interesting set of third-party tools that can help
    you to increase your productivity when developing extensions for Dynamics 365
    Business Central.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了一些有趣的第三方工具，可以帮助你在为 Dynamics 365 Business Central 开发扩展时提高生产力。
- en: 'This is the last chapter of this book. In all of these chapters, we''ve covered
    all of the topics needed to master every Dynamics 365 Business Central implementation,
    from the basic to the most complex. Now it''s your turn: start developing extensions,
    embracing the SaaS, and putting all of these topics into practice.'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书的最后一章。在所有这些章节中，我们涵盖了掌握每个 Dynamics 365 Business Central 实施所需的所有主题，从基础到最复杂的内容。现在轮到你了：开始开发扩展，拥抱
    SaaS，并将这些主题付诸实践。
