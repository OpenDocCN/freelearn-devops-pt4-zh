["```\n[FEATURE] LookupValue Report\n[SCENARIO #0029] Test that lookup value shows on CustomerList\n                 report\n[GIVEN] 2 customers with different lookup value\n[WHEN] Run report CustomerList\n[THEN] Report dataset contains both customers with lookup value\n```", "```\nReport 50000 \"CustomerList\"\n {\n     //Converted from standard report 101 \"Customer - List\"\n\n     DefaultLayout = RDLC;\n     RDLCLayout = './Report Layouts/CustomerList.rdlc';\n     ApplicationArea = Basic, Suite;\n     Caption = 'Customer List';\n     UsageCategory = ReportsAndAnalysis;\n\n     dataset\n     {\n         dataitem(Customer; Customer)\n         {\n             ...\n             column(Customer_No_; \"No.\")\n             {\n                 IncludeCaption = true;\n             }\n             ...            }\n             column(Customer_Phone_No_; \"Phone No.\")\n             {\n                 IncludeCaption = true;\n             }\n             column(Customer_Lookup_Value_Code;\n                 \"Lookup Value Code\")\n             {\n                 IncludeCaption = true;\n             }\n\n             ...\n          }\n     }\n\n     requestpage\n     {\n         ...\n     }\n\n     Labels\n     {\n         ...\n     }\n\n     ...\n }\n```", "```\ncodeunit 81008 \"Lookup Value Report\"\n{\n    Subtype = Test;\n\n    //[FEATURE] LookupValue Report\n\n    [Test]\n    [HandlerFunctions('CustomerListRequestPageHandler')]\n    procedure TestLookupValueShowsOnCustomerListReport();\n    var\n        Customer: array[2] of Record Customer;\n    begin\n        //[SCENARIO #0029] Test that lookup value shows on\n        //                 CustomerList report\n        Initialize();\n        //[GIVEN] 2 customers with different lookup value\n        CreateCustomerWithLookupValue(Customer[1]);\n        CreateCustomerWithLookupValue(Customer[2]);\n        //[WHEN] Run report CustomerList\n        CommitAndRunReportCustomerList();\n        //[THEN] Report dataset contains both customers with \n        //       lookup value\n        VerifyCustWithLookupValueOnCustListReport(\n            Customer[1].\"No.\", Customer[1].\"Lookup Value Code\");\n        VerifyCustWithLookupValueOnCustListReport(\n            Customer[2].\"No.\", Customer[2].\"Lookup Value Code\");\n    end;\n}\n```", "```\nlocal procedure Initialize()\nvar\n    Customer: record Customer;\nbegin\n    if isInitialized then\n        exit;\n    Customer.DeleteAll();\n    isInitialized := true;\n    Commit();\nend;\n```", "```\nlocal procedure CreateCustomerWithLookupValue(\n    var Customer: Record Customer)\nbegin\n    LibrarySales.CreateCustomer(Customer);\n    with Customer do begin\n        Validate(\"Lookup Value Code\",CreateLookupValueCode());\n        Modify();\n    end;\nend;\n\nlocal procedure CreateLookupValueCode(): Code[10]\nvar\n    LookupValue: Record LookupValue;\nbegin\n    //for implementation see test example 1; this smells like\n    //duplication ;-) again\nend;\n```", "```\nlocal procedure CommitAndRunReportCustomerList()\nvar\n    CustomerListReport: Report CustomerList;\n    RequestPageXML: Text;\nbegin\n    Commit(); // close open write transaction to be able to\n              // run the report\n    RequestPageXML := Report.RunRequestPage(\n        Report::CustomerList,\n        RequestPageXML);\n    LibraryReportDataset.RunReportAndLoad(\n        Report::CustomerList,\n        '',\n        RequestPageXML);\nend;\n\n[RequestPageHandler]\nprocedure CustomerListRequestPageHandler(\n            var CustomerListRequestPage:\n            TestRequestPage CustomerList)\nbegin\n    // Empty handler used to close the request page, default\n    // settings are used\nend;\n```", "```\nlocal procedure VerifyCustWithLookupValueOnCustListReport(\n                    No: Code[20]; LookupValueCode: Code[10])\nvar\n    Row: array[2] of Integer;\nbegin\n    Row[1] := LibraryReportDataset.FindRow(\n                'Customer_No_',\n                No);\n    Row[2] := LibraryReportDataset.FindRow(\n                'Customer_Lookup_Value_Code',\n                LookupValueCode);\n    Assert.AreEqual(\n        13, Row[2] - Row[1],\n        'Delta between columns Customer_No_ and\n         Customer_Lookup_Value_Code')\n end;\n```", "```\nAssert.AreEqual failed. Expected:<56> (Integer). Actual:<13> (Integer). Delta between columns Customer_No_ and Customer_Lookup_Value_Code.\n\nAssert.AreEqual failed. Expected:<13> (Integer). Actual:<-4> (Integer). Delta between columns Customer_No_ and Customer_Lookup_Value_Code.\n```", "```\n[FEATURE] LookupValue Warehouse Shipment\n[SCENARIO #0030] Create warehouse shipment from sales order with\n                 lookup value\n[GIVEN] A lookup value\n[GIVEN] A location with require shipment\n[GIVEN] A warehouse employee for current user\n[WHEN] Create warehouse shipment from released sales order with\nlookup value and with line with require shipment location\n[THEN] Warehouse shipment line has lookup value code field\n       populated\n\n[SCENARIO #0031] Get sales order with lookup value on warehouse\n                 shipment\n[GIVEN] A lookup value\n[GIVEN] A location with require shipment\n[GIVEN] A warehouse employee for current user\n[GIVEN] A released sales order with lookup value and with line\n with require shipment location\n[GIVEN] A warehouse shipment without lines\n[WHEN] Get sales order with lookup value on warehouse shipment\n[THEN] Warehouse shipment line has lookup value code field\n       populated\n```", "```\n[SCENARIO #0015] Assign lookup value to warehouse shipment line\n[GIVEN] A lookup value\n[GIVEN] A location with require shipment\n[GIVEN] A warehouse employee for current user\n[GIVEN] A warehouse shipment from released sales order with line\nwith require shipment location\n[WHEN] Set lookup value on warehouse shipment line\n[THEN] Warehouse shipment line has lookup value code field\npopulated\n\n[SCENARIO #0016] Assign non-existing lookup value on warehouse\n                 shipment line\n[GIVEN] A non-existing lookup value\n[GIVEN] A warehouse shipment line record variable\n[WHEN] Set non-existing lookup value to warehouse shipment line\n[THEN] Non existing lookup value error was thrown\n\n[SCENARIO #0017] Assign lookup value to warehouse shipment line on\n                 warehouse shipment document page\n[GIVEN] A lookup value\n[GIVEN] A location with require shipment\n[GIVEN] A warehouse employee for current user\n[GIVEN] A warehouse shipment from released sales order with line\n with require shipment location\n[WHEN] Set lookup value on warehouse shipment line on warehouse\nshipment document page\n[THEN] Warehouse shipment line has lookup value code field\n       populated\n```", "```\n[GIVEN] A lookup value\n[GIVEN] A location with require shipment\n[GIVEN] A warehouse employee for current user\n```", "```\n[SCENARIO #0015]\n[GIVEN] A warehouse shipment from released sales order with line\nwith require shipment location\n\n[SCENARIO #0017]\n[GIVEN] A warehouse shipment from released sales order with line\n with require shipment location\n [SCENARIO #0030]\n[WHEN] Create warehouse shipment from released sales order with\nlookup value and with line with require shipment location\n\n[SCENARIO #0031]\n[GIVEN] A released sales order with lookup value and with line\n with require shipment location\n```", "```\ntableextension 50007 \"WhseShipmentLineTableExt\"\n                         extends \"Warehouse Shipment Line\"\n{\n    fields\n    {\n        field(50000; \"Lookup Value Code\"; Code[10]){}\n    }\n}\n\ntableextension 50008 \"PstdWhseShipmentLineTableExt\"\n                         extends \"Posted Whse. Shipment Line\"\n{\n    fields\n    {\n        field(50000; \"Lookup Value Code\"; Code[10]){}\n    }\n}\n\npageextension 50034 \"WhseShipmentSubformPageExt\" \n                         extends \"Whse. Shipment Subform\"\n{\n    layout\n    {\n        addlast(Control1)\n        {\n            field(\"Lookup Value Code\"; \"Lookup Value Code\"){}\n        }\n    }\n}\n\npageextension 50036 \"PstdWhseShipmentSubformPageExt\"\n                         extends \"Posted Whse. Shipment Subform\"\n{\n    layout\n    {\n        addlast(Control1)\n        {\n            field(\"Lookup Value Code\"; \"Lookup Value Code\"){}\n        }\n    }\n}\n\npageextension 50035 \"WhseShipmentLinesPageExt\"\n                         extends \"Whse. Shipment Lines\"\n{\n    layout\n    {\n        addlast(Control1)\n        {\n            field(\"Lookup Value Code\"; \"Lookup Value Code\"){}\n        }\n    }\n}\n```", "```\ncodeunit 50002 \"WhseCreateSourceDocumentEvent\"\n{\n    [EventSubscriber(ObjectType::Codeunit,\n        Codeunit::\"Whse.-Create Source Document\",\n        'OnBeforeCreateShptLineFromSalesLine', '', false, false)]\n    local procedure OnBeforeCreateShptLineFromSalesLineEvent(\n        var WarehouseShipmentLine:\n            Record \"Warehouse Shipment Line\";\n        WarehouseShipmentHeader:\n            Record \"Warehouse Shipment Header\";\n        SalesLine: Record \"Sales Line\";\n        SalesHeader: Record \"Sales Header\")\n    begin\n        with WarehouseShipmentLine do\n            \"Lookup Value Code\" :=\n                SalesHeader.\"Lookup Value Code\";\n    end;\n}\n```", "```\ncodeunit 81005 \"LookupValue Posting\"\n{\n    Subtype = Test;\n\n    //[FEATURE] LookupValue Warehouse Shipment\n\n    [Test]\n    procedure AssignLookupValueToWarehouseShipmentLine()\n    begin\n        //[SCENARIO #0015] Assign lookup value to warehouse\n        //                 shipment line on warehouse shipment\n        //                 page\n        //[GIVEN] A lookup value\n        //[GIVEN] A location with require shipment\n        //[GIVEN] A warehouse employee for current user\n        Initialize();\n        //[GIVEN] A warehouse shipment from released sales order\n        //        with line with require shipment location\n        SalesOrderNo := \n            CreateWarehouseShipmentFromSalesOrder(\n                DefaultLocation, \n                UseNoLookupValue());\n        //[WHEN] Set lookup value on warehouse shipment line on\n        //       warehouse shipment page\n        FindAndSetLookupValueOnWarehouseShipmentLine(\n            SalesOrderNo, \n            LookupValueCode);\n        //[THEN] Warehouse shipment line has lookup value code\n        //       field populated\n        VerifyLookupValueOnWarehouseShipmentLine(\n            SalesOrderNo, \n            LookupValueCode);\n    end;\n\n    [Test]\n    procedure\n        AssignLookupValueToLineOnWarehouseShipmentDocument()\n    begin\n        //[SCENARIO #0017] Assign lookup value to warehouse\n        //                 shipment line on warehouse shipment\n        //                 page\n        //[GIVEN] A lookup value\n        //[GIVEN] A location with require shipment\n        //[GIVEN] A warehouse employee for current user\n        Initialize();\n        //[GIVEN] A warehouse shipment from released sales order\n        //        with line with require shipment location\n        SalesOrderNo := \n            CreateWarehouseShipmentFromSalesOrder(\n                DefaultLocation, \n                UseNoLookupValue());\n        //[WHEN] Set lookup value on warehouse shipment line on\n        //       warehouse shipment document page\n        SetLookupValueOnLineOnWarehouseShipmentDocumentPage(\n            SalesOrderNo);\n        //[THEN] Warehouse shipment line has lookup value code\n        //       field populated\n        VerifyLookupValueOnWarehouseShipmentLine(\n            SalesOrderNo, \n            LookupValueCode);\n    end;\n\n    [Test]\n    procedure\n        CreateWarehouseShipmentFromSalesOrderWithLookupValue()\n    begin\n        //[SCENARIO #0030] Create warehouse shipment from sales\n        //                 order with lookup value\n        //[GIVEN] A lookup value\n        //[GIVEN] A location with require shipment\n        //[GIVEN] A warehouse employee for current user\n        Initialize();\n        //[WHEN] Create warehouse shipment from released sales\n        //       order with lookup value and with line with\n        //       require shipment location\n        SalesOrderNo :=\n            CreateWarehouseShipmentFromSalesOrder(\n                DefaultLocation, \n            UseLookupValue());\n        //[THEN] Warehouse shipment line has lookup value code\n        //       field populated\n        VerifyLookupValueOnWarehouseShipmentLine(\n                SalesOrderNo, \n            LookupValueCode);\n    end;\n\n    [Test]\n    procedure GetSalesOrderWithLookupValueOnWarehouseShipment()\n    begin\n        //[SCENARIO #0031] Get sales order with lookup value on\n        //                 warehouse shipment\n        //[GIVEN] A lookup value\n        //[GIVEN] A location with require shipment\n        //[GIVEN] A warehouse employee for current user\n        Initialize();\n        //[GIVEN] A released sales order with lookup value and\n        //        with line with require shipment location\n        CreateAndReleaseSalesOrder(\n            SalesHeader, \n            DefaultLocation, \n            UseLookupValue());\n        //[GIVEN] A warehouse shipment without lines\n        WarehouseShipmentNo := \n            CreateWarehouseShipmentWithOutLines(\n                DefaultLocation.\"Code\");\n        //[WHEN] Get sales order with lookup value on warehouse\n        //       shipment\n        GetSalesOrderShipment(WarehouseShipmentNo);\n        //[THEN] Warehouse shipment line has lookup value code\n        //       field populated\n        VerifyLookupValueOnWarehouseShipmentLine(\n            SalesHeader.\"No.\", \n            LookupValueCode);\n    end;\n}\n```", "```\n[GIVEN] A lookup value\n[GIVEN] A location with require shipment\n[GIVEN] A warehouse employee for current user\n```", "```\nlocal procedure Initialize()\nvar\n    WarehouseEmployee: Record \"Warehouse Employee\";\nbegin\n    if isInitialized then\n        exit;\n\n    LookupValueCode := CreateLookupValueCode();\n    LibraryWarehouse.CreateLocationWMS(\n        DefaultLocation, false, false, false, false, true);\n    LibraryWarehouse.CreateWarehouseEmployee(\n        WarehouseEmployee, DefaultLocation.\"Code\", false);\n\n    isInitialized := true;\n    Commit();\nend;\n```", "```\nlocal procedure CreateWarehouseShipmentFromSalesOrder(\n                    Location: Record Location; \n                    WithLookupValue: Boolean): Code[20]\nvar\n    SalesHeader: Record \"Sales Header\";\nbegin\n    CreateAndReleaseSalesOrder(\n        SalesHeader, \n        Location, \n        WithLookupValue);\n    LibraryWarehouse.CreateWhseShipmentFromSO(SalesHeader);\n    exit(SalesHeader.\"No.\");\nend;\n\nlocal procedure CreateAndReleaseSalesOrder(\n        var SalesHeader: record \"Sales Header\"; Location: Record Location; WithLookupValue: Boolean)\nvar\n    SalesLine: record \"Sales Line\";\nbegin\n    LibrarySales.CreateSalesDocumentWithItem(\n         SalesHeader, SalesLine, SalesHeader.\"Document Type\"::Order,\n         '', '', 1, Location.\"Code\", 0D);\n\n    with SalesHeader do\n        if WithLookupValue then begin\n            Validate(\"Lookup Value Code\", LookupValueCode);\n            Modify();\n        end;\n\n    LibrarySales.ReleaseSalesDocument(SalesHeader);\nend;\n```"]