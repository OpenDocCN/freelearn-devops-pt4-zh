- en: Setting Up VS Code and Using the GitHub Project
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 VS Code 并使用 GitHub 项目
- en: This is a book about writing automated tests in Microsoft Dynamics 365 Business
    Central, not about how to develop extensions with VS Code and the AL language.
    It is assumed that you know how to use VS Code in conjunction with the AL development
    language and how Dynamics 365 Business Central works as a platform and an application.
    Based on this, we dived straight into coding in [Chapter 2](1e679d13-4037-48e2-b8ae-f550f507f8c9.xhtml),
    *The Testability Framework*, without explaining anything about the development
    tools we are using, and continued to do that in the following chapters.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书讲述的是在 Microsoft Dynamics 365 Business Central 中编写自动化测试，而不是如何使用 VS Code 和 AL
    语言开发扩展。假设你已经知道如何将 VS Code 与 AL 开发语言结合使用，并且了解 Dynamics 365 Business Central 作为平台和应用程序的工作原理。基于此，我们直接进入了
    [第 2 章](1e679d13-4037-48e2-b8ae-f550f507f8c9.xhtml)，*可测试性框架* 的编码，没有解释我们使用的开发工具，并且在接下来的章节中继续这样做。
- en: In this appendix, however, we pay some attention to VS Code and AL development,
    and the code examples to be found in the repository on GitHub.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在本附录中，我们会关注一些 VS Code 和 AL 开发，并介绍在 GitHub 仓库中找到的代码示例。
- en: VS Code and AL development
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VS Code 和 AL 开发
- en: If you are new to extension development with VS Code and the AL language, you
    might want to practice this first. There are various resources out there, but
    a very comprehensive one, though not too voluminous, is *Dynamics 365 Business
    Central* *Development Quick Start Guide* by Stefano Demiliani and Duilio Tacconi.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 AL 语言和 VS Code 扩展开发的新手，你可能需要先练习这一点。有许多资源可以参考，但一本内容详尽且不冗长的书是 Stefano Demiliani
    和 Duilio Tacconi 编写的 *Dynamics 365 Business Central* *开发快速入门指南*。
- en: 'Here is a link to the Packt page where you also can order the book: [https://www.packtpub.com/business/dynamics-365-business-central-development-quick-start-guide](https://www.packtpub.com/business/dynamics-365-business-central-development-quick-start-guide)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个链接到 Packt 页面，你也可以在这里订购这本书：[https://www.packtpub.com/business/dynamics-365-business-central-development-quick-start-guide](https://www.packtpub.com/business/dynamics-365-business-central-development-quick-start-guide)
- en: VS Code project
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VS Code 项目
- en: 'In *Dynamics 365 Business Central* *Development Quick Start Guide*, Stefano
    Demiliani and Duilio Tacconi explain in a practical way how to set up a new extension
    project in VS Code, start programming in AL, and deploy the extension to Business
    Central. The projects you will find in the GitHub repository for this book have
    been created in the same way: for each chapter there is a separate folder containing
    the AL code objects and the `app.json` file. If you have been working on extensions
    already, you will notice that one major resource is missing: the `launch.json`.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Dynamics 365 Business Central* *开发快速入门指南* 中，Stefano Demiliani 和 Duilio Tacconi
    以实用的方式解释了如何在 VS Code 中设置一个新的扩展项目，开始使用 AL 编程，并将扩展部署到 Business Central。你在本书的 GitHub
    仓库中找到的项目也是以相同的方式创建的：每个章节都有一个单独的文件夹，其中包含 AL 代码对象和 `app.json` 文件。如果你已经在开发扩展，你会注意到缺少了一个重要的资源：`launch.json`。
- en: Note that we will discuss the structure of the GitHub repository in more detail
    in the following sections.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们将在接下来的章节中更详细地讨论 GitHub 仓库的结构。
- en: launch.json
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: launch.json
- en: 'To be able to use a chapter folder as a complete VS Code AL extension project
    folder, you need to add a `launch.json` file to it. The `launch.json` file is
    typically stored in the `.vscode` subfolder of the project folder and contains
    information on the Business Central installation that the extension will be launched
    on. To get a `.vscode` folder with a `launch.json` file, follow these steps:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够将章节文件夹用作完整的 VS Code AL 扩展项目文件夹，你需要向其中添加一个 `launch.json` 文件。`launch.json`
    文件通常存储在项目文件夹的 `.vscode` 子文件夹中，并包含有关将在其上启动扩展的 Business Central 安装信息。要获取一个包含 `launch.json`
    文件的 `.vscode` 文件夹，请按照以下步骤操作：
- en: Open VS Code with the AL Language extension installed
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开安装了 AL 语言扩展的 VS Code
- en: 'Use the `AL: GO!` command to create a new VS Code AL project'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '使用 `AL: GO!` 命令创建一个新的 VS Code AL 项目'
- en: In this project, configure the `launch.json` file to set up a relation with
    the Business Central installation you are going to perform your test coding on
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个项目中，配置 `launch.json` 文件，以便与即将执行测试编码的 Business Central 安装建立关系
- en: Copy this `.vscode` folder to the chapter project folder you want to work with
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这个 `.vscode` 文件夹复制到你想要处理的章节项目文件夹中
- en: 'Your `launch.json` might look somewhat like this:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 `launch.json` 可能会像这样：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Compared to the default `launch.json `file, you will note that I have added/updated
    a couple of useful keywords, such as `startupObjectId`, the startup page 130401,
    which is the `Test Tool` page.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 与默认的 `launch.json` 文件相比，你会注意到我添加/更新了一些有用的关键词，例如 `startupObjectId`，启动页 130401，即
    `测试工具` 页面。
- en: You will find more details in *Dynamics 365 Business Central* *Development Quick
    Start Guide,* by Stefano Demiliani and Duilio Tacconi.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在*Dynamics 365 Business Central* *开发快速入门指南*中找到更多详细信息，作者是Stefano Demiliani
    和 Duilio Tacconi。
- en: app.json
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: app.json
- en: 'The `app.json` file, also called the manifest, defines the meta description
    of the extension and has been provided for each chapter folder already on GitHub.
    Here is the one for [Chapter 5](56634efe-664c-421a-9582-b2a6ae69722a.xhtml), [Chapter
    6](0f8efb81-438e-48ed-9f7f-bcfa5caa8e92.xhtml), [Chapter 7](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml), and
    [Chapter 9](795b3870-b6f5-43be-953c-0ffd01db9102.xhtml) only listing relevant
    parts:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`app.json` 文件，也叫做清单文件，定义了扩展的元描述，并已在 GitHub 上为每个章节文件夹提供。这里是[第5章](56634efe-664c-421a-9582-b2a6ae69722a.xhtml)，[第6章](0f8efb81-438e-48ed-9f7f-bcfa5caa8e92.xhtml)，[第7章](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml)和[第9章](795b3870-b6f5-43be-953c-0ffd01db9102.xhtml)中仅列出相关部分的清单：'
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Instead of using the `app.json` file, as provided on GitHub, you might also
    use the `app.json` file of a newly created VS Code AL project folder, such as
    the one created previously, to get a `launch.json` file. If you do that, make
    sure that your extension has a different (and unique) name and ID, as I already,
    while working on this book, deployed the extension `LookupValue` a zillion times.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用 GitHub 提供的 `app.json` 文件外，你还可以使用新创建的 VS Code AL 项目文件夹中的 `app.json` 文件，像之前创建的那样，以获得
    `launch.json` 文件。如果你这么做，确保你的扩展具有不同的（且唯一的）名称和 ID，因为在编写本书时，我已经部署了 `LookupValue`
    扩展无数次。
- en: 'In Tip #10 of the *Top tips and tricks on how to create Per-tenant extensions*
    blog ([https://simplanova.com/top-tips-tricks-per-tenant-extensions/](https://simplanova.com/top-tips-tricks-per-tenant-extensions/)),
    Dmitry Katson explains what happens if your extension is not unique and how to
    make it unique.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '在 *如何创建每租户扩展的十大技巧与窍门* 博客的提示 #10 中（[https://simplanova.com/top-tips-tricks-per-tenant-extensions/](https://simplanova.com/top-tips-tricks-per-tenant-extensions/)），Dmitry
    Katson 解释了如果你的扩展不是唯一的会发生什么，以及如何使其唯一。'
- en: The GitHub repository
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub 仓库
- en: 'The various code examples we used in this book have been uploaded in a dedicated
    GitHub repository. This repository can be accessed through this link: [https://github.com/PacktPublishing/Automated-Testing-in-Microsoft-Dynamics-365-Business-Central](https://github.com/PacktPublishing/Automated-Testing-in-Microsoft-Dynamics-365-Business-Central).'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用的各种代码示例已经上传到一个专门的 GitHub 仓库中。可以通过以下链接访问该仓库：[https://github.com/PacktPublishing/Automated-Testing-in-Microsoft-Dynamics-365-Business-Central](https://github.com/PacktPublishing/Automated-Testing-in-Microsoft-Dynamics-365-Business-Central)。
- en: Structure of the GitHub repository
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub 仓库结构
- en: 'On the main page of this repository, you will find the following folders:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在该仓库的主页上，你会找到以下文件夹：
- en: '`ATDD Scenarios`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ATDD 场景`'
- en: '`Chapter 2`'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第2章
- en: '`Chapter 5 (LookupValue Extension)`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`第5章 (LookupValue 扩展)`'
- en: '`Chapter 6 (LookupValue Extension)`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`第6章 (LookupValue 扩展)`'
- en: '`Chapter 7 (LookupValue Extension) - refactored and completed`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`第7章 (LookupValue 扩展) - 重构并完成`'
- en: '`Chapter 7 (LookupValue Extension)`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`第7章 (LookupValue 扩展)`'
- en: '`Chapter 9 (LookupValue Extension)`'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`第9章 (LookupValue 扩展)`'
- en: '`LookupValue Extension (app only)`'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LookupValue 扩展 (仅应用)`'
- en: '`LookupValue Test Extension (test only)`'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LookupValue 测试扩展 (仅测试)`'
- en: In this section, we will discuss what the various folders contain. Notice that
    GitHub puts them in alphabetical order. This does not relate to the order in which
    the folders are used in the book. However, I will elaborate on the order of the
    book.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论各个文件夹的内容。请注意，GitHub 会按字母顺序排列它们。这与文件夹在书中使用的顺序无关。不过，我会详细阐述书中的顺序。
- en: Like any other GitHub repository, ours also contains a `LICENSE` and `README.md`
    file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 像其他任何 GitHub 仓库一样，我们的仓库也包含 `LICENSE` 和 `README.md` 文件。
- en: Chapter 2
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章
- en: This folder contains the code examples from [Chapter 2](1e679d13-4037-48e2-b8ae-f550f507f8c9.xhtml),
    *The Testability Framework*, including the `MyTestsExecutor` page and the `app.json` file
    that allows you to deploy the code as an extension.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件夹包含[第2章](1e679d13-4037-48e2-b8ae-f550f507f8c9.xhtml)的代码示例，*可测试性框架*，包括 `MyTestsExecutor`
    页面和 `app.json` 文件，后者允许你将代码作为扩展部署。
- en: ATDD Scenarios
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ATDD 场景
- en: 'This folder holds the following two Excel files:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件夹包含以下两个 Excel 文件：
- en: '`Clean sheet.xlsx`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`清单.xlsx`'
- en: '`LookupValue.xlsx`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LookupValue.xlsx`'
- en: The `LookupValue` file contains a listing of all **Acceptance Test-Driven Development**
    (**ATDD**) scenarios, that is `GIVEN`-`WHEN`-`THEN`, detailing the full customer
    wish, as introduced in [Chapter 5](56634efe-664c-421a-9582-b2a6ae69722a.xhtml),
    *From Customer Wish to Test Automation - The Basics*, for our `LookupValue` extension.
    This was elaborated on further in [Chapter 5](56634efe-664c-421a-9582-b2a6ae69722a.xhtml) through
    to [Chapter 7](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`LookupValue`文件包含所有**验收测试驱动开发**（**ATDD**）场景的列表，按照`GIVEN`-`WHEN`-`THEN`格式详细描述了完整的客户需求，如[第5章](56634efe-664c-421a-9582-b2a6ae69722a.xhtml)中介绍的*从客户需求到测试自动化——基础篇*，用于我们的`LookupValue`扩展。在[第5章](56634efe-664c-421a-9582-b2a6ae69722a.xhtml)中已进一步详细说明，并延续至[第7章](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml)。'
- en: The `Clean sheet.xlsx` file is a ready to use clean version to use to write
    your own ATDD scenarios.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`Clean sheet.xlsx`文件是一个现成的干净版本，用于编写你自己的ATDD场景。'
- en: LookupValue Extension (app only)
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LookupValue 扩展（仅应用）
- en: This folder contains the application code of the `LookupValue` extension, the
    application code we have been writing test code for in [Chapter 5](56634efe-664c-421a-9582-b2a6ae69722a.xhtml), [Chapter
    6](0f8efb81-438e-48ed-9f7f-bcfa5caa8e92.xhtml), [Chapter 7](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml),
    and [Chapter 9](795b3870-b6f5-43be-953c-0ffd01db9102.xhtml), including the `app.json` file
    that allows you to deploy the code as an extension. Notice that it already contains
    a `Test Codeunits` folder with the bare structure of the first codeunit build
    in [Chapter 5](56634efe-664c-421a-9582-b2a6ae69722a.xhtml).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本文件夹包含`LookupValue`扩展的应用代码，包含我们在[第5章](56634efe-664c-421a-9582-b2a6ae69722a.xhtml)、[第6章](0f8efb81-438e-48ed-9f7f-bcfa5caa8e92.xhtml)、[第7章](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml)和[第9章](795b3870-b6f5-43be-953c-0ffd01db9102.xhtml)中编写测试代码的应用代码，包含`app.json`文件，允许你将代码作为扩展进行部署。请注意，它已包含一个`Test
    Codeunits`文件夹，里面有第一个代码单元结构，构建于[第5章](56634efe-664c-421a-9582-b2a6ae69722a.xhtml)。
- en: Chapter 5 (LookupValue Extension)
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章（LookupValue 扩展）
- en: Starting from the code in the `LookupValue Extension (app only)` folder, this
    folder adds the completed code examples from [Chapter 5](56634efe-664c-421a-9582-b2a6ae69722a.xhtml),
    *From Customer Wish to Test Automation - The Basics*, to the extension. It also
    includes the `app.json` file that allows you to deploy the code as an extension.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从`LookupValue 扩展（仅应用）`文件夹中的代码开始，本文件夹将[第5章](56634efe-664c-421a-9582-b2a6ae69722a.xhtml)中的完整代码示例，*从客户需求到测试自动化——基础篇*，添加到扩展中。它还包含`app.json`文件，允许你将代码作为扩展进行部署。
- en: Chapter 6 (LookupValue Extension)
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章（LookupValue 扩展）
- en: Starting from the code in the `Chapter 5 (LookupValue Extension)` folder, this
    folder adds the completed code examples from [Chapter 6](0f8efb81-438e-48ed-9f7f-bcfa5caa8e92.xhtml),
    *From Customer Wish to Test Automation - Next Level*. It also includes the `app.json` file
    that allows you to deploy the code as an extension.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 从`第5章（LookupValue 扩展）`文件夹中的代码开始，本文件夹添加了[第6章](0f8efb81-438e-48ed-9f7f-bcfa5caa8e92.xhtml)的完整代码示例，*从客户需求到测试自动化——进阶篇*。它还包含`app.json`文件，允许你将代码作为扩展进行部署。
- en: Chapter 7 (LookupValue Extension)
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章（LookupValue 扩展）
- en: Starting from the code in the `Chapter 6 (LookupValue Extension)` folder, this
    folder adds the completed code examples from [Chapter 7](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml),
    *From Customer Wish to Test Automation - And Some More*. It also includes the
    `app.json` file that allows you to deploy the code as an extension.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 从`第6章（LookupValue 扩展）`文件夹中的代码开始，本文件夹添加了[第7章](bb9ee41e-4c60-4a27-8fad-5343adfcd86a.xhtml)的完整代码示例，*从客户需求到测试自动化——以及更多内容*。它还包含`app.json`文件，允许你将代码作为扩展进行部署。
- en: Chapter 7 (LookupValue Extension) - refactored and completed
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章（LookupValue 扩展）- 重构并完成
- en: This folder contains the refactored and completed application and test code
    for the whole `LookupValue` extension, including the `app.json` file that allows
    you to deploy the code as an extension.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 本文件夹包含整个`LookupValue`扩展的重构和完成后的应用与测试代码，包括允许你将代码作为扩展部署的`app.json`文件。
- en: Chapter 9 (LookupValue Extension)
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章（LookupValue 扩展）
- en: Starting from the code in the `Chapter 7 (LookupValue Extension) - refactored
    and completed` folder, this folder adds the completed code examples from [Chapter
    9](795b3870-b6f5-43be-953c-0ffd01db9102.xhtml), *Getting Business Central Standard
    Tests Working on Your Code*. It also includes the `app.json` file that allows
    you to deploy the code as an extension.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 从`第7章（LookupValue 扩展）- 重构并完成`文件夹中的代码开始，本文件夹添加了[第9章](795b3870-b6f5-43be-953c-0ffd01db9102.xhtml)的完整代码示例，*让
    Business Central 标准测试在你的代码上工作*。它还包含`app.json`文件，允许你将代码作为扩展进行部署。
- en: LookupValue Test Extension (test only)
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LookupValue 测试扩展（仅测试）
- en: As mentioned already in the book, when releasing an extension, it is best practice
    to separate the application from the test code. For `AppSource`, this is even
    a requirement. This means that the final test extension is built with a dependency
    on the real extension. This folder contains a separate test extension that belongs
    to the extension in the `LookupValue Extension (app only)` folder.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如书中所述，在发布扩展时，最佳实践是将应用程序代码与测试代码分开。对于 `AppSource`，这甚至是一个要求。这意味着最终的测试扩展是依赖于真实扩展构建的。此文件夹包含一个单独的测试扩展，属于
    `LookupValue Extension (仅应用)` 文件夹中的扩展。
- en: Notes on the AL code
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于 AL 代码的说明
- en: Now, a final couple of notes on the code on GitHub and the code examples in
    the book.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，关于 GitHub 上的代码和书中的代码示例，最后再做几点说明。
- en: VS Code versus C/SIDE
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VS Code 与 C/SIDE
- en: This book has been focused completely on the modern way of developing a feature,
    by means of an extension, for Microsoft Dynamics 365 Business Central. The code
    on GitHub and the code examples in the book are, therefore, all in the AL language.
    But all of the principles that have been presented and used do also apply to developing
    automated tests in C/SIDE, this being the development environment for Microsoft
    Dynamics NAV. At this very moment, the standard application and test code of Business
    Central is still provided by Microsoft in C/SIDE objects.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 本书完全聚焦于以扩展的方式开发 Microsoft Dynamics 365 Business Central 功能的现代方法。因此，GitHub 上的代码和书中的代码示例都是用
    AL 语言编写的。但所有呈现和使用的原则同样适用于在 C/SIDE 中开发自动化测试，C/SIDE 是 Microsoft Dynamics NAV 的开发环境。目前，Business
    Central 的标准应用和测试代码仍由 Microsoft 提供，且是以 C/SIDE 对象形式存在。
- en: Prefix or suffix
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前缀或后缀
- en: 'When building your own extension, it is best practice to make use of a so-called
    *prefix* or *suffix* in the names of your objects, fields, and controls. We chose
    not to use a prefix/suffix for the following reasons:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建你自己的扩展时，最佳实践是使用所谓的*前缀*或*后缀*来命名你的对象、字段和控件。我们选择不使用前缀/后缀，原因如下：
- en: The `LookupValue` extension is not a registered extension
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LookupValue` 扩展不是一个注册过的扩展'
- en: The use of a prefix/suffix would not contribute to the readability of the code
    examples
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用前缀/后缀不会提高代码示例的可读性
- en: 'More information on the usage of a *prefix* or *suffix* can be found here:
    [http://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/compliance/apptest-prefix-suffix](http://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/compliance/apptest-prefix-suffix)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 关于使用*前缀*或*后缀*的更多信息，请参见：[http://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/compliance/apptest-prefix-suffix](http://docs.microsoft.com/en-us/dynamics365/business-central/dev-itpro/compliance/apptest-prefix-suffix)
- en: Word wrap
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动换行
- en: When adding code examples to a book, there is always the challenge of how to
    neatly format long-lined statements to keep the code readable. In the code examples
    in this book, this has been done by enforcing *word wrap,* even though the code
    might not even compile anymore. All of the code in the GitHub repository, however,
    is technically OK.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在书中添加代码示例时，始终面临如何整齐地格式化长行代码以保持代码可读性的问题。在本书中的代码示例中，采用了强制*自动换行*的方法，即使代码可能无法再编译。然而，GitHub
    仓库中的所有代码在技术上是没有问题的。
