["```\n{\nProject_ID,\nDepartment, \nOwner, \n< optional information (like language or build id) >, \nContact_Email\n}\n```", "```\n$aws dynamodb create-table --table-name projects \\\n--attribute-definitions AttributeName=Project_Name,AttributeType=S \\\n--key-schema AttributeName=Project_Name,KeyType=HASH \\\n--provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \n```", "```\n{\n    \"Project_ID\": {\"N\": \"0100\"},\n    \"Dept\": {\"S\": \"Test Team\"},\n    \"Dept_ID\": {\"N\": \"0001\"},\n    \"Project_Name\": {\"S\": \"Serverless Forms\"},\n    \"Owner\": {\"S\": \"Jerry Imoto\"},\n    \"Builds\": {\"NS\":  [\"2212121\"] },\n    \"Language\": {\"S\": \"python\" },\n    \"Contact\": {\"S\": \"test_team@testcompany.com\" }\n}\n```", "```\naws dynamodb put-item \\\n    --table-name projects \\\n    --item file://project_item.json \\\n    --return-consumed-capacity TOTAL\n```", "```\n{\n    \"ConsumedCapacity\": {\n        \"TableName\": \"projects\",\n        \"CapacityUnits\": 1.0\n    }\n}\n```", "```\naws dynamodb scan \\\n    --table-name projects \\\n    --filter-expression \"Dept = :d\" \\\n    --expression-attribute-values file://scan-values.json \n```", "```\n    aws dynamodb query \\\n        --table-name projects \\\n        --projection-expression \"Dept\" \\\n        --key-condition-expression \"Project_Name = :v1\" \\\n        --expression-attribute-values file://query-values.json \\\n        --return-consumed-capacity TOTAL\n    You should receive a result like the following one:{\n        \"Items\": [\n            {\n                \"Dept\": {\n                    \"S\": \"Training\"\n                }\n            }\n        ],\n        \"Count\": 1,\n        \"ScannedCount\": 1,\n        \"ConsumedCapacity\": {\n            \"TableName\": \"projects\",\n            \"CapacityUnits\": 0.5\n        }\n    }\n    ```", "```\naws dynamodb describe-table \\\n    --table-name projects \\\n    --query \"Table.GlobalSecondaryIndexes\"\n```"]