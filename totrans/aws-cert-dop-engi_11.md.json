["```\n    $ git clone ssh://git-codecommit.us-east-2.amazonaws.com/v1/repos/chapt9\n    ```", "```\n    $ cp -R * ~/chapt9/\n    ```", "```\n    $ cd ~/chapt9\n    ```", "```\n    $ git add * \n    $ git commit -m \"adding sample code to CodeCommit\"\n    [master (root-commit) f85e8f2] adding sample code to CodeCommit\n     2 files changed, 52 insertions(+)\n     create mode 100644 buildspec.yml\n     create mode 100644 src/app.py\n    $ git push \n    Enumerating objects: 5, done.\n    Counting objects: 100% (5/5), done.\n    Delta compression using up to 8 threads\n    Compressing objects: 100% (4/4), done.\n    Writing objects: 100% (5/5), 825 bytes | 825.00 KiB/s, done.\n    Total 5 (delta 0), reused 0 (delta 0), pack-reused 0\n    To ssh://git-codecommit.us-east-2.amazonaws.com/v1/repos/chapt9\n     * [new branch]      master -> master\n    ```", "```\n    $aws iam create-group --group-name Tools\n    ```", "```\n    {\n        \"Group\": {\n            \"Path\": \"/\",\n            \"GroupName\": \"tools\",\n            \"GroupId\": \"AGPAW24Q7QQFSHYZHE6N6\",\n            \"Arn\": \"arn:aws:iam::470066103307:group/tools\",\n            \"CreateDate\": \"2021-05-14T01:25:58+00:00\"\n        }\n    }\n    ```", "```\n    JSON after creation, as in the following statement:\n\n    ```", "```\n\n    ```", "```\n    policy-arn field use the value which was returned to you in step 1:\n\n    ```", "```\n\n    If the policy attachment is successful, then there will be no confirmation message. \n    ```", "```\n    aws iam create-user --user-name peter \n    ```", "```\n    aws iam add-user-to-group --user-name peter --group-name Tools\n    ```", "```\n    aws iam create-login-profile --user-name peter --password Dev0psPRO --password-reset-required\n    ```", "```\n    aws iam list-policies --query 'Policies[?PolicyName==`CC_Developers`].Arn' --output text\n    ```", "```\n    aws iam create-policy-version \\\n    --policy-arn arn:aws:iam::470066103307:policy/CC_Developers \\\n    --policy-document file://IAM_Developers.json --set-as-default\n    ```", "```\n    {\n        \"PolicyVersion\": {\n            \"VersionId\": \"v2\",\n            \"IsDefaultVersion\": true,\n            \"CreateDate\": \"2021-05-16T19:01:09+00:00\"\n        }\n    }\n    ```", "```\nversion: 0.0\nResources:\n  - myLambdaFunction:\n      Type: AWS::Lambda::Function\n      Properties:\n        Name: \"myTestFunction\"\n        Alias: \"myTestFunctionAlias\"\n        CurrentVersion: \"1\"\n        TargetVersion: \"2\"\nHooks:\n  - BeforeAllowTraffic: \"LambdaFunctionToValidateBeforeTrafficShift\"\n  - AfterAllowTraffic: \"LambdaFunctionToValidateAfterTrafficShift\"\n```"]