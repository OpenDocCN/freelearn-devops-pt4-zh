["```\n{\n  \"URL\": https://packtpub.com\n}\n```", "```\ndef Lambda_handler(event, context):\n  greeting = 'I am a DevOps Pro and my name is {} {}'.format(event['firstname'], event['lastname'])\n  print(message)\n  return {\n    'greeting': greeting\n}\n```", "```\n    $ cd ~/\n    $ mkdir my-wc-function\n    $ cd my-wc-function\n    ```", "```\n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            { \"Effect\": \"Allow\",\n              \"Principal\": {\n                  \"Service\": \"Lambda.amazonaws.com\"\n    }, \n              \"Action\": \"sts:AssumeRole\"\n            }\n        ]\n    }\n    ```", "```\n    $ aws iam create-role --role-name Lambda-12 --assume-role-policy-document file://Lambda-role-policy.json\n    ```", "```\n    {\n        \"Role\": {\n            \"Path\": \"/\",\n            \"RoleName\": \"Lambda-12\",\n            \"RoleId\": \"AROAW24Q7QQF5NLSQX3L5\",\n            \"Arn\": \"arn:aws:iam::470066103307:role/Lambda-12\",\n            \"CreateDate\": \"2021-06-15T01:06:06+00:00\",\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Principal\": {\n                            \"Service\": \"Lambda.amazonaws.com\"\n                        },\n                        \"Action\": \"sts:AssumeRole\"\n                    }\n                ]\n            }\n        }\n    }\n    ```", "```\n    $ aws iam attach-role-policy --role-name Lambda-12 --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n    ```", "```\n    $ rm Lambda-role-policy.json\n    ```", "```\n    import requests\n    from bs4 import BeautifulSoup\n    from collections import Counter \n    from string import punctuation # already included in Lambda modules \n    def Lambda_handler(event, context):\n    # get the URL from the event \n    r = requests.get(\"https://aws.amazon.com/blogs/compute/using-Lambda-layers-to-simplify-your-development-process/\") #demo \n      bs = BeautifulSoup(r.content)\n    # gather all the words within the paragraphs \n      p_txt = (''.join(s.findAll(text=True))for s in bs.findAll('p'))\n      count_p = Counter((x.rstrip(punctuation).lower() for y in p_txt for x in y.split()))\n    # gather all the text in the divs \n      d_txt = (''.join(s.findAll(text=True))for s in soup.findAll('div'))\n      count_div = Counter((x.rstrip(punctuation).lower() for y in d_txt for x in y.split()))\n    # create a sum total of the words \n      word_sum = p_txt + d_txt\n    # return the number of words \n      return word_sum\n    ```", "```\n    my-wc-function$\n    | Lambda_function.py\n    ```", "```\n    :pip install --target ./package requests\n    pip install --target ./package bs4\n    ```", "```\n    $ cd package\n    $ zip -r ../my-wc-package.zip .\n    ```", "```\n    $ cd ../\n    $ zip -g my-wc-package.zip Lambda_function.py\n    ```", "```\narn:aws:Lambda:us-east-2:470066103307:function:my-word-count_python:5\n```", "```\narn:aws:Lambda:us-east-2:470066103307:function:my-word-count_python\n```", "```\n{\n  \"Comment\": \"A Sample State Machine\",\n  \"StartAt\": \"StepOne\",\n  \"States\": {\n    \"StepOne\": {\n      \"Type\": \"Pass\",\n      \"Result\": \"Hello World!\",\n      \"End\": true\n    }\n  }\n}\n```", "```\n    $aws s3 cp my-wc-package.zip s3://devopspro-beyond/\n    ```", "```\n    $aws cloudformation create-stack --stack-name stepTest --template-body file://step_function.yml --parameters ParameterKey=LambdaFunctionBucket,ParameterValue=devopspro-beyond --capabilities CAPABILITY_IAM\n    ```"]