- en: 'Chapter 15: CloudWatch Metrics and Amazon EventBridge'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 15 章：CloudWatch 指标与 Amazon EventBridge
- en: Metrics are one of the central tenants of AWS CloudWatch. They record the performance
    of your services and can be used to trigger alarms and actions based on the data
    they provide. There is a multitude of out-of-the-box metrics available, but there
    is also the ability to create custom metrics. This can expand the capabilities
    of CloudWatch even further.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 指标是 AWS CloudWatch 的核心内容之一。它们记录服务的性能，并可根据提供的数据触发警报和操作。虽然有大量现成的指标可用，但也可以创建自定义指标。这进一步扩展了
    CloudWatch 的功能。
- en: Having the ability to harness the metrics captured when they reach certain thresholds
    is a capability of Amazon EventBridge. As a DevOps engineer, this is a powerful
    tool that can help you automate your systems so that they are self-healing, as
    well as constantly scaling up and down to meet your customers' generated capacity
    needs. These automated responses can be triggered by both native AWS services
    and third-party systems. This is especially useful in routine monitoring and creating
    routines when certain events occur.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 利用 Amazon EventBridge 捕获的指标，当它们达到某些阈值时，便是一项强大的能力。作为一名 DevOps 工程师，这是一个非常有力的工具，可以帮助你自动化系统，使其具备自愈能力，并能够根据客户生成的容量需求不断扩展和收缩。这些自动响应可以由本地
    AWS 服务或第三方系统触发。这在日常监控和创建某些事件发生时的例程中尤其有用。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要内容：
- en: A closer look at CloudWatch metrics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更详细地了解 CloudWatch 指标
- en: Basic metrics in CloudWatch for AWS services
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 服务的 CloudWatch 基本指标
- en: Using CloudWatch metrics to create dashboards
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 CloudWatch 指标创建仪表板
- en: Amazon EventBridge overview
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon EventBridge 概述
- en: A closer look at CloudWatch metrics
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更详细地了解 CloudWatch 指标
- en: In the previous chapter, we looked at the CloudWatch service and examined a
    few of the features that it offered. We even touched on the topic of metrics when
    creating our alarm.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了 CloudWatch 服务，并检查了它提供的一些功能。我们甚至在创建警报时讨论了指标的主题。
- en: Metrics, when it comes to applications and monitoring, is data. Many times,
    this is lots of data streaming constantly. This data is used not only from a technical
    perspective but also from a business perspective to see how the company is performing.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序和监控中，指标即数据。很多时候，这些是不断流动的大量数据。这些数据不仅从技术角度使用，也从业务角度使用，用来查看公司如何表现。
- en: Metrics are fundamental in CloudWatch. When recorded, a **metric** represents
    a time-ordered set of data points that are then published to the CloudWatch service.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 指标是 CloudWatch 的基础。当记录时，**指标**代表一组按时间排序的数据点，这些数据点随后会发布到 CloudWatch 服务中。
- en: Metrics endure in a single region. This means that if you have a multi-region
    environment, then the metrics for the different resources will be gathered and
    stored in the same region where the resources have been created and have been
    running at a point in time. Although you cannot delete metrics, they do expire
    automatically after 15 months.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 指标存在于单一区域。这意味着，如果你有一个多区域环境，那么不同资源的指标将被收集并存储在资源创建和运行的同一地区。尽管你不能删除指标，但它们会在 15
    个月后自动过期。
- en: 'A **namespace** is a container for CloudWatch metrics. The namespace where
    you will find the metrics will be the same as the AWS service names for many services:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**命名空间**是 CloudWatch 指标的容器。你将找到指标的命名空间与许多服务的 AWS 服务名称相同：'
- en: '![Figure 15.1 – Namespaces inside the CloudWatch console'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.1 – CloudWatch 控制台中的命名空间'
- en: '](img/Figure_15.1_B17405.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.1_B17405.jpg)'
- en: Figure 15.1 – Namespaces inside the CloudWatch console
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.1 – CloudWatch 控制台中的命名空间
- en: '`PutMetricData` command with the CloudWatch agent.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`PutMetricData` 命令与 CloudWatch 代理。'
- en: 'The metric data is aggregated over specific periods into **statistics**. These
    aggregations are correlated using the namespaces, metric name, dimensions, and
    data point of measure. You can measure the statistics in one of five ways: average,
    minimum, maximum, sum, or sample count. When choosing sample count, CloudWatch
    will count the number of data points.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 指标数据会在特定时间段内聚合成**统计数据**。这些聚合通过命名空间、指标名称、维度和度量数据点相关联。你可以通过五种方式来衡量统计数据：平均值、最小值、最大值、总和或样本数。当选择样本数时，CloudWatch
    会计算数据点的数量。
- en: One of the good things about CloudWatch is that the resource does not have to
    be running to access the metrics. You can even access metrics for resources that
    you have terminated, such as terminated EC2 instances, deleted Elastic Load Balancers,
    Fargate containers, and deleted EBS volumes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: CloudWatch的一个优点是，即使资源没有运行，您仍然可以访问指标。您甚至可以访问已终止的资源的指标，例如已终止的EC2实例、已删除的Elastic
    Load Balancers、Fargate容器和已删除的EBS卷。
- en: Viewing your metrics in CloudWatch
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在CloudWatch中查看您的指标
- en: 'You can view graphs of your metrics by logging into the AWS Management Console,
    going to the **CloudWatch** service, and choosing **Metrics** from the left-hand
    menu:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过登录AWS管理控制台，进入**CloudWatch**服务，并从左侧菜单中选择**Metrics**来查看您的指标图表：
- en: '![Figure 15.2 – An example of a graph from a CloudWatch metric'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.2 – CloudWatch指标图表示例'
- en: '](img/Figure_15.2_B17405.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.2_B17405.jpg)'
- en: Figure 15.2 – An example of a graph from a CloudWatch metric
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.2 – CloudWatch指标图表示例
- en: In the `InstanceID`, `functionName`, `Invocations`, `Namespace`, and others.
    One thing that doesn't work is searching by **Amazon Resource Name** (**ARN**).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在`InstanceID`、`functionName`、`Invocations`、`Namespace`等字段中，其中一个不起作用的是通过**Amazon资源名称**（**ARN**）进行搜索。
- en: Streaming metrics with CloudWatch metric streams
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用CloudWatch指标流进行流式处理指标
- en: As we stated earlier, **CloudWatch** keeps your metric data for 15 months and
    then deletes the data. If you would like to push that data for long-term storage
    in a data store such as an S3 bucket or a data lake via **Amazon Kinesis Data
    Firehose**, this is possible via a metric stream. You also have the option to
    push your metric data using metric streams to a third-party provider.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所说，**CloudWatch**会保存您的指标数据15个月，然后删除这些数据。如果您希望将这些数据推送到像S3存储桶或数据湖这样的长期存储中，或者通过**Amazon
    Kinesis Data Firehose**推送数据，可以通过指标流实现。您还可以选择将您的指标数据通过指标流推送到第三方提供商。
- en: Data from CloudWatch metrics can be pushed to metric streams in either JSON
    or OpenTelemetry format.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: CloudWatch指标中的数据可以以JSON或OpenTelemetry格式推送到指标流。
- en: Now that we have an understanding of what CloudWatch metric streams are, let's
    take a look at why we would use metric streams.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了CloudWatch指标流是什么，接下来让我们看看为什么我们会使用指标流。
- en: Why would you push your metrics to a third party via metric streams?
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么要通过指标流将您的指标推送到第三方？
- en: In the past, partners who specialized in services such as monitoring and dashboarding
    relied on API calls via the CloudWatch service to get the data from your account
    into their service. As your account grew, this could add additional expenses on
    your side. The `GetMetricData` API call is $0.01 per 1,000 requests. Metric streams
    reduce this cost substantially by only charging $0.003 per 1,000 requests.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，专注于监控和仪表盘等服务的合作伙伴依赖于通过CloudWatch服务的API调用，将数据从您的账户导入他们的服务。随着账户的增长，这可能会增加您的额外费用。`GetMetricData`
    API调用每1,000次请求收费0.01美元。指标流通过每1,000次请求仅收费0.003美元，大大降低了此成本。
- en: Now that we have learned how to store or share our metrics using metric streams,
    let's examine the different types of metrics available in CloudWatch metrics.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何使用指标流存储或共享我们的指标，接下来让我们看看CloudWatch指标中有哪些不同类型的指标。
- en: Basic metrics in CloudWatch for AWS services
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS服务中的CloudWatch基本指标
- en: CloudWatch automatically monitors a basic set of metrics at 5-minute intervals
    for free. Most AWS services send metrics automatically for free to CloudWatch
    metrics. These include foundational services such as EC2, S3, EBS, Kinesis, Lambda,
    and many others.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: CloudWatch会自动免费监控一组基础指标，每5分钟更新一次。大多数AWS服务会自动将指标免费发送到CloudWatch指标中。这些包括EC2、S3、EBS、Kinesis、Lambda等基础服务。
- en: Basic monitoring for the EC2 service
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EC2服务的基本监控
- en: When an instance is created, seven metrics are pushed out to CloudWatch at a
    frequency of every 5 minutes. You can change this frequency to 1-minute intervals
    for an additional charge. CloudWatch also makes a binary status check available
    as part of their Free Tier. Using this check is an essential measurement to see
    if your instance is up and running. It is not a good check to ensure that your
    application is performing correctly. The status check can be a canary in the coalmine
    for things such as AMI issues, accidentally (or purposefully) terminating an instance,
    or even Availability Zone or regional failures.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当实例创建时，七个指标会以每 5 分钟一次的频率推送到 CloudWatch。你可以将这个频率更改为 1 分钟一次，额外收费。CloudWatch 还提供二进制状态检查，作为其免费套餐的一部分。使用此检查是查看实例是否正在运行的重要手段，但它并不是检查应用程序是否正常运行的好方法。状态检查可以作为早期预警，帮助识别如
    AMI 问题、实例意外（或故意）终止，甚至可用区或区域故障等情况。
- en: 'Besides the status check, there are three standard categories that EC2 metrics
    fall into:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 除了状态检查外，EC2 指标还分为三类标准类别：
- en: CPU
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU
- en: Disk I/O
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘 I/O
- en: Network
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络
- en: CPU metrics contain metric data points for CPU usage. This can be one of the
    main metrics that you can use for AutoScaling events while gauging to see if your
    instances are starting to breach their compute capacity. For burstable instances,
    such as the `T` family of EC2 instances, you will also get metric data on `CPUCreditUsage`
    and `CPUCreditBalance`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: CPU 指标包含 CPU 使用情况的指标数据。这是你可以用来触发 AutoScaling 事件的主要指标之一，帮助你判断实例是否开始接近其计算能力的上限。对于突发性能实例，例如
    EC2 `T` 系列实例，你还会获得关于 `CPUCreditUsage` 和 `CPUCreditBalance` 的指标数据。
- en: Remember
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 记住
- en: With a burstable performance EC2 type instance, you earn a set rate of CPU credits
    every hour that can accrue until needed. When tasks that require more CPU than
    the baseline are processed by the instance, then that instance will spend its
    CPU credit balance.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于突发性能 EC2 类型实例，你每小时会获得一定数量的 CPU 积分，这些积分可以累计，直到需要时使用。当实例处理需要比基准更多 CPU 的任务时，实例将使用其
    CPU 积分余额。
- en: 'Almost every service from AWS integrates with CloudWatch metrics. As you build
    and deploy your applications, think of some of the most critical metrics that
    need to be monitored so that you can ensure the basic health of your application
    and your environment. These can include the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有来自 AWS 的服务都与 CloudWatch 指标集成。当你构建和部署应用程序时，请考虑一些需要监控的最关键指标，以确保应用程序和环境的基本健康。这些可以包括以下内容：
- en: '`CPUUtilization` for EC2 instances'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EC2 实例的`CPUUtilization`
- en: Number of *errors* for Lambda functions
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lambda 函数的*错误*数量
- en: '*Duration* for Lambda functions'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lambda 函数的*持续时间*
- en: '`DatabaseConnections` for RDS instances'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RDS 实例的`DatabaseConnections`
- en: '`DiskQueueDepth` for RDS instances'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RDS 实例的`DiskQueueDepth`
- en: '`NumberOfObjects` for S3 buckets'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: S3 桶的`NumberOfObjects`
- en: '`ActiveConnectionCount` for Elastic Load Balancers'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elastic Load Balancer 的`ActiveConnectionCount`
- en: '`HealthyHostCount` for Elastic Load Balancers'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elastic Load Balancer 的`HealthyHostCount`
- en: '`TargetResponseTime` for Elastic Load Balancers'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Elastic Load Balancer 的`TargetResponseTime`
- en: Now that we have looked at some of the primary metrics that CloudWatch provides
    for us with a few of the common services, let's look at how we can use custom
    metrics in cloudwatch.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经查看了 CloudWatch 为我们提供的一些主要指标以及常见服务，接下来让我们看看如何在 CloudWatch 中使用自定义指标。
- en: Using custom metrics in CloudWatch
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 CloudWatch 中使用自定义指标
- en: The AWS CloudWatch service not only allows you to watch and monitor the metrics
    coming from the resources themselves, such as CPU, memory, and network usage.
    It also allows you to create custom metrics that can be correlated to the number
    of errors in an application or tied directly to key performance indicators for
    business measurement.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudWatch 服务不仅允许你查看和监控来自资源本身的指标数据，如 CPU、内存和网络使用情况。它还允许你创建自定义指标，这些指标可以与应用程序中的错误数量相关联，或直接与业务测量的关键绩效指标挂钩。
- en: High-resolution metrics in CloudWatch
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CloudWatch 中的高分辨率指标
- en: When monitoring your custom metrics, sometimes, 1-minute intervals just don't
    provide enough granular detail. Using the put-metric-data API, either through
    the CLI or from one of the SDKs, you can publish custom metrics in up to 1-second
    intervals.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在监控你的自定义指标时，有时 1 分钟的间隔不足以提供足够的详细信息。通过 `put-metric-data` API，无论是通过 CLI 还是从 SDKs，你都可以以每秒
    1 次的间隔发布自定义指标。
- en: If you have an application that can have short-lived spikes whose behavior would
    not be captured by the default 1-minute intervals of CloudWatch metrics, then
    enabling high-resolution metrics allows you this visibility. Also, if you desire
    real-time monitoring, then once again, high-resolution metrics can fulfill this
    need.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的应用程序可能会出现短时的高峰，而这些高峰的行为无法通过 CloudWatch 指标的默认 1 分钟间隔来捕获，那么启用高分辨率指标可以为你提供这种可见性。如果你需要实时监控，那么高分辨率指标同样可以满足这一需求。
- en: After looking at the high-resolution metrics that are available to us, let's
    look at how we can create custom metrics that would be even more useful in our
    own scenarios.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看了我们可以使用的高分辨率指标后，让我们看看如何创建那些在我们自己场景中更加有用的自定义指标。
- en: Creating custom metrics in CloudWatch
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 CloudWatch 中创建自定义指标
- en: CloudWatch metrics allow you to create metrics and namespaces for the items
    that matter to you. These can be incorporated into your scripts by using the SDKs
    available from AWS for your specific language or by using the AWS CLI and the
    put-metric-data command.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: CloudWatch 指标允许你为对你重要的项创建指标和命名空间。你可以通过使用 AWS 为特定语言提供的 SDK，或使用 AWS CLI 和 `put-metric-data`
    命令，将其集成到你的脚本中。
- en: You can define metrics for things such as the `ERRORS` instances in a log file
    or track items such as the number of items in a cart at checkout for an e-commerce
    application.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以为日志文件中的 `ERRORS` 实例等内容定义指标，或者跟踪像电商应用程序结账时购物车中商品数量等项目。
- en: When you create and publish a custom metric, you can either define it as standard
    resolution, and it would be measured in 1-minute intervals, or you can define
    it as a high-resolution metric, and it can be measured in 1-second intervals.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建并发布自定义指标时，可以将其定义为标准分辨率，这样它将以 1 分钟为间隔进行度量，或者你也可以将其定义为高分辨率指标，这样它将以 1 秒为间隔进行度量。
- en: Now, let's use a Lambda function to create some custom metrics.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 Lambda 函数来创建一些自定义指标。
- en: Publishing a custom metric
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布自定义指标
- en: Custom metrics can be published from several services, including **AWS Lambda**,
    **Elastic Beanstalk**, **Amazon EC2**, or even container services such as ECS,
    EKS, or Fargate.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义指标可以通过多个服务发布，包括 **AWS Lambda**、**Elastic Beanstalk**、**Amazon EC2**，甚至是像
    ECS、EKS 或 Fargate 这样的容器服务。
- en: For our hands-on example, we will use a Lambda function to create our custom
    metrics and then send them to the AWS CloudWatch service. Our example scenario
    contains some example code where we are trying to track signups from a particular
    marketing campaign. This way, both the marketing department and the executive
    team can instantly know how effective the dollars being spent on this particular
    campaign have been, almost in real time. We are pushing these metrics to a CloudWatch
    metric named `custom_metric`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的动手示例，我们将使用 Lambda 函数来创建自定义指标，然后将其发送到 AWS CloudWatch 服务。我们的示例场景包含一些示例代码，其中我们尝试跟踪某个特定营销活动的注册情况。通过这种方式，营销部门和高层管理团队几乎可以实时地知道这个特定营销活动的投入资金有多有效。我们将这些指标推送到名为
    `custom_metric` 的 CloudWatch 指标中。
- en: 'The Lambda code that we will use for our example is located in this book''s
    GitHub repository, in the `Chapter-15` folder, under the filename `cw_events.py`.
    We have also included an abbreviated version of the function that doesn''t include
    the section for CloudWatch events:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在示例中使用的 Lambda 代码位于本书的 GitHub 仓库中，位于 `Chapter-15` 文件夹下，文件名为 `cw_events.py`。我们还包括了一个简化版的函数，它不包含
    CloudWatch 事件的部分：
- en: '[PRE0]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The steps for creating a custom metric and then sending them to the AWS CloudWatch
    service are as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建自定义指标并将其发送到 AWS CloudWatch 服务的步骤如下：
- en: Log into **Amazon Management Console** and navigate to the **Lambda** service.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 **Amazon Management Console** 并导航到 **Lambda** 服务。
- en: Once you're on the **Lambda** service, click on the orange **Create function**
    button.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦进入 **Lambda** 服务，点击橙色的 **Create function** 按钮。
- en: Once you're on the `Author from scratch`. Under the `custom_metric`
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你进入 `Author from scratch`，在 `custom_metric` 下
- en: '`Python 3.8`'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Python 3.8`'
- en: '**Permissions**: Create a new role with basic Lambda permissions:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**权限**：创建一个具有基本 Lambda 权限的新角色：'
- en: '![Figure 15.3 – Basic information for creating the Lambda function'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.3 – 创建 Lambda 函数的基本信息'
- en: '](img/Figure_15.3_B17405.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.3_B17405.jpg)'
- en: Figure 15.3 – Basic information for creating the Lambda function
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.3 – 创建 Lambda 函数的基本信息
- en: Once you have filled out all these options, press the orange **Create function**
    button.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写完所有这些选项后，按下橙色的 **Create function** 按钮。
- en: Once the function has been created, go into the `lambda_function.py` file in
    the `chapter-15` directory, replacing what is currently in the `lambda_function`
    tab. Once you have replaced the code, click on the **Deploy** button at the top
    of the code window. Doing so will ensure that the **Changes not deployed** message
    disappears and is replaced with a green **Changes deployed** message:![Figure
    15.4 – Lambda function showing the changes that have been deployed
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦函数创建完成，进入`chapter-15`目录中的`lambda_function.py`文件，替换`lambda_function`标签页中的内容。替换代码后，点击代码窗口顶部的**部署**按钮。这样可以确保**未部署更改**消息消失，并替换为绿色的**已部署更改**消息：![图
    15.4 – 显示已部署更改的 Lambda 函数
- en: '](img/Figure_15.4_B17405.jpg)'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_15.4_B17405.jpg)'
- en: Figure 15.4 – Lambda function showing the changes that have been deployed
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.4 – 显示已部署更改的 Lambda 函数
- en: With our function now created, we can start creating a test event so that we
    can both test the function and see the custom metric appear in the CloudWatch
    metrics. Click on the orange **Test** button to configure the test event. No special
    test data is needed, so just set the event name to **Test** and then click the
    orange **Create** button at the bottom of the dialog window.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经创建了函数，可以开始创建测试事件，这样我们既可以测试函数，又可以在 CloudWatch 指标中看到自定义指标。点击橙色的**测试**按钮来配置测试事件。无需特殊的测试数据，只需将事件名称设置为**测试**，然后点击对话框底部的橙色**创建**按钮。
- en: Before we test our function, we will need to give our function one more permission
    – the ability to `PutMetricData`. From the **Lambda** vertical menu, click on
    **Configuration**. Once you're in the **Configuration** settings, click on the
    **Permissions** menu item on the left-hand menu. This should bring up **Execution
    role** in the main window. Click on the **Edit** button to the right-hand side
    of the **Execution role** heading.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试函数之前，我们需要再给函数添加一个权限——`PutMetricData`的权限。在**Lambda**垂直菜单中，点击**配置**。进入**配置**设置后，点击左侧菜单中的**权限**菜单项。这将显示**执行角色**在主窗口中。点击**执行角色**标题右侧的**编辑**按钮。
- en: This will bring you to a **Basic Settings** page. At the bottom of the page,
    underneath the name of your existing role, there should be a link in blue that
    allows you to **View the custom_metric_role** on the **IAM console**. Upon clicking
    this link, a new tab will open for the IAM service.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带你到**基本设置**页面。页面底部，在现有角色的名称下方，应该有一个蓝色链接，允许你**查看 custom_metric_role**在**IAM
    控制台**中的信息。点击此链接后，将会为 IAM 服务打开一个新标签页。
- en: 'When you''re on your role in the `Service`: **Choose** | **CloudWatch**'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你在`服务`中的角色上时：**选择** | **CloudWatch**
- en: '**Actions**: **Filter** | **PutMetricData**:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**操作**：**筛选** | **PutMetricData**：'
- en: '![Figure 15.5 – Adding the inline policy from IAM to our Lambda role'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.5 – 从 IAM 向我们的 Lambda 角色添加内联策略'
- en: '](img/Figure_15.5_B17405.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.5_B17405.jpg)'
- en: Figure 15.5 – Adding the inline policy from IAM to our Lambda role
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.5 – 从 IAM 向我们的 Lambda 角色添加内联策略
- en: Once you have added the extra permission, click the blue **Review policy** button
    at the bottom of the page.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加额外权限后，点击页面底部的蓝色**审核策略**按钮。
- en: Name the policy `PutMetricData` and then click the blue **Create policy** button
    at the bottom of the page.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将策略命名为`PutMetricData`，然后点击页面底部的蓝色**创建策略**按钮。
- en: Now that we have modified our IAM role so that it has the `PutMetricData` permission,
    go back to the tab that contains the Lambda function. You should still be on the
    **Basic Settings** page. Click on the orange **Save** button at the bottom of
    the screen. This will take you back to the main Lambda screen's **Configuration**
    menu. Click on the **Code** tab at the top of the horizontal menu. Now, press
    the orange **Test** button to send the test event to our Lambda function.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经修改了 IAM 角色，使其具备了`PutMetricData`权限，返回到包含 Lambda 函数的标签页。你应该仍然在**基本设置**页面上。点击屏幕底部的橙色**保存**按钮，这将带你回到主
    Lambda 屏幕的**配置**菜单。点击水平菜单顶部的**代码**标签页。现在，按下橙色的**测试**按钮，将测试事件发送到我们的 Lambda 函数。
- en: Go to the `CloudWatch` in the top search bar and right-click on it to open it
    in a new tab.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在顶部搜索栏中，转到`CloudWatch`并右键点击它，以在新标签页中打开。
- en: From the left-hand menu of `custom_metric` in **Custom Namespaces**:![Figure
    15.6 – Our custom metric in Custom Namespaces
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**自定义命名空间**的左侧菜单中的`custom_metric`：![图 15.6 – 我们在自定义命名空间中的自定义指标
- en: '](img/Figure_15.6_B17405.jpg)'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_15.6_B17405.jpg)'
- en: Figure 15.6 – Our custom metric in Custom Namespaces
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.6 – 我们在自定义命名空间中的自定义指标
- en: Click on the **custom_metric** namespace. At this point, we will see our secondary
    namespace; that is, **EMAIL_CAMPAIGN**. Click on this value to be taken to the
    metric data. Check the box next to the **cableTV_spot2** value to see the data
    plotted on the graph. The number will vary since we used a random value in our
    function.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **custom_metric** 命名空间。此时，我们将看到我们的二级命名空间，即 **EMAIL_CAMPAIGN**。点击该值将跳转到指标数据页面。勾选
    **cableTV_spot2** 旁边的框，查看图表上绘制的数据。由于我们在函数中使用了随机值，因此该数字会有所变化。
- en: With that, we have created a Lambda function that creates and publishes a custom
    metric to CloudWatch metrics. Next, we will look at how to incorporate this custom
    metric, along with others, in CloudWatch dashboards to provide a quick view of
    our environment to ourselves, our team, as well as others.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们已经创建了一个 Lambda 函数，它将创建并发布一个自定义指标到 CloudWatch 指标中。接下来，我们将看看如何将这个自定义指标与其他指标一起，纳入到
    CloudWatch 仪表板中，为我们自己、我们的团队以及其他人提供快速查看环境状态的功能。
- en: Using CloudWatch metrics to create dashboards
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CloudWatch 指标创建仪表板
- en: Looking at individual metrics in CloudWatch can provide many insightful details.
    However, sometimes, it can be more useful to glance at a single pane of glass
    where the most relevant metrics are displayed all at once for a quick view. CloudWatch
    dashboards allow us to quickly and easily create these views – not only of the
    metrics created by the Amazon resources in our account but also custom metrics,
    along with text and hyperlinks to runbooks for documentation purposes in case
    of an emergency or other helpful documentation.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CloudWatch 中查看单个指标可以提供许多有价值的细节。然而，有时，通过快速浏览一个单一的视图，将最相关的指标一并展示出来，会更加有用。CloudWatch
    仪表板允许我们快速而轻松地创建这些视图——不仅展示我们账户中 Amazon 资源创建的指标，还包括自定义指标，以及文本和超链接，以便在紧急情况或其他有用的文档中参考运行手册。
- en: The CloudWatch service even comes with automatic dashboards for many of the
    most used AWS services, such as DynamoDB, EC2, Lambda, S3, EBS, and others. Each
    of these pre-configurated dashboards is interactive and can be viewed based on
    custom date ranges.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: CloudWatch 服务甚至为许多最常用的 AWS 服务（如 DynamoDB、EC2、Lambda、S3、EBS 等）提供了自动仪表板。这些预配置的仪表板都是互动式的，可以基于自定义的日期范围查看。
- en: You can even share the dashboards that you create with people that don't have
    direct access to your AWS account. This can be done in a few ways. The first is
    by projecting the dashboard on a large screen so that a team of users, or anyone
    who comes into the room where the screen or projection is displayed, can view
    the metrics and graphs that are displayed on the dashboard.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 你甚至可以将你创建的仪表板与那些没有直接访问你 AWS 账户的人员共享。这可以通过几种方式实现。第一种方式是将仪表板投射到大屏幕上，这样一个用户团队，或者任何进入显示仪表板屏幕或投影的房间的人，都能查看仪表板上展示的指标和图表。
- en: The second method is the built-in ability to share a dashboard with a specified
    email address using both a username and password.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法是内建的功能，允许使用用户名和密码与指定的电子邮件地址共享仪表板。
- en: This second way of sharing access to a dashboard can be beneficial when you're
    trying to provide real-time metrics to a stakeholder of a particular project.
    This user may not be incredibly technical but is looking for the correct business
    information to help make decisions. Adding some of the custom metrics that we
    discussed earlier in this chapter allows the business stakeholder to review the
    particular KPIs at their leisure, without requesting a special report to be generated
    for them.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 分享仪表板访问权限的第二种方式对于当你试图为某个项目的相关方提供实时指标时非常有用。这个用户可能不太懂技术，但他需要正确的业务信息来帮助做出决策。在本章之前讨论的自定义指标，可以让业务相关方在不请求生成特定报告的情况下，随时查看特定的关键绩效指标（KPI）。
- en: When you create a dashboard in CloudWatch Dashboards, it becomes available globally.
    This is because dashboards are not region-specific.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 CloudWatch 仪表板中创建一个仪表板时，它将全球可用。这是因为仪表板不是区域特定的。
- en: With that, we've looked at how dashboards can allow us, as DevOps engineers,
    our development team, and even stakeholders of a project, to quickly view what
    is going on with our environment or project. Now, let's go through the hands-on
    process of creating a dashboard.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们已经了解了仪表板如何让我们作为 DevOps 工程师、开发团队，甚至是项目的相关方，快速查看我们的环境或项目的状态。接下来，让我们通过实际操作来创建一个仪表板。
- en: Creating a base dashboard to monitor our resources
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个基础仪表板来监控我们的资源
- en: 'Let''s use some of the metrics that we created previously and incorporate them
    into a custom dashboard:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用之前创建的一些指标，并将它们集成到自定义仪表板中：
- en: 'Open **Amazon Management Console** and go to the **CloudWatch** service. You
    may need to log into your account if you have lost your session. Also, make sure
    that you are in the Ohio region (or whatever region you have been using to create
    your resources): [https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/).'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**Amazon管理控制台**并进入**CloudWatch**服务。如果你失去会话，可能需要重新登录。同时，确保你在俄亥俄地区（或你用来创建资源的其他地区）：[https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/)。
- en: Once you're in the CloudWatch service, find and click on the **Dashboards**
    menu item at the top of the left-hand menu.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入CloudWatch服务后，找到并点击左侧菜单顶部的**仪表板**菜单项。
- en: This should bring you to the **Custom Dashboards** screen. We will start the
    process of creating our dashboard by pressing the orange **Create dashboard**
    button:![Figure 15.7 – The Create dashboard button
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带你进入**自定义仪表板**屏幕。我们将通过点击橙色的**创建仪表板**按钮开始创建仪表板的过程：![图 15.7 – 创建仪表板按钮
- en: '](img/Figure_15.7_B17405.jpg)'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_15.7_B17405.jpg)'
- en: Figure 15.7 – The Create dashboard button
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.7 – 创建仪表板按钮
- en: Pressing the `Chapter15`. Then, press the orange **Create dashboard** button
    to close the dialog box and start building the dashboard.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下`Chapter15`。然后按橙色的**创建仪表板**按钮来关闭对话框并开始构建仪表板。
- en: A new dialog should appear, asking us to add a widget to our dashboard. We will
    begin with the `Explorer` widget:![Figure 15.8 – Adding a widget to a CloudWatch
    dashboard
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该会弹出一个新的对话框，要求我们向仪表板添加小部件。我们将从`Explorer`小部件开始：![图 15.8 – 向CloudWatch仪表板添加小部件
- en: '](img/Figure_15.8_B17405.jpg)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_15.8_B17405.jpg)'
- en: Figure 15.8 – Adding a widget to a CloudWatch dashboard
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.8 – 向CloudWatch仪表板添加小部件
- en: Start your dashboard off by clicking on the **Number** widget. Scroll down to
    **Custom namespaces** and click on the **custom_metric** namespace. Change **Period**
    from **5** minutes to **1** day so that your dashboard will keep the data. Click
    through the **EMAIL_CAMPAIGN** secondary namespace and check the **cableTV_spot2**
    box. Once this value has been checked, select the orange box labeled **Create
    widget** at the bottom of the dialog window:![Figure 15.9 – Adding the values
    for the Number widget
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**数字**小部件来开始你的仪表板。滚动到**自定义命名空间**并点击**custom_metric**命名空间。将**周期**从**5**分钟更改为**1**天，以便仪表板能保持数据。点击**EMAIL_CAMPAIGN**次级命名空间并勾选**cableTV_spot2**框。一旦选中该值，点击对话框底部的橙色框，标记为**创建小部件**：![图
    15.9 – 为数字小部件添加值
- en: '](img/Figure_15.9_B17405.jpg)'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_15.9_B17405.jpg)'
- en: Figure 15.9 – Adding the values for the Number widget
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.9 – 为数字小部件添加值
- en: Once our number widget has been added, click on the orange **Add widget** button
    to add another widget to our dashboard.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们的数字小部件被添加，点击橙色的**添加小部件**按钮，将另一个小部件添加到仪表板中。
- en: Choose the `custom_metric` search term so that we can find the metrics for the
    Lambda function that we created in the previous exercise. Scroll past **Custom
    namespaces** and go to **AWS Namespaces**. You can click on either the **Lambda**
    | **By Resource** or **Lambda** | **By Function** name as they should both have
    the same set of metrics available. Find the **Invocations** metric and select
    the checkbox to the left of the function name. Once you have selected the checkbox,
    click on the orange box and then click on the orange **Create widget** button.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`custom_metric`搜索词，以便我们可以找到上一个练习中创建的Lambda函数的指标。滚动通过**自定义命名空间**，找到**AWS命名空间**。你可以点击**Lambda**
    | **按资源**或**Lambda** | **按函数**，因为它们应该都包含相同的指标。找到**调用次数**指标并勾选函数名左侧的复选框。一旦勾选，点击橙色框，然后点击橙色的**创建小部件**按钮。
- en: Let's add one more widget to our dashboard by clicking the `custom_metric lambda`
    function. This should be named `/aws/lambda/custom_metric`. Use the checkbox to
    select this log group. Once you've selected the log group, click the orange **Add
    to dashboard above** button.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过点击`custom_metric lambda`函数来向仪表板添加另一个小部件。它应该被命名为`/aws/lambda/custom_metric`。使用复选框选择该日志组。一旦选择了日志组，点击橙色的**添加到仪表板**按钮。
- en: 'You will back on your dashboard, which should now contain three widgets. Click
    the blue **Save dashboard** button at the top of the dashboard. You now have a
    working dashboard that you can view and share:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将回到仪表板页面，现在应该包含三个小部件。点击仪表板顶部的蓝色**保存仪表板**按钮。现在你有了一个可以查看和分享的工作仪表板：
- en: '![Figure 15.10 – The Chapter15 dashboard we created'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.10 – 我们创建的Chapter15仪表板'
- en: '](img/Figure_15.10_B17405.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.10_B17405.jpg)'
- en: Figure 15.10 – The Chapter15 dashboard we created
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.10 – 我们创建的Chapter15仪表板
- en: Now that we have learned how to incorporate our metrics into a dashboard so
    that we can quickly and easily monitor our systems, along with any custom metrics
    that we need to view at a glance, let's look at how we can use CloudWatch to kick
    off event-driven architectures using the **Amazon EventBridge** service.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学习了如何将我们的度量指标整合到仪表板中，以便我们可以快速轻松地监控系统，并查看我们需要一眼看到的任何自定义度量指标，接下来我们来看一下如何使用CloudWatch通过**Amazon
    EventBridge**服务启动事件驱动架构。
- en: Amazon EventBridge overview
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon EventBridge概述
- en: '**Amazon EventBridge** is a serverless event-driven bus that makes it easy
    to ingest and process data from a variety of sources. These sources include AWS
    services, your applications, and third-party SaaS providers. It removes the discord
    of writing point-to-point integrations between services. EventBridge is a managed
    service from AWS. This means that you don''t need to worry about having to provision
    more or less of the service as your needs fall and rise. The EventBridge service
    takes care of this for you:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon EventBridge**是一个无服务器事件驱动总线，它使得从各种来源获取和处理数据变得容易。这些来源包括AWS服务、您的应用程序和第三方SaaS提供商。它消除了在服务之间编写点对点集成的复杂性。EventBridge是AWS的托管服务，这意味着您不需要担心随着需求的波动而需要更多或更少的服务，EventBridge服务会为您处理这些。'
- en: '![Figure 15.11 – AWS EventBridge flow from events to targets'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.11 – 从事件到目标的AWS EventBridge流程'
- en: '](img/Figure_15.11_B17405.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.11_B17405.jpg)'
- en: Figure 15.11 – AWS EventBridge flow from events to targets
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.11 – 从事件到目标的AWS EventBridge流程
- en: An **Event Source** can be almost any of the AWS services, custom applications,
    or SaaS applications.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**事件源**几乎可以是任何AWS服务、自定义应用程序或SaaS应用程序。'
- en: For SaaS applications, there is special support for partner applications called
    an **Event Source**. This Event Source provides a logical connection between the
    third-party SaaS provider and your AWS account, without the need to provision
    any cross-account IAM roles or credentials.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于SaaS应用程序，有一个特别支持的合作伙伴应用程序，称为**事件源**。此事件源为第三方SaaS提供商和您的AWS账户之间提供逻辑连接，无需预配任何跨账户IAM角色或凭证。
- en: '**Event Buses** are the core of the **Event Bridge Service**. There is a default
    event bus to handle AWS service events. Event Buses can be custom-created for
    your application.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**事件总线**是**EventBridge服务**的核心。默认事件总线用于处理AWS服务事件。事件总线可以为您的应用程序自定义创建。'
- en: 'Once you have set up an event bus, you can create **rules**. With the use of
    rules, you can match values in the metadata or payload of the event that has been
    inspected by the event bus. The rule then determines which events should get routed
    to which destination:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置了事件总线，你就可以创建**规则**。通过使用规则，你可以匹配事件总线检查过的事件元数据或有效负载中的值。规则随后决定哪些事件应该被路由到哪个目标：
- en: '![Figure 15.12 – An example event and the rule it triggers'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.12 – 一个示例事件及其触发的规则'
- en: '](img/Figure_15.12_B17405.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.12_B17405.jpg)'
- en: Figure 15.12 – An example event and the rule it triggers
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.12 – 一个示例事件及其触发的规则
- en: Once a rule has been triggered, you can associate one or more **Targets** with
    that rule. Targets are various AWS services such as Lambda functions, Step Functions,
    Kinesis Streams, and ECS or Fargate clusters.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦触发了规则，你可以将一个或多个**目标**与该规则关联。目标是各种AWS服务，如Lambda函数、Step Functions、Kinesis Streams以及ECS或Fargate集群。
- en: Note
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The CloudWatch Events service is now known as Amazon EventBridge. If you had
    used CloudWatch events in the past, then that capability is still available through
    the default event bus in EventBridge.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: CloudWatch Events服务现在被称为Amazon EventBridge。如果您之前使用过CloudWatch事件，那么该功能仍然可以通过EventBridge中的默认事件总线使用。
- en: Now that we have looked at the Amazon EventBridge service, let's take a look
    at some of the service limits that are automatically imposed on EventBridge.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了Amazon EventBridge服务，接下来让我们看一下EventBridge服务上自动施加的一些限制。
- en: EventBridge service limits
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: EventBridge服务限制
- en: 'As you start to build event-driven services with EventBridge, it is a good
    idea to keep the service limits that are initially imposed on the EventBridge
    service in mind. This can help you in cases where you are sending too many events
    to your event bus at the same time. It can also help you as you are building out
    your applications since you know how many event buses and rules are allowed by
    default in a single region:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始使用 EventBridge 构建事件驱动服务时，最好记住最初对 EventBridge 服务施加的服务限制。这可以帮助你在同时向事件总线发送过多事件的情况下，也能帮助你在构建应用程序时，因为你知道在一个地区默认允许多少个事件总线和规则：
- en: '![Table 15.1 – AWS EventBridge service limits'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '![表格 15.1 – AWS EventBridge 服务限制'
- en: '](img/B17405_Table_15.1.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17405_Table_15.1.jpg)'
- en: Table 15.1 – AWS EventBridge service limits
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 15.1 – AWS EventBridge 服务限制
- en: Note
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: All of these limits are soft limits. This means that they can be raised by opening
    a service request ticket with AWS.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些限制都是软限制。这意味着它们可以通过向 AWS 提交服务请求来提高。
- en: Now that we understand what service limits we are working with, let's look at
    how to build event-driven architectures using AWS EventBridge.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了工作时的服务限制，让我们来看看如何使用 AWS EventBridge 构建事件驱动架构。
- en: Event-driven architectures with EventBridge
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 EventBridge 构建事件驱动架构
- en: Modern cloud applications are based on decoupled services.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现代云应用程序基于解耦服务。
- en: 'There are three critical components to event-driven architectures: event producers,
    event consumers, and event routers. The producer is the service or trigger that
    produces the event and then sends it to the router. The router or event bus then
    filters the specific events and sends specific events to event consumers.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 事件驱动架构有三个关键组件：事件生产者、事件消费者和事件路由器。生产者是产生事件并将其发送到路由器的服务或触发器。路由器或事件总线会过滤特定的事件，并将特定的事件发送到事件消费者。
- en: Multiple benefits of event-driven architectures
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事件驱动架构的多重好处
- en: 'When you''re using architectures that are decoupled, meaning that each component
    performs a specific task, you are gaining multiple benefits:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用解耦架构时，意味着每个组件执行特定的任务，你将获得多个好处：
- en: '![Figure 15.13 – A single service using EventBridge and custom rules to push
    to multiple targets'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 15.13 – 一个服务使用 EventBridge 和自定义规则推送到多个目标'
- en: '](img/Figure_15.13_B17405.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_15.13_B17405.jpg)'
- en: Figure 15.13 – A single service using EventBridge and custom rules to push to
    multiple targets
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15.13 – 一个服务使用 EventBridge 和自定义规则推送到多个目标
- en: Using EventBridge to capture AWS service events
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 EventBridge 捕获 AWS 服务事件
- en: 'We can use the EventBridge service to automatically trigger events through
    the use of rules and the default event bus. Let''s start by capturing any time
    an EC2 instance has an instance state change and send that to a log file so that
    we can view the event:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 EventBridge 服务通过规则和默认事件总线自动触发事件。让我们从捕获每当 EC2 实例状态变化时并将其发送到日志文件开始，这样我们就可以查看该事件：
- en: Log into **AWS Management Console** and navigate to the **CloudWatch** service.
    From the left-hand menu, find and expand the menu for **Events**. In the **Events**
    sub-menu, click on the **Rules** link.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到**AWS 管理控制台**，并导航到**CloudWatch**服务。从左侧菜单中找到并展开**事件**菜单。在**事件**子菜单中，点击**规则**链接。
- en: Once the **Rules** screen appears in the main window, click on the blue **Create
    rule** button:![Figure 15.14 – The EventBridge Rules page with the Create rule
    button](img/Figure_15.14_B17405.jpg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦**规则**屏幕出现在主窗口中，点击蓝色的**创建规则**按钮：![图 15.14 – EventBridge 规则页面，带有创建规则按钮](img/Figure_15.14_B17405.jpg)
- en: Figure 15.14 – The EventBridge Rules page with the Create rule button
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.14 – EventBridge 规则页面，带有创建规则按钮
- en: 'We should now be on a screen called **Step 1: Create rule**. Under the **Event
    Source** heading, make sure that the radio button next to **Event Pattern** is
    selected so that we can start building out our pattern.'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们应该处于名为**步骤 1：创建规则**的界面。在**事件源**标题下，确保选择了**事件模式**旁边的单选按钮，这样我们就可以开始构建我们的模式了。
- en: For our event pattern, use the `EC2 service`. Then, from the **Event Type**
    selection dropdown, select **EC2 Instance State-change Notifications**.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于我们的事件模式，使用`EC2 服务`。然后，在**事件类型**选择下拉菜单中，选择**EC2 实例状态变化通知**。
- en: We don't want every event from EC2; we only want to know when instances are
    being spun up or terminated. Choose **Specific state(s)** and then select the
    **terminated** and **pending** states for the states of the rule. You will have
    to use the dropdown menu twice to populate both selections. Leave the radio checkbox
    next to **Any instance** in the box:![Figure 15.15 – The EventBridge rule's Event
    Pattern populated
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不想要来自 EC2 的所有事件；我们只想知道何时实例启动或终止。选择 **特定状态**，然后选择 **已终止** 和 **待处理** 状态作为规则的状态。你需要使用下拉菜单两次来填充这两个选择项。保留
    **任何实例** 旁边的单选框：![图 15.15 – EventBridge 规则的事件模式已填充
- en: '](img/Figure_15.15_B17405.jpg)'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_15.15_B17405.jpg)'
- en: Figure 15.15 – The EventBridge rule's Event Pattern populated
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.15 – EventBridge 规则的事件模式已填充
- en: Next, we can move on to the right-hand side of *Step 1*, where you can find
    the **Targets** heading. Click the **Add target*** button.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们可以继续处理 *步骤 1* 的右侧，在那里你可以找到 **Targets**（目标）标题。点击 **添加目标** 按钮。
- en: Under this first target, find `EC2_STATE`:![Figure 15.16 – Creating the custom
    log group as our EventBridge target
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一个目标下，找到 `EC2_STATE`：![图 15.16 – 创建自定义日志组作为我们的 EventBridge 目标
- en: '](img/Figure_15.16_B17405.jpg)'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_15.16_B17405.jpg)'
- en: Figure 15.16 – Creating the custom log group as our EventBridge target
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 15.16 – 创建自定义日志组作为我们的 EventBridge 目标
- en: Scroll down to the bottom of the page and click the blue button labeled **Configure
    details**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动到页面底部，点击蓝色按钮 **配置详细信息**。
- en: For the name of the rule, use `chapt15-ec2`. You can insert a description if
    you like. Once you have filled in the name and the description, click the blue
    **Create rule** button.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于规则的名称，使用 `chapt15-ec2`。你可以插入描述。如果你填好了名称和描述，点击蓝色的 **创建规则** 按钮。
- en: Our rule should appear on the `ec2` instances and trigger the rule. Don't close
    your browser window – we're going to want to go back and check on the CloudWatch
    log group afterward.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的规则应该出现在 `ec2` 实例上并触发规则。不要关闭浏览器窗口——我们稍后还要返回查看 CloudWatch 日志组。
- en: 'With your terminal window open, use the `create-instance` command to spin up
    an instance quickly (hopefully, these commands look a bit familiar to you if you
    completed the exercises in [*Chapter 14*](B17405_14_Final_JM_ePub.xhtml#_idTextAnchor366),
    *CloudWatch and X-Ray''s Role in DevOps*):'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端窗口，使用 `create-instance` 命令快速启动一个实例（如果你完成了 [*第 14 章*](B17405_14_Final_JM_ePub.xhtml#_idTextAnchor366)
    的练习，*CloudWatch 和 X-Ray 在 DevOps 中的角色*，这些命令应该对你来说有些熟悉）：
- en: '[PRE1]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After about 2 to 5 minutes, we are going to terminate our instance to create
    another event for our rule:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 大约 2 到 5 分钟后，我们将终止实例以创建另一个事件供规则使用：
- en: '[PRE2]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, we should wait about another minute or two so that our instance can terminate
    completely. As it starts to terminate, go back to the browser that had **Amazon
    Management Console** open.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们应该再等一两分钟，让实例完全终止。当它开始终止时，回到之前打开 **Amazon 管理控制台** 的浏览器。
- en: In **Amazon Management Console**, we should already be on the **CloudWatch**
    service, so we simply need to find the **Log groups** sub-menu under the **Logs**
    heading and click on it.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Amazon 管理控制台** 中，我们应该已经进入 **CloudWatch** 服务，因此我们只需要在 **日志** 下的 **日志组** 子菜单中找到它并点击。
- en: Now, you should be able to find the custom log group we quickly created, called
    `EC2_STATE`. If you have too many log groups in your region, simply search for
    the term `EC2_STATE`, and it should appear. Click on the log group's name so that
    we can see what EventBridge has generated for us.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该能够找到我们快速创建的自定义日志组，名为 `EC2_STATE`。如果你所在区域有太多日志组，可以简单地搜索 `EC2_STATE`，它应该会出现。点击日志组的名称，我们可以查看
    EventBridge 为我们生成的内容。
- en: You should now have two log entries in your log group. One will correspond to
    the **pending** event, while the other will correspond to the **termination**
    event.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你应该在日志组中看到两条日志条目。一条对应于**待处理**事件，另一条对应于**终止**事件。
- en: With that, we've learned how to use events that occur in our AWS account and
    the AWS EventBridge service to build out an event-driven architecture. Although
    we only used a simple example in our hands-on exercise, this could be expanded
    to perform actions such as sending out SNS notifications in concert with recording
    a log entry, or even creating a new resource if this was a critical piece of infrastructure.
    Now, let's recap everything that we have learned in this chapter.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这一节，我们已经学习了如何利用在 AWS 账户中发生的事件以及 AWS EventBridge 服务来构建事件驱动架构。尽管我们在实践练习中只使用了一个简单的示例，但这可以扩展到执行诸如发送
    SNS 通知并同时记录日志条目，甚至在这是一个关键基础设施的情况下创建新资源等操作。现在，让我们回顾一下本章中学到的所有内容。
- en: Summary
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we took a deeper look at the **AWS CloudWatch** service. We
    focused on the metrics and what makes up a metric. We looked at the different
    types of metrics available from AWS, starting with basic metrics on the Free Tier,
    then moving on to detailed metrics, and finally learned how to create custom metrics.
    We also learned how to use these metrics to create custom dashboards in CloudWatch
    and discovered how the dashboards could be shared with not only team members who
    had IAM access, but also how they can be shared with others outside of our AWS
    account.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入探讨了 **AWS CloudWatch** 服务。我们关注了指标以及构成一个指标的内容。我们了解了 AWS 提供的不同类型的指标，从
    Free Tier 的基本指标开始，然后是详细指标，最后学习了如何创建自定义指标。我们还学会了如何使用这些指标在 CloudWatch 中创建自定义仪表板，并发现这些仪表板不仅可以与拥有
    IAM 访问权限的团队成员共享，还可以与我们 AWS 账户外的其他人共享。
- en: We also looked at **EventBridge**, the service that has taken over CloudWatch
    Events. We learned how using event buses for AWS services, custom application
    events, and even SaaS providers can help drive event-driven architectures.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了 **EventBridge**，这是取代了 CloudWatch Events 的服务。我们学习了如何使用事件总线来处理 AWS 服务、定制应用事件，甚至是
    SaaS 提供商，从而推动事件驱动架构的发展。
- en: In the next chapter, we are going to look at the various types of logs that
    can be generated from the different Amazon services. This includes VPC Flow Logs,
    Elastic Load Balancer logs, CloudTrail logs, and how these logs can help us troubleshoot
    issues with our application or security incidents.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将研究来自不同 Amazon 服务的各种类型的日志。这包括 VPC 流日志、Elastic Load Balancer 日志、CloudTrail
    日志，以及这些日志如何帮助我们排查应用程序或安全事件中的问题。
- en: Questions
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: You have been hired by a company to help develop an e-commerce application on
    AWS. The stakeholders of the company want to know how many orders have been placed
    via this application with second-level granularity. To get this information, you
    will need to create a custom CloudWatch metric using the AWS CLI. You know that
    by default, custom metrics have a 1-minute granularity. How can you get the application
    to send the custom metric in sub-minute intervals?
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你被一家企业聘用，帮助在 AWS 上开发一个电子商务应用程序。公司利益相关者希望了解通过该应用程序下单的订单数，并且希望以秒级粒度获取这一信息。为了获取这个信息，你需要使用
    AWS CLI 创建一个自定义的 CloudWatch 指标。你知道默认情况下，自定义指标的粒度是 1 分钟。你如何让应用程序以子分钟间隔发送自定义指标？
- en: a. Use the AWS CLI `put-metric-data` command to publish the data and set the
    `StorageResolution` option to `1` second to specify the metric as a high-resolution
    metric.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 使用 AWS CLI `put-metric-data` 命令发布数据，并将 `StorageResolution` 选项设置为 `1` 秒，以将指标指定为高分辨率指标。
- en: 'b. Update the CloudWatch agent config file and then add `line high-resolution:
    true`.'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'b. 更新 CloudWatch 代理配置文件，然后添加 `line high-resolution: true`。'
- en: c. Go to the graph in the CloudWatch service on the Amazon Management Console
    and set the resolution to 1-second intervals.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 转到 Amazon 管理控制台中的 CloudWatch 服务的图表，并将分辨率设置为 1 秒的间隔。
- en: d. Add the `flag –dimensions=1` to the AWS CLI `put-metric-data` command to
    specify a high-resolution metric.
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 向 AWS CLI `put-metric-data` 命令添加 `flag –dimensions=1`，以指定一个高分辨率指标。
- en: You are currently working for a mid-sized e-commerce company that has built
    a serverless shopping cart system using AWS Lambda and DynamoDB. An executive
    for the company has asked you to create and share a dashboard with some of the
    board of directors, showing the number of purchases per cart and the number of
    abandoned purchases per cart. The board members do not currently have IAM accounts.
    How can you give the board members real-time access to the data as simply and
    cost-effectively possible?
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你目前在一家中型电子商务公司工作，该公司使用 AWS Lambda 和 DynamoDB 构建了一个无服务器购物车系统。公司的一位高管要求你创建并分享一个仪表板，展示每个购物车的购买数量和每个购物车的弃购数量。董事会成员目前没有
    IAM 账户。你如何以尽可能简单且成本效益高的方式向董事会成员提供实时数据访问权限？
- en: a. Use social logins with Amazon Cognito. Have Cognito assume a role that has
    access to the specific dashboard so that the board members have access.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 使用 Amazon Cognito 的社交登录。让 Cognito 承担一个具有访问特定仪表板权限的角色，以便董事会成员可以访问。
- en: b. Create IAM users for each of the board members. Create an IAM group that
    has access to CloudWatch dashboards but has a condition to show only the ARN of
    the specific dashboard that they need to see.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 为每个董事会成员创建 IAM 用户。创建一个 IAM 组，该组有权限访问 CloudWatch 仪表板，但设有条件，只显示他们需要查看的特定仪表板的
    ARN。
- en: c. Gather the emails of the board members. Share access to the CloudWatch dashboard
    via a username and password using the email access feature.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 收集董事会成员的电子邮件。通过电子邮件访问功能，使用用户名和密码共享对 CloudWatch 仪表板的访问权限。
- en: d. Gather the emails of the board members. Incorporate SAML for the CloudWatch
    dashboards. Allow the board members to use single sign-on to access the specific
    dashboard.
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 收集董事会成员的电子邮件。为 CloudWatch 仪表板集成 SAML。允许董事会成员使用单点登录访问特定的仪表板。
- en: Review answers
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查答案
- en: a
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: a
- en: c
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
