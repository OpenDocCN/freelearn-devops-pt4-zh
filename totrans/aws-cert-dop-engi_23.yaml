- en: 'Chapter 19: Protecting Data in Flight and at Rest'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第19章：保护飞行中的数据和静态数据
- en: As you and your developers start to connect to your systems, security is not
    always front of mind. This is especially the case if you think that encryption
    keys and certificate handshakes could cause latency. Incorporating encryption
    both for data in transit and at rest is a must, especially in today's environments.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当你和你的开发人员开始连接到你的系统时，安全性并非总是放在首位。尤其是当你认为加密密钥和证书握手可能会引起延迟时。无论如何，在今天的环境中，无论是传输中的数据还是静态数据，采用加密措施都是必须的。
- en: There are multiple ways to incorporate encryption into your environment. It
    can start with how to secure the transmissions you are sending back and forth
    between you and AWS. It then progresses to securing data that you are storing
    on the Amazon cloud and then moves on to data that you are serving for your customers
    to access.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以将加密技术融入你的环境。这可以从如何确保你与 AWS 之间传输的数据安全开始，然后是确保存储在亚马逊云上的数据安全，再到确保你为客户提供访问的数据的安全。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Understanding KMS keys
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 KMS 密钥
- en: Adding encryption to storage
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向存储添加加密
- en: Adding encryption to data stores
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向数据存储添加加密
- en: Protecting data in transit with AWS Certificate Manager
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AWS 证书管理器保护传输中的数据
- en: Adding a certificate to Amazon CloudFront
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向 Amazon CloudFront 添加证书
- en: Data encryption introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据加密简介
- en: 'There are many reasons why there is a bigger push to encrypt data these days.
    The requirement could stem from a regulation that your company needs to follow
    for the industry they are in. It may be that there is internal compliance governance
    that states that data needs to be encrypted. And it just may come down to taking
    a proactive stance on security by adding an additional layer of protection to
    your environment. No matter what the driving reason is, the goal, in the end,
    is to have a more secure platform for your customers to use and better data protection:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，推动加密数据的原因有很多。这个需求可能源于你的公司所在行业需要遵守的法规。也可能是公司内部的合规性治理规定要求数据必须加密。最终，也有可能是通过增加额外的保护层来采取主动的安全立场。无论推动加密的原因是什么，最终的目标都是为客户提供更安全的平台，并更好地保护数据：
- en: '![Figure 19.1 – The AWS cryptography stack'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 19.1 – AWS 加密栈'
- en: '](img/Figure_19.1_B17405.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_19.1_B17405.jpg)'
- en: Figure 19.1 – The AWS cryptography stack
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.1 – AWS 加密栈
- en: In the end, what you and your organization's end goal should be with the use
    of encryption can be simplified by minimizing the unauthorized physical and logical
    access to data.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，你和你组织的加密目标应该是通过最小化对数据的未经授权的物理和逻辑访问来简化。
- en: 'There are three categories to be aware of when looking at data and encryption:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看数据和加密时，有三个类别需要注意：
- en: Data in transit
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传输中的数据
- en: Data at rest
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态数据
- en: Data in use
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用中的数据
- en: If you go by the recommendation from Amazon, then you should encrypt as much
    as possible in your environment. This includes encrypting data at rest when it's
    stored and encrypting data in transit, as it's being shipped back and forth between
    client and server.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果按照亚马逊的建议进行操作，那么你应该在环境中尽可能多地进行加密。这包括在存储时对静态数据进行加密，并且在客户端和服务器之间传输数据时对传输中的数据进行加密。
- en: Options for encrypting data at rest in AWS
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 AWS 中加密静态数据的选项
- en: Throughout this chapter, we will be concentrating on two services from AWS,
    Key Management Service and Certificate Manager. There are other services in the
    Amazon ecosystem that play a part in the data encryption process, and we wanted
    to give them a brief mention just in case they happened to appear on the test.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点讨论来自 AWS 的两个服务：密钥管理服务和证书管理器。亚马逊生态系统中还有其他一些在数据加密过程中起作用的服务，我们希望简要提及它们，以防它们出现在测试中。
- en: The first is part of Amazon Virtual Private Cloud, and the second is **AWS Virtual
    Private Network** (**AWS VPN**). Using an AWS site-to-site VPN connection to connect
    your data center to your VPC allows your transmissions of data to happen securely
    over the IPSec protocol. This is a group of protocols for encrypting internet
    transmissions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个是亚马逊虚拟私有云的一部分，第二个是**AWS 虚拟私有网络**（**AWS VPN**）。通过使用 AWS 的站点到站点 VPN 连接将你的数据中心与
    VPC 连接，可以通过 IPSec 协议安全地传输数据。IPSec 协议组用于加密互联网传输。
- en: You get started by setting up a customer gateway, which usually consists of
    a router, and then create the VPN gateway on your VPC. VPNs have a throughput
    limit of 1.25 gigabits per second.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过设置一个客户网关开始，这通常包括一个路由器，然后在VPC上创建VPN网关。VPN的吞吐量限制为1.25千兆比特每秒。
- en: Now that we understand the options for encrypting data at rest in our AWS accounts,
    let's concentrate on using AWS **Key Management Service** (**KMS**) to protect
    our data at rest.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了如何在AWS账户中加密静态数据的选项，让我们专注于使用AWS **密钥管理服务**（**KMS**）来保护我们静态数据。
- en: Understanding KMS keys
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解KMS密钥
- en: KMS is a managed service from Amazon that makes it easy to produce and manage
    **Customer-Managed Keys** (**CMKs**). CMKs are the encryption keys used to secure
    and control access data stored on AWS. KMS integrates seamlessly with many other
    services, especially the IAM service, so that you can control who is allowed access
    to the keys.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: KMS是Amazon提供的托管服务，使得生成和管理**客户管理密钥**（**CMK**）变得简单。CMK是用于加密和控制存储在AWS上的数据访问的密钥。KMS与许多其他服务（尤其是IAM服务）无缝集成，允许您控制谁有权访问这些密钥。
- en: 'AWS creates the key material for the KMS key. You, as the customer, cannot
    extract, export, view, or manage this key material. You can delete the key but
    cannot delete the key material itself:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: AWS为KMS密钥创建密钥材料。作为客户，您不能提取、导出、查看或管理此密钥材料。您可以删除密钥，但不能删除密钥材料本身：
- en: '![Figure 19.2 – Master and data keys in AWS KMS'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 19.2 – AWS KMS中的主密钥和数据密钥'
- en: '](img/Figure_19.2_B17405.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_19.2_B17405.jpg)'
- en: Figure 19.2 – Master and data keys in AWS KMS
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.2 – AWS KMS中的主密钥和数据密钥
- en: One of the key concepts to understand in KMS is **envelope encryption**. When
    AWS encrypts your data, your data is secured, but your key needs to be protected
    as well. AWS does this by encrypting your data with a data key and then encrypting
    the data key with another key. That top-level plaintext key is known as the master
    key.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在KMS中需要理解的一个关键概念是**信封加密**。当AWS加密您的数据时，您的数据是安全的，但您的密钥也需要保护。AWS通过使用数据密钥加密数据，然后再用另一个密钥加密数据密钥来实现这一点。最顶层的明文密钥称为主密钥。
- en: 'Using the envelope encryption process provides a number of benefits:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用信封加密过程带来许多好处：
- en: '**It protects the data keys** – This way, you can store the encrypted data
    key beside the encrypted data.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**它保护数据密钥** – 这样，您可以将加密的数据密钥与加密的数据一起存储。'
- en: '**You can encrypt the same data using multiple keys** – KMS allows you to only
    re-encrypt the data keys that protect the raw data instead of all raw data that
    the key encrypts.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**您可以使用多个密钥加密相同的数据** – KMS允许您仅重新加密保护原始数据的数据密钥，而不是重新加密所有原始数据。'
- en: '**You can combine the strengths of multiple algorithms** – Symmetric key algorithms
    are smaller than public-key algorithms generally. However, public-key algorithms
    allow for inherited separation of roles. Using envelope encryption allows you
    to use both strategies at the same time.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**您可以结合多种算法的优点** – 对称密钥算法通常比公钥算法要小。但是，公钥算法允许继承的角色分离。使用信封加密可以让您同时使用这两种策略。'
- en: Using AWS-managed CMKs keys to encrypt storage
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用AWS托管的CMK密钥进行存储加密
- en: Each AWS service that offers encryption has its own AWS-managed KMS key.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 每个提供加密的AWS服务都有自己的AWS托管KMS密钥。
- en: One of the key differences between AWS-managed CMKs and user-created CMKs is
    the rotation schedule. With AWS-managed keys, key rotation is required, and it
    happens every 1,095 days or every 3 years.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: AWS托管的CMK和用户创建的CMK之间的一个关键区别是轮换计划。使用AWS托管密钥时，需要进行密钥轮换，并且每1,095天或每3年进行一次。
- en: The similarity between the two different types of keys is the fact that both
    AWS-managed keys and CMKs are used only for your AWS account.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种不同类型的密钥的相似之处在于，AWS托管密钥和CMK仅用于您的AWS账户。
- en: Using KMS with S3 to protect objects stored at rest
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用KMS与S3保护静态存储的对象
- en: 'KMS integrates seamlessly with S3 object storage. S3 has its own service-managed
    key that allows you to encrypt objects in your buckets with almost little to no
    effort on your part. There are also the following security controls available
    to help incorporate KMS with S3:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: KMS与S3对象存储无缝集成。S3拥有自己的服务托管密钥，允许您几乎不费任何力气地加密存储桶中的对象。还有以下安全控制可帮助将KMS与S3结合使用：
- en: Amazon S3 has the ability to encrypt all new objects placed into a bucket automatically.
    This is done through a bucket setting in the **Properties** section labeled **default
    encryption**. Once you have turned this setting on, then any new object that is
    uploaded into the bucket is automatically encrypted with either the Amazon-managed
    S3 key (by default) or the specified customer-managed S3 key.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon S3 具有自动加密所有新上传到存储桶中的对象的能力。这是通过 **属性** 部分中的一个存储桶设置来完成的，标记为 **默认加密**。一旦启用此设置，任何新上传到存储桶中的对象都会自动使用
    Amazon 管理的 S3 密钥（默认情况下）或指定的客户管理的 S3 密钥进行加密。
- en: If you need to retroactively encrypt items in an S3 bucket, you can do so using
    the S3 batch process. Amazon S3 has its own ability to perform batch processing
    on objects within the buckets. If your internal guidance has changed, or an audit
    has found that a user (either internal or external) has been adding items to a
    bucket without encryption, then you can use S3 Batch Operations to remediate the
    situation.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你需要追溯性地加密 S3 存储桶中的项目，可以使用 S3 批处理功能。Amazon S3 具有在存储桶中的对象上执行批处理操作的能力。如果你的内部指导方针发生变化，或者审计发现某个用户（无论是内部用户还是外部用户）已经向存储桶中添加了未加密的项目，你可以使用
    S3 批量操作来纠正这种情况。
- en: If you want to check which items are or are not encrypted in an S3 bucket, then
    you can run an S3 inventory report.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想检查某个 S3 存储桶中的项目是否已加密，可以运行 S3 清单报告。
- en: Now that we have seen how KMS works smoothly with Amazon S3, especially in the
    case of Amazon-managed keys, we will now look at how to create and manage our
    own key, and the important differences between a customer-managed key and an Amazon-managed
    key.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了 KMS 如何与 Amazon S3 顺畅配合，特别是在使用 Amazon 管理密钥的情况下，我们将查看如何创建和管理自己的密钥，以及客户管理密钥和
    Amazon 管理密钥之间的重要区别。
- en: Creating and managing a customer-managed key in KMS
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 KMS 中创建和管理客户管理密钥
- en: There may be cases where certain users or teams may need to have access to data
    and others should not have the right to access it. This is one of the ideal use
    cases for integrating a CMK along with an IAM policy for who can access the key.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会有一些情况，某些用户或团队需要访问数据，而其他人则不应有权限访问。这是集成 CMK 与 IAM 策略来控制谁可以访问密钥的理想用例之一。
- en: As we will see in this exercise, there is a separation of duties between key
    administrators and key users. Key administrators are the users who control the
    key access, including the ability to rotate and delete the key. There are also
    key users. These are the users and service roles that have the ability to use
    the key on a day-to-day basis. These are important concepts to understand as you
    both create and manage the keys in your account. There may be individuals and
    groups who need the ability to manage the keys but do not need access to data
    that is protected by the keys.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本练习中所看到的，关键管理员和关键用户之间有职责分离。关键管理员是控制密钥访问的用户，包括旋转和删除密钥的能力。还有关键用户，这些是每天使用密钥的用户和服务角色。这些是你在创建和管理帐户中的密钥时必须理解的重要概念。可能有一些个人和团体需要管理密钥的能力，但不需要访问受密钥保护的数据。
- en: 'In the following exercise, we are going to create our own customer-managed
    key using KMS. We will also designate both key administrators and key users before
    we are finished creating the key:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下练习中，我们将使用 KMS 创建自己的客户管理密钥。在完成创建密钥之前，我们还将指定关键管理员和关键用户：
- en: Log on to the AWS Management Console and search for `Key Management Service`
    from the top search menu bar:![Figure 19.3 – The Key Management Service icon from
    the search menu
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 AWS 管理控制台并从顶部搜索菜单栏搜索 `Key Management Service`：![图 19.3 – 搜索菜单中的密钥管理服务图标
- en: '](img/Figure_19.3_B17405.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_19.3_B17405.jpg)'
- en: Figure 19.3 – The Key Management Service icon from the search menu
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 19.3 – 搜索菜单中的密钥管理服务图标
- en: Once at KMS, we can now click on the orange **Create a key** button.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦进入 KMS，我们现在可以点击橙色的 **创建密钥** 按钮。
- en: Now on the **Configure Key** page, choose the **Symmetric** key type and click
    on the orange **Next** button at the bottom of the page.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在 **配置密钥** 页面，选择 **对称** 密钥类型，然后点击页面底部的橙色 **下一步** 按钮。
- en: This should bring us to the `chapter19` as the KMS key alias. We can use `example
    key` as the **Description**. Scroll down to the bottom of the page and click on
    the orange **Next** button:![Figure 19.4 – Adding the KMS key alias and description
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该会将我们带到 `chapter19` 作为 KMS 密钥别名。我们可以将 `example key` 作为 **描述**。向下滚动到页面底部，点击橙色的
    **下一步** 按钮：![图 19.4 – 添加 KMS 密钥别名和描述
- en: '](img/Figure_19.4_B17405.jpg)'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_19.4_B17405.jpg)'
- en: Figure 19.4 – Adding the KMS key alias and description
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 19.4 – 添加 KMS 密钥别名和描述
- en: Now it's time to choose key administrators. This is an important step that determines
    who can control the key access and who can delete the key, but not the people
    and groups who can use the key. Since you have most likely logged in with your
    `devops` user that we created at the beginning of our exercises, choose this user,
    and if you have another administrator account that you either use or would like
    to have access to the key, check the box next to that name as well. Once you have
    selected the names for the administrators, click the orange **Next** button at
    the bottom of the screen.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是选择密钥管理员的时候了。这是一个重要步骤，决定了谁可以控制密钥的访问权限以及谁可以删除密钥，但不包括可以使用密钥的人员和组。由于你很可能已经使用我们在开始时创建的`devops`用户登录，因此选择该用户，如果你有其他管理员帐户并希望它能够访问密钥，请勾选该名字旁的框。一旦选择了管理员的名字，点击屏幕底部的橙色**下一步**按钮。
- en: We should now be on the `devops` user, let's add the developer user that we
    created previously, `mariel`, to the list of authorized users as well. Once you
    have made your selections, click the orange **Next** button at the bottom of the
    screen.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们应该在`devops`用户下，让我们把之前创建的开发者用户`mariel`也添加到授权用户列表中。选定后，点击屏幕底部的橙色**下一步**按钮。
- en: On the **Review** page, scroll down and click the orange **Finish** button to
    create the key.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**审查**页面，向下滚动并点击橙色的**完成**按钮来创建密钥。
- en: Now that we have gone through the process of creating our CMK, let's see how
    we can use this key to keep our data secure via encryption.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了创建 CMK 的过程，让我们看看如何使用这个密钥通过加密来确保我们的数据安全。
- en: Adding encryption to data stores using our custom KMS key
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用我们的自定义 KMS 密钥为数据存储添加加密
- en: 'Let''s now take a look at how we can use the CMK we just created to encrypt
    objects in an S3 bucket that we have created previously. For the examples shown,
    we will be using the bucket that we created back in [*Chapter 4*](B17405_04_Final_JM_ePub.xhtml#_idTextAnchor110),
    *Amazon S3 Blob Storage*:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看如何使用我们刚刚创建的 CMK 来加密我们之前创建的 S3 存储桶中的对象。在示例中，我们将使用在[*第 4 章*](B17405_04_Final_JM_ePub.xhtml#_idTextAnchor110)中创建的存储桶，*Amazon
    S3 Blob 存储*：
- en: Log on to the AWS Management Console and navigate to `devopspro-beyond`. Once
    you find it, click on the name of the bucket to enter it.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 AWS 管理控制台，进入 `devopspro-beyond`。找到它后，点击存储桶的名称以进入。
- en: Once inside the bucket, click on the top horizontal menu on the tab named **Properties**:![Figure
    19.5 – The Properties menu item in the S3 horizontal menu
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入存储桶后，点击顶部水平菜单中的**属性**选项卡：![图 19.5 – S3 水平菜单中的属性菜单项
- en: '](img/Figure_19.5_B17405.jpg)'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_19.5_B17405.jpg)'
- en: Figure 19.5 – The Properties menu item in the S3 horizontal menu
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 19.5 – S3 水平菜单中的属性菜单项
- en: Now displaying the properties items of the S3 bucket, scroll down until you
    find the **Default encryption** heading. Click on the white **Edit** button on
    the top right corner of the **Default encryption** box to enter the settings.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在显示的是 S3 存储桶的属性项目，向下滚动，直到找到**默认加密**标题。点击**默认加密**框右上角的白色**编辑**按钮以进入设置界面。
- en: You should now be on the page labeled **Edit default encryption**. Under the
    label of **Server-side encryption**, click on the radio button next to **Enable**.
    Once you have selected this radio button, another set of selections will appear
    below for **Encryption key type**. Choose the radio button next to the **AWS Key
    Management Service key (SSE-KMS)** option:![Figure 19.6 – Enabling the KMS key
    on an S3 bucket
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你应该在标记为**编辑默认加密**的页面上。在**服务器端加密**标签下，点击**启用**旁边的单选按钮。选择后，下面将出现一组新的选择项，供你选择**加密密钥类型**。选择**AWS
    密钥管理服务密钥（SSE-KMS）**选项旁的单选按钮：![图 19.6 – 在 S3 存储桶上启用 KMS 密钥
- en: '](img/Figure_19.6_B17405.jpg)'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_19.6_B17405.jpg)'
- en: Figure 19.6 – Enabling the KMS key on an S3 bucket
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 19.6 – 在 S3 存储桶上启用 KMS 密钥
- en: Once the `chapter19` that we created in the previous hands-on exercise. Once
    selected, you can then scroll down to the bottom of the page and click the orange
    **Save changes** button.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦进入我们在前面的实操中创建的`chapter19`。选择后，向下滚动到页面底部，点击橙色的**保存更改**按钮。
- en: With our bucket set up for object encryption, click on the **Objects** menu
    item on the horizontal menu to be brought back to the main bucket page. Click
    on the orange **Upload** button, and on the **Upload** screen, click on the white
    **Add files** button. Choose any random file to upload to your bucket. Once your
    file has been queued to upload, click the orange **Upload** button.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置好存储桶的对象加密后，点击横向菜单中的**对象**菜单项，返回到主存储桶页面。点击橙色的**上传**按钮，在**上传**页面上，点击白色的**添加文件**按钮。选择任意一个文件上传到你的存储桶。一旦文件排队准备上传，点击橙色的**上传**按钮。
- en: When your file completely uploads to the S3 bucket, you can click on the orange
    **Close** button. This will bring you back to the **Objects** page for the S3
    bucket. Click on the name of the object and then scroll down to **Server-side
    encryption settings** to see that your object has been encrypted with your KMS
    key.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你的文件完全上传到 S3 存储桶时，你可以点击橙色的**关闭**按钮。这将把你带回到 S3 存储桶的**对象**页面。点击对象的名称，然后向下滚动到**服务器端加密设置**，查看你的对象是否已经使用
    KMS 密钥进行了加密。
- en: Important Note
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: If you are done with your KMS key, then you might want to go back and schedule
    its deletion. KMS keys do not get deleted right away and have a minimum of seven
    days before they can be deleted. Encrypted objects whose key has been deleted
    will not be able to be accessed.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你已经不再使用 KMS 密钥，你可能想要回去并安排删除它。KMS 密钥不会立即删除，至少需要七天才能删除。加密对象的密钥一旦被删除，将无法访问。
- en: With an understanding of how to protect our objects at rest using KMS under
    our belt, we will next move on to protecting data in transit using AWS Certificate
    Manager.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 通过了解如何使用 KMS 保护静态数据，我们接下来将学习如何使用 AWS 证书管理器保护传输中的数据。
- en: Protecting data in transit with AWS Certificate Manager
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS 证书管理器保护传输中的数据
- en: 'When your external site presents a **Transport Layer Security** (**TLS**) certificate
    and uses the secure HTTP protocol (HTTPS/443), customers know that you are protecting
    data they are sending to and from your systems in an encrypted manner:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的外部网站呈现**传输层安全性**（**TLS**）证书并使用安全的 HTTP 协议（HTTPS/443）时，客户会知道你正在以加密方式保护他们发送到你系统的数据：
- en: '![Figure 19.7 – How SSL/TLS works from browser to client'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 19.7 – 从浏览器到客户端的 SSL/TLS 工作原理'
- en: '](img/Figure_19.7_B17405.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_19.7_B17405.jpg)'
- en: Figure 19.7 – How SSL/TLS works from browser to client
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 19.7 – 从浏览器到客户端的 SSL/TLS 工作原理
- en: 'When you or your customers request a website that is presenting as HTTPS secured
    by an SSL/TLS certificate, the following steps take place:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当你或你的客户请求一个使用 SSL/TLS 证书保护的 HTTPS 网站时，以下步骤会发生：
- en: The server attempts to connect to the website over the secure `443` port. That
    web server then identifies itself.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器尝试通过安全的 `443` 端口连接到网站。然后该网站服务器会进行身份验证。
- en: The server then sends a copy of its SSL certificate.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器接着会发送其 SSL 证书的副本。
- en: The client will then check the certificate to see whether it's been issued from
    a trusted authority. If it trusts the certificate, it then sends a message of
    acknowledgment back to the server.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端会检查证书，看看它是否来自受信任的机构。如果信任该证书，它将向服务器发送确认消息。
- en: The server then issues a digitally signed acknowledgment that will start the
    SSL session.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器随后会发出一个数字签名的确认，开始 SSL 会话。
- en: Data is then shared securely between the client and the server.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据随后在客户端和服务器之间安全共享。
- en: '**AWS Certificate Manager** (**ACM**) is a server that can help you quickly
    and easily create, manage, and deploy TLS certificates on AWS services. ACM also
    supports public certificates. ACM handles the hardest and most complicated parts
    of **Private Key Infrastructure** (**PKI**). This includes tasks such as creating
    the certificate, certificate renewal, and issuing the certificate.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS 证书管理器**（**ACM**）是一个可以帮助你快速且轻松地在 AWS 服务上创建、管理和部署 TLS 证书的服务器。ACM 也支持公共证书。ACM
    处理**私钥基础设施**（**PKI**）中最难和最复杂的部分，包括创建证书、证书续期和颁发证书等任务。'
- en: 'ACM can quickly and easily provision the TLS certificates for use with external-facing
    AWS resources such as the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: ACM 可以快速且轻松地为外部面向的 AWS 资源（如以下内容）提供 TLS 证书：
- en: Elastic Load Balancing
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弹性负载均衡
- en: AWS Elastic Beanstalk
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS Elastic Beanstalk
- en: Amazon EC2 instances
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon EC2 实例
- en: Amazon API Gateway
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon API Gateway
- en: Amazon CloudFront
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon CloudFront
- en: Any certificate that ACM creates is valid for 13 months (395 days). However,
    you cannot download the private key for an ACM certificate that you create. Once
    a certificate has been issued, you can neither add nor remove domain names from
    that certificate. You can create wildcard certificates (`*.domain.com`) or you
    will need to create a new certificate if a new domain is needed.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: ACM 创建的任何证书有效期为 13 个月（395 天）。但是，您不能下载您创建的 ACM 证书的私钥。一旦证书颁发，您就无法添加或删除该证书中的域名。如果需要新域名，您可以创建通配符证书（`*.domain.com`），或者需要创建新的证书。
- en: When we talk about domains in the following paragraph, we are referring to domains
    registered with a registrar and being hosted on a DNS server or service such as
    Route 53\. This many times can be thought of as the domain name. When first issuing
    a requested Amazon certificate for a domain, ACM must verify that you either own
    or control the domain for which you are requesting the certificate. This can be
    done in two ways. The first is via email verification. ACM will send out email
    messages to the three email addresses listed on the WHOIS database and you have
    up to 72 hours to validate by acting on that email. The second way for validation
    is via DNS validation. ACM creates two CNAME records for your domain and requests
    that you put those entries into your DNS database for validation. Once it sees
    those entries, the service knows that you are the owner of the domain name.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在以下段落中提到域名时，我们指的是已在注册商处注册并托管在 DNS 服务器或服务（如 Route 53）上的域名。许多情况下，这可以被认为是域名。当首次为某个域名申请
    Amazon 证书时，ACM 必须验证您是否拥有或控制该域名。可以通过两种方式进行验证。第一种是通过电子邮件验证。ACM 会向 WHOIS 数据库中列出的三个电子邮件地址发送验证邮件，您需要在
    72 小时内通过该邮件进行验证。第二种验证方式是通过 DNS 验证。ACM 为您的域名创建两个 CNAME 记录，并要求您将这些记录添加到您的 DNS 数据库中进行验证。一旦验证记录存在，服务就会知道您是该域名的所有者。
- en: The two functions that ACM can serve
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ACM 可以执行的两项功能
- en: We have explained the role of secure certificates mainly as they pertain to
    public-facing websites. Issuing these certificates is one of the critical roles
    that ACM plays. However, this is not the only role that it can serve in your AWS
    environment. ACM can provide two separate services. The first is to manage, provision,
    and renew enterprise-grade TLS certificates for use with services such as Elastic
    Load Balancing, API Gateway, and CloudFront, along with other front-facing services.
    The second service that ACM provides is being a private certificate authority.
    This allows you to issue secure and trusted private certificates for your applications
    and infrastructure for your workloads and organization.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经解释了安全证书的作用，主要是针对面向公众的网站。这些证书的颁发是 ACM 执行的关键角色之一。然而，这并不是它在您的 AWS 环境中唯一可以执行的角色。ACM
    提供了两项独立的服务。第一项是为 Elastic Load Balancing、API Gateway 和 CloudFront 等服务以及其他面向前端的服务管理、配置和续订企业级
    TLS 证书。第二项服务是作为私有证书颁发机构。这使您能够为您的应用程序和基础设施颁发安全和可信的私有证书，以支持您的工作负载和组织。
- en: Now that we know what functions ACM can perform, we will go through a hands-on
    exercise of creating and provisioning a certificate using ACM and then using that
    provisioned certificate in a publicly available CloudFront distribution.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了 ACM 可以执行的功能，我们将通过一个实际操作，使用 ACM 创建并配置一个证书，然后在一个公开可用的 CloudFront 分发中使用该配置的证书。
- en: Adding a certificate to Amazon CloudFront
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将证书添加到 Amazon CloudFront
- en: With a solid understanding of the ACM service, we will now move on to the final
    hands-on exercise of this chapter. We will start off by creating a TLS certificate
    using ACM. Then, we will create a very simple CloudFront distribution and secure
    it for anyone who tries to connect to the distribution using our secure certificate.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在充分理解 ACM 服务之后，我们将继续本章的最后一个实际操作。我们将从使用 ACM 创建一个 TLS 证书开始，然后创建一个非常简单的 CloudFront
    分发，并使用我们的安全证书对其进行加密，以保护任何尝试连接到该分发的人。
- en: 'If you do not have a domain name for use, you can easily register one using
    the Amazon Route 53 service to complete this exercise at a very nominal cost.
    Otherwise, you can read through the steps of the following exercises to understand
    the process:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有可用的域名，您可以使用 Amazon Route 53 服务轻松注册一个域名，以非常低的成本完成此练习。否则，您可以阅读以下练习步骤以了解过程：
- en: Log on to the AWS Management Console and search for the ACM service. Once it
    appears from the drop-down menu, click on the icon to be taken to the main service
    page. For the certificate to work with the CloudFront service, we need to create
    it in the `us-east-1` region. If you create the certificate in any other region,
    you will not be able to see it in the second part of this exercise.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到AWS管理控制台，搜索ACM服务。一旦它从下拉菜单中出现，点击图标进入主服务页面。为了让证书与CloudFront服务兼容，我们需要在`us-east-1`区域创建它。如果你在其他区域创建证书，你将无法在本练习的第二部分中看到它。
- en: On the ACM main page, find the icon and heading that is labeled **Provision
    certificates**. Click on the blue **Get started** button under this heading.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在ACM主页面，找到标有**提供证书**的图标和标题。点击该标题下方的蓝色**开始使用**按钮。
- en: On the **Request a certificate** page, since we do not have a Private Certificate
    Authority available, there is only one option available to us. Keep this option
    selected and press the blue **Request a certificate** button at the bottom of
    the page.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**请求证书**页面，由于我们没有可用的私有证书颁发机构，只有一个选项可供选择。保持此选项被选中，然后点击页面底部的蓝色**请求证书**按钮。
- en: The first step when creating a certificate is to add domain names to the certificate.
    Unless you only want the certificate to be used for a single subdomain (for example,
    www), you can use an asterisk to serve as a wildcard for your entire domain. Type
    your wildcard domain in the textbox in the form of `*.devopsandbeyond.com` and
    then click on the blue **Next** button:![Figure 19.8 – Adding the wildcard domain
    name to our ACM-created certificate
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建证书的第一步是向证书添加域名。除非你只希望证书用于单一子域（例如www），否则可以使用星号作为通配符，覆盖你的整个域名。在文本框中以`*.devopsandbeyond.com`的形式输入你的通配符域名，然后点击蓝色的**下一步**按钮：![图19.8
    – 将通配符域名添加到我们在ACM创建的证书中
- en: '](img/Figure_19.8_B17405.jpg)'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_19.8_B17405.jpg)'
- en: Figure 19.8 – Adding the wildcard domain name to our ACM-created certificate
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图19.8 – 将通配符域名添加到我们在ACM创建的证书中
- en: The next step will be validating that you actually own the domain. We are going
    to assume that you are managing your DNS via Route53 and will go for **DNS validation**.
    Keep the **DNS validation** option selected and then click the blue **Next** button.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步将是验证你是否真正拥有该域名。我们假设你通过Route53管理你的DNS，并选择**DNS验证**。保持**DNS验证**选项被选中，然后点击蓝色的**下一步**按钮。
- en: This will bring you to the **Add tags** page. Simply click the blue **Review**
    button at the bottom of the page. When you are brought to the **Review** page,
    after verifying that your domain was typed in correctly, press the blue **Confirm
    and request** button.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带你到**添加标签**页面。只需点击页面底部的蓝色**审查**按钮。当你进入**审查**页面后，确认你的域名输入无误后，按下蓝色的**确认并请求**按钮。
- en: You will then need to add the requested CNAME to your DNS file. Take the value
    and go to the Route53 service. Add the entry as a new CNAME record in your domain's
    Route53 hosted zone. You will most likely need to wait a few minutes for the values
    to propagate before you see **Validation status** turn green and say **Success**.
    Once this happens, you can click the blue **Continue** button at the bottom of
    the screen:![Figure 19.9 – Validation status showing Success after the DNS entry
    has been added
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后你需要将请求的CNAME添加到你的DNS文件中。获取该值并前往Route53服务。将该条目作为新的CNAME记录添加到你的域名Route53托管区。你可能需要等待几分钟，直到值传播完成，然后验证状态会变成绿色并显示为**成功**。一旦完成，你可以点击屏幕底部的蓝色**继续**按钮：![图19.9
    – 在添加DNS条目后，验证状态显示为成功
- en: '](img/Figure_19.9_B17405.jpg)'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_19.9_B17405.jpg)'
- en: Figure 19.9 – Validation status showing Success after the DNS entry has been
    added
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图19.9 – 在添加DNS条目后，验证状态显示为成功
- en: With our certificate now created, we can now move on to creating a CloudFront
    distribution. Amazon CloudFront is the AWS native **Content Distribution Network**
    (**CDN**). CloudFront allows you to serve content using a single origin to many
    customers all over the world simultaneously with much lower latency than if you
    were trying to serve the content from a single point of presence, such as a server
    or Auto Scaling group.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在我们的证书已创建完成，我们可以继续创建CloudFront分发。Amazon CloudFront是AWS本地的**内容分发网络**（**CDN**）。CloudFront允许你使用单一来源向全球的众多客户同时提供内容，相较于从单一位置（如服务器或自动扩展组）提供内容，其延迟更低。
- en: We will now need to navigate to the CloudFront service from the top search bar
    on the AWS Management Console. Once you arrive on the service main page, click
    on the orange **Create a CloudFront distribution** button to start creating a
    new CloudFront distribution.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要从AWS管理控制台顶部的搜索栏导航到CloudFront服务。进入服务主页后，点击橙色的**创建CloudFront分发**按钮，开始创建新的CloudFront分发。
- en: The page heading should now be titled `devopspro-beyond`; however, your bucket
    will be named something different. Choose your origin bucket from the drop-down
    list. The origin will be suffixed by `.s3.us-east-2.amazonaws.com`.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 页面标题现在应该命名为`devopspro-beyond`；然而，你的存储桶将会有不同的名称。从下拉列表中选择你的源存储桶。源存储桶的名称将以`.s3.us-east-2.amazonaws.com`结尾。
- en: In the next textbox, `/pages` in the **Origin path** textbox.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个文本框中，在**源路径**文本框中输入`/pages`。
- en: Allow the name created by CloudFront to remain and move on to the **S3 bucket
    access** section. Choose the **Yes Use OAI** option. This option will allow us
    to keep our bucket private and make users go through the CloudFront distribution,
    rather than trying to bypass the CDN and access the assets in the origin directly.
    Click on the white **Create a new OAI** button; you can keep the name that CloudFront
    provides. Then click the orange **Create** button.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持CloudFront创建的名称不变，继续进入**S3存储桶访问**部分。选择**是的，使用OAI**选项。此选项将允许我们保持存储桶私密，并要求用户通过CloudFront分发访问，而不是直接绕过CDN访问源中的资源。点击白色的**创建一个新的OAI**按钮；你可以保留CloudFront提供的名称。然后点击橙色的**创建**按钮。
- en: When the dialog window closes, under the **Bucket policy** heading, select the
    **Yes, update the bucket policy** option.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当对话窗口关闭时，在**存储桶策略**标题下，选择**是的，更新存储桶策略**选项。
- en: Scroll down until you get to the `Redirect HTTP to HTTPS` value is selected.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动直到你看到`将HTTP重定向到HTTPS`选项被选中。
- en: We can keep other options in place until we get down to the **Settings** heading.
    The first thing we want to do is optimize on costs, so under **Price class**,
    we want to select **Use only North America and Europe**.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以保持其他选项不变，直到进入**设置**部分。我们首先要做的事是优化成本，所以在**价格类别**下，我们要选择**仅使用北美和欧洲**。
- en: Now, we are about to install our custom certificate from ACM. Under the **Custom
    SSL certificate –** *optional* label, use the drop-down menu option to find the
    certificate you created in the first part of the exercise under the **ACM certificates**
    heading.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将安装来自ACM的自定义证书。在**自定义SSL证书 –** *可选*标签下，使用下拉菜单选项找到你在练习第一部分创建的证书，位于**ACM证书**标题下。
- en: With your certificate selected, scroll down to the bottom of the page and click
    on the orange **Create distribution** button.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择证书后，向下滚动至页面底部，点击橙色的**创建分发**按钮。
- en: While the CloudFront distribution is being created, make a note of the **Distribution
    domain name**; this is how you will access CloudFront without adding a Route53
    alias:![Figure 19.10 – The CloudFront Distribution domain name
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当CloudFront分发正在创建时，记下**分发域名**；这就是你如何在不添加Route53别名的情况下访问CloudFront的方式：![图19.10
    – CloudFront分发域名
- en: '](img/Figure_19.10_B17405.jpg)'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_19.10_B17405.jpg)'
- en: '[PRE0]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Navigate back to S3\. Once there, find the bucket that you designated as the
    origin for your CloudFront distribution. Click on the name of this bucket to enter
    it.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到S3。在那里，找到你指定为CloudFront分发源的存储桶。点击该存储桶的名称进入它。
- en: Once inside the bucket, we will need to click on the white `pages`, just as
    we did in the options for the CloudFront distribution. Click the orange **Create
    folder** button once you have named the folder.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入存储桶后，我们需要点击白色的`pages`，就像我们在CloudFront分发选项中所做的那样。在你命名文件夹后，点击橙色的**创建文件夹**按钮。
- en: Click on the newly created pages directory and then click the orange `index.html`
    file that we created at the beginning of this section. Once the index page has
    been added for upload, click the orange **Upload** button.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新创建的页面目录，然后点击我们在本节开始时创建的橙色`index.html`文件。当索引页面准备好上传时，点击橙色的**上传**按钮。
- en: We have just seen how to create and implement a secure certificate using ACM.
    Let's now review what we learned in this chapter.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚了解了如何使用ACM创建并实现安全证书。现在，让我们回顾一下我们在本章学到的内容。
- en: Summary
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at protecting your data both at rest and in transit
    in your Amazon account. We began truly at an account level, looking at how to
    implement encryption during the transmission of data to your VPC using secure
    VPN connections over an IPSec tunnel. After that, we took a look at KMS and the
    differences between an Amazon-managed key and a CMK. Finally, we looked at securing
    data in transit using ACM. We saw how easy ACM makes it to create and implement
    SSL and TLS certificates on several AWS services.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了如何保护你在亚马逊账户中的数据，包括静态数据和传输中的数据。我们从账户级别开始，讨论了如何在数据传输到你的 VPC 时使用通过 IPSec
    隧道的安全 VPN 连接进行加密。然后，我们探讨了 KMS 以及 Amazon 管理密钥和 CMK 之间的区别。最后，我们讨论了如何使用 ACM 保护传输中的数据。我们看到
    ACM 如何简化了在多个 AWS 服务上创建和实施 SSL 和 TLS 证书的过程。
- en: 'In the next chapter, we will look at how to enforce standards and compliance
    within your organization with two powerful automation tools offered by AWS: Systems
    Manager and Config.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨如何通过 AWS 提供的两个强大自动化工具——Systems Manager 和 Config，在你的组织中强制执行标准和合规性。
- en: Review questions
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查问题
- en: A new set of compliance regulations has come down from the security department
    in the company you are working for. They are now stating that all encryption keys
    must be rotated every 12 months without exceptions. Which one of the following
    options would not meet the proposed new guidelines?
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公司所在的安全部门出台了新的合规性规定，要求所有加密密钥必须每 12 个月轮换一次，不得有例外。以下哪个选项不符合新规定？
- en: a. Using imported key material with a CMK
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 使用导入的密钥材料与 CMK
- en: b. Using an AWS-managed key
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 使用 AWS 管理的密钥
- en: c. Using an AWS customer-managed symmetric CMK
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 使用 AWS 客户管理的对称 CMK
- en: d. Using an AWS customer-managed asymmetric CMK
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 使用 AWS 客户管理的非对称 CMK
- en: You have been brought into a company that is working with confidential data.
    However, they are transferring the data unencrypted, both on the Amazon administrative
    console and using the CLI. What steps can you take to immediately secure the transport
    of data using encryption?
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你被带入一家处理机密数据的公司。然而，他们在亚马逊管理控制台和使用 CLI 时都未加密地传输数据。你可以采取哪些步骤立即通过加密保护数据传输？
- en: a. Create a set of CMKs in KMS. Using envelope encryption, have each user encrypt
    each transaction before any CLI command.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 在 KMS 中创建一组 CMK。使用信封加密，让每个用户在执行任何 CLI 命令之前加密每个交易。
- en: b. Use ACM to create a certificate to create a secure login and encrypt transmissions
    to the Amazon administrative console.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 使用 ACM 创建证书以创建安全登录，并加密传输到亚马逊管理控制台的通信。
- en: c. Create a customer gateway and a VPN gateway on the primary VPC. Ensure that
    any other VPCs that need to be accessed by the development team are either peered
    or connected via a transit VPC connector.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 在主 VPC 上创建客户网关和 VPN 网关。确保任何需要开发团队访问的其他 VPC 要么通过对等连接，要么通过过渡 VPC 连接器连接。
- en: d. Have all users add a multi-factor authentication to their account to ensure
    secure communications via both the CLI and the AWS Management Console.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 要求所有用户为他们的账户添加多因素认证，以确保通过 CLI 和 AWS 管理控制台的安全通信。
- en: Review answers
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查答案
- en: b
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
