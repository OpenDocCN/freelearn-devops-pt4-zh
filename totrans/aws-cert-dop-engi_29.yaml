- en: 'Chapter 24: Practice Exam 1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第24章：模拟考试1
- en: This section will have sample questions that are similar to the test so that
    you can become familiar with how to read and answer questions in the allotted
    time.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将提供类似测试的问题样例，帮助你熟悉如何在限定时间内阅读和回答问题。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主要主题：
- en: SDLC automation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件开发生命周期（SDLC）自动化
- en: Configuration management and infrastructure as code
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置管理和基础设施即代码
- en: Monitoring and logging
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控与日志记录
- en: Policies and standards automation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 政策和标准自动化
- en: Incident and event response
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件和事故响应
- en: High availability, fault tolerance, and disaster recovery
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高可用性、容错性和灾难恢复
- en: Before you start to answer the following questions, it is suggested that you
    use a timer of some kind to keep track of how long it is taking you to answer
    each question. None of the questions are actual AWS test questions. They are,
    however, made to be in the format that the test appears in. This includes long
    scenario-type questions along with multiple-choice answers that are very similar.
    Small details can mean the difference between the correct answer and one of the
    incorrect answers.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始回答以下问题之前，建议你使用某种计时器来跟踪每个问题的回答时间。所有问题都不是实际的AWS测试题目。然而，它们的格式是根据测试的形式制作的。这包括长场景类型的问题，以及非常相似的多项选择答案。细小的细节可能决定正确答案和错误答案之间的差异。
- en: Both the questions and answers are long. Many of the answers have the same components
    in them as well, which makes this different than some of the associate tests where
    you can just eliminate a few of the answers that you know are wrong and then pick
    the answer from the one or two that are left.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题和答案都很长。许多答案中也包含相同的组件，这使得与一些关联测试不同，在这些测试中，你可以通过排除一些你知道错误的答案，然后从剩下的一两个答案中选择正确答案。
- en: Test questions
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试问题
- en: You have developed a set of CloudFormation templates that can be used by your
    current company to deploy its middleware solution for processing files. This application
    is deployed to a number of EC2 spot instances, and there is a user data component
    of CloudFormation that downloads a number of scripts, including an initialization
    shell script from an S3 bucket to help configure those instances. The S3 bucket
    that holds the scripts has versioning enabled. The only known copy of the scripts
    at the company is located in that S3 bucket. A new intern accidentally deletes
    the script when trying to upload a different static asset to the bucket. What
    is the quickest way to restore the script so that the servers may be redeployed
    using the CloudFormation templates?
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你已经开发了一组CloudFormation模板，可以供你当前的公司用来部署其处理文件的中间件解决方案。这个应用部署在多个EC2按需实例上，并且在CloudFormation中有一个用户数据组件，负责从S3存储桶中下载多个脚本，包括一个初始化的shell脚本，用于帮助配置这些实例。存储脚本的S3存储桶已启用版本控制。公司中唯一已知的脚本副本位于该S3存储桶中。一名新实习生在尝试上传另一个静态资源到存储桶时，不小心删除了脚本。那么，恢复脚本并重新部署服务器的最快方式是什么？
- en: a. You will need to recreate the script and upload it with the same name to
    the S3 bucket. With file versioning enabled, you can only see the differences
    between files, not recovered deleted files.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 你需要重新创建脚本并使用相同的名称将其上传到S3存储桶。启用了文件版本控制后，你只能看到文件之间的差异，而无法恢复已删除的文件。
- en: b. You will need to make a modification to the CloudFormation scripts so that
    they use the previous version ID of the script, which got deleted in the S3 bucket.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 你需要修改CloudFormation脚本，使其使用之前的脚本版本ID，该版本已在S3存储桶中被删除。
- en: c. You will need to go into the AWS Management Console, navigate to the S3 bucket
    that holds your deployment scripts, and then choose the List versions option.
    You can then find the script that was deleted and remove the delete marker.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 你需要进入AWS管理控制台，导航到存放部署脚本的S3存储桶，然后选择“列出版本”选项。你可以找到被删除的脚本并移除删除标记。
- en: d. You will need to go into the AWS Management Console, navigate to the S3 bucket
    that holds your deployment script, and then choose the List versions option. You
    can then download the previous version of the script, which was deleted. After
    the script has been downloaded, you can then upload it back up to the bucket and
    rename it the original script name so that the EC2 instances can find it from
    the CloudFormation template.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 你需要进入 AWS 管理控制台，导航到存储部署脚本的 S3 桶，然后选择“列出版本”选项。然后，你可以下载之前被删除的脚本的版本。在脚本下载后，你可以将其重新上传到桶中，并将其重命名为原始脚本名称，以便
    EC2 实例可以从 CloudFormation 模板中找到它。
- en: You are part of a team that has recently developed a Spring Boot application
    and is ready to deploy it to the AWS cloud. Because the traffic to the application
    varies, you have configured the application to be launched in an Auto Scaling
    group. It is important to make sure that the application is running, so you have
    created a Bash script that will run on each EC2 instance and check the application's
    health periodically. If the instance is unhealthy, then it should be marked as
    such, and that instance should be replaced by a new, healthy one. What is the
    best way to construct the Bash script to perform this task?
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你是一个团队的一员，团队最近开发了一个 Spring Boot 应用程序，并准备将其部署到 AWS 云上。由于应用程序的流量波动较大，你已将应用程序配置为在
    Auto Scaling 组中启动。确保应用程序正常运行非常重要，因此你创建了一个 Bash 脚本，脚本将在每个 EC2 实例上运行并定期检查应用程序的健康状况。如果实例不健康，则应标记该实例并用新的健康实例替换它。构建该
    Bash 脚本以执行此任务的最佳方式是什么？
- en: a. Construct the script to reboot the instance if the health check fails. Run
    the script as the root user. Once the Auto Scaling group detects the reboot, it
    will terminate the instance and then create a new instance in its place.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 构建脚本以在健康检查失败时重启实例。以 root 用户身份运行脚本。Auto Scaling 组检测到重启后，将终止该实例并创建一个新的实例替代它。
- en: b. Construct the script to use the AWS CLI. Have the instance use the `autoscaling
    set-instance-health` command, letting the Auto Scaling group know that the instance
    is unhealthy. The Auto Scaling group will then terminate the instance and create
    a new one in its place.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 构建脚本以使用 AWS CLI。让实例使用`autoscaling set-instance-health`命令，告知 Auto Scaling
    组该实例不健康。然后，Auto Scaling 组将终止该实例并创建一个新的实例替代它。
- en: c. Construct the script to use the AWS CLI. Have the instance use the `autoscaling
    put-notification-configuration` command to notify the Auto Scaling group that
    the instance is unhealthy. The Auto Scaling group will then terminate the instance
    and create a new one in its place.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 构建脚本以使用 AWS CLI。让实例使用`autoscaling put-notification-configuration`命令通知 Auto
    Scaling 组该实例不健康。然后，Auto Scaling 组将终止该实例并创建一个新的实例替代它。
- en: d. Construct the script to use the AWS CLI. Have the instance use the `autoscaling
    enter-standby` command, letting the Auto Scaling group know that the instance
    is unhealthy. The Auto Scaling group will then terminate the instance and create
    a new one in its place.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 构建脚本以使用 AWS CLI。让实例使用`autoscaling enter-standby`命令，告知 Auto Scaling 组该实例不健康。然后，Auto
    Scaling 组将终止该实例并创建一个新的实例替代它。
- en: You have been brought into a company that has recently established configuration
    and tagging standards for the infrastructure resources that it is running on AWS.
    You have been asked to design and build a near-real-time dashboard showing the
    compliance standpoint that will emphasize any violations.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你被引入了一家公司，该公司最近为其在 AWS 上运行的基础设施资源建立了配置和标签标准。你被要求设计并构建一个近实时的仪表板，展示合规性状况，并强调任何违规情况。
- en: a. Define the tagging and resource requirements in Amazon Inspector. Create
    a Simple Notification Service (SNS) topic to be notified if anomalies are found.
    Have Inspector check periodically for the compliance requirements and then send
    a notification to the SNS topic if found. Use AWS Security Hub to quickly visualize
    the violations.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 在 Amazon Inspector 中定义标签和资源要求。创建一个简单通知服务（SNS）主题，以便在发现异常时收到通知。让 Inspector
    定期检查合规性要求，并在发现问题时将通知发送到 SNS 主题。使用 AWS Security Hub 快速可视化违规情况。
- en: b. Create a customized CloudWatch metric to track all the resource and tagging
    standards. Use the CloudWatch service to create a dashboard to visually track
    any resources that do not meet the tagging standards.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 创建一个自定义的 CloudWatch 指标来跟踪所有资源和标签标准。使用 CloudWatch 服务创建一个仪表板，以可视化跟踪任何不符合标签标准的资源。
- en: c. Enable the AWS Config service and use the configuration recorder to record
    all resources that are created and deleted. Have the configuration changes sent
    to an S3 bucket. Use Amazon QuickSight to create turn the data in the S3 bucket
    into visual information and dashboards for analysis so non-compliant resources
    can be easily spotted.
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 启用 AWS Config 服务，并使用配置记录器记录所有创建和删除的资源。将配置更改发送到 S3 存储桶。利用 Amazon QuickSight
    将 S3 存储桶中的数据转换为可视化信息和仪表板进行分析，从而能够轻松发现不合规的资源。
- en: D. Define multiple resource configurations in AWS Service Catalog. Use Amazon
    CloudWatch to monitor any compliance violations from Service Catalog. Use the
    CloudWatch service to create a dashboard to visually track any resources that
    do not meet the tagging standards.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: D. 在 AWS Service Catalog 中定义多个资源配置。使用 Amazon CloudWatch 监控 Service Catalog 中的任何合规性违规。利用
    CloudWatch 服务创建一个仪表板，以可视化方式跟踪不符合标签标准的资源。
- en: You have joined an application team that is moving their MySQL database from
    on-premises to the AWS cloud. This is a critical application, and therefore it
    needs more stability than the single on-premises server can give it. The application
    is read-intensive and has a 10/1 read-to-write ratio. Cost is the main objective,
    yet they do need to be aware of the project's budget. None of the current members
    of the team are skilled as DBAs, and all would rather focus on application development.
    What setup would you suggest to keep their database running should an Availability
    Zone fail in their current Region?
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你加入了一个应用程序团队，该团队正在将他们的 MySQL 数据库从本地迁移到 AWS 云。这个应用程序非常关键，因此它需要比单一的本地服务器更高的稳定性。该应用程序是读密集型的，具有
    10:1 的读写比。成本是主要目标，但他们确实需要关注项目预算。目前团队中的成员都不具备 DBA 技能，大家都希望能更多地专注于应用程序开发。你会建议什么样的配置，以确保数据库在当前区域的可用区发生故障时能够继续运行？
- en: a. Create a MySQL RDS instance. When setting up the instance, choose the Multi-AZ
    feature. Once the data has been imported, then create a read replica and program
    the application to utilized the read replica for the heavy reads.
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 创建一个 MySQL RDS 实例。在设置实例时，选择 Multi-AZ 功能。数据导入完成后，创建一个只读副本，并编程让应用程序使用该只读副本进行大量读取操作。
- en: b. Create a MySQL RDS instance. Once the data has been imported, create a read
    replica in the alternate Region and program the application to utilized the read
    replica for the heavy reads.
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 创建一个 MySQL RDS 实例。数据导入完成后，在另一个区域创建一个只读副本，并编程让应用程序使用该只读副本进行大量读取操作。
- en: c. Create a CloudFormation template that stands up an Auto Scaling group and,
    in the launch template, configures the MySQL server on each of the two EC2 instances
    in different Regions. Have the configuration make the MySQL service run in a Master-Master
    setup so that any of the servers could be pointed to in case of failure.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 创建一个 CloudFormation 模板，启动一个自动扩展组，并在启动模板中配置 MySQL 服务器，分别在不同区域的两个 EC2 实例上运行。配置使
    MySQL 服务以主主（Master-Master）模式运行，以便在发生故障时，任何一台服务器都可以作为目标。
- en: d. Create a CloudFormation template that stands up an Auto Scaling group and,
    in the launch template, configures the MySQL server on each of the two EC2 instances
    in different regions. Have a third smaller EC2 instance stood up as part of the
    template as a MySQL proxy so that the application servers can point to the proxy.
    The proxy will switch automatically between the current master and the slave.
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 创建一个 CloudFormation 模板，启动一个自动扩展组，并在启动模板中配置 MySQL 服务器，分别在不同区域的两个 EC2 实例上运行。模板中还将创建一个第三个较小的
    EC2 实例作为 MySQL 代理，这样应用程序服务器可以指向该代理。代理会自动在当前主服务器和从服务器之间切换。
- en: You have previously built a CI/CD pipeline in AWS CodePipeline for your team's
    application. With the current pipeline, there were automated stages for code checkout,
    build, test, deploy to dev, and deploy to test. You are now updating CodePipeline
    to add a new stage to Deploy to Prod and adding a manual approval for the product
    owner before the code is released into the production environment. On the initial
    test of the new stage, the product owner informed you that after logging into
    the AWS Management Console to the CodePipeline pipeline with their IAM user, they
    found that she did not have permission to approve the build. How can you remedy
    this issue?
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你之前在 AWS CodePipeline 中为你的团队的应用程序构建了一个 CI/CD 管道。当前管道包括代码签出、构建、测试、部署到开发环境以及部署到测试环境的自动化阶段。现在，你正在更新
    CodePipeline，新增一个部署到生产环境的阶段，并在代码发布到生产环境之前，添加产品负责人的手动审批。在新阶段的初次测试中，产品负责人通知你，在使用他们的
    IAM 用户登录 AWS 管理控制台并进入 CodePipeline 管道后，他们发现自己没有权限批准构建。你该如何解决这个问题？
- en: a. Create a new SNS topic for the Deploy to Prod stage. Add the product owner
    to the topic. Have the product owner click the approval link in the SNS message
    when it is sent.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 为部署到生产环境阶段创建一个新的 SNS 主题。将产品负责人添加到该主题。当 SNS 消息发送时，让产品负责人点击消息中的审批链接。
- en: b. From the AWS Management Console, go to the specific CodePipeline and add
    the product owner's IAM user as an approver for that pipeline.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 从 AWS 管理控制台，进入指定的 CodePipeline，并将产品负责人的 IAM 用户添加为该管道的审批人。
- en: c. From the AWS Management Console, go to the IAM service. Create a new group
    called `CodePipeline Approvers`. Attach the `AWSCodePipelineFullAccess` managed
    IAM policy to the group. Add the product owner to the group.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 从 AWS 管理控制台，进入 IAM 服务。创建一个新组，命名为 `CodePipeline Approvers`。将 `AWSCodePipelineFullAccess`
    托管 IAM 策略附加到该组。将产品负责人添加到该组。
- en: d. From the AWS Management Console, go to the IAM service. Create a new group
    called `CodePipeline Approvers`. Attach the `AWSCodePipelineApproverAccess` managed
    IAM policy to the group. Add the product owner to the group.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 从 AWS 管理控制台，进入 IAM 服务。创建一个新组，命名为 `CodePipeline Approvers`。将 `AWSCodePipelineApproverAccess`
    托管 IAM 策略附加到该组。将产品负责人添加到该组。
- en: An organization has moved its code versioning system for its developers to AWS
    CodeCommit. Teams of developers create and work on feature branches while testing
    and then create a pull request when ready to merge into the main branch. The organization
    has set guidelines that no one should be able to directly commit to the main branch.
    Any team member who is a developer is part of the IAM group developers. This group
    was recently modified to add the `AWSCodeCommitPowerUser` managed policy and now
    all members of this group are able to commit to the main branch of any repository
    in the organization's AWS CodeCommit. What steps need to be taken to prevent this
    and enforce the organization's guidelines?
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个组织已经将其开发人员的代码版本控制系统迁移到 AWS CodeCommit。开发团队在测试时创建并处理功能分支，准备好合并到主分支时创建拉取请求。该组织已设定规定，任何人不得直接提交到主分支。任何开发人员都会是
    IAM 组 "developers" 的成员。这个组最近被修改，添加了 `AWSCodeCommitPowerUser` 托管策略，现在该组的所有成员都能提交到组织
    AWS CodeCommit 中任何仓库的主分支。为了防止这种情况并执行组织的规定，应该采取哪些措施？
- en: a. Create an added IAM policy that would allow the `codecommit:GitPush` action.
    Add a condition to the policy that specifies the CodeCommit repositories in the
    resource statement.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 创建一个附加的 IAM 策略，允许执行 `codecommit:GitPush` 操作。为策略添加一个条件，指定资源声明中的 CodeCommit
    仓库。
- en: b. Create an added IAM policy that would deny the `codecommit:GitPush` action.
    Add a condition to the policy that specifies the CodeCommit repositories in the
    resource statement.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 创建一个附加的 IAM 策略，拒绝执行 `codecommit:GitPush` 操作。为策略添加一个条件，指定资源声明中的 CodeCommit
    仓库。
- en: c. Alter the IAM policy and remove the `codecommit:GitPush` action.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 修改 IAM 策略，移除 `codecommit:GitPush` 操作。
- en: d. Alter the IAM policy and add a deny rule for `codecommit:GitPush` that specifies
    the specific repositories where push is not allowed.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 修改 IAM 策略，添加一条拒绝规则，针对 `codecommit:GitPush` 指定不允许推送的特定仓库。
- en: You have configured AWS CodeDeploy to automate deployments to both EC2 instances
    in your development and test environments located in your AWS account, along with
    a few RHEL servers that are still located on-premises. There is a deployment group
    configured that defines each of the specific instances that are included for deployment.
    There has been an announcement stating that there will be a hardware refresh on-premises
    for one of the instances in the deployment group, which will take 2 weeks to complete.
    During this period, no new deployments should be pushed to these instances. Which
    method is the most suitable for enacting this 2-week freeze for the specific on-premises
    server?
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Create a new deployment group with a tag that is only used by the user.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Verify the tags used by both the deployment groups. Use the AWS CLI to remove
    the specific instance that will be in service with the `aws deploy` `remove-tags-from-on-premises-instances`
    command.
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Use the AWS CLI to deregister the on-premises instance from the CodeDeploy
    deployment using `deploy deregister`.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Use the AWS CLI to uninstall the CodeDeploy agent from the on-premises instance
    using `deploy uninstall`.
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'A DevOps engineer on your team has submitted the following `buildspec.yaml`
    file for security review. The security review failed. You have been tasked with
    helping the junior engineer to review the file:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 24.1 – The security review file
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 24.1 – The security review file'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/Figure_24.1_B17405.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What changes would you recommend that the junior DevOps engineer make so that
    the `buildspec` file complies with security best practices (choose three)?
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a. Add permissions to the CodeBuild role so that the necessary actions can be
    performed during the build process. Remove the access key and secret key from
    the file.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Use KMS encryption for the environment variables so that they don't appear
    in plaintext on the file.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Write all environment variables to a file. Store the file in S3 and pull
    the file down at execution time so that the variables don't appear in plaintext
    on the file.
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Use AWS Secrets Manager to store the `DB_PASSWORD` value. Remove the DB value
    from the environment values once stored and then retrieve them when needed.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: e. Create a run command in Systems Manager that would perform the commands.
    Use System Manager instead of SSH and SCP directly from the instance.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You have been brought into a company that is expanding its presence on the AWS
    cloud. They want to build out their footprint using CloudFormation. However, they
    would like to use common components and patterns throughout their various applications.
    Many of the underlying components such as the infrastructure and networking will
    not be modified frequently after being generated. The company would like to manage
    all of the common component items independently and allow other application stacks
    to reuse the components when they need to. How can you achieve this objective?
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Create a CloudFormation stack to hold all of the common resources. Other
    CloudFormation stacks will be able to use its resources by importing the resources
    from the AWS Management Console.
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 创建一个CloudFormation堆栈来容纳所有公共资源。其他CloudFormation堆栈可以通过AWS管理控制台导入这些资源来使用它们。
- en: b. Create a CloudFormation stack to generate all of the common resources. Export
    the output values so that other CloudFormation stacks can import the values using
    the `GetAttribute` function.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 创建一个CloudFormation堆栈来生成所有公共资源。导出输出值，以便其他CloudFormation堆栈可以使用`GetAttribute`函数导入这些值。
- en: c. Construct a CloudFormation stack to generate all of the common resources.
    Export the output values so that other CloudFormation stacks can import the values
    using the `ImportValue` function.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 构建一个CloudFormation堆栈来生成所有公共资源。导出输出值，以便其他CloudFormation堆栈可以使用`ImportValue`函数导入这些值。
- en: d. Create a CloudFormation stack to generate all of the common resources. Any
    application stack can be created as a nested stack from this stack to use all
    of the common resources.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 创建一个CloudFormation堆栈来生成所有公共资源。任何应用堆栈都可以作为此堆栈的嵌套堆栈来使用所有公共资源。
- en: A company has just launched a new booking service that has both a website and
    a mobile application. Thanks in part to the marketing team's effort, the service
    has been a smash hit with customers that have tried it and it keeps growing in
    popularity. The CTO has implemented a new directive for the upcoming quarter to
    make the application as efficient as possible and make any necessary tweaks to
    the performance. In order to achieve this, the development team will need to monitor
    all the different details of the application to see the root causes of any issues,
    errors, and latency issues. How can they achieve this using native AWS tools and
    services?
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一家公司刚刚推出了一个新的预订服务，提供网站和移动应用。部分得益于市场团队的努力，该服务在客户中取得了巨大成功，吸引了越来越多的用户。首席技术官（CTO）已经实施了一项新的指令，在接下来的季度内尽可能提高应用程序效率，并对性能进行必要的调整。为了实现这一目标，开发团队需要监控应用程序的各个细节，以找出任何问题、错误和延迟的根本原因。他们可以如何使用AWS原生工具和服务来实现这一目标？
- en: a. Configure Amazon Inspector to view the application. Periodically read the
    Inspector assessment reports for any latency issues found along with errors. Use
    timestamps to trace logs in CloudWatch Logs.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 配置Amazon Inspector以查看应用程序。定期阅读Inspector评估报告，查找任何延迟问题及错误。使用时间戳追踪CloudWatch日志中的日志。
- en: b. Configure Amazon Elasticsearch to subscribe to the CloudWatch log groups
    for the application. Use Kibana to graph out the latency times from user click
    to application response. Create a custom Kibana visualization to count the number
    of errors.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 配置Amazon Elasticsearch订阅应用程序的CloudWatch日志组。使用Kibana绘制从用户点击到应用程序响应的延迟时间图表。创建自定义Kibana可视化以统计错误数量。
- en: c. Configure a custom metric in Amazon CloudWatch to track latency. Create a
    dashboard on CloudWatch to track the metric.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 在Amazon CloudWatch中配置自定义指标来跟踪延迟。创建一个CloudWatch仪表板来跟踪该指标。
- en: d. Configure the AWS X-Ray SDK for the application. Send the segments to X-Ray
    for processing. View the service graphs and traces in the X-Ray service console.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 配置AWS X-Ray SDK以供应用程序使用。将数据片段发送至X-Ray进行处理。在X-Ray服务控制台中查看服务图和追踪信息。
- en: You have set up AWS CodeCommit for your company to use as the code versioning
    service. The main application team is developing a mobile phone app and submits
    the source code in one CodeCommit repository (repository A) in the AWS account
    (account A). The company has just acquired another company that had its own AWS
    account (account B) and some of the developers have been tasked to help the development
    of a new feature of the mobile phone app. What actions should you take to configure
    cross-account access so that the new developers who have accounts and IAM users
    in account B have the ability to access repository A in account A (choose two)?
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你已经为公司设置了AWS CodeCommit作为代码版本控制服务。主要应用团队正在开发一个手机应用，并将源代码提交到AWS账户（账户A）中的一个CodeCommit仓库（仓库A）。公司刚刚收购了另一家公司，该公司有自己的AWS账户（账户B），一些开发人员被指派协助开发该手机应用的新功能。为了使账户B中的开发人员能够访问账户A中的仓库A，你应该采取哪些操作来配置跨账户访问（选择两个）？
- en: a. Go to the AWS CodeCommit service in the AWS Management Console in account
    A. Share repository A with account B so that users in account B will have access
    to the repository.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 进入AWS管理控制台中的AWS CodeCommit服务（账户A），将仓库A与账户B共享，以便账户B中的用户可以访问该仓库。
- en: b. Go to the AWS CodeCommit service in the AWS Management Console in account
    A. Add the IAM users of account B to the repository as users.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 进入 AWS 管理控制台中的 AWS CodeCommit 服务，在账户 A 中将账户 B 的 IAM 用户添加到存储库中作为用户。
- en: c. In AWS account A, go to the IAM console and create an IAM policy that allows
    access to CodeCommit's repository A. Then create an IAM role that can be assumed
    by another account and attach this policy. Allow users in account B to assume
    this role.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 在 AWS 账户 A 中，进入 IAM 控制台，创建一个 IAM 策略，允许访问 CodeCommit 的存储库 A。然后创建一个可以被另一个账户假设的
    IAM 角色，并附加此策略。允许账户 B 中的用户假设此角色。
- en: d. In AWS account B, go to the IAM console and create an IAM policy that allows
    full access to the CodeCommit service and is connected to the repository A ARN
    resource. Attach this new policy to all users that need access to repository A
    in AWS account A.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 在 AWS 账户 B 中，进入 IAM 控制台，创建一个 IAM 策略，允许对 CodeCommit 服务的完全访问，并连接到存储库 A ARN
    资源。将此新策略附加到所有需要访问 AWS 账户 A 中存储库 A 的用户。
- en: e. In AWS account B, create an IAM policy that allows for Security Token Service
    to assume role action so that a cross-account role can be assumed. Attach this
    new policy to all users that need access to repository A in AWS account A.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e. 在 AWS 账户 B 中，创建一个 IAM 策略，允许使用安全令牌服务（STS）进行角色假设操作，以便可以假设跨账户角色。将此新策略附加到所有需要访问
    AWS 账户 A 中存储库 A 的用户。
- en: The company you are working for has just undergone an audit. The corrections
    that came back included the need to retain and store all system logs for 6 years.
    The development and operations teams need 30–60 days' worth of logs for troubleshooting
    purposes. The marketing department needs at least 6 months of web traffic logs
    for their analytics analysis. The management wants to make sure that the solution
    you come up with is cost-effective as well as meeting the auditor's requirements.
    How can you satisfy both management and the auditor's needs?
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您所在的公司刚刚进行了审计。审计回馈的纠正措施包括需要保留和存储所有系统日志 6 年。开发和运维团队需要 30 到 60 天的日志用于故障排除。市场部门需要至少
    6 个月的 web 流量日志用于分析。管理层希望确保您提出的解决方案不仅符合审计员的要求，而且具有成本效益。您如何满足管理层和审计员的需求？
- en: a. Put the logs onto an EBS volume. Create monthly EBS snapshots for long-term
    storage of the logs after 60 days.
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 将日志存储到 EBS 卷中。创建每月的 EBS 快照，以便在 60 天后进行长期存储。
- en: b. Put the logs into Amazon S3 Glacier.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 将日志存储到 Amazon S3 Glacier 中。
- en: c. Put the logs into the Amazon CloudWatch Logs service and set the retention
    policy on the log groups to 6 years.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 将日志存储到 Amazon CloudWatch Logs 服务中，并将日志组的保留策略设置为 6 年。
- en: d. Put the logs into an Amazon S3 bucket. Create a bucket policy that moves
    the logs to infrequent access after 60 days and then to Amazon Glacier after 1
    year.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 将日志存储到 Amazon S3 存储桶中。创建一个存储桶策略，使日志在 60 天后转移到低频访问存储，然后在 1 年后转移到 Amazon Glacier。
- en: Your company runs a .NET application in AWS that relies on around 50 Windows
    servers for the underlying infrastructure. The company has a policy that all of
    the servers in the development, test, and production environments must be kept
    up to date with the latest security patches. These Window servers have all been
    built from a master AMI image. The DevOps team that is responsible for the patching
    of the instances only consists of yourself and one other team member, so creating
    an automated way to perform this process is imperative; otherwise, you will be
    pressed to complete all of the updates in the allotted time window of 1 A.M.–4
    A.M. on Saturday morning when there is very little customer traffic. How can you
    automate this process using native AWS services?
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的公司在 AWS 上运行一个 .NET 应用程序，该应用程序依赖大约 50 台 Windows 服务器作为基础设施。公司有一项政策，要求开发、测试和生产环境中的所有服务器必须保持最新的安全补丁。这些
    Windows 服务器都是从一个主 AMI 镜像构建的。负责实例修补的 DevOps 团队只有您和另外一名团队成员，因此创建一个自动化的方式来执行此过程至关重要；否则，您将不得不在周六早晨凌晨
    1 点到 4 点之间的有限时间窗口内完成所有更新，此时客户流量极少。您如何使用原生的 AWS 服务来自动化这一过程？
- en: a. Create a Lambda function that can download and run the updates in PowerShell.
    Schedule the Lambda to run every week at 1 A.M. using CloudWatch Events.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 创建一个 Lambda 函数，能够在 PowerShell 中下载并运行更新。使用 CloudWatch Events 将 Lambda 调度为每周凌晨
    1 点运行。
- en: b. Apply AWS Systems Manager Patch Manager to the Windows instance fleet. Use
    System Manager run commands to install the updates.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 使用 AWS Systems Manager Patch Manager 对 Windows 实例集群进行补丁管理。使用 Systems Manager
    执行命令来安装更新。
- en: c. Apply AWS System Manager Patch Manager to the Windows instance fleet. Use
    System Manager Maintenance Windows to schedule the updates to run every week at
    1 A.M.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 应用 AWS 系统管理器补丁管理器到 Windows 实例集群。使用系统管理器维护窗口安排每周凌晨 1 点运行更新。
- en: d. Create custom Chef scripts in OpsWorks to download and install the updates
    in PowerShell. Create a task in OpsWorks to schedule and run the updates every
    week at 1 A.M.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 在 OpsWorks 中创建自定义 Chef 脚本，用于下载并安装 PowerShell 更新。在 OpsWorks 中创建一个任务，安排每周凌晨
    1 点运行更新。
- en: The CTO has recently approached you, concerned about the security of the company's
    AWS account. They would like you to implement monitoring for any possible attacks
    that could be coming in against the company's AWS resources. They specifically
    emphasized monitoring against port scans, brute force attacks, or any SSH attacks.
    If an attack was detected, they would like it posted to the company's Microsoft
    Teams security channel. How can you go about achieving this?
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首席技术官最近找到了您，关心公司 AWS 账户的安全。他们希望您实施监控，防止可能的攻击侵害公司 AWS 资源。他们特别强调了监控端口扫描、暴力破解攻击或任何
    SSH 攻击。如果检测到攻击，他们希望将其发布到公司的 Microsoft Teams 安全频道。您如何实现这一目标？
- en: a. Set up Amazon GuardDuty. If suspicious activity is detected, trigger a Lambda
    function that will post to the Microsoft Teams channel.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 设置 Amazon GuardDuty。如果检测到可疑活动，触发一个 Lambda 函数，将信息发布到 Microsoft Teams 渠道。
- en: b. Create a Lambda function that will scan the CloudTrail logs for suspicious
    activity. If suspicious activity is found, it will post it to the Microsoft Teams
    channel.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 创建一个 Lambda 函数，扫描 CloudTrail 日志中的可疑活动。如果发现可疑活动，将其发布到 Microsoft Teams 渠道。
- en: c. Set up Amazon Inspector. If suspicious activity is detected, trigger a Lambda
    function that will post to the Microsoft Teams channel.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 设置 Amazon Inspector。如果检测到可疑活动，触发一个 Lambda 函数，将信息发布到 Microsoft Teams 渠道。
- en: d. Create a Lambda function that will scan the VPC flow logs. If suspicious
    activity is found, it will post it to the Microsoft Teams channel.
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 创建一个 Lambda 函数，扫描 VPC 流日志。如果发现可疑活动，将其发布到 Microsoft Teams 渠道。
- en: The CEO has visited the DevOps team personally, stating that the company is
    promising six 9s of uptime to customers or the company would be giving large refunds.
    This leaves you and your team only 31.56 % of downtime per year. The main workload
    comprises multiple EC2 instances that are configured in Auto Scaling groups, running
    behind Application Load Balancers. How can you configure the workload to ensure
    that the company maintains that uptime promise even in the case of regional failure?
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首席执行官亲自访问了 DevOps 团队，并表示公司承诺为客户提供六个 9 的正常运行时间，否则公司将提供大量退款。这意味着您和您的团队每年只有 31.56%
    的停机时间。主要的工作负载包括多个配置在 Auto Scaling 组中的 EC2 实例，这些实例通过应用负载均衡器运行。您如何配置工作负载，以确保即使在发生区域性故障的情况下，公司也能保持这一正常运行时间的承诺？
- en: a. Configure Amazon CloudFront in front of the load balancers and instances.
    CloudFront will cache the workload for customers in case of failure.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 在负载均衡器和实例前设置 Amazon CloudFront。CloudFront 将缓存工作负载，以防故障发生时为客户提供服务。
- en: b. Set up a Route 53 geoproximity routing record. Make sure that the Auto Scaling
    groups are set to utilize two Availability Zones. Have the Route 53 routing record
    point to the Application Load Balancers.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 设置一个 Route 53 地理接近度路由记录。确保 Auto Scaling 组配置为使用两个可用区。让 Route 53 路由记录指向应用负载均衡器。
- en: c. Set up a Route 53 weighted routing record. Make sure that the Auto Scaling
    groups are set to utilize two Availability Zones. Have the Route 53 routing record
    point to the Application Load Balancers.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 设置一个 Route 53 权重路由记录。确保 Auto Scaling 组配置为使用两个可用区。让 Route 53 路由记录指向应用负载均衡器。
- en: d. Set up a Route 53 latency routing record. Implement your workload EC2 instances,
    Auto Scaling groups, and load balancers in two different regions. Have the Route
    53 routing record point to the Application Load Balancers.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d. 设置一个 Route 53 延迟路由记录。将您的工作负载 EC2 实例、Auto Scaling 组和负载均衡器部署在两个不同的区域。让 Route
    53 路由记录指向应用负载均衡器。
- en: Your company wants to implement the Apache Cassandra NoSQL database on AWS.
    There is no managed service for Cassandra, so you will have to build this on EC2
    instances. Your team is looking for you to choose the correct type of EBS volume
    so that they get the optimum performance for this high-performance NoSQL database.
    Which type of volume should you choose when building the EC2 instances in the
    cluster?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Use IO1 EBS volumes when creating the instances.
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Use standard EBS volumes when creating the instances.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Use GPL EBS volumes when creating the instances.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Use GP2 EBS volumes when creating the instances.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You have been brought into an organization to help create a new AWS CodePipeline
    pipeline so that the team can implement continuous integration. The pipeline needs
    to pull the source code and then have a test stage run by AWS CodeBuild. The test
    includes extracting data from a database that requires a username and password.
    You will need to put these in the test stage using environment variables. How
    can you securely configure these variables in the CodeBuild stage of the pipeline?
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Use the CodeBuild environment variable options to store the secrets. Select
    the `Plaintext` type when storing the values and use a KMS key to encrypt the
    values.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Use the CodeBuild environment variable options to store the secrets. Select
    the `SecureString` type when storing the values.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Use AWS Secrets Manager to store the values. Update your CodeBuild environment
    values for the variables and use the names of the secrets as the values in `Plaintext`.
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Use AWS Systems Manager Parameter Store to store the values. Update your
    CodeBuild environment values for the variables and use the parameter names as
    the values as `Parameter` types.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You have been asked to help a team that is using OpsWorks to enhance the monitoring
    of their stack. This team is rather skilled in developing automations using Chef
    but just seems to know the basics to run their services in AWS. Which of the following
    will not help them enhance the monitoring of their application being deployed
    in OpsWorks?
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Utilize Amazon CloudWatch metrics and create a custom metric to track the
    application.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Utilize Amazon Cloud Trail to make sure that only authorized calls are being
    made to the application.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Utilize Amazon CloudWatch Logs to gather the logs from the application.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Utilize AWS Config to gather the application's configuration changes.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You have been brought into a small start-up whose marketing website is nothing
    but static content. The marketing department has been complaining that load times
    are currently too long, and this is affecting their search engine rating. They
    have only a limited budget for upgrades and would like to make the most effective
    use of their money. The start-up is also in the process of moving all digital
    assets to their new AWS account. They also want to make their site as fast as
    possible. Which of the following suggestions would best meet their needs?
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Serve their website using an EC2 server. Add Amazon CloudFront in front as
    the content delivery network.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Move all static assets to S3\. Serve the website on EC2 spot instances. Add
    Amazon CloudFront in front as the content delivery network.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Move the entire website to S3\. Add Amazon CloudFront in front as the content
    delivery network.
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Serve their website on EC2 spot instances. Add Amazon ElastiCache for content
    caching to speed up page load times.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: An organization is running a successful room booking mobile application on AWS.
    They are using DynamoDB to store all the records of the transactions and confirmation
    codes obtained from credit card companies once the reservations have been made.
    They chose DynamoDB for its ability to quickly autoscale and handle any type of
    capacity that is needed without much management. These transactional records are
    of vital importance to the company and must not be lost lost due to any server
    failures. The organization has a policy that the financial transactions must be
    stored for 3 years in case of any customer disputes. What is the most cost-effective
    and reliable way to accomplish this?
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Use CloudWatch Logs to capture the records from DynamoDB. Set the retention
    period in CloudWatch Logs to 3 years.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Use DynamoDB Streams to stream transition records to a Lambda function. Have
    the Lambda function write the record to an S3 bucket. Use a life cycle policy
    to move objects to S3 Glacier storage for cost savings.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Use DynamoDB global tables to replicate the data to a secondary region. Create
    a Lambda function that trims records based on the creation date of the record
    minus 3 years and runs on a nightly basis.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Use DynamoDB Streams to stream transition records to an S3 bucket. Use a
    life cycle policy to move objects to S3 Glacier storage for cost savings.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A company has set up multiple accounts using AWS organizations. They have just
    started implementing event-driven automation and are taking the first steps to
    have notifications being sent from the CloudWatch event bus located in the master
    account via SNS to topics. How can they set up their master account and grant
    access to all child accounts so that the events can be sent to the event bus located
    in the master account?
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Create an IAM policy that allows for sending CloudWatch events. Attach that
    policy to a role in the master account that can be assumed by all child accounts
    in the organization.
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Create an IAM policy in each of the child accounts that allows for sending
    CloudWatch events and specifies the ARN of the event bus in the master account.
    Attach this policy for any service-based role that needs to send events to the
    master account.
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. In the master account, go to the CloudWatch Events console and then choose
    your event bus. Go to add permission and then choose to add the entire organization
    by entering the ID of the organization.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. In the master account, go to the CloudWatch Events console and then choose
    your event bus. Go to add permission and then add the ID for each of the child
    accounts that need permission to send events to the event bus.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You are working with a development team that is trying to track the performance
    of an application that they build and are running on a group of EC2 instances.
    This team is especially interested in any error messages that are being generated
    from their Java code and would like the full team to be notified if more than
    5 error messages occur in a 5-minute time period. Which of the following solutions
    could you implement to fulfill the team's requirements?
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Configure the instances to have all the Java logs write to the syslog on
    the EC2 instances in the user-data script. Use Kinesis Data Firehose to pull the
    syslog data for the instances and count the number of error messages. Create an
    SNS topic for the group of developers. Have Kinesis send a notification to the
    topic if there are more than 5 error logs in a 5-minute period.
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Configure the instances to write to a single log group in Amazon CloudWatch
    Logs. Use Amazon Elasticsearch to subscribe to the log group. Build a Kibana dashboard
    so that the developers can see how many error logs are being generated on a minute-by-minute
    basis.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Configure the instance to install AWS Systems Manager Agent. Have the agent
    pull the logs to Amazon EventBridge. Create an SNS topic for the group of developers.
    Create a Lambda function that will send a notification to the SNS topic if there
    are more than 5 error logs in a 5-minute period.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Configure the instance to install the unified CloudWatch agent. Create a
    custom metric to count the number of errors in the Java logs. Create an SNS topic
    for the group of developers. Push the logs and the custom metric to Amazon CloudWatch.
    Create a CloudWatch alarm that will send a notification to the SNS topic if the
    custom metric reaches a value greater than 5 in a 5-minute period.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: All of the developers in your organization currently have the ability to start
    and stop any of the EC2 instances that are currently running in the development
    account simply by logging onto the AWS Management Console and choosing to stop
    the instance under the Instance State settings. Some teams have been complaining
    that their workloads have been disrupted by other developers mistakenly stopping
    the wrong EC2 instances. How can you implement security measures so that only
    members from a particular team can start and stop their own EC2 instances using
    native AWS features?
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. For each development team in the company, create a policy that restricts
    the starting and stopping of instances to the `${aws:Principal/Team}` tag as the
    resource.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Add a `Team` tag to all the EC2 instances that can help restrict access by
    comparing the `${aws:Principal/Team}` tag attached by the individual developer
    to the `ec2:ResourceTag/Team` tag on the instance and seeing whether they match.
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Add a `Team` tag to all the EC2 instances. Restrict access to each team in
    the developer policy by seeing whether the EC2 instance matches the team tag.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. In the IAM developer role, remove the ability to start and stop instances.
    Create a CodePipeline job for each team that will allow them to see, start, and
    stop all of the instances for their development team.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You have an Extract, Transform, and Load (ETL) application that is sending
    its logs to CloudWatch Logs. The logs are landing in a CloudWatch log group and
    are formatted in JSON. The following is a sample of the log file:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How can you create a metric filter so you can find all events where the error
    code was `"CorruptFile"`?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'a. Filter Pattern: `{ $.errorCode = "CorruptFile" }`'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'b. Filter Pattern: `{ $.errorCode == "CorruptFile" }`'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Filter Pattern `{ errorCode = "CorruptFile" }`
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Filter Pattern `{ errorCode == "CorruptFile" }`
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Your company has requested that you create a reliable and durable logging solution
    for their three AWS accounts so that they can track the changes being made to
    their AWS resources. Which of the following options would help you successfully
    do this?
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Create a new CloudTrail with an existing bucket to store the logs. Select
    the global services option when creating the trail. Use IAM roles on the S3 bucket
    and S3 encryption to secure the bucket.
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Create three new CloudTrails with a single new bucket to store the logs.
    One trail will be for the AWS Management Console, one will be for SDK commands,
    and one will be for the AWS CLI. Use multi-factor authentication for any delete
    actions and S3 encryption on the buckets.
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Create a new CloudTrail with a new bucket to store the logs. Select the global
    services option when creating the trail. Use multi-factor authentication for any
    delete actions and S3 encryption on the bucket.
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Create three new CloudTrails with three new buckets to store the logs. One
    trail will be for the AWS Management Console, one will be for SDK commands, and
    one will be for the AWS CLI. Use IAM roles on the S3 bucket and S3 encryption
    to secure the buckets.
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Your company has used AWS Organizations to both create and manage their AWS
    account. There are multiple accounts, which include child accounts that contain
    organizational units that have been created using AWS Organizations. As the company
    grows, there is now a need to add uniform roles to each of the accounts. What
    is the most effective way to add all of the roles throughout the organization?
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. In the master account, use CloudFormation to deploy a template with which
    to create the new roles. Use CloudFormation StackSets to replicate the changes
    across the whole organization's child accounts.
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. In the master account of the organization, create a Service Control Policy
    (SCP), which will then add the roles to all the child accounts.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. In the master account, use CloudFormation to deploy a template with which
    to create the new roles. Use CloudFormation change sets to replicate the changes
    across the whole organization's child accounts.
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. In the master account, create a run command in Systems Manager to create
    the new IAM roles. Have Systems Manager perform the command on all of the child
    accounts to create the new role.
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Members of your DevOps team have come to you because they have noticed a problem
    with one of the Auto Scaling groups that has just been updated. Instead of reaching
    a steady state and serving traffic, the application is constantly scaling up and
    down numerous times an hour. Using the native features of CloudFormation, which
    settings could you help your team tune in order to stabilize the application?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Examine the current Auto Scaling group termination policy and change the
    value to terminate the oldest instance first so that newer instances stay online.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Examine the current Auto Scaling group termination policy and change the
    value to terminate to `ClosestToNextInstanceHour` so that the instances become
    more stabilized.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Find the previous version of the Auto Scaling launch template and deploy
    that version to stabilize the application.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Examine the current Auto Scaling group Health Check grace period and expand
    the time currently allocated for the instances to come online and become healthy.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A medium-sized software company has hired you as a DevOps consultant to help
    set up their deployment pipeline. They want to be able to push their tested code
    into their production environment in a quick manner but do not want the possibility
    of dealing with any downtime for their customers. You have worked with the application
    team to configure their application to run on containers and be deployed to Amazon
    Elastic Container Service (ECS). Their DNS is hosted on a third-party service
    and changes for the DNS would require a change ticket. What deployment method
    would you implement?
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. In the service settings of ECS, set the `minimumHealthyPercent` and `maximumHealthyPercent`
    values of tasks before you begin your rolling update to the service.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Create a CodeDeploy job for your updates. Use a blue/green deployment type.
    Set the configuration of the blue/green deployment to all-at-once.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Create a CodeDeploy job for your updates. Use a blue/green deployment type.
    Set the configuration of the blue/green deployment to linear.
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Create a CodeDeploy job for your updates. Use a blue/green deployment type.
    Set the configuration of the blue/green deployment to canary.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Your team has recently been subject to a code audit and there were multiple
    findings of plaintext database usernames and passwords in the application code.
    This has been flagged by the company as unacceptable and the team has been given
    30 days to remedy the problem. According to the company guidelines, the team needs
    to be able to store the secrets securely in an encrypted manner using a native
    AWS service that also has the ability to rotate the secret automatically every
    60 days. How can you and your team remedy this issue?
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Remove the database values that were previously set in the code base. Add
    environment variables to the deployment process. Insert the username and password
    as the corresponding deployment variables.
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Remove the database values that were previously set in the code base. Store
    the username and values in AWS Systems Manager Parameter Store. Update your IAM
    role to allow access to retrieve the secret from Parameter Store.
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Remove the database values that were previously set in the code base. Store
    the username and password in AWS Secrets Manager. Update your IAM role to allow
    access to retrieve the secret from Secrets Manager.
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Use KMS to encrypt the values for the username and password for the database.
    Replace the previous values in the code with the newly encrypted values.
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Your developers have created a DynamoDB table and seem to find that the performance
    always slows down after 20–25 minutes of their testing process. They can see from
    the basic monitoring on the AWS Management Console that their requests are being
    throttled. What can you do to help pinpoint the issue?
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a. Increase the Read Capacity Units (RCUs) on the table so that the queries
    are no longer throttled.
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b. Add enhanced CloudWatch monitoring with alarms whenever throttling occurs.
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c. Enable Contributor Insights on the table so that the keys that are being
    throttled the most are shown.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d. Add adaptive capacity to the table so that the extra RCUs are spread evenly
    across partitions that are becoming hot.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Test answers
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: c
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Since the bucket had versioning turned on, removing the delete marker restores
    the object, and any current or future deployments using that script will be able
    to find it.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can use the AWS CLI and the `autoscaling set-instance-health` command along
    with the `--health-status Unhealthy` flag to have the instance be out of service.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'More information can be found on the documentation page for the AWS CLI at
    the following link: [https://docs.aws.amazon.com/cli/latest/reference/autoscaling/set-instance-health.html](https://docs.aws.amazon.com/cli/latest/reference/autoscaling/set-instance-health.html).'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the configuration recorder, AWS Config can evaluate new resources being
    created in an account. Items are recorded as JSON snapshots to an S3 bucket declared
    in the setup.
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: RDS uses DNS to switch over to the standby replica for a seamless transition
    in a Multi-AZ implementation.
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Although the `AWSCodePipeline_FullAccess` policy would give approval access,
    it doesn't follow the AWS principle of least privilege. This policy would give
    the product owner more privileges than they need. Hence `AWSCodePipelineApproverAccess`
    would add the access that they were missing.
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You cannot modify a managed AWS policy, and hence this disqualifies both answers
    c and d. You are trying to prevent the action of users directly pushing to the
    master branch.
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You remove an on-premises instance tag from an on-premises instance when that
    tag is no longer being used, or if you want to remove the on-premises instance
    from any deployment groups that rely on that tag.
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a, d, and e
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Writing all the values to a file in S3 would not guarantee their integrity.
    It is a much more secure practice to use roles and to have database values stored
    in a credential store, such as Secrets Manager or Systems Manager Parameter Store.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `Fn::ImportValue` intrinsic function returns the value of an exported value
    of a previously created stack. This is used to create cross-stack references.
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Amazon Inspector is a security service and would not find latencies in an application.
    The X-Ray service helps developers identify the root cause of performance issues
    and errors.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c and e
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In order to gain access to resources in another AWS account, a cross-account
    IAM role needs to be created so that it can be assumed by the other AWS account.
    Likewise, the other account's users must have a policy attached to them that will
    allow for the assumption of the role.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The use of Amazon S3 life cycle policies will allow you and your team to have
    both immediate access to the current logs and the ability to store them on the
    low-cost option in Amazon Glacier as the auditor requires.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using AWS Systems Manager, you can use the combination of Patch Manager and
    Maintenance Windows to successfully automate this task in the recommended way
    by AWS.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Amazon GuardDuty can detect all of the different types of events that the CTO
    was concerned about. Adding a Lambda function that will post to the company's
    Microsoft Teams channel will satisfy the request.
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Only by deploying to multiple regions can you make sure that you are protected
    against a regional failure. Using a latency-based record in Route 53 will automatically
    point to the set of servers that is responding the quickest to a request in case
    of a failure.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: io1 volumes are crafted for workloads that require sustained IOPS performance
    and I/O-intensive database workloads.
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sensitive values should be stored in either Systems Manager Parameter Store
    or Secrets Manager. If Secrets Manager is used for CodeBuild, then the variable
    type should be selected as Secrets Manager and not `Plaintext`.
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Amazon Config is not a service used for monitoring and metrics.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: c
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Since the full site is made of static content, and S3 is the least expensive
    and reliable solution, this is the most optimum choice. Using S3 as the origin
    and being fronted by Amazon CloudFront will allow for assets to be served faster
    to the end user via edge locations.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: DynamoDB Streams cannot directly stream to S3 as a source, so a Lambda Function
    would need to first `GetRecords` and then put them to the specified S3 bucket
    with the life cycle policy.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A CloudWatch event bus allows you to add permissions on an organizational level.
    This also helps if your organization grows, as you don't have to keep track of
    which accounts you have added to the event bus or remember to take the extra step
    of adding the account to the event bus permissions when it is created.
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: b
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using tags on EC2 instances can be the first part of differentiating the ownership
    of EC2 instances between teams. `ec2:ResourceTag` is a tag that exists on an EC2
    resource and can be verified against an IAM policy.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The syntax of the metric filter would be `{ $.errorCode = "CorruptFile" }`.
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The use of the global option will send all of the API actions recorded to a
    single S3 bucket. Adding in MFA will prevent any unauthorized deletions of the
    logs.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS CloudFormation StackSets extends the functionality of CloudFormation stacks,
    allowing you to create, update, or delete stacks across multiple accounts and
    regions with a single operation.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Although you may be able to roll back with a code versioning system, adjusting
    the current health check of the Auto Scaling group will allow your instances to
    come online and become healthy.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: a
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A rolling type of deployment would be the most optimal type of deployment, especially
    when the DNS is hosted on a third-party provider.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Although both Systems Manager Parameter Store and AWS Secrets Manager will safely
    secure secrets according to the new guidelines in this scenario, only Secrets
    Manager will automatically rotate the database secrets.
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Amazon CloudWatch Contributor Insights integrates with DynamoDB to provide information
    about the most accessed and throttled items in a table or global secondary index.
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Question breakdown
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you are interested in how you are performing in a particular domain, then
    we have how the sample test questions would be grouped based on the test domains,
    as follows:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: '**Domain 1 – SDLC automation**:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: Question 6
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 11
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 17
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 23
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 26
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 27
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 28
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain 2 – Configuration management and infrastructure as code:**'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: Question 5
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 7
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 9
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 16
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain 3 – Monitoring and logging:**'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: Question 10
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 18
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 21
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 22
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 24
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 30
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain 4 – Policies and standards automation:**'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: Question 3
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 8
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 12
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 13
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain 5 – Incident and event response:**'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: Question 1
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 2
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 14
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 19
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain 6 – High availability, fault tolerance, and disaster recovery:**'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: Question 4
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 15
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 20
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Question 25
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are missing questions particularly in a specific area, then go back and
    reread those chapters, look to the end of [*Chapter 23*](B17405_23_Final_JM_ePub.xhtml#_idTextAnchor501),
    *Overview of the DevOps Professional Certification Test*, for one of the AWS Whitepapers
    that could give you more insight into that topic, or even watch some of the past
    re:Invent talks or AWS TechTalk videos to gain a better understanding of the domain.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's have one final summary of our journey to certification.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you have been presented with a number of sample DevOps professional
    exam questions so that you can practice all of the items that you have learned
    up to this point, as well as reading and comprehending the question and answer
    format that will be on the test.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: Hopefully, at this point, you feel confident to take and pass the DevOps Professional
    certification exam. Once you pass, you will join the small subset of individuals
    who can be quickly recognized for their skill in not only DevOps but also AWS
    and cloud technologies.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
