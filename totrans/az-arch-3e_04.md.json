["```\n$myCredential = Get-AutomationPSCredential -Name 'MyCredential'\n```", "```\nimport automationassets\ncred = automationassets.get_automation_credential(\"credtest\")\n```", "```\n$cert = New-SelfSignedCertificate -CertStoreLocation \"Cert:\\CurrentUser\\my\" -KeySpec KeyExchange -Subject \"cn=azureforarchitects\"\n```", "```\nLogin-AzAccount\n$certKey = [system.Convert]::ToBase64String($cert.GetRawCertData())\n$sp =  New-AzADServicePrincipal -DisplayName \"azureforarchitects\"\nNew-AzADSpCredential -ObjectId $sp.Id -CertValue $certKey -StartDate $cert.NotBefore -EndDate $cert.NotAfter\nNew-AzRoleAssignment -RoleDefinitionName contributor -ServicePrincipalName $sp.ApplicationId \nGet-AzADServicePrincipal -ObjectId $sp.Id\n$cert.Thumbprint\nGet-AzSubscription  \n```", "```\nparam(\n    [parameter(mandatory=$true)]\n    [string] $connectionName\n)\n$connection = Get-AutomationConnection  -name $connectionName  \n$subscriptionid = $connection.subscriptionid\n$tenantid = $connection.tenantid\n$applicationid = $connection.applicationid\n$cretThumbprint = $connection.CertificateThumbprint\nLogin-AzureRMAccount -CertificateThumbprint $cretThumbprint -ApplicationId $applicationid -ServicePrincipal -Tenant $tenantid  \nGet-AzureRMVM\n```", "```\n.\\ConnectAzure.ps1 -connectionName \"azureforarchitectsconnection\"\nGet-AzSqlServer\n```", "```\n$params = @{\"connectionName\"=\"azureforarchitectsconnection\"}\n$job = Start-AzurermAutomationRunbook '\n    –AutomationAccountName 'bookaccount' '\n    –Name 'ConnectAzure' '\n    -ResourceGroupName 'automationrg' -parameters $params\nif($job -ne $null) {\n    Start-Sleep -s 100\n    $job = Get-AzureAutomationJob -Id $job.Id -AutomationAccountName 'bookaccount'\n    if ($job.Status -match \"Completed\") {\n        $jobout = Get-AzureAutomationJobOutput '\n                                    -Id $job.Id '\n                                    -AutomationAccountName 'bookaccount' '\n                                    -Stream Output\n                    if ($jobout) {Write-Output $jobout.Text}\n    }\n}\n```", "```\nparam(\n    [parameter(mandatory=$true)]\n    [string] $connectionName\n)\n$connection = Get-AutomationConnection  -name $connectionName  \n$subscriptionid = $connection.subscriptionid\n$tenantid = $connection.tenantid\n$applicationid = $connection.applicationid\n$cretThumbprint = $connection.CertificateThumbprint\nLogin-AzAccount -CertificateThumbprint $cretThumbprint -ApplicationId $applicationid -ServicePrincipal -Tenant $tenantid  -SubscriptionId  $subscriptionid \nGet-AzVm\n```", "```\nparam(\n    [parameter(mandatory=$true)]\n    [object] $WebhookData\n)\n$webhookname = $WebhookData.WebhookName\n$headers = $WebhookData.RequestHeader\n$body = $WebhookData.RequestBody\nWrite-output \"webhook header data\"\nWrite-Output $webhookname\nWrite-output $headers.message\nWrite-output $headers.subject\n $connectionname = (ConvertFrom-Json -InputObject $body)\n./connectAzure.ps1 -connectionName  $connectionname[0].name\n```", "```\n$uri = \"https://s16events.azure-automation.net/webhooks?token=rp0w93L60fAPYZQ4vryxl%2baN%2bS1Hz4F3qVdUaKUDzgM%3d\"\n$connection  = @(\n            @{  name=\"azureforarchitectsconnection\"}\n\n        )\n$body = ConvertTo-Json -InputObject $ connection  \n$header = @{ subject=\"VMS specific to Ritesh\";message=\"Get all virtual machine details\"}\n\n$response = Invoke-WebRequest -Method Post -Uri $uri -Body $body -Headers $header\n$jobid = (ConvertFrom-Json ($response.Content)).jobids[0] \n```", "```\n    Install-Script -Name New-OnPremiseHybridWorker -verbose\n    ```", "```\n    New-OnPremiseHybridWorker.ps1 -AutomationAccountName bookaccount -AAResourceGroupName automationrg '\n    -HybridGroupName \"localrunbookexecutionengine\" '\n    -SubscriptionID xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  \n    ```", "```\n    Install-module -name Az -AllowClobber -verbose\n    ```", "```\nconfiguration ensureiis {\nimport-dscresource -modulename psdesiredstateconfiguration\n\nnode localhost {        \n        WindowsFeature iis {\n            Name = \"web-server\"\n            Ensure = \"Present\"\n\n        }\n    }\n}\n```", "```\nImport-AzAutomationDscConfiguration -SourcePath \"C:\\Ritesh\\ensureiis.ps1\" -AutomationAccountName bookaccount -ResourceGroupName automationrg -Force -Published\n```", "```\nStart-AzAutomationDscCompilationJob -ConfigurationName 'ensureiis' -ResourceGroupName 'automationrg' -AutomationAccountName 'bookaccount'\n```", "```\nRegister-AzAutomationDscNode -ResourceGroupName 'automationrg' -AutomationAccountName 'bookaccount' -AzureVMLocation \"west Europe\" -AzureVMResourceGroup 'spark' -AzureVMName 'spark' -ConfigurationModeFrequencyMins 30 -ConfigurationMode 'ApplyAndAutoCorrect' \n```", "```\n$node = Get-AzAutomationDscNode -ResourceGroupName 'automationrg' -AutomationAccountName 'bookaccount' -Name 'spark' \n```", "```\nSet-AzAutomationDscNode -ResourceGroupName 'automationrg' -AutomationAccountName 'bookaccount' -NodeConfigurationName 'ensureiis.localhost' -NodeId $node.Id \n```"]