["```\n    (Get-AzResource -Tag @{ \"Environment\"=\"Production\"}).Name \n    ```", "```\n    Get-AzResourceGroup -Tag @{\"Environment\"=\"Production\"} \n    ```", "```\n    $tags = @{\"Dept\"=\"IT\"; \"Environment\"=\"Production\"}\n    $resourceGroup = Get-AzResourceGroup -Name demoGroup\n    New-AzTag -ResourceId $resourceGroup.ResourceId -Tag $tags\n    ```", "```\n    $tags = @{\"Dept\"=\"Finance\"; \"Status\"=\"Normal\"}\n    $resource = Get-AzResource -Name demoStorage -ResourceGroup demoGroup \n    New-AzTag -ResourceId $resource.id -Tag $tags\n    ```", "```\n    $tags = @{\"Dept\"=\"IT\"; \"Environment\"=\"Production\"}\n    $resourceGroup = Get-AzResourceGroup -Name demoGroup\n    Update-AzTag -ResourceId $resourceGroup.ResourceId -Tag $tags  -Operation Merge\n    ```", "```\n{ \n    \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\", \n    \"contentVersion\": \"1.0.0.0\", \n    \"resources\": [ \n    { \n      \"apiVersion\": \"2019-06-01\", \n      \"type\": \"Microsoft.Storage/storageAccounts\", \n      \"name\": \"[concat('storage', uniqueString(resourceGroup().id))]\", \n      \"location\": \"[resourceGroup().location]\", \n      \"tags\": { \n        \"Dept\": \"Finance\", \n        \"Environment\": \"Production\" \n      }, \n      \"sku\": { \n        \"name\": \"Standard_LRS\" \n      }, \n      \"kind\": \"Storage\", \n      \"properties\": { } \n    } \n    ] \n}\n```", "```\n{ \n  \"if\": { \n    <condition> | <logical operator> \n  }, \n  \"then\": { \n    \"effect\": \"deny | audit | append\" \n  } \n} \n```", "```\n\"if\": { \n  \"allOf\": [ \n    { \n       \"field\": \"tags\", \n        \"containsKey\": \"application\" \n    }, \n    { \n      \"field\": \"type\", \n      \"equals\": \"Microsoft.Storage/storageAccounts\" \n    } \n  ] \n}, \n```", "```\n\"if\": { \n  \"anyOf\": [ \n    { \n       \"field\": \"tags\", \n        \"containsKey\": \"application\" \n    }, \n    { \n      \"field\": \"type\", \n      \"equals\": \"Microsoft.Storage/storageAccounts\" \n    } \n  ] \n}, \n```", "```\n\"if\": { \n  \"not\": [ \n    { \n       \"field\": \"tags\", \n        \"containsKey\": \"application\" \n    }, \n    { \n      \"field\": \"type\", \n      \"equals\": \"Microsoft.Storage/storageAccounts\" \n    } \n  ] \n}, \n```", "```\n\"if\": { \n  \"allOf\": [ \n    { \n      \"not\": { \n        \"field\": \"tags\", \n        \"containsKey\": \"application\" \n      } \n    }, \n    { \n      \"field\": \"type\", \n      \"equals\": \"Microsoft.Storage/storageAccounts\" \n    } \n  ] \n},\n```", "```\nIf (\"type\" == \"Microsoft.Storage/storageAccounts\") { \n      Deny \n}\n```", "```\n{ \n  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\", \n  \"contentVersion\": \"1.0.0.0\", \n  \"parameters\": { \n    \"lockedResource\": { \n      \"type\": \"string\" \n    } \n  }, \n  \"resources\": [ \n    { \n      \"name\": \"[concat(parameters('lockedResource'), '/Microsoft.Authorization/myLock')]\", \n      \"type\": \"Microsoft.Storage/storageAccounts/providers/locks\", \n      \"apiVersion\": \"2019-06-01\", \n      \"properties\": { \n        \"level\": \"CannotDelete\" \n      } \n    } \n  ] \n}\n```", "```\nNew-AzResourceLock -LockLevel CanNotDelete -LockName LockSite '\n  -ResourceName examplesite -ResourceType Microsoft.Web/sites '\n  -ResourceGroupName exampleresourcegroup\n```", "```\nNew-AzResourceLock -LockName LockGroup -LockLevel CanNotDelete '\n  -ResourceGroupName exampleresourcegroup\n```", "```\naz lock create --name LockSite --lock-type CanNotDelete \\\n  --resource-group exampleresourcegroup --resource-name examplesite \\\n  --resource-type Microsoft.Web/sites\n```", "```\naz lock create --name LockGroup --lock-type CanNotDelete \\ --resource-group exampleresourcegroup\n```", "```\nPS C:\\Users\\riskaria> Get-AzRoleDefinition -Name \"Owner\"\nName             : Owner\nId               : 8e3af657-a8ff-443c-a75c-2fe8c4bcb635\nIsCustom         : False\nDescription      : Lets you manage everything, including access to resources.\nActions          : {*}\nNotActions       : {}\nDataActions      : {}\nNotDataActions   : {}\nAssignableScopes : {/}\n```", "```\nPS C:\\Users\\riskaria> Get-AzProviderOperation -OperationSearchString \"Microsoft.Insights/*\" | select Operation\n```", "```\nPS C:\\Users\\riskaria> Get-AzProviderOperation -OperationSearchString \"Microsoft.Insights/*\" | select Operation\nOperation                                                                                 \n---------                                                                                 \nMicrosoft.Insights/Metrics/Action                                                         \nMicrosoft.Insights/Register/Action                                                        \nMicrosoft.Insights/Unregister/Action                                                      \nMicrosoft.Insights/ListMigrationDate/Action                                               \nMicrosoft.Insights/MigrateToNewpricingModel/Action                                        \nMicrosoft.Insights/RollbackToLegacyPricingModel/Action  \n.\n.\n.\n.\n.\n.\n.\n.\nMicrosoft.Insights/PrivateLinkScopes/PrivateEndpointConnectionProxies/Read                \nMicrosoft.Insights/PrivateLinkScopes/PrivateEndpointConnectionProxies/Write               \nMicrosoft.Insights/PrivateLinkScopes/PrivateEndpointConnectionProxies/Delete              \nMicrosoft.Insights/PrivateLinkScopeOperationStatuses/Read                                 \nMicrosoft.Insights/DiagnosticSettingsCategories/Read\n```", "```\n$role = Get-AzRoleDefinition \"Virtual Machine Contributor\" \n$role.Id = $null \n$role.Name = \"Virtual Machine Operator\" \n$role.Description = \"Can monitor and restart virtual machines.\" \n$role.Actions.Clear()\n$role.Actions.Add(\"Microsoft.Storage/*/read\") \n$role.Actions.Add(\"Microsoft.Network/*/read\") \n$role.Actions.Add(\"Microsoft.Compute/*/read\") \n$role.Actions.Add(\"Microsoft.Compute/virtualMachines/start/action\") \n$role.Actions.Add(\"Microsoft.Compute/virtualMachines/restart/action\")\n$role.Actions.Add(\"Microsoft.Authorization/*/read\") \n$role.Actions.Add(\"Microsoft.Resources/subscriptions/resourceGroups/read\") \n$role.Actions.Add(\"Microsoft.Insights/alertRules/*\") \n$role.Actions.Add(\"Microsoft.Support/*\") \n$role.AssignableScopes.Clear() \n$role.AssignableScopes.Add(\"/subscriptions/548f7d26-b5b1-468e-ad45-6ee12accf7e7\") \nNew-AzRoleDefinition -Role $role\n```"]