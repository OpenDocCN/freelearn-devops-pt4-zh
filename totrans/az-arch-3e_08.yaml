- en: 8\. Architecting secure applications on Azure
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8. 在 Azure 上构建安全应用的架构
- en: In the previous chapter, we discussed Azure data services. As we are dealing
    with sensitive data, security is a big concern. Security is, undoubtedly, the
    most important non-functional requirement for architects to implement. Enterprises
    put lots of emphasis on having their security strategy implemented correctly.
    In fact, security is one of the top concerns for almost every stakeholder in an
    application's development, deployment, and management. It becomes all the more
    important when an application is built for deployment to the cloud.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了 Azure 数据服务。由于我们正在处理敏感数据，安全性成为一个大问题。毫无疑问，安全性是架构师必须实现的最重要的非功能性需求。企业非常重视正确实施其安全策略。实际上，安全性是几乎所有利益相关者在应用的开发、部署和管理过程中关注的重点之一。当应用被构建并部署到云时，安全性变得更加重要。
- en: 'In order for you to understand how you can secure your applications on Azure
    depending upon the nature of the deployment, the following topics will be covered
    in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助你了解如何根据部署的性质保护在 Azure 上的应用，本章将涵盖以下内容：
- en: Understanding security in Azure
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 Azure 中的安全性
- en: Security at the infrastructure level
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础设施层的安全性
- en: Security at the application level
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用层的安全性
- en: Authentication and authorization in Azure applications
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 应用中的认证与授权
- en: Working with OAuth, Azure Active Directory, and other authentication methods
    using federated identity, including third-party identity providers such as Facebook
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OAuth、Azure Active Directory 和其他通过联合身份验证的方法，包括第三方身份提供商如 Facebook
- en: Understanding managed identities and using them to access resources
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解托管身份并使用它们访问资源
- en: Security
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全性
- en: As mentioned before, security is an important element for any software or service.
    Adequate security should be implemented so that an application can only be used
    by people who are allowed to access it, and users should not be able to perform
    operations that they are not allowed to execute. Similarly, the entire request-response
    mechanism should be built using methods that ensure that only intended parties
    can understand messages, and to make sure that it is easy to detect whether messages
    have been tampered with or not.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，安全性是任何软件或服务的重要元素。应实施适当的安全措施，使得应用仅能被允许访问的人使用，且用户不应执行他们无权操作的功能。同样，整个请求-响应机制应该使用确保只有目标方能够理解消息的方法构建，并确保能够轻松检测消息是否已被篡改。
- en: For the following reasons, security in Azure is even more important. Firstly,
    the organizations deploying their applications are not in full control of the
    underlying hardware and networks. Secondly, security has to be built into every
    layer, including hardware, networks, operating systems, platforms, and applications.
    Any omissions or misconfigurations can render an application vulnerable to intruders. For
    example, you might have heard of the recent vulnerability that affected Zoom meetings
    that let hackers record meetings even when the meeting host had disabled recording
    for attendees. Sources claim that millions of Zoom accounts have been sold on
    the dark web. The company has taken the necessary action to address this vulnerability.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下原因使得 Azure 中的安全性变得尤为重要。首先，部署应用的组织无法完全控制底层硬件和网络。其次，安全性必须在每一层中构建，包括硬件、网络、操作系统、平台和应用。任何疏漏或配置错误都可能导致应用暴露于入侵者的攻击之下。例如，你可能听说过最近影响
    Zoom 会议的漏洞，该漏洞允许黑客即使在会议主持人禁用与会者录音功能时，仍能录制会议。有消息称，数百万个 Zoom 账户已被销售到暗网。公司已经采取了必要的措施来解决这个漏洞。
- en: Security is a big concern nowadays, especially when hosting applications in
    the cloud, and can lead to dire consequences if mishandled. Hence, it's necessary
    to understand the best practices involved in securing your workloads. We are progressing
    in the area of DevOps, where development and operations teams collaborate effectively
    with the help of tools and practices, and security has been a big concern there
    as well.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性是当前一个重要的问题，尤其是在云环境中托管应用时，如果处理不当可能会导致严重后果。因此，理解保护工作负载的最佳实践非常必要。随着 DevOps 领域的进展，开发和运维团队借助工具和实践进行有效协作，安全性也成为一个重要关注点。
- en: To accommodate security principles and practices as a vital part of DevOps without
    affecting the overall productivity and efficiency of the process, a new culture
    known as **DevSecOps** has been introduced. DevSecOps helps us to identify security
    issues early in the development stage rather than mitigating them after shipping.
    In a development process that has security as a key principle of every stage,
    DevSecOps reduces the cost of hiring security professionals at a later stage to
    find security flaws with software.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将安全原则和实践作为DevOps的重要组成部分，而不影响整体生产力和效率，已经引入了一种新的文化，称为**DevSecOps**。DevSecOps帮助我们在开发阶段及早识别安全问题，而不是在发布后再进行缓解。在一个将安全作为每个阶段关键原则的开发过程中，DevSecOps减少了后期雇佣安全专业人员来查找软件安全漏洞的成本。
- en: 'Securing an application means that unknown and unauthorized entities are unable
    to access it. This also means that communication with the application is secure
    and not tampered with. This includes the following security measures:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 保护应用程序意味着未知和未经授权的实体无法访问它。这也意味着与应用程序的通信是安全的且未被篡改。包括以下安全措施：
- en: '**Authentication**: Authentication checks the identity of a user and ensures
    that the given identity can access the application or service. Authentication
    is performed in Azure using OpenID Connect, which is an authentication protocol
    built on OAuth 2.0.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**身份验证**：身份验证检查用户的身份，并确保给定的身份可以访问应用程序或服务。在Azure中，身份验证使用基于OAuth 2.0构建的身份验证协议OpenID
    Connect来执行。'
- en: '**Authorization**: Authorization allows and establishes permissions that an
    identity can perform within the application or service. Authorization is performed
    in Azure using OAuth.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权**：授权允许并确定身份在应用程序或服务内能够执行的权限。授权在Azure中使用OAuth来执行。'
- en: '**Confidentiality**: Confidentiality ensures that communication between the
    user and the application remains secure. The payload exchange between entities
    is encrypted so that it will make sense only to the sender and the receiver, but
    not to others. The confidentiality of messages is ensured using symmetric and
    asymmetric encryption. Certificates are used to implement cryptography—that is,
    the encryption and decryption of messages.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**机密性**：机密性确保用户与应用程序之间的通信保持安全。实体之间的有效载荷交换是加密的，只有发送方和接收方能够理解，而其他人无法解读。消息的机密性通过对称加密和非对称加密来保障。证书用于实现加密，即消息的加密和解密。'
- en: Symmetric encryption uses a single key, which is shared with the sender and
    the receiver, while asymmetric encryption uses a pair of private and public keys
    for encryption, which is more secure. SSH key pairs in Linux, which are used for
    authentication, is a very good example of asymmetric encryption.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对称加密使用一个共享的密钥，发送方和接收方都使用这个密钥，而非对称加密则使用一对私钥和公钥进行加密，提供更高的安全性。Linux中的SSH密钥对，作为身份验证的工具，就是非对称加密的一个很好的例子。
- en: '**Integrity**: Integrity ensures that the payload and message exchange between
    the sender and the receiver is not tampered with. The receiver receives the same
    message that was sent by the sender. Digital signatures and hashes are the implementation
    mechanisms to check the integrity of incoming messages.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整性**：完整性确保发送方和接收方之间的有效载荷和消息交换不会被篡改。接收方收到的消息与发送方发送的消息完全相同。数字签名和哈希是检查传入消息完整性的实现机制。'
- en: Security is a partnership between the service provider and the service consumer.
    Both parties have different levels of control over deployment stacks, and each
    should implement security best practices to ensure that all threats are identified
    and mitigated. We already know from *Chapter 1, Getting started with Azure*, that
    the cloud broadly provides three paradigms—IaaS, PaaS, and SaaS—and each of these
    has different levels of collaborative control over the deployment stack. Each
    party should implement security practices for the components under its control
    and within its scope. Failure to implement security at any layer in the stack
    or by any party would make the entire deployment and application vulnerable to
    attack. Every organization needs to have a life cycle model for security, just
    as for any other process. This ensures that security practices are continuously
    improved to avoid any security flaws. In the next section, we'll be discussing
    the security life cycle and how it can be used.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性是服务提供者与服务消费者之间的合作。双方对部署堆栈有不同的控制级别，每方都应实施安全最佳实践，以确保所有威胁被识别并得到缓解。从*第一章，开始使用Azure*中，我们已经知道云计算大致提供三种模式——IaaS、PaaS和SaaS——每种模式在部署堆栈的协作控制上有所不同。每方应对其控制和范围内的组件实施安全实践。若在任何层面或任何一方未实施安全性，整个部署和应用将容易受到攻击。每个组织都需要有一个安全生命周期模型，就像对待任何其他流程一样。这确保了安全实践不断改进，以避免任何安全漏洞。在下一节中，我们将讨论安全生命周期及其如何使用。
- en: Security life cycle
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安全生命周期
- en: Security is often regarded as a non-functional requirement for a solution. However,
    with the growing number of cyberattacks at the moment, nowadays it is considered
    a functional requirement of every solution.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性通常被视为解决方案的非功能性需求。然而，随着网络攻击数量的增加，现在它被视为每个解决方案的功能性需求。
- en: Every organization follows some sort of application life cycle management for
    their applications. When security is treated as a functional requirement, it should
    follow the same process of application development. Security should not be an
    afterthought; it should be part of the application from the beginning. Within
    the overall planning phase for an application, security should also be planned.
    Depending on the nature of the application, different kinds and categories of
    threats should be identified, and, based on these identifications, they should
    be documented in terms of scope and approach to mitigate them. A threat modeling
    exercise should be undertaken to illustrate the threat each component could be
    subject to. This will lead to designing security standards and policies for the
    application. This is typically the security design phase. The next phase is called
    the threat mitigation or build phase. In this phase, the implementation of security
    in terms of code and configuration is executed to mitigate security threats and
    risks.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 每个组织都会遵循某种形式的应用生命周期管理。当安全性被视为功能性需求时，它应该遵循与应用开发相同的流程。安全性不应是事后考虑的问题；它应从一开始就成为应用的一部分。在应用的整体规划阶段，安全性也应该进行规划。根据应用的性质，应识别不同类型和类别的威胁，并根据这些识别，应该在范围和应对措施方面进行文档化。应进行威胁建模演练，以说明每个组件可能面临的威胁。这将有助于为应用设计安全标准和政策。这通常是安全设计阶段。下一阶段称为威胁缓解或构建阶段。在这一阶段，实施安全性的代码和配置，以缓解安全威胁和风险。
- en: 'A system cannot be secure until it is tested. Appropriate penetration tests
    and other security tests should be performed to identify potential threat mitigation
    that has not been implemented or has been overlooked. The bugs from testing are
    remediated and the cycle continues throughout the life of the application. This
    process of application life cycle management, shown in *Figure 8.1*, should be
    followed for security:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 系统在未经测试之前无法被认为是安全的。应执行适当的渗透测试和其他安全测试，以识别未实施或被忽视的潜在威胁缓解措施。通过测试发现的漏洞将得到修复，生命周期将在应用的整个过程中持续进行。这种应用生命周期管理过程，如*图
    8.1*所示，应遵循安全性：
- en: '![A flow diagram showing the security life cycle, which moves through Planning,
    Threat Identification (Design), Threat Mitigation (Build), Testing, and Remediation.](img/B15432_08_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![显示安全生命周期的流程图，包括规划、威胁识别（设计）、威胁缓解（构建）、测试和补救。](img/B15432_08_01.jpg)'
- en: 'Figure 8.1: Security life cycle'
  id: totrans-26
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8.1：安全生命周期
- en: Planning, threat modeling, identification, mitigation, testing, and remediation
    are iterative processes that continue even when an application or service is operational.
    There should be active monitoring of entire environments and applications to proactively
    identify threats and mitigate them. Monitoring should also enable alerts and audit
    logs to help in reactive diagnosis, troubleshooting, and the elimination of threats
    and vulnerabilities.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 规划、威胁建模、识别、缓解、测试和修复是一个迭代的过程，即使在应用程序或服务投入使用后，这些过程仍然会继续。应该积极监控整个环境和应用程序，以便主动识别威胁并进行缓解。监控还应启用警报和审计日志，以帮助进行反应性诊断、故障排除以及消除威胁和漏洞。
- en: The security life cycle of any application starts with the planning phase, which
    eventually leads to the design phase. In the design phase, the application's architecture
    is decomposed into granular components with discrete communication and hosting
    boundaries. Threats are identified based on their interaction with other components
    within and across hosting boundaries. Within the overall architecture, threats
    are mitigated by implementing appropriate security features, and once the mitigation
    is in place, further testing is done to verify whether the threat still exists.
    After the application is deployed to production and becomes operational, it is
    monitored for any security breaches and vulnerabilities, and either proactive
    or reactive remediation is conducted.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 任何应用程序的安全生命周期从规划阶段开始，最终进入设计阶段。在设计阶段，应用程序的架构被分解成细化的组件，并具有独立的通信和托管边界。威胁是基于它们与其他组件之间的交互以及跨托管边界的交互来识别的。在整体架构中，通过实施适当的安全特性来缓解威胁，一旦缓解措施到位，进一步的测试会验证威胁是否仍然存在。应用程序部署到生产环境并投入使用后，将对其进行安全监控，以检测任何安全漏洞和风险，并采取主动或被动的修复措施。
- en: As mentioned earlier, different organizations have different processes and methods
    to implement the security life cycle; likewise, Microsoft provides complete guidance
    and information about the security life cycle, which is available at [https://www.microsoft.com/securityengineering/sdl/practices](https://www.microsoft.com/securityengineering/sdl/practices).
    Using the practices that Microsoft has shared, every organization can focus on
    building more secure solutions. As we are progressing in the era of cloud computing
    and migrating our corporate and customer data to the cloud, learning how to secure
    that data is vital. In the next section, we will explore Azure security and the
    different levels of security, which will help us to build secure solutions in
    Azure.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，不同的组织有不同的流程和方法来实施安全生命周期；同样，微软提供了有关安全生命周期的完整指导和信息，详细信息请访问[https://www.microsoft.com/securityengineering/sdl/practices](https://www.microsoft.com/securityengineering/sdl/practices)。通过微软分享的实践，每个组织都可以专注于构建更加安全的解决方案。在云计算时代的进步以及企业和客户数据迁移到云端的过程中，学习如何保护这些数据至关重要。在接下来的部分，我们将探讨Azure安全性以及不同级别的安全性，这将帮助我们在Azure中构建安全的解决方案。
- en: Azure security
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure安全性
- en: Azure provides all its services through datacenters in multiple Azure regions.
    These datacenters are interconnected within regions, as well as across regions.
    Azure understands that it hosts mission-critical applications, services, and data
    for its customers. It must ensure that security is of the utmost importance for
    its datacenters and regions.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Azure通过多个Azure区域的数据中心提供所有服务。这些数据中心在区域内部以及区域之间互联。Azure了解它为客户托管着关键任务应用程序、服务和数据，因此必须确保数据中心和区域的安全性是至关重要的。
- en: 'Customers deploy applications to the cloud based on their belief that Azure
    will protect their applications and data from vulnerabilities and breaches. Customers
    will not move to the cloud if this trust is broken, and so Azure implements security
    at all layers, as seen in *Figure 8.2*, from the physical perimeter of datacenters
    to logical software components. Each layer is protected, and even the Azure datacenter
    team does not have access to them:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 客户将应用程序部署到云端，是基于他们相信Azure会保护他们的应用程序和数据免受漏洞和泄露的威胁。如果这种信任被打破，客户将不会迁移到云端，因此Azure在所有层次上实施安全措施，如*图8.2*所示，从数据中心的物理边界到逻辑软件组件。每一层都有保护措施，甚至Azure数据中心团队也无法访问它们：
- en: '![A diagram illustrating the security features at different layers in Azure
    datacenters.](img/B15432_08_02.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![展示Azure数据中心不同层次安全特性的图示。](img/B15432_08_02.jpg)'
- en: 'Figure 8.2: Security features at different layers in Azure datacenters'
  id: totrans-34
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图8.2：Azure数据中心不同层次的安全特性
- en: Security is of paramount importance to both Microsoft and Azure. Microsoft ensures
    that trust is built with its customers, and it does so by ensuring that its customers'
    deployments, solutions, and data are completely secure, both physically and virtually.
    People will not use a cloud platform if it is not physically and digitally secure.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 安全对微软和Azure至关重要。微软通过确保客户的部署、解决方案和数据在物理和虚拟层面上都得到完全的保护，从而建立起客户的信任。如果一个云平台不安全，无论是物理还是数字层面的，用户是不会使用它的。
- en: 'To ensure that customers have trust in Azure, each activity in the development
    of Azure is planned, documented, audited, and monitored from a security perspective.
    The physical Azure datacenters are protected from intrusion and unauthorized access.
    In fact, even Microsoft personnel and operations teams do not have access to customer
    solutions and data. Some of the out-of-the-box security features provided by Azure
    are listed here:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保客户对Azure的信任，Azure开发中的每个活动都从安全角度进行规划、记录、审计和监控。物理Azure数据中心受到防止入侵和未经授权访问的保护。事实上，甚至微软的员工和运营团队也无法访问客户的解决方案和数据。以下是Azure提供的一些开箱即用的安全功能：
- en: '**Secure user access**: A customer''s deployment, solution, and data can only
    be accessed by the customer. Even Azure datacenter personnel do not have access
    to customer artifacts. Customers can allow access to other people; however, that
    is at the discretion of the customer.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全用户访问**：只有客户可以访问自己的部署、解决方案和数据。即使是Azure数据中心的人员也无法访问客户的资料。客户可以允许其他人访问，但这是由客户自行决定的。'
- en: '**Encryption at rest**: Azure encrypts all its management data, which includes
    a variety of enterprise-grade storage solutions to accommodate different needs.
    Microsoft also provides encryption to managed services such as Azure SQL Database,
    Azure Cosmos DB, and Azure Data Lake as well. Since the data is encrypted at rest,
    it cannot be read by anyone. It also provides this functionality to its customers,
    as well as those who can encrypt their data at rest.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**静态数据加密**：Azure对所有管理数据进行加密，包括各种企业级存储解决方案，以满足不同的需求。微软还为像Azure SQL数据库、Azure
    Cosmos DB和Azure Data Lake等托管服务提供加密。由于数据是静态加密的，因此无法被任何人读取。它还为客户提供此功能，客户可以加密自己的静态数据。'
- en: '**Encryption at transit**: Azure encrypts all data that flows from its network.
    It also ensures that its network backbone is protected from any unauthorized access.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传输加密**：Azure对所有从其网络传输的数据进行加密，同时确保其网络主干不会受到未经授权的访问。'
- en: '**Active monitoring and auditing**: Azure monitors all its datacenters actively
    on an ongoing basis. It actively identifies any breach, threat, or risk, and mitigates
    them.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主动监控和审计**：Azure会持续主动监控所有数据中心，及时识别任何违反规定、威胁或风险，并加以缓解。'
- en: Azure meets country-specific, local, international, and industry-specific compliance
    standards. You can explore the complete list of Microsoft compliance offerings
    at [https://www.microsoft.com/trustcenter/compliance/complianceofferings](https://www.microsoft.com/trustcenter/compliance/complianceofferings).
    Keep this as a reference while deploying compliant solutions in Azure. Now that
    we know the key security features in Azure, let's go ahead and take a deep dive
    into IaaS security. In the next section, we will explore how customers can leverage
    the security features available for IaaS in Azure.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Azure符合各国、地方、国际及行业特定的合规标准。你可以在[https://www.microsoft.com/trustcenter/compliance/complianceofferings](https://www.microsoft.com/trustcenter/compliance/complianceofferings)上查阅微软合规性服务的完整清单。在部署符合合规要求的解决方案时，务必将其作为参考。现在我们已经了解了Azure的主要安全功能，接下来让我们深入探讨IaaS安全。在接下来的部分中，我们将探索客户如何利用Azure提供的IaaS安全功能。
- en: IaaS security
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IaaS 安全
- en: Azure is a mature platform for deploying IaaS solutions. There are lots of users
    of Azure who want complete control over their deployments, and they typically
    use IaaS for their solutions. It is important that these deployments and solutions
    are secure, by default and by design. Azure provides rich security features to
    secure IaaS solutions. In this section, some of the main features will be covered.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Azure是一个成熟的IaaS解决方案部署平台。许多Azure用户希望完全控制他们的部署，这些用户通常会使用IaaS来处理他们的解决方案。确保这些部署和解决方案的安全性是至关重要的，无论是默认的还是设计时的。Azure提供了丰富的安全功能来保护IaaS解决方案。在本部分中，我们将介绍一些主要的安全功能。
- en: Network security groups
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络安全组
- en: The bare minimum of IaaS deployment consists of virtual machines and virtual
    networks. A virtual machine might be exposed to the internet by applying a public
    IP to its network interface, or it might only be available to internal resources.
    Some of those internal resources might, in turn, be exposed to the internet. In
    any case, virtual machines should be secured so that unauthorized requests should
    not even reach them. Virtual machines should be secured using facilities that
    can filter requests on the network itself, rather than the requests reaching a
    virtual machine and it having to take action on them.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS 部署的最基本组成包括虚拟机和虚拟网络。虚拟机可能通过将公共 IP 分配给其网络接口暴露到互联网，或者仅对内部资源可用。其中一些内部资源可能会反过来暴露到互联网。无论如何，虚拟机应当确保其安全，以便未经授权的请求根本无法到达它们。虚拟机应通过能够过滤网络本身请求的机制进行安全保护，而不是让请求到达虚拟机后再采取行动。
- en: Ring-fencing is a mechanism that virtual machines use as one of their security
    mechanisms. This fence can allow or deny requests depending on their protocol,
    origin IP, destination IP, originating port, and destination port. This feature
    is deployed using the Azure **network security groups** (**NSGs**) resource. NSGs
    are composed of rules that are evaluated for both incoming and outgoing requests.
    Depending on the execution and evaluation of these rules, it is determined whether
    the requests should be allowed or denied access.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 隔离机制（Ring-fencing）是虚拟机使用的安全机制之一。此防护墙可以根据协议、源 IP、目标 IP、源端口和目标端口允许或拒绝请求。此功能通过
    Azure **网络安全组**（**NSGs**）资源进行部署。NSGs 由规则组成，评估传入和传出的请求。根据这些规则的执行和评估，决定是否允许或拒绝访问请求。
- en: NSGs are flexible and can be applied to a virtual network subnet or individual
    network interfaces. When applied to a subnet, the security rules are applied to
    all virtual machines hosted on the subnet. On the other hand, applying to a network
    interface affects requests to only a particular virtual machine associated with
    that network interface. It is also possible to apply NSGs to both network subnets
    and network interfaces simultaneously. Typically, this design should be used to
    apply common security rules at the network subnet level, and unique security rules
    at the network interface level. It helps to design modular security rules.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: NSGs 灵活且可以应用于虚拟网络子网或单个网络接口。当应用于子网时，安全规则会应用到该子网上托管的所有虚拟机。另一方面，应用于网络接口时，只影响与该网络接口关联的特定虚拟机的请求。也可以同时将
    NSGs 应用到网络子网和网络接口。通常，应该使用这种设计在网络子网级别应用通用安全规则，在网络接口级别应用独特的安全规则。这有助于设计模块化的安全规则。
- en: 'The flow for evaluating NSGs is shown in *Figure 8.3*:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 评估 NSGs 的流程如*图 8.3*所示：
- en: '![A flow diagram illustrating the evaluation of NSGs, which starts when the
    Azure host receives traffic and finally ends either by dropping the packet or
    allowing it.](img/B15432_08_03.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![一个说明评估 NSGs 流程的图，流程从 Azure 主机接收流量开始，最终通过丢弃数据包或允许它结束。](img/B15432_08_03.jpg)'
- en: 'Figure 8.3: A flow diagram representing the evaluation of NSGs'
  id: totrans-50
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8.3：表示评估 NSGs 的流程图
- en: When a request reaches an Azure host, depending on whether it's an inbound or
    outbound request, appropriate rules are loaded and executed against the request/response.
    If the rule matches the request/response, either the request/response is allowed
    or denied. The rule matching consists of important request/response information,
    such as the source IP address, destination IP address, source port, destination
    port, and protocol used. Additionally, NSGs support service tags. A service tag
    denotes a group of IP address prefixes from a given Azure service. Microsoft manages
    the address prefixes and automatically updates them. This eliminates the hassle
    of updating the security rules every time there is an address prefix change.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当请求到达 Azure 主机时，根据请求是传入请求还是传出请求，适当的规则会加载并应用到请求/响应上。如果规则与请求/响应匹配，则请求/响应被允许或拒绝。规则匹配由重要的请求/响应信息组成，如源
    IP 地址、目标 IP 地址、源端口、目标端口和使用的协议。此外，NSGs 支持服务标签。服务标签表示来自特定 Azure 服务的一组 IP 地址前缀。微软管理这些地址前缀并自动更新，从而消除了每次地址前缀变更时需要更新安全规则的麻烦。
- en: The set of service tags available for use is available at [https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
    Service tags can be used with NSGs as well as with Azure Firewall. Now that you
    have learned about how NSGs work, let's take a look at the NSG design, which will
    help you determine the primary points you should consider while creating NSG rules
    to improve security.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于的服务标签集可以在[https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags)中找到。服务标签可以与NSG一起使用，也可以与Azure防火墙一起使用。现在你已经了解了NSG的工作原理，我们来看看NSG设计，这将帮助你在创建NSG规则以提高安全性时，确定应该考虑的主要点。
- en: '**NSG design**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**NSG设计**'
- en: 'The first step in designing an NSG is to ascertain the security requirements
    of the resource. The following should be determined or considered:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 设计NSG的第一步是确定资源的安全需求。应确定或考虑以下内容：
- en: Is the resource accessible from the internet only?
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该资源仅从互联网可访问吗？
- en: Is the resource accessible from both internal resources and the internet?
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该资源是否同时可以从内部资源和互联网访问？
- en: Is the resource accessible from internal resources only?
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该资源仅能从内部资源访问吗？
- en: Based on the architecture of the solution being deployed, determine the dependent
    resources, load balancers, gateways, and virtual machines used.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据正在部署的解决方案架构，确定所依赖的资源、负载均衡器、网关和虚拟机。
- en: Configure a virtual network and its subnet.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置虚拟网络及其子网。
- en: Using the results of these investigations, an adequate NSG design should be
    created. Ideally, there should be multiple network subnets for each workload and
    type of resource. It is not recommended to deploy both load balancers and virtual
    machines on the same subnet.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这些调查结果，应创建合适的NSG设计。理想情况下，每个工作负载和资源类型应该有多个网络子网。建议不要在同一子网上部署负载均衡器和虚拟机。
- en: Taking project requirements into account, rules should be determined that are
    common for different virtual machine workloads and subnets. For example, for a
    SharePoint deployment, the front-end application and SQL servers are deployed
    on separate subnets, so rules for each subnet should be determined.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 根据项目需求，应确定适用于不同虚拟机工作负载和子网的通用规则。例如，对于SharePoint部署，前端应用程序和SQL服务器部署在不同的子网中，因此应该为每个子网确定规则。
- en: After common subnet-level rules are identified, rules for individual resources
    should be identified, and these should be applied at the network interface level.
    It is important to understand that if a rule allows an incoming request on a port,
    that port can also be used for outgoing requests without any configuration.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在识别常见的子网级规则后，应识别单个资源的规则，并将这些规则应用于网络接口级别。需要理解的是，如果某个规则允许某个端口的入站请求，那么该端口也可以用于发出的请求，而无需额外配置。
- en: If resources are accessible from the internet, rules should be created with
    specific IP ranges and ports wherever possible, instead of allowing traffic from
    all the IP ranges (usually represented as 0.0.0.0/0). Careful functional and security
    testing should be executed to ensure that adequate and optimal NSG rules are opened
    and closed.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果资源可以通过互联网访问，应尽可能使用特定的IP范围和端口创建规则，而不是允许来自所有IP范围的流量（通常表示为0.0.0.0/0）。应执行仔细的功能和安全性测试，以确保打开和关闭了足够且最佳的NSG规则。
- en: Firewalls
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 防火墙
- en: NSGs provide external security perimeters for requests. However, this does not
    mean that virtual machines should not implement additional security measures.
    It is always better to implement security both internally and externally. Virtual
    machines, whether in Linux or Windows, provide a mechanism to filter requests
    at the operating system level. This is known as a firewall in both Windows and
    Linux.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: NSG提供请求的外部安全边界。然而，这并不意味着虚拟机不需要实施额外的安全措施。最好同时在内部和外部实施安全性。无论是Linux还是Windows虚拟机，都提供一种机制来在操作系统级别过滤请求。这在Windows和Linux中都称为防火墙。
- en: 'It is advisable to implement firewalls for operating systems. They help build
    a virtual security wall that allows only those requests that are considered trusted.
    Any untrusted requests are denied access. There are even physical firewall devices,
    but on the cloud, operating system firewalls are used. *Figure 8.4* shows firewall
    configuration for a Windows operating system:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 建议为操作系统实现防火墙。它们帮助建立一个虚拟安全墙，只允许那些被认为可信的请求。任何不可信的请求都会被拒绝访问。虽然也有物理防火墙设备，但在云端，通常使用操作系统防火墙。*图8.4*展示了Windows操作系统的防火墙配置：
- en: '![The ‘Windows Firewall with Advanced Security’ window—showing the firewall
    configuration for a Windows operating system.](img/B15432_08_04.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![‘Windows高级安全防火墙’窗口——展示Windows操作系统的防火墙配置。](img/B15432_08_04.jpg)'
- en: 'Figure 8.4: Firewall configuration'
  id: totrans-68
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图8.4：防火墙配置
- en: Firewalls filter network packets and identify incoming ports and IP addresses.
    Using the information from these packets, the firewall evaluates the rules and
    decides whether it should allow or deny access.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙过滤网络数据包，并识别传入的端口和IP地址。利用这些数据包中的信息，防火墙评估规则并决定是否允许或拒绝访问。
- en: When it comes to Linux, there are different firewall solutions available. Some
    of the firewall offerings are very specific to the distribution that is being
    used; for example, SUSE uses SuSefirewall2 and Ubuntu uses ufw. The most widely
    used implementations are firewalld and iptables, which are available on every
    distribution.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 就Linux而言，有多种防火墙解决方案可供选择。某些防火墙方案非常特定于所使用的发行版；例如，SUSE使用SuSefirewall2，Ubuntu使用ufw。最广泛使用的实现是firewalld和iptables，这些在每个发行版中都可以找到。
- en: '**Firewall design**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**防火墙设计**'
- en: As a best practice, firewalls should be evaluated for individual operating systems.
    Each virtual machine has a distinct responsibility within the overall deployment
    and solution. Rules for these individual responsibilities should be identified
    and firewalls should be opened and closed accordingly.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最佳实践，应该评估每个操作系统的防火墙。每个虚拟机在整体部署和解决方案中都有独特的责任。应该明确这些责任的规则，并根据情况适当地打开和关闭防火墙。
- en: While evaluating firewall rules, it is important to take NSG rules at both the
    subnet and individual network interface level into consideration. If this is not
    done properly, it is possible that rules are denied at the NSG level, but left
    open at the firewall level, and vice versa. If a request is allowed at the NSG
    level and denied at the firewall level, the application will not work as intended,
    while security risks increase if a request is denied at the NSG level and allowed
    at the firewall level.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估防火墙规则时，重要的是要考虑子网和单个网络接口级别的NSG规则。如果没有正确处理，可能会出现规则在NSG级别被拒绝，但在防火墙级别保持开放，反之亦然。如果请求在NSG级别被允许但在防火墙级别被拒绝，应用程序将无法按预期工作；而如果请求在NSG级别被拒绝但在防火墙级别被允许，则安全风险将增加。
- en: A firewall helps you build multiple networks isolated by its security rules.
    Careful functional and security testing should be executed to ensure that adequate
    and optimal firewall rules are opened and closed.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙帮助你建立多个通过其安全规则隔离的网络。应该进行仔细的功能性和安全性测试，确保适当且优化的防火墙规则被正确地开启和关闭。
- en: It makes the most sense to use Azure Firewall, which is a cloud-based network
    service on top of NSGs. It is very easy to set up, provides central management
    for administration, and requires zero maintenance. Azure Firewall and NSGs combined
    can provide security between virtual machines, virtual networks, and even different
    Azure subscriptions. Having said that, if a solution requires that extra level
    of security, we can consider implementing an operating system–level firewall.
    We'll be discussing Azure Firewall in more depth in one of the upcoming sections,
    *Azure Firewall*.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Azure防火墙最为合理，它是建立在NSG之上的云端网络服务。它非常容易设置，提供中央管理功能，并且无需维护。结合Azure防火墙和NSG可以为虚拟机、虚拟网络，甚至不同的Azure订阅之间提供安全性。话虽如此，如果一个解决方案需要额外的安全级别，我们可以考虑实现操作系统级别的防火墙。我们将在接下来的章节中更深入地讨论*Azure防火墙*。
- en: Application security groups
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用程序安全组
- en: NSGs are applied at the virtual network subnet level or directly to individual
    network interfaces. While it is sufficient to apply NSGs at the subnet level,
    there are times when this is not enough. There are different types of workloads
    available within a single subnet and each of them requires a different security
    group. It is possible to assign security groups to individual **network interface
    cards** (**NICs**) of the virtual machines, but it can easily become a maintenance
    nightmare if there is a large number of virtual machines.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: NSG（网络安全组）可以应用于虚拟网络子网级别或直接应用于单个网络接口。虽然在子网级别应用NSG已经足够，但有时这还不够。在同一个子网内有不同类型的工作负载，每个工作负载需要不同的安全组。可以将安全组分配给虚拟机的单个**网络接口卡**（**NICs**），但如果虚拟机数量很大，这种做法容易变成维护的噩梦。
- en: Azure has a relatively new feature known as application security groups. We
    can create application security groups and assign them directly to multiple NICs,
    even when those NICs belong to virtual machines in different subnets and resource
    groups. The functionality of application security groups is similar to NSGs, except
    that they provide an alternate way of assigning groups to network resources, providing
    additional flexibility in assigning them across resource groups and subnets. Application
    security groups can simplify NSGs; however, there is one main limitation. We can
    have one application security group in the source and destination of a security
    rule, but having multiple application security groups in a source or destination
    is not supported right now.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Azure有一个相对较新的功能，叫做应用安全组。我们可以创建应用安全组，并将其直接分配给多个NIC，即使这些NIC属于不同子网和资源组中的虚拟机。应用安全组的功能类似于NSG，只是它提供了一种替代方法，将组分配给网络资源，并在跨资源组和子网分配时提供更多的灵活性。应用安全组可以简化NSG；然而，它有一个主要的限制。我们可以在安全规则的源和目标中使用一个应用安全组，但当前不支持在源或目标中使用多个应用安全组。
- en: One of the best practices for creating rules is to always minimize the number
    of security rules that you need, to avoid maintenance of explicit rules. In the
    previous section, we discussed the usage of service tags with NSGs to eliminate
    the hassle of maintaining the individual IP address prefixes of each service.
    Likewise, when using application security groups, we can reduce the complexity
    of explicit IP addresses and multiple rules. This practice is recommended wherever
    possible. If your solution demands an explicit rule with an individual IP address
    or range of IP addresses, only then should you opt for it.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 创建规则的最佳实践之一是尽量减少所需的安全规则数量，以避免维护显式规则。在前一节中，我们讨论了如何使用服务标签与NSG配合，消除维护每个服务的单独IP地址前缀的麻烦。同样，使用应用安全组时，我们可以减少显式IP地址和多个规则的复杂性。推荐在可能的情况下使用这种做法。如果你的解决方案要求使用单独的IP地址或IP地址范围的显式规则，那么才应该选择这种方式。
- en: Azure Firewall
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure防火墙
- en: In the previous section, we discussed using Azure Firewall within a Windows/Linux
    operating system to allow or disallow requests and responses through particular
    ports and services. While operating system firewalls play an important role from
    a security point of view and must be implemented for any enterprise deployment,
    Azure provides a security resource known as Azure Firewall that has a similar
    functionality of filtering requests based on rules and determining whether a request
    should be allowed or rejected.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们讨论了如何在Windows/Linux操作系统中使用Azure防火墙来允许或拒绝通过特定端口和服务的请求与响应。虽然操作系统防火墙在安全方面起着重要作用，并且必须在任何企业部署中实施，但Azure提供了一种名为Azure防火墙的安全资源，它具有类似的功能，可以基于规则过滤请求并确定是否应允许或拒绝该请求。
- en: The advantage of using Azure Firewall is that it evaluates a request before
    it reaches an operating system. Azure Firewall is a network resource and is a
    standalone service protecting resources at the virtual network level. Any resources,
    including virtual machines and load balancers, that are directly associated with
    a virtual network can be protected using Azure Firewall.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Azure防火墙的优点是，它会在请求到达操作系统之前进行评估。Azure防火墙是一个网络资源，是一项独立服务，保护虚拟网络级别的资源。任何与虚拟网络直接关联的资源，包括虚拟机和负载均衡器，都可以通过Azure防火墙进行保护。
- en: Azure Firewall is a highly available and scalable service that can protect not
    only HTTP-based requests but any kind of request coming into and going out from
    a virtual network, including FTP, SSH, and RDP. Azure Firewall can also span multiple
    Availability Zones during deployment to provide increased availability.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 防火墙是一项高可用、可扩展的服务，不仅能保护基于HTTP的请求，还能保护从虚拟网络进出任何类型的请求，包括FTP、SSH和RDP。Azure
    防火墙还可以在部署期间跨多个可用性区域，提供更高的可用性。
- en: It is highly recommended that Azure Firewall is deployed for mission-critical
    workloads on Azure, alongside other security measures. It is also important to
    note that Azure Firewall should be used even if other services, such as Azure
    Application Gateway and Azure Front Door, are used, since all these tools have
    different scopes and features. Additionally, Azure Firewall provides support for
    service tags and threat intelligence. In the previous section, we discussed the
    advantages of using service tags. Threat intelligence can be used to generate
    alerts when traffic comes from or goes to known malicious IP addresses and domains,
    which are recorded in the Microsoft Threat Intelligence feed.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议在Azure上部署Azure 防火墙，以保护关键任务工作负载，并结合其他安全措施一起使用。还需注意，即使使用其他服务，如Azure 应用程序网关和Azure
    Front Door，仍应使用Azure 防火墙，因为这些工具具有不同的作用范围和功能。此外，Azure 防火墙还支持服务标签和威胁情报。在前面的部分中，我们讨论了使用服务标签的优势。威胁情报可以用于在流量来自或去往已知恶意IP地址和域时生成警报，这些地址和域记录在微软的威胁情报数据流中。
- en: Reducing the attack surface area
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 减少攻击面
- en: NSGs and firewalls help with managing authorized requests to the environment.
    However, the environment should not be overly exposed to attacks. The surface
    area of the system should be optimally enabled to achieve its functionality, but
    disabled enough that attackers cannot find loopholes and access areas that are
    open without any intended use, or open but not adequately secured. Security should
    be adequately hardened, making it difficult for any attacker to break into the
    system.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: NSG和防火墙有助于管理授权请求进入环境。然而，环境不应过度暴露于攻击。系统的表面区域应充分启用以实现其功能，但应禁用足够的部分，以便攻击者无法找到漏洞并访问那些没有预期用途或没有足够安全保护的开放区域。安全性应充分加固，使任何攻击者都难以入侵系统。
- en: 'Some of the configurations that should be done include the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 应该完成的一些配置包括以下内容：
- en: Remove all unnecessary users and groups from the operating system.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从操作系统中移除所有不必要的用户和组。
- en: Identify group membership for all users.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定所有用户的组成员身份。
- en: Implement group policies using directory services.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用目录服务实施组策略。
- en: Block script execution unless it is signed by trusted authorities.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻止脚本执行，除非它是由受信任的机构签名的。
- en: Log and audit all activities.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录并审计所有活动。
- en: Install malware and anti-virus software, schedule scans, and update definitions
    frequently.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装恶意软件和防病毒软件，定期进行扫描，并频繁更新定义。
- en: Disable or shut down services that are not required.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用或关闭不需要的服务。
- en: Lock down the filesystem so only authorized access is allowed.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁定文件系统，只允许授权访问。
- en: Lock down changes to the registry.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 锁定对注册表的更改。
- en: A firewall must be configured according to the requirements.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须根据要求配置防火墙。
- en: PowerShell script execution should be set to `Set-ExecutionPolicy -ExecutionPolicy
    Restricted` or `Set-ExecutionPolicy -ExecutionPolicy RemoteSigned` PowerShell
    commands.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell脚本执行应设置为`Set-ExecutionPolicy -ExecutionPolicy Restricted`或`Set-ExecutionPolicy
    -ExecutionPolicy RemoteSigned` PowerShell命令。
- en: Enable enhanced protection through Internet Explorer.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Internet Explorer启用增强保护。
- en: Restrict the ability to create new users and groups.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制创建新用户和组的权限。
- en: Remove internet access and implement jump servers for RDP.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除互联网访问权限，并为RDP实施跳板服务器。
- en: Prohibit logging into servers using RDP through the internet. Instead, use site-to-site
    VPN, point-to-site VPN, or express routes to RDP into remote machines from within
    the network.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁止通过互联网使用RDP登录到服务器。相反，应该使用站点到站点VPN、点对站点VPN或ExpressRoute通过网络内部远程登录到远程计算机。
- en: Regularly deploy all security updates.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期部署所有安全更新。
- en: Run the security compliance manager tool on the environment and implement all
    of its recommendations.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在环境中运行安全合规性管理工具，并实施其所有建议。
- en: Actively monitor the environment using Security Center and Operations Management
    Suite.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用安全中心和操作管理套件主动监控环境。
- en: Deploy virtual network appliances to route traffic to internal proxies and reverse
    proxies.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署虚拟网络设备，将流量路由到内部代理和反向代理。
- en: All sensitive data, such as configuration, connection strings, and credentials,
    should be encrypted.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有敏感数据，如配置、连接字符串和凭据，应该进行加密。
- en: The aforementioned are some of the key points that should be considered from
    a security standpoint. The list will keep on growing, and we need to constantly
    improve security to prevent any kind of security breach.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 上述内容是从安全角度应该考虑的一些关键点。这个列表将不断扩展，我们需要不断改进安全性，以防止任何形式的安全漏洞。
- en: Implementing jump servers
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实现跳板服务器
- en: It is a good idea to remove internet access from virtual machines. It is also
    a good practice to limit remote desktop services' accessibility from the internet,
    but then how do you access the virtual machines at all? One good way is to only
    allow internal resources to RDP into virtual machines using Azure VPN options.
    However, there is also another way—using **jump servers**.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 从虚拟机中移除互联网访问是一个好主意。限制远程桌面服务从互联网访问虚拟机也是一种良好的做法，但那么如何访问虚拟机呢？一种可行的方法是仅允许内部资源通过
    Azure VPN 选项进行 RDP 访问虚拟机。然而，还有另一种方法——使用**跳板服务器**。
- en: 'Jump servers are servers that are deployed in the **demilitarized zone** (**DMZ**).
    This means it is not on the network hosting the core solutions and applications.
    Instead, it is on a separate network or subnet. The primary purpose of the jump
    server is to accept RDP requests from users and help them log in to it. From this
    jump server, users can further navigate to other virtual machines using RDP. It
    has access to two or more networks: one that has connectivity to the outside world,
    and another that''s internal to the solution. The jump server implements all the
    security restrictions and provides a secure client to connect to other servers.
    Normally, access to emails and the internet is disabled on jump servers.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 跳板服务器是部署在**隔离区**（**DMZ**）中的服务器。这意味着它不在托管核心解决方案和应用程序的网络上，而是位于一个单独的网络或子网中。跳板服务器的主要目的是接受用户的
    RDP 请求，并帮助他们登录。通过这个跳板服务器，用户可以进一步通过 RDP 连接到其他虚拟机。它可以访问两个或多个网络：一个是与外部世界连接的网络，另一个是与解决方案内部网络连接的网络。跳板服务器实施所有安全限制，并提供一个安全客户端来连接到其他服务器。通常，跳板服务器会禁用访问电子邮件和互联网。
- en: An example of deploying a jump server with **virtual machine scale sets** (**VMSSes**),
    using Azure Resource Manager templates is available at [https://azure.microsoft.com/resources/templates/201-vmss-windows-jumpbox](https://azure.microsoft.com/resources/templates/201-vmss-windows-jumpbox).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Azure 资源管理器模板部署带有**虚拟机规模集**（**VMSS**）的跳板服务器示例，请访问 [https://azure.microsoft.com/resources/templates/201-vmss-windows-jumpbox](https://azure.microsoft.com/resources/templates/201-vmss-windows-jumpbox)。
- en: Azure Bastion
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure Bastion
- en: In the previous section, we discussed implementing jump servers. Azure Bastion
    is a fully managed service that can be provisioned in a virtual network to provide
    RDP/SSH access to your virtual machines directly in the Azure portal over TLS.
    The Bastion host will act as a jump server and eliminate the need for public IP
    addresses for your virtual machines. The concept of using Bastion is the same
    as implementing a jump server; however, since this is a managed service, it's
    completely managed by Azure.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们讨论了实现跳板服务器。Azure Bastion 是一个完全托管的服务，可以在虚拟网络中进行配置，以便通过 TLS 在 Azure 门户中直接为您的虚拟机提供
    RDP/SSH 访问。Bastion 主机将充当跳板服务器，消除了为虚拟机配置公共 IP 地址的需求。使用 Bastion 的概念与实现跳板服务器相同；然而，由于这是一个托管服务，因此完全由
    Azure 管理。
- en: Since Bastion is a fully managed service from Azure and is hardened internally,
    we don't need to apply additional NSGs on the Bastion subnet. Also, since we are
    not attaching any public IPs to our virtual machines, they are protected against
    port scanning.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Bastion 是 Azure 提供的完全托管服务，并且内部已经进行了加固，因此我们无需在 Bastion 子网中应用额外的 NSG（网络安全组）。另外，由于我们没有为虚拟机附加任何公共
    IP，它们就可以防止端口扫描。
- en: Application security
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用安全
- en: Web applications can be hosted within IaaS-based solutions on top of virtual
    machines, and they can be hosted within Azure-provided managed services, such
    as App Service. App Service is part of the PaaS deployment paradigm, and we will
    look into it in the next section. In this section, we will look at application-level
    security.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Web 应用可以在基于 IaaS 的解决方案中托管，这些解决方案建立在虚拟机之上，也可以在 Azure 提供的托管服务中托管，例如应用服务（App Service）。应用服务是
    PaaS 部署模式的一部分，我们将在下一节中详细介绍。在这一节中，我们将探讨应用层安全性。
- en: SSL/TLS
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SSL/TLS
- en: '**Secure Socket layer** (**SSL**) is now deprecated and has been replaced by
    **Transport Layer security** (**TLS**). TLS provides end-to-end security by means
    of cryptography. It provides two types of cryptography:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全套接层**（**SSL**）现在已经被弃用，取而代之的是**传输层安全性**（**TLS**）。TLS 通过加密提供端到端的安全性。它提供了两种类型的加密：'
- en: 'Symmetric: The same key is available to both the sender of the message and
    the receiver of the message, and it is used for both the encryption and decryption
    of the message.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对称加密：发送者和接收者都可以使用相同的密钥，该密钥用于加密和解密消息。
- en: 'Asymmetric: Every stakeholder has two keys—a private key and a public key.
    The private key remains on the server or with the user and remains a secret, while
    the public key is distributed freely to everyone. Holders of the public key use
    it to encrypt the message, which can only be decrypted by the corresponding private
    key. Since the private key stays with the owner, only they can decrypt the message.
    **Rivest–Shamir–Adleman** (**RSA**) is one of the algorithms used to generate
    these pairs of public-private keys.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非对称加密：每个利益相关者都有两把密钥——一把私钥和一把公钥。私钥保留在服务器上或用户手中并保持机密，而公钥可以自由分发给所有人。公钥持有者使用它来加密信息，而该信息只能通过对应的私钥解密。由于私钥保留在所有者手中，只有他们才能解密信息。**Rivest–Shamir–Adleman**（**RSA**）是用于生成这些公私密钥对的算法之一。
- en: The keys are also available in certificates popularly known as X.509 certificates,
    although certificates have more details apart from just the keys and are generally
    issued by trusted certificate authorities.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些密钥也可以通过证书的形式提供，这些证书通常被称为 X.509 证书，尽管证书除了包含密钥外，还有更多的详细信息，并且通常由受信任的证书颁发机构签发。
- en: TLS should be used by web applications to ensure that message exchange between
    users and the server is secure and confidential and that identities are being
    protected. These certificates should be purchased from a trusted certificate authority
    instead of being self-signed certificates.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Web 应用程序应该使用 TLS 来确保用户与服务器之间的消息交换是安全和机密的，并且身份得到保护。这些证书应该从受信任的证书颁发机构购买，而不是自签名证书。
- en: Managed identities
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 托管身份
- en: Before we take a look at managed identities, it is important to know how applications
    were built without them.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们了解托管身份之前，了解没有托管身份时应用程序是如何构建的非常重要。
- en: The traditional way of application development is to use secrets, such as a
    username, a password, or SQL connection strings, in configuration files. Putting
    these secrets into configuration files makes application changes to these secrets
    easy and flexible without modifying code. It helps us stick to the "open for extension,
    closed for modification" principle. However, this approach has a downside from
    a security point of view. The secrets can be viewed by anyone who has access to
    configuration files since generally these secrets are listed there in plain text.
    There are a few hacks to encrypt them, but they aren't foolproof.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的应用程序开发方式是在配置文件中使用机密，例如用户名、密码或 SQL 连接字符串。将这些机密放入配置文件使得对这些机密的应用程序更改变得容易且灵活，而无需修改代码。它帮助我们遵循“对扩展开放，对修改封闭”的原则。然而，从安全角度来看，这种方法有一个缺点。任何能够访问配置文件的人都可以查看这些机密，因为通常这些机密以明文列在其中。虽然有一些方法可以加密它们，但它们并非万无一失。
- en: 'A better way to use secrets and credentials within an application is to store
    them in a secrets repository such as Azure Key Vault. Azure Key Vault provides
    full security using the **hardware security module** (**HSM**), and the secrets
    are stored in an encrypted fashion with on-demand decryption using keys stored
    in separate hardware. Secrets can be stored in Key Vault, with each secret having
    a display name and key. The key is in the form of a URI that can be used to refer
    to the secret from applications, as shown in *Figure 8.5*:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序中使用密钥和凭证的更好方法是将其存储在像 Azure Key Vault 这样的机密库中。Azure Key Vault 提供了通过**硬件安全模块**（**HSM**）的完全安全性，并且机密以加密方式存储，并通过存储在独立硬件中的密钥进行按需解密。机密可以存储在
    Key Vault 中，每个机密都有一个显示名称和密钥。密钥以 URI 的形式存在，应用程序可以使用它来引用机密，如*图 8.5*所示：
- en: '![Navigating to the Secrets blade from the left-hand navigation to view the
    secrets stored in the key vault.](img/B15432_08_05.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![从左侧导航栏进入机密面板，查看存储在密钥库中的机密。](img/B15432_08_05.jpg)'
- en: 'Figure 8.5: Storing secrets inside a key vault'
  id: totrans-129
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8.5：将机密存储在密钥库中
- en: Within application configuration files, we can refer to the secret using the
    name or the key. However, there is another challenge now. How does the application
    connect to and authenticate with the key vault?
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'Key vaults have access policies that define permissions to a user or group
    with regard to access to secrets and credentials within the key vault. The users,
    groups, or service applications that can be provided access are provisioned and
    hosted within **Azure Active Directory** (**Azure AD**). Although individual user
    accounts can be provided access using Key Vault access policies, it is a better
    practice to use a service principal to access the key vault. A service principal
    has an identifier, also known as an application ID or client ID, along with a
    password. The client ID, along with its password, can be used to authenticate
    with Azure Key Vault. This service principal can be allowed to access the secrets.
    The access policies for Azure Key Vault are granted in the **Access policies**
    pane of your key vault. In *Figure 8.6*, you can see that the service principal—**https://keyvault.book.com**—has
    given access to the key vault called **keyvaultbook**:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '![Navigating to the Access policy blade from the left-hand navigation and checking
    the access granted for the service principals.](img/B15432_08_06.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.6: Granted access for a service principal to access a key vault'
  id: totrans-133
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'This brings us to another challenge: to access the key vault, we need to use
    the client ID and secret in our configuration files to connect to the key vault,
    get hold of the secret, and retrieve its value. This is almost equivalent to using
    a username, password, and SQL connection string within configuration files.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: This is where managed identities can help. Azure launched managed service identities
    and later renamed them managed identities. Managed identities are identities managed
    by Azure. In the background, managed identities also create a service principal
    along with a password. With managed identities, there is no need to put credentials
    in configuration files.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Managed identities can only be used to authenticate with services that support
    Azure AD as an identity provider. Managed identities are meant only for authentication.
    If the target service does not provide **role-based access control** (**RBAC**)
    permission to the identity, the identity might not be able to perform its intended
    activity on the target service.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: 'Managed identities come in two flavors:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: System-assigned managed identities
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User-assigned managed identities
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'System-assigned identities are generated by the service itself. For example,
    if an app service wants to connect to Azure SQL Database, it can generate the
    system-assigned managed identity as part of its configuration options. These managed
    identities also get deleted when the parent resource or service is deleted. As
    shown in *Figure 8.7*, a system-assigned identity can be used by App Service to
    connect to Azure SQL Database:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![Navigating to the ‘Identity’ blade from ‘Settings’ and clicking on the ‘System
    assigned’ tab and enabling it for the App Service.](img/B15432_08_07.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![从“设置”导航到“标识”面板，点击“系统分配”选项卡并为应用服务启用它。](img/B15432_08_07.jpg)'
- en: 'Figure 8.7: Enabling a system-assigned managed identity for App Service'
  id: totrans-142
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8.7：为应用服务启用系统分配的托管标识
- en: User-assigned managed identities are created as standalone separate identities
    and later assigned to Azure services. They can be applied and reused with multiple
    Azure services since their life cycles do not depend on the resource they are
    assigned to.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 用户分配的托管标识是作为独立的单独标识创建的，之后将其分配给 Azure 服务。由于其生命周期不依赖于它们所分配的资源，它们可以应用并在多个 Azure
    服务中重复使用。
- en: Once a managed identity is created and RBAC or access permissions are given
    to it on the target resource, it can be used within applications to access the
    target resources and services.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦托管标识被创建并且通过 RBAC 或访问权限赋予目标资源，它就可以在应用程序中用于访问目标资源和服务。
- en: Azure provides an SDK as well a REST API to talk to Azure AD and get an access
    token for managed identities, and then use the token to access and consume the
    target resources.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 提供了一个 SDK 和一个 REST API，用于与 Azure AD 交互并获取托管标识的访问令牌，然后使用该令牌访问和消费目标资源。
- en: The SDK comes as part of the `Microsoft.Azure.Services.AppAuthentication` NuGet
    package for C#. Once the access token is available, it can be used to consume
    the target resource.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: SDK 是 `Microsoft.Azure.Services.AppAuthentication` NuGet 包的一部分，适用于 C#。一旦访问令牌可用，它就可以用来消费目标资源。
- en: 'The code needed to get the access token is as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 获取访问令牌所需的代码如下：
- en: '[PRE0]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Alternatively, use this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，使用此方法：
- en: '[PRE1]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: It should be noted that the application code needs to run in the context of
    App Service or a function app because the identity is attached to them and is
    only available in code when it's run from within them.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 应该注意，应用程序代码需要在应用服务或函数应用的上下文中运行，因为标识是附加在它们上的，只有在从这些上下文中运行时，代码才能访问标识。
- en: The preceding code has two different use cases. The code to access the key vault
    and Azure SQL Database is shown together.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码有两个不同的使用场景。访问密钥库和 Azure SQL 数据库的代码是一起展示的。
- en: It is important to note that applications do not provide any information related
    to managed identities in code and is completely managed using configuration. The
    developers, individual application administrators, and operators will not come
    across any credentials related to managed identities, and, moreover, there is
    no mention of them in code either. Credential rotation is completely regulated
    by the resource provider that hosts the Azure service. The default rotation occurs
    every 46 days. It's up to the resource provider to call for new credentials if
    required, so the provider could wait for more than 46 days.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，应用程序不会在代码中提供任何与托管标识相关的信息，所有这些信息都通过配置进行完全管理。开发人员、单个应用程序管理员和操作员不会接触到任何与托管标识相关的凭证，而且在代码中也没有提到它们。凭证轮换完全由托管Azure服务的资源提供者进行管理。默认情况下，每46天会进行一次轮换。如果需要，资源提供者可以要求新的凭证，因此提供者可能会等超过46天才请求新的凭证。
- en: 'In the next section, we will be discussing a cloud-native **security information
    and event manager** (**SIEM**): Azure Sentinel.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论一个云原生的**安全信息和事件管理器**（**SIEM**）：Azure Sentinel。
- en: Azure Sentinel
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure Sentinel
- en: 'Azure provides an SIEM and **security orchestration automated response** (**SOAR**)
    as a standalone service that can be integrated with any custom deployment on Azure.
    *Figure 8.8* shows some of the key features of Azure Sentinel:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 提供了一个 SIEM 和**安全编排自动响应**（**SOAR**）作为一个独立服务，可以与任何自定义部署的 Azure 服务集成。*图 8.8*
    显示了 Azure Sentinel 的一些关键功能：
- en: '![The key features of Azure Sentinel—Collect, Detect, Investigate, and Respond.](img/B15432_08_08.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![Azure Sentinel 的关键功能——收集、检测、调查和响应。](img/B15432_08_08.jpg)'
- en: 'Figure 8.8: Key features of Azure Sentinel'
  id: totrans-158
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8.8：Azure Sentinel 的关键功能
- en: Azure Sentinel collects information logs from deployments and resources and
    performs analytics to find patterns and trends related to various security issues
    that are pulled from data sources.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Sentinel 收集来自部署和资源的信息日志，并进行分析，以找出与各种安全问题相关的模式和趋势，这些问题从数据源中提取。
- en: There should be active monitoring of the environment, logs should be collected,
    and information should be culled from these logs as a separate activity from code
    implementation. This is where the SIEM service comes into the picture. There are
    numerous connectors that can be used with Azure Sentinel; each of these connectors
    will be used to add data sources to Azure Sentinel. Azure Sentinel provides connectors
    for Microsoft services such as Office 365, Azure AD, and Azure Threat Protection.
    The collected data will be fed to a Log Analytics workspace, and you can write
    queries to search these logs.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 应该对环境进行主动监控，收集日志，并从这些日志中提取信息，作为与代码实现分离的单独活动。这时，SIEM 服务发挥了作用。Azure Sentinel 可以使用许多连接器；这些连接器将用于向
    Azure Sentinel 添加数据源。Azure Sentinel 提供了与 Microsoft 服务（如 Office 365、Azure AD 和
    Azure 威胁保护）兼容的连接器。收集到的数据将被馈送到日志分析工作区，您可以编写查询来搜索这些日志。
- en: SIEM tools such as Azure Sentinel can be enabled on Azure to get all the logs
    from log analytics and Azure Security Center, which in turn can get them from
    multiple sources, deployments, and services. SIEM can then run its intelligence
    on top of this collected data and generate insights. It can generate reports and
    dashboards based on discovered intelligence for consumption, but it can also investigate
    suspicious activities and threats, and take action on them.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Azure Sentinel 这样的 SIEM 工具可以在 Azure 上启用，从日志分析和 Azure 安全中心获取所有日志，而这些日志又可以从多个来源、部署和服务中获取。SIEM
    然后可以在收集到的数据上运行其智能分析并生成洞察。它可以根据发现的智能生成报告和仪表板供消费使用，但它也可以调查可疑活动和威胁，并对其采取行动。
- en: While Azure Sentinel may sound very similar in functionality to Azure Security
    Center, Azure Sentinel can do much more than Azure Security Center. Its ability
    to collect logs from other avenues using connectors makes it different from Azure
    Security Center.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Azure Sentinel 在功能上可能与 Azure 安全中心非常相似，但 Azure Sentinel 的功能远超过 Azure 安全中心。它通过使用连接器从其他途径收集日志的能力，使其与
    Azure 安全中心有所不同。
- en: PaaS security
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PaaS 安全性
- en: Azure provides numerous PaaS services, each with its own security features.
    In general, PaaS services can be accessed using credentials, certificates, and
    tokens. PaaS services allow the generation of short-lived security access tokens.
    Client applications can send these security access tokens to represent trusted
    users. In this section, we will cover some of the most important PaaS services
    that are used in almost every solution.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 提供了许多 PaaS 服务，每个服务都有自己的安全特性。通常，PaaS 服务可以通过凭据、证书和令牌进行访问。PaaS 服务允许生成短期有效的安全访问令牌。客户端应用程序可以发送这些安全访问令牌来表示受信任的用户。在本节中，我们将介绍一些在几乎所有解决方案中使用的最重要的
    PaaS 服务。
- en: Azure Private Link
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure Private Link
- en: Azure Private Link provides access to Azure PaaS services as well as Azure-hosted
    customer-owned/partner-shared services over a private endpoint in your virtual
    network. While using Azure Private Link, we don't have to expose our services
    to the public internet, and all traffic between our service and the virtual network
    goes via Microsoft's backbone network.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Private Link 提供通过虚拟网络中的私有端点访问 Azure PaaS 服务以及 Azure 托管的客户拥有/合作伙伴共享服务。在使用
    Azure Private Link 时，我们不必将服务暴露到公共互联网，并且我们服务与虚拟网络之间的所有流量都通过微软的骨干网络进行。
- en: Azure Private Endpoint is the network interface that helps to privately and
    securely connect to a service that is powered by Azure Private Link. Since the
    private endpoint is mapped to the instance of the PaaS service, not to the entire
    service, users can only connect to the resource. Connections to any other service
    are denied, and this protects against data leakage. Private Endpoint also lets
    you access securely from on-premises via ExpressRoute or VPN Tunnels. This eliminates
    the need to set up public peering or to pass through the public internet to reach
    the service.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Private Endpoint 是一种网络接口，可帮助私密且安全地连接到由 Azure Private Link 提供支持的服务。由于私有端点映射到
    PaaS 服务的实例，而不是整个服务，因此用户只能连接到资源。对任何其他服务的连接都会被拒绝，这样可以防止数据泄露。Private Endpoint 还允许您通过
    ExpressRoute 或 VPN 隧道从本地安全访问。这消除了设置公共对等连接或通过公共互联网访问服务的需求。
- en: Azure Application Gateway
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 应用程序网关
- en: Azure provides a Level 7 load balancer known as Azure Application Gateway that
    can not only load balance but also help in routing using values in URL. It also
    has a feature known as Web Application Firewall. Azure Application Gateway supports
    TLS termination at the gateway, so the back-end servers will get the traffic unencrypted.
    This has several advantages, such as better performance, better utilization of
    the back-end servers, and intelligent routing of packets. In the previous section,
    we discussed Azure Firewall and how it protects resources at the network level.
    Web Application Firewall, on the other hand, protects the deployment at the application
    level.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 提供了一个称为 Azure 应用网关的 7 层负载均衡器，它不仅可以进行负载均衡，还可以根据 URL 中的值进行路由。它还具有称为 Web
    应用程序防火墙的功能。Azure 应用网关支持在网关处终止 TLS，因此后端服务器将收到未加密的流量。这有几个优点，如更好的性能，更好地利用后端服务器以及数据包的智能路由。在前面的部分中，我们讨论了
    Azure 防火墙及其如何在网络层保护资源。另一方面，Web 应用程序防火墙则在应用程序层保护部署。
- en: 'Any deployed application that is exposed to the internet faces numerous security
    challenges. Some of the important security threats are as follows:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 任何部署在互联网上的应用程序都面临着多种安全挑战。以下是一些重要的安全威胁：
- en: Cross-site scripting
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨站脚本攻击
- en: Remote code execution
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程代码执行
- en: SQL injection
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL 注入
- en: '**Denial of Service** (**DoS**) attacks'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拒绝服务** (**DoS**) 攻击'
- en: '**Distributed Denial of Service** (**DDoS**) attacks'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分布式拒绝服务** (**DDoS**) 攻击'
- en: There are many more, though.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，还有更多的安全威胁。
- en: A large number of these attacks can be addressed by developers by writing defensive
    code and following best practices; however, it is not just the code that should
    be responsible for identifying these issues on a live site. Web Application Firewall
    configures rules that can identify such issues, as mentioned before, and deny
    requests.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以通过编写防御性代码并遵循最佳实践来解决大量这些攻击；然而，仅仅是代码不应该负责在实时网站上识别这些问题。Web 应用程序防火墙配置规则可以识别此类问题，并拒绝请求，正如前文所述。
- en: It is advised to use Application Gateway Web Application Firewall features to
    protect applications from live security threats. Web Application Firewall will
    either allow the request to pass through it or stop it, depending on how it's
    configured.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用应用网关 Web 应用程序防火墙功能来保护应用程序免受实时安全威胁。Web 应用程序防火墙将根据配置的方式要么允许请求通过，要么阻止它。
- en: Azure Front Door
  id: totrans-179
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 前门
- en: Azure has launched a relatively new service known as Azure Front Door. The role
    of Azure Front Door is quite similar to that of Azure Application Gateway; however,
    there is a difference in scope. While Application Gateway works within a single
    region, Azure Front Door works at the global level across regions and datacenters.
    It has a web application firewall as well that can be configured to protect applications
    deployed in multiple regions from various security threats, such as SQL injection,
    remote code execution, and cross-site scripting.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 推出了一个相对较新的服务，称为 Azure 前门。Azure 前门的角色与 Azure 应用网关非常相似；然而，它在范围上有所不同。虽然应用网关在单个区域内工作，但
    Azure 前门在全球范围内跨区域和数据中心工作。它也有一个 Web 应用程序防火墙，可以配置以保护部署在多个区域中的应用程序免受各种安全威胁，如 SQL
    注入、远程代码执行和跨站脚本攻击。
- en: Application Gateway can be deployed behind Front Door to address connection
    draining. Also, deploying Application Gateway behind Front Door will help with
    the load balancing requirement, as Front Door can only perform path-based load
    balancing at the global level. The addition of Application Gateway to the architecture
    will provide further load balancing to the back-end servers in the virtual network.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 应用网关可以部署在 Front Door 后面以解决连接排干。此外，将应用网关部署在 Front Door 后面还将有助于负载均衡需求，因为 Front
    Door 只能在全局层面进行基于路径的负载均衡。在架构中添加应用网关将为虚拟网络中的后端服务器提供进一步的负载均衡。
- en: Azure App Service Environment
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 应用服务环境
- en: Azure App Service is deployed on shared networks behind the scenes. All SKUs
    of App Service use a virtual network, which can potentially be used by other tenants
    as well. In order to have more control and a secure App Service deployment on
    Azure, services can be hosted on dedicated virtual networks. This can be accomplished
    by using **Azure App Service Environment** (**ASE**), which provides complete
    isolation to run your App Service at a high scale. This also provides additional
    security by allowing you to deploy Azure Firewall, Application Security Groups,
    NSGs, Application Gateway, Web Application Firewall, and Azure Front Door. All
    App Service plans created in App Service Environment will be in an isolated pricing
    tier, and we cannot choose any other tier.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: All the logs from this virtual network and compute can then be collated in Azure
    Log Analytics and Security Center, and finally with Azure Sentinel.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Azure Sentinel can then provide insights and execute workbooks and runbooks
    to respond to security threats in an automated way. Security playbooks can be
    run in Azure Sentinel in response to alerts. Every security playbook comprises
    measures that need to be taken in the event of an alert. The playbooks are based
    on Azure Logic Apps, and this will give you the freedom to use and customize the
    built-in templates available with Logic Apps.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Log Analytics
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Log Analytics is a new analytics platform for managing cloud deployments, on-premises
    datacenters, and hybrid solutions.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: 'It provides multiple modular solutions—a specific functionality that helps
    to implement a feature. For example, security and audit solutions help to ascertain
    a complete view of security for an organization''s deployment. Similarly, there
    are many more solutions, such as automation and change tracking, that should be
    implemented from a security perspective. Log Analytics security and audit services
    provide information in the following five categories:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: '**Security domains**: These provide the ability to view security records, malware
    assessments, update assessments, network security, identity and access information,
    and computers with security events. Access is also provided to the Azure Security
    Center dashboard.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Anti-malware assessment**: This helps to identify servers that are not protected
    against malware and have security issues. It provides information about exposure
    to potential security problems and assesses their criticality of any risk. Users
    can take proactive actions based on these recommendations. Azure Security Center
    sub-categories provide information collected by Azure Security Center.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Notable issues**: This quickly identifies active issues and grades their
    severity.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detections**: This category is in preview mode. It enables the identification
    of attack patterns by visualizing security alerts.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Threat intelligence**: This helps to identify attack patterns by visualizing
    the total number of servers with outbound malicious IP traffic, the malicious
    threat type, and a map that shows where these IPs come from.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The preceding details, when viewed from the portal, are shown in *Figure 8.9*:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '![The ‘Security And Audit’ pane of Log Analytics, displaying the details about
    Security Domains, Notable issues, Detections, and Threat Intelligence.](img/B15432_08_09.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.9: Information being displayed in the Security And Audit pane of Log
    Analytics'
  id: totrans-196
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Now that you have learned about security for PaaS services, let's explore how
    to secure data stored in Azure Storage.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: Azure Storage
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Storage accounts play an important part in the overall solution architecture.
    Storage accounts can store important information, such as user **personal identifiable
    information** (**PII**) data, business transactions, and other sensitive and confidential
    data. It is of the utmost importance that storage accounts are secure and only
    allow access to authorized users. The stored data is encrypted and transmitted
    using secure channels. Storage, as well as the users and client applications consuming
    the storage account and its data, plays a crucial role in the overall security
    of data. Data should be kept encrypted at all times. This also includes credentials
    and connection strings connecting to data stores.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure provides RBAC to govern who can manage Azure storage accounts. These
    RBAC permissions are given to users and groups in Azure AD. However, when an application
    to be deployed on Azure is created, it will have users and customers that are
    not available in Azure AD. To allow users to access the storage account, Azure
    Storage provides storage access keys. There are two types of access keys at the
    storage account level—primary and secondary. Users possessing these keys can connect
    to the storage account. These storage access keys are used in the authentication
    step when accessing the storage account. Applications can access storage accounts
    using either primary or secondary keys. Two keys are provided so that if the primary
    key is compromised, applications can be updated to use the secondary key while
    the primary key is regenerated. This helps minimize application downtime. Moreover,
    it enhances security by removing the compromised key without impacting applications.
    The storage key details, as seen on the Azure portal, are shown in *Figure 8.10*:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: '![The storage key details displayed in the Azure portal.](img/B15432_08_10.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.10: Access keys for a storage account'
  id: totrans-202
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Azure Storage provides four services—blob, files, queues, and tables—in an account.
    Each of these services also provides infrastructure for their own security using
    secure access tokens.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: 'A **shared access signature** (**SAS**) is a URI that grants restricted access
    rights to Azure Storage services: blobs, files, queues, and tables. These SAS
    tokens can be shared with clients who should not be trusted with the entire storage
    account key to restrict access to certain storage account resources. By distributing
    an SAS URI to these clients, access to resources is granted for a specified period.'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: SAS tokens exist at both the storage account and the individual blob, file,
    table, and queue levels. A storage account–level signature is more powerful and
    has the right to allow and deny permissions at the individual service level. It
    can also be used instead of individual resource service levels.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: SAS tokens provide granular access to resources and can be combined as well.
    These tokens include read, write, delete, list, add, create, update, and process.
    Moreover, even access to resources can be determined while generating SAS tokens.
    It could be for blobs, tables, queues, and files individually, or a combination
    of them. Storage account keys are for the entire account and cannot be constrained
    for individual services—neither can they be constrained from the permissions perspective.
    It is much easier to create and revoke SAS tokens than it is for storage account
    access keys. SAS tokens can be created for use for a certain period of time, after
    which they automatically become invalid.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: 'It is to be noted that if storage account keys are regenerated, then the SAS
    token based on them will become invalid and a new SAS token should be created
    and shared with clients. In *Figure 8.11*, you can see an option to select the
    scope, permissions, start date, end date, allowed IP address, allowed protocols,
    and signing key to create an SAS token:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '![Selecting the ‘Shared access signature’ option from the left-hand navigation
    and creating an SAS token.](img/B15432_08_11.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.11: Creating an SAS token'
  id: totrans-209
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: If we are regenerating `key1`, which we used to sign the SAS token in the earlier
    example, then we need to create a new SAS token with `key2` or the new `key1`.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: 'Cookie stealing, script injection, and DoS attacks are common means used by
    attackers to disrupt an environment and steal data. Browsers and the HTTP protocol
    implement a built-in mechanism that ensures that these malicious activities cannot
    be performed. Generally, anything that is cross-domain is not allowed by either
    HTTP or browsers. A script running in one domain cannot ask for resources from
    another domain. However, there are valid use cases where such requests should
    be allowed. The HTTP protocol implements **cross-origin resource sharing** (**CORS**).
    With the help of CORS, it is possible to access resources across domains and make
    them work. Azure Storage configures CORS rules for blob, file, queue, and table
    resources. Azure Storage allows the creation of rules that are evaluated for each
    authenticated request. If the rules are satisfied, the request is allowed to access
    the resource. In Figure 8.12, you can see how to add CORS rules to each of the
    storage services:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: '![Navigating to the ‘CORS’ option under Settings and then adding CORS rules
    to each of the storage services.](img/B15432_08_12.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.12: Creating CORS rules for a storage account'
  id: totrans-213
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Data must not only be protected while in transit; it should also be protected
    while at rest. If data at rest is not encrypted, anybody who has access to the
    physical drive in the datacenter can read the data. Although the possibility of
    a data breach is negligible, customers should still encrypt their data. Storage
    service encryption also helps protect data at rest. This service works transparently
    and injects itself without users knowing about it. It encrypts data when the data
    is saved in a storage account and decrypts it automatically when it is read. This
    entire process happens without users performing any additional activity.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: Azure account keys must be rotated periodically. This will ensure that an attacker
    is not able to gain access to storage accounts.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: It is also a good idea to regenerate the keys; however, this must be evaluated
    with regard to its usage in existing applications. If it breaks the existing application,
    these applications should be prioritized for change management, and changes should
    be applied gradually.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: It is always recommended to have individual service–level SAS tokens with limited
    timeframes. This token should only be provided to users who should access the
    resources. Always follow the principle of least privilege and provide only the
    necessary permissions.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: SAS keys and storage account keys should be stored in Azure Key Vault. This
    provides secure storage and access to them. These keys can be read at runtime
    by applications from the key vault, instead of storing them in configuration files.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you can also use Azure AD to authorize the requests to the blob
    and queue storage. We'll be using RBAC to give necessary permissions to a service
    principal, and once we authenticate the service principal using Azure AD, an OAuth
    2.0 token is generated. This token can be added to the authorization header of
    your API calls to authorize a request against blob or queue storage. Microsoft
    recommends the use of Azure AD authorization while working with blob and queue
    applications due to the superior security provided by Azure AD and its simplicity
    compared to SAS tokens.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we are going to assess the security options available for
    Azure SQL Database.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: Azure SQL
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SQL Server stores relational data on Azure, which is a managed relational database
    service. It is also known as a **Database as a Service** (**DBaaS**) that provides
    a highly available, scalable, performance-centric, and secure platform for storing
    data. It is accessible from anywhere, with any programming language and platform.
    Clients need a connection string comprising the server, database, and security
    information to connect to it.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: SQL Server provides firewall settings that prevent access to anyone by default.
    IP addresses and ranges should be whitelisted to access SQL Server. Architects
    should only allow IP addresses that they are confident about and that belong to
    customers/partners. There are deployments in Azure for which either there are
    a lot of IP addresses or the IP addresses are not known, such as applications
    deployed in Azure Functions or Logic Apps. For such applications to access Azure
    SQL, Azure SQL allows whitelisting of all IP addresses to Azure services across
    subscriptions.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: 'It is to be noted that firewall configuration is at the server level and not
    the database level. This means that any changes here affect all databases within
    a server. In *Figure 8.13*, you can see how to add clients IPs to the firewall
    to grant access to the server:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '![In the Firewall setting pane, adding clients’ IPs to the firewall to grant
    access to the server.](img/B15432_08_13.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.13: Configuring firewall rules'
  id: totrans-226
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Azure SQL also provides enhanced security by encrypting data at rest. This ensures
    that nobody, including the Azure datacenter administrators, can view the data
    stored in SQL Server. The technology used by SQL Server for encrypting data at
    rest is known as **Transparent Data Encryption** (**TDE**). There are no changes
    required at the application level to implement TDE. SQL Server encrypts and decrypts
    data transparently when the user saves and reads data. This feature is available
    at the database level. We can also integrate TDE with Azure Key Vault to have
    **Bring Your Own Key** (**BYOK**). Using BYOK, we can enable TDE using a customer-managed
    key in Azure Key Vault.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: SQL Server also provides **dynamic data masking** (**DDM**), which is especially
    useful for masking certain types of data, such as credit card details or user
    PII data. Masking is not the same as encryption. Masking does not encrypt data,
    but only masks it, which ensures that data is not in a human-readable format.
    Users should mask and encrypt sensitive data in Azure SQL Server.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'SQL Server also provides an auditing and threat detection service for all servers.
    There are advanced data collection and intelligence services running on top of
    these databases to discover threats and vulnerabilities and alert users to them.
    Audit logs are maintained by Azure in storage accounts and can be viewed by administrators
    to be actioned. Threats such as SQL injection and anonymous client logins can
    generate alerts that administrators can be informed about over email. In *Figure
    8.14*, you can see how to enable Threat Detection:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '![Selecting the ‘Auditing & Threat Detection’ blade from the left-hand navigation
    to enable Threat Protection and selecting the types of threats to be detected.](img/B15432_08_14.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.14: Enabling Threat Protection and selecting the types of threat to
    detect'
  id: totrans-231
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Data can be masked in Azure SQL. This helps us store data in a format that
    cannot be read by humans:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '![Selecting the ‘Add mask’ button at the top and configuring the settings to
    mask data.](img/B15432_08_15.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.15: Configuring the settings to mask data'
  id: totrans-234
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Azure SQL also provides TDE to encrypt data at rest, as shown in *Figure 8.16*:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '![Moving to the ‘Transparent data encryption’ blade and enabling TDE.](img/B15432_08_16.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.16: Enabling TDE'
  id: totrans-237
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: To conduct a vulnerability assessment on SQL Server, you can leverage SQL Vulnerability
    Assessment, which is a part of the unified package for advanced SQL security capabilities
    known as Advanced Data Security. SQL Vulnerability Assessment can be used by customers
    proactively to improve the security of the database by discovering, tracking,
    and helping you to remediate potential database vulnerabilities.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: We have mentioned Azure Key Vault a few times in the previous sections, when
    we discussed managed identities, SQL Database, and so on. You know the purpose
    of Azure Key Vault now, and in the next section, we will be exploring some methods
    that can help secure the contents of your key vault.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: Azure Key Vault
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Securing resources using passwords, keys, credentials, certificates, and unique
    identifiers is an important element of any environment and application from the
    security perspective. They need to be protected, and ensuring that these resources
    remain secure and do not get compromised is an important pillar of security architecture.
    Management and operations that keep the secrets and keys secure, while making
    them available when needed, are important aspects that cannot be ignored. Typically,
    these secrets are used all over the place—within the source code, inside configuration
    files, on pieces of paper, and in other digital formats. To overcome these challenges
    and store all secrets uniformly in a centralized secure storage, Azure Key Vault
    should be used.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: Azure Key Vault is well integrated with other Azure services. For example, it
    would be easy to use a certificate stored in Azure Key Vault and deploy it to
    an Azure virtual machine's certificate store. All kinds of keys, including storage
    keys, IoT and event keys, and connection strings, can be stored as secrets in
    Azure Key Vault. They can be retrieved and used transparently without anyone viewing
    them or storing them temporarily anywhere. Credentials for SQL Server and other
    services can also be stored in Azure Key Vault.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: Azure Key Vault works on a per-region basis. What this means is that an Azure
    Key Vault resource should be provisioned in the same region where the application
    and service are deployed. If a deployment consists of more than one region and
    needs services from Azure Key Vault, multiple Azure Key Vault instances should
    be provisioned.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: An important feature of Azure Key Vault is that the secrets, keys, and certificates
    are not stored in general storage. This sensitive data is backed up by the HSM.
    This means that this data is stored in separate hardware on Azure that can only
    be unlocked by keys owned by users. To provide added security, you can also implement
    virtual network service endpoints for Azure Key Vault. This will restrict access
    to the key vault to specific virtual networks. You can also restrict access to
    an IPv4 address range.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: In the *Azure Storage* section, we discussed using Azure AD to authorize requests
    to blobs and queues. It was mentioned that we use an OAuth token, which is obtained
    from Azure AD, to authenticate API calls. In the next section, you will learn
    how authentication and authorization are done using OAuth. Once you have completed
    the next section, you will be able to relate it to what we discussed in the *Azure
    Storage* section.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: Authentication and authorization using OAuth
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Azure AD is an identity provider that can authenticate users based on already
    available users and service principals available within the tenant. Azure AD implements
    the OAuth protocol and supports authorization on the internet. It implements an
    authorization server and services to enable the OAuth authorization flow, implicit
    as well as client credential flows. These are different well-documented OAuth
    interaction flows between client applications, authorization endpoints, users,
    and protected resources.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure AD also supports **single sign-on** (**SSO**), which adds security and
    ease when signing in to applications that are registered with Azure AD. You can
    use OpenID Connect, OAuth, SAML, password-based, or the linked or disabled SSO
    method when developing new applications. If you are unsure of which to use, refer
    to the flowchart from Microsoft here: [https://docs.microsoft.com/azure/active-directory/manage-apps/what-is-single-sign-on#choosing-a-single-sign-on-method](https://docs.microsoft.com/azure/active-directory/manage-apps/what-is-single-sign-on#choosing-a-single-sign-on-method).'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: Web applications, JavaScript-based applications, and native client applications
    (such as mobile and desktop applications) can use Azure AD for both authentication
    and authorization. There are social media platforms, such as Facebook, Twitter,
    and so on, that support the OAuth protocol for authorization.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: One of the easiest ways to enable authentication for web applications using
    Facebook is shown next. There are other methods that use security binaries, but
    that is outside the scope of this book.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: In this walkthrough, an Azure App Service will be provisioned along with an
    App Service Plan to host a custom web application. A valid Facebook account will
    be needed as a prerequisite in order to redirect users to it for authentication
    and authorization.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: 'A new resource group can be created using the Azure portal, as shown in *Figure
    8.17*:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a new resource group with the Azure portal and filling the details
    in the Basic tab, such as subscription, resource group name, and region.](img/B15432_08_17.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.17: Creating a new resource group'
  id: totrans-254
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'After the resource group has been created, a new app service can be created
    using the portal, as shown in *Figure 8.18*:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a new application by filling in details such as subscription, resource
    group name, instance details, and App Service plan in the Web App pane.](img/B15432_08_18.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.18: Creating a new application'
  id: totrans-257
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: It is important to note the URL of the web application because it will be needed
    later when configuring the Facebook application.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Once the web application is provisioned in Azure, the next step is to create
    a new application in Facebook. This is needed to represent your web application
    within Facebook and to generate appropriate client credentials for the web application.
    This is the way Facebook knows about the web application.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to [developers.facebook.com](http://developers.facebook.com) and log
    in using the appropriate credentials. Create a new application by selecting the
    **Create App** option under **My Apps** in the top-right corner, as shown in *Figure
    8.19*:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '![Selecting the Create App optionfrom the Facebook Developer portal under My
    Apps in the top-right corner.](img/B15432_08_19.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.19: Creating a new application from the Facebook developer portal'
  id: totrans-262
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The web page will prompt you to provide a name for the web application to create
    a new application within Facebook:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding details of the new application in the ‘Create a New App ID’ pane.](img/B15432_08_20.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.20: Adding a new application'
  id: totrans-265
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Add a new **Facebook Login** product and click on **Set Up** to configure login
    for the custom web application to be hosted on Azure App Service:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: '![Choosing the ‘Facebook Login’ product from the options displayedin the ‘Add
    a Product’ pane.](img/B15432_08_21.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.21: Adding Facebook login to the application'
  id: totrans-268
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The **Set Up** button provides a few options, as shown in *Figure 8.22*, and
    these options configure the OAuth flow, such as authorization flow, implicit flow,
    or client credential flow. Select the **Web** option because that is what needs
    Facebook authorization:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: '![Choosing the Web option from the four options displayed—iOS, Android, Web,
    and Other.](img/B15432_08_22.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.22: Selecting the platform'
  id: totrans-271
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Provide the URL of the web application that we noted earlier after provisioning
    the web application on Azure:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: '![Entering the site URL forthe application in the ‘Tell Us about Your Website’
    pane.](img/B15432_08_23.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.23: Providing the site URL to the application'
  id: totrans-274
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Click on the `domain name/.auth/login/facebook/callback`:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: '![Navigating to settings in the ‘Facebook for developers’ windowand adding
    the URI in the textbox under ‘Valid OAuth Redirect URIs’.](img/B15432_08_24.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.24: Adding OAuth redirect URIs'
  id: totrans-277
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Go to the **Basic** settings from the menu on the left and note the values
    for **App ID** and **App Secret**. These are needed to configure the Azure App
    Services authentication/authorization:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: '![Noting down the App ID and the App Secret displayed at the top.](img/B15432_08_25.jpg)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.25: Finding the App ID and App Secret'
  id: totrans-280
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'In the Azure portal, navigate back to the Azure App Service created in the
    first few steps of this section and navigate to the authentication/authorization
    blade. Switch on **App Services Authentication**, select **Log in with Facebook**
    for authentication, and click on the **Facebook** item from the list:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: '![Enabling Facebook authentication in App Service and choosing the ‘Action
    to take when request is not authenticated’ as the ‘Log in with Facebook’ option
    from the drop-down list.](img/B15432_08_26.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.26: Enabling Facebook authentication in App Service'
  id: totrans-283
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'On the resultant page, provide the already noted app ID and app secret, and
    also select the scope. The scope decides the information shared by Facebook with
    the web application:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding the App ID and App secret in the resultant page from the previous
    step and then checking the boxes to configure the scope.](img/B15432_08_27.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.27: Selecting the scope'
  id: totrans-286
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Click **OK** and click the **Save** button to save the authentication/authorization
    settings.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, if a new incognito browser session is initiated and you go to the custom
    web application, the request should get redirected to Facebook. As you might have
    seen on other websites, when you use **Log in with Facebook**, you will be asked
    to give your credentials:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: '![The browser displaying the Facebook prompt requesting the credentials to
    log in.](img/B15432_08_28.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.28: Logging in to the website using Facebook'
  id: totrans-290
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Once you have entered your credentials, a user consent dialog box will ask
    for permission for data from Facebook to be shared with the web application:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: '![Auser consent dialog boxappears on the screen, asking for permission for
    data from Facebook to be shared with the web application.](img/B15432_08_29.jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.29: User consent to share your information with the application'
  id: totrans-293
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'If consent is provided, the web page from the web application should appear:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: '![The web page from the web application appears on the screen and it shows
    that the app service is up and running.](img/B15432_08_30.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.30: Accessing the landing page'
  id: totrans-296
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: A similar approach can be used to protect your web application using Azure AD,
    Twitter, Microsoft, and Google. You can also integrate your own identity provider
    if required.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: The approach shown here illustrates just one of the ways to protect a website
    using credentials stored elsewhere and the authorization of external applications
    to access protected resources. Azure also provides JavaScript libraries and .NET
    assemblies to use the imperative programming method to consume the OAuth endpoints
    provided by Azure AD and other social media platforms. You are recommended to
    use this approach for greater control and flexibility for authentication and authorization
    within your applications.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: So far, we have discussed security features and how they can be implemented.
    It is also relevant to have monitoring and auditing in place. Implementing an
    auditing solution will help your security team to audit the logs and take precautionary
    measures. In the next section, we will be discussing the security monitoring and
    auditing solutions in Azure.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: Security monitoring and auditing
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Every activity in your environment, from emails to changing a firewall, can
    be categorized as a security event. From a security standpoint, it''s necessary
    to have a central logging system to monitor and track the changes made. During
    an audit, if you find suspicious activity, you can discover what the flaw in the
    architecture is and how it can be remediated. Also, if you had a data breach,
    the logs will help security professionals to understand the pattern of an attack
    and how it was executed. Also, necessary preventive measures can be taken to avoid
    similar incidents in the future. Azure provides the following two important security
    resources to manage all security aspects of the Azure subscription, resource groups,
    and resources:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Security Center
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Of these two security resources, we will first explore Azure Monitor.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor
  id: totrans-305
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Azure Monitor is a one-stop shop for monitoring Azure resources. It provides
    information about Azure resources and their state. It also offers a rich query
    interface, using information that can be sliced and diced using data at the levels
    of subscription, resource group, individual resource, and resource type. Azure
    Monitor collects data from numerous data sources, including metrics and logs from
    Azure, customer applications, and the agents running in virtual machines. Other
    services, such as Azure Security Center and Network Watcher, also ingest data
    to the Log Analytics workspace, which can be analyzed from Azure Monitor. You
    can use REST APIs to send custom data to Azure Monitor.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure Monitor can be used through the Azure portal, PowerShell, the CLI, and
    REST APIs:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
- en: '![The dashboard in the Azure portal displaying the Activity log with details
    such as Operation name, Status, Time, Time stamp, and Subscription.](img/B15432_08_31.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.31: Exploring activity logs'
  id: totrans-309
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The following logs are those provided by Azure Monitor:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: '**Activity log**: This shows all management-level operations performed on resources.
    It provides details about the creation time, the creator, the resource type, and
    the status of resources.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operation log (classic)**: This provides details of all operations performed
    on resources within a resource group and subscription.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Metrics**: This gets performance information for individual resources and
    sets alerts on them.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Diagnostic settings**: This helps us to configure the effects logs by setting
    up Azure Storage for storing logs, streaming logs in real time to Azure Event
    Hubs, and sending them to Log Analytics.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Log search**: This helps integrate Log Analytics with Azure Monitor.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Monitor can identify security-related incidents and take appropriate action.
    It is important that only authorized individuals should be allowed to access Azure
    Monitor, since it might contain sensitive information.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
- en: Azure Security Center
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Azure Security Center, as the name suggests, is a one-stop shop for all security
    needs. There are generally two activities related to security—implementing security
    and monitoring for any threats and breaches. Security Center has been built primarily
    to help with both these activities. Azure Security Center enables users to define
    their security policies and get them implemented on Azure resources. Based on
    the current state of Azure resources, Azure Security Center provides security
    recommendations to harden the solution and individual Azure resources. The recommendations
    include almost all Azure security best practices, including the encryption of
    data and disks, network protection, endpoint protection, access control lists,
    the whitelisting of incoming requests, and the blocking of unauthorized requests.
    The resources range from infrastructure components, such as load balancers, network
    security groups, and virtual networks, to PaaS resources, such as Azure SQL and
    Storage. Here is an excerpt from the **Overview** pane of Azure Security Center,
    which shows the overall secure score of the subscription, resource security hygiene,
    and more:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: '![The Overview pane of Security Center displaying information about Policy
    and Compliance, and Resource security hygiene.](img/B15432_08_32.jpg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.32: Azure Security Center overview'
  id: totrans-320
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Azure Security Center is a rich platform that provides recommendations for
    multiple services, as shown in *Figure 8.33*. Also, these recommendations can
    be exported to CSV files for reference:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: '![The ‘Recommendations’ pane of Security Center, displaying the security recommendations
    for identity and access.](img/B15432_08_33.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.33: Azure Security Center recommendations'
  id: totrans-323
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: As was mentioned at the beginning of this section, monitoring and auditing are
    crucial in an enterprise environment. Azure Monitor can have multiple data sources
    and can be used to audit logs from these sources. Azure Security Center gives
    continuous assessments and prioritized security recommendations along with the
    overall secure score.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-325
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Security is always an important aspect of any deployment or solution. It has
    become much more important and relevant because of deployment to the cloud. Moreover,
    there is an increasing threat of cyberattacks. In these circumstances, security
    has become a focal point for organizations. No matter the type of deployment or
    solution, whether it's IaaS, PaaS, or SaaS, security is needed across all of them.
    Azure datacenters are completely secure, and they have a dozen international security
    certifications. They are secure by default. They provide IaaS security resources,
    such as NSGs, network address translation, secure endpoints, certificates, key
    vaults, storage, virtual machine encryption, and PaaS security features for individual
    PaaS resources. Security has a complete life cycle of its own and it should be
    properly planned, designed, implemented, and tested, just like any other application
    functionality.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: We discussed operating system firewalls and Azure Firewall and how they can
    be leveraged to increase the overall security landscape of your solution. We also
    explored new Azure services, such as Azure Bastion, Azure Front Door, and Azure
    Private Link.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: Application security was another key area, and we discussed performing authentication
    and authorization using OAuth. We did a quick demo of how to create an app service
    and integrate Facebook login. Facebook was just an example; you could use Google,
    Twitter, Microsoft, Azure AD, or any custom identity provider.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: We also explored the security options offered by Azure SQL, which is a managed
    database service provided by Azure. We discussed the implementation of security
    features, and in the final section, we concluded with monitoring and auditing
    with Azure Monitor and Azure Security Center. Security plays a vital role in your
    environment. An architect should always design and architect solutions with security
    as one of the main pillars of the architecture; Azure provides many options to
    achieve this.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know how to secure your data in Azure, in the next chapter, we
    will focus on big data solutions from Hadoop, followed by Data Lake Storage, Data
    Lake Analytics, and Data Factory.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
