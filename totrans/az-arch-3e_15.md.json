["```\n{ \"type\": \"Microsoft.Storage/storageAccounts\",  \"apiVersion\": \"2019-04-01\",   \"name\": \"[variables('storage2')]\",   \"location\": \"[resourceGroup().location]\",   \"kind\": \"Storage\",   \"sku\": {                \"name\": \"Standard_LRS\"          }}\n```", "```\ninstall-module  -Name az  -Force\n```", "```\n{  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",  \"contentVersion\": \"1.0.0.0\",  \"parameters\": {    \"resourceGroupInfo\": {      \"type\": \"array\"    },    \"multiLocation\": {      \"type\": \"array\"         }  },  \"resources\": [    {      \"type\": \"Microsoft.Resources/resourceGroups\",      \"location\": \"[parameters('multiLocation')[copyIndex()]]\",      \"name\": \"[parameters('resourceGroupInfo')[copyIndex()]]\",      \"apiVersion\": \"2019-10-01\",      \"copy\": {        \"name\": \"allResourceGroups\",        \"count\": \"[length(parameters('resourceGroupInfo'))]\"      },      \"properties\": {}    }  ],  \"outputs\": {}}\n```", "```\n{  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\",  \"contentVersion\": \"1.0.0.0\",  \"parameters\": {    \"resourceGroupInfo\": {      \"value\": [ \"firstResourceGroup\", \"SeocndResourceGroup\" ]    },    \"multiLocation\": {      \"value\": [        \"West Europe\",        \"East US\"      ]    }  }}\n```", "```\nLogin-AzAccount\n```", "```\nNew-AzDeployment  -Location \"West Europe\"  -TemplateFile \"c:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\multipleResourceGroups.json\" -TemplateParameterFile \"c:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\multipleResourceGroups.parameters.json\"  -Verbose\n```", "```\n    az login\n    ```", "```\n    az account set –subscription xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n    ```", "```\n    C:\\Users\\Ritesh>az deployment create—location westus—template-file \"C:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\azuredeploy.json—parameters @\"C:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\azuredeploy.parameters.json\"—verbose\n    ```", "```\n{    \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",    \"contentVersion\": \"1.0.0.0\",    \"parameters\": {      \"storagePrefix1\": {        \"type\": \"string\",        \"defaultValue\": \"st01\"    ...        \"type\": \"string\",        \"defaultValue\": \"rg01\"      },      \"remoteSub\": {        \"type\": \"string\",        \"defaultValue\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"      }   ...                            }                        }                    ],                    \"outputs\": {}                }            }        }    ],    \"outputs\": {}}\n```", "```\nNew-AzResourceGroupDeployment  -TemplateFile \"<< path to your CrossSubscriptionStorageAccount.json file >>\" -ResourceGroupName \"<<provide your base subscription resource group name>>\" -storagePrefix1 <<provide prefix for first storage account>> -storagePrefix2 <<provide prefix for first storage account>> -verbose\n```", "```\nNew-AzResourceGroup -Location <<replace with location of your key vault>> -Name <<replace with name of your resource group for key vault>> -verbose New-AzureRmKeyVault -Name <<replace with name of your key vault>> -ResourceGroupName <<replace with name of your resource group for key vault>>  -Location <<replace with location of your key vault>> -EnabledForDeployment -EnabledForTemplateDeployment -EnabledForDiskEncryption -EnableSoftDelete -EnablePurgeProtection -Sku Standard -Verbose \n```", "```\nSet-AzKeyVaultSecret -VaultName <<replace with name of your key vault>> -Name <<replace with name of yoursecret>> -SecretValue $(ConvertTo-SecureString -String <<replace with value of your secret>> -AsPlainText -Force ) -Verbose\n```", "```\n{  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",  \"contentVersion\": \"1.0.0.0\",  \"parameters\": {    \"hostingPlanNames\": {      \"type\": \"array\",      \"minLength\": 1     },  ...      \"type\": \"Microsoft.Resources/deployments\",      \"name\": \"deployment01\",      \"apiVersion\": \"2019-10-01\",      \"subscriptionId\": \"[parameters('subscriptions')[copyIndex()]]\",      \"resourceGroup\": \"[parameters('resourceGroups')[copyIndex()]]\",      \"copy\": {        \"count\": \"[length(parameters('hostingPlanNames'))]\",        \"name\": \"mywebsites\",        \"mode\": \"Parallel\"      },    ...              \"kind\": \"Storage\",              \"properties\": {              }            }          ]...\n```", "```\n{  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\",  \"contentVersion\": \"1.0.0.0\",  \"parameters\": {    \"hostingPlanNames\": {   ...    \"storageKey\": {      \"reference\": {        \"keyVault\": { \"id\": \"<<replace it with the value of Key vault ResourceId noted before>>\" },        \"secretName\": \"<<replace with the name of the secret available in Key vault>>\"      }    }  }}\n```", "```\nNew-AzResourceGroupDeployment  -TemplateFile \"c:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\CrossSubscriptionNestedStorageAccount.json\" -ResourceGroupName rg01 -TemplateParameterFile \"c:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\CrossSubscriptionNestedStorageAccount.parameters.json\" -Verbose\n```", "```\nSet-AzKeyVaultSecret -VaultName \"testkeyvaultbook\" -Name \"storageName\" -SecretValue $(ConvertTo-SecureString -String \"uniquename\" -AsPlainText -Force ) -Verbose Set-AzKeyVaultSecret -VaultName \"testkeyvaultbook\" -Name \"storageKey\" -SecretValue $(ConvertTo-SecureString -String \"?sv=2020-03-28&ss=bfqt&srt=sco&sp=rwdlacup&se=2020-03-30T21:51:03Z&st=2020-03-30T14:51:03Z&spr=https&sig=gTynGhj20er6pDl7Ab%2Bpc29WO3%2BJhvi%2BfF%2F6rHYWp4g%3D\" -AsPlainText -Force ) -Verbose\n```", "```\n{  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",  \"contentVersion\": \"1.0.0.0\",  \"parameters\": {    \"hostingPlanNames\": {      \"type\": \"array\",      \"minLength\": 1   ...      \"type\": \"Microsoft.Resources/deployments\",      \"name\": \"fsdfsdf\",      \"apiVersion\": \"2019-10-01\",      \"subscriptionId\": \"[parameters('subscriptions')[copyIndex()]]\",      \"resourceGroup\": \"[parameters('resourceGroups')[copyIndex()]]\",      \"copy\": {        \"count\": \"[length(parameters('hostingPlanNames'))]\",        \"name\": \"mywebsites\",        \"mode\": \"Parallel\"    ...  ]}\n```", "```\n{  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#\",  \"contentVersion\": \"1.0.0.0\",  \"parameters\": {    \"hostingPlanNames\": {      \"value\": [ \"firstappservice\", \"secondappservice\" ]  ...    \"storageKey\": {      \"reference\": {        \"keyVault\": { \"id\": \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/keyvaluedemo/providers/Microsoft.KeyVault/vaults/forsqlvault1\" },        \"secretName\": \"storageKey\"      }    }  }}\n```", "```\nNew-AzureRmResourceGroupDeployment  -TemplateFile \"c:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\CrossSubscriptionLinkedStorageAccount.json\" -ResourceGroupName <<replace with the base subscription resource group name >> -TemplateParameterFile \"c:\\users\\rites\\source\\repos\\CrossSubscription\\CrossSubscription\\CrossSubscriptionLinkedStorageAccount.parameters.json\" -Verbose\n```", "```\n{\n      \"type\": \"Microsoft.Storage/storageAccounts\",      \"name\": \"[variables('storageAccountName')]\",      \"apiVersion\": \"2019-04-01\",      \"location\": \"[parameters('location')]\",      \"sku\": {        \"name\": \"Standard_LRS\"      },      \"kind\": \"Storage\",      \"properties\": {}      },\n```", "```\n    {\n      \"apiVersion\": \"2019-09-01\",\n      \"type\": \"Microsoft.Network/virtualNetworks\",\n      \"name\": \"[variables('virtualNetworkName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"addressSpace\": {\n          \"addressPrefixes\": [\n            \"[variables('addressPrefix')]\"\n          ]\n        },\n        \"subnets\": [\n          {\n            \"name\": \"[variables('subnetName')]\",\n            \"properties\": {\n              \"addressPrefix\": \"[variables('subnetPrefix')]\"\n            }\n          }\n        ]\n      }\n    },\n```", "```\n    {\n      \"apiVersion\": \"2019-11-01\",\n      \"type\": \"Microsoft.Network/publicIPAddresses\",\n      \"name\": \"[variables('publicIPAddressName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"properties\": {\n        \"publicIPAllocationMethod\": \"Dynamic\",\n        \"dnsSettings\": {\n          \"domainNameLabel\": \"[parameters('dnsLabelPrefix')]\"\n        }\n      }\n    },\n```", "```\n{\n      \"apiVersion\": \"2019-11-01\",\n      \"type\": \"Microsoft.Network/networkInterfaces\",\n      \"name\": \"[variables('nicName')]\",\n      \"location\": \"[parameters('location')]\",\n      \"dependsOn\": [\n        \"[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]\",\n        \"[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]\"\n      ],\n      \"properties\": {\n        \"ipConfigurations\": [\n          {\n            \"name\": \"ipconfig1\",\n            \"properties\": {\n              \"privateIPAllocationMethod\": \"Dynamic\",\n              \"publicIPAddress\": {\n\"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]\"\n              },\n\"subnet\": {\n\"id\": \"[variables('subnetRef')]\"\n              }\n            }\n          }\n        ]\n      }\n    },\n```", "```\n{\n\"apiVersion\": \"2019-07-01\",\n\"type\": \"Microsoft.Compute/virtualMachines\",\n\"name\": \"[variables('vmName')]\",\n\"location\": \"[resourceGroup().location]\",\n\"tags\": {\n\"displayName\": \"VirtualMachine\"\n      },\n\"dependsOn\": [\n\"[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]\",\n\"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]\"\n      ],\n\"properties\": {\n\"hardwareProfile\": { \"vmSize\": \"[variables('vmSize')]\" },\n\"availabilitySet\": {\n\"id\": \"[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]\"\n        },\n\"osProfile\": {\n\"computerName\": \"[variables('vmName')]\",\n\"adminUsername\": \"[parameters('adminUsername')]\",\n\"adminPassword\": \"[parameters('adminPassword')]\"\n        },\n\"storageProfile\": {\n\"imageReference\": {\n\"publisher\": \"[variables('imagePublisher')]\",\n\"offer\": \"[variables('imageOffer')]\",\n\"sku\": \"[parameters('windowsOSVersion')]\",\n\"version\": \"latest\"\n          },\n\"osDisk\": { \"createOption\": \"FromImage\" },\n\"copy\": [\n            {\n\"name\": \"dataDisks\",\n\"count\": 3,\n\"input\": {\n\"lun\": \"[copyIndex('dataDisks')]\",\n\"createOption\": \"Empty\",\n\"diskSizeGB\": \"1023\",\n\"name\": \"[concat(variables('vmName'), '-datadisk', copyIndex('dataDisks'))]\"\n              }\n            }\n          ]\n        },\n\"networkProfile\": {\n\"networkInterfaces\": [\n            {\n\"id\": \"[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]\"\n            }\n          ]\n        }\n      }\n    }\n```", "```\n  {\n\"apiVersion\": \"2019-08-01\",\n\"name\": \"[variables('hostingPlanName')]\",\n\"type\": \"Microsoft.Web/serverfarms\",\n\"location\": \"[parameters('location')]\",\n\"tags\": {\n\"displayName\": \"HostingPlan\"\n      },\n\"sku\": {\n\"name\": \"[parameters('skuName')]\",\n\"capacity\": \"[parameters('skuCapacity')]\"\n      },\n\"properties\": {\n\"name\": \"[variables('hostingPlanName')]\"\n      }\n    },\n```", "```\n  {\n\"apiVersion\": \"2019-08-01\",\n\"name\": \"[variables('webSiteName')]\",\n\"type\": \"Microsoft.Web/sites\",\n\"location\": \"[parameters('location')]\",\n\"dependsOn\": [\n\"[variables('hostingPlanName')]\"\n      ],\n\"properties\": {\n\"name\": \"[variables('webSiteName')]\",\n\"serverFarmId\": \"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]\"\n      },\n\"resources\": [\n        {\n\"apiVersion\": \"2019-08-01\",\n\"type\": \"config\",\n\"name\": \"connectionstrings\",\n\"dependsOn\": [\n\"[variables('webSiteName')]\"\n          ],\n\"properties\": {\n\"DefaultConnection\": {\n\"value\": \"[concat( 'sql connection string here')]\",\n\"type\": \"SQLAzure\"\n            }\n          }\n        }\n      ]\n    }\n```", "```\n\"name\": \"[variables('dataFactoryName')]\",\n\"apiVersion\": \"2018-06-01\",\n\"type\": \"Microsoft.DataFactory/datafactories\",\n\"location\": \"[parameters('location')]\",\n```", "```\n  {\n\"type\": \"linkedservices\",\n\"name\": \"[variables('storageLinkedServiceName')]\",\n\"apiVersion\": \"2018-06-01\",\n\"dependsOn\": [\n\"[variables('dataFactoryName')]\"\n          ],\n\"properties\": {\n\"type\": \"AzureStorage\",\n\"description\": \"Azure Storage Linked Service\",\n\"typeProperties\": {\n\"connectionString\":\n\"[concat('DefaultEndpointsProtocol=https; AccountName=',parameters('storageAccountName'),'; AccountKey=',parameters('storageAccountKey'))]\"\n            }\n          }\n        },\n        {\n\"type\": \"linkedservices\",\n\"name\": \"[variables('sqlLinkedServiceName')]\",\n\"apiVersion\": \"2018-06-01\",\n\"dependsOn\": [\n\"[variables('dataFactoryName')]\"\n          ],\n\"properties\": {\n\"type\": \"AzureSqlDatabase\",\n\"description\": \"Azure SQL linked service\",\n\"typeProperties\": {\n\"connectionString\": \"[concat('Data Source=tcp:', parameters('sqlServerName'), '.database.windows.net,1433;Initial Catalog=', parameters('sqlDatabaseName'), ';Integrated Security=False;User ID=', parameters('sqlUserId'), ';Password=', parameters('sqlPassword'), ';Connect Timeout=30;Encrypt=True')]\"\n            }\n          }\n        },\n```", "```\n {\n\"type\": \"datasets\",\n\"name\": \"[variables('storageDataset')]\",\n\"dependsOn\": [\n\"[variables('dataFactoryName')]\",\n\"[variables('storageLinkedServiceName')]\"\n          ],\n\"apiVersion\": \"2018-06-01\",\n\"properties\": {\n\"type\": \"AzureBlob\",\n\"linkedServiceName\": \"[variables('storageLinkedServiceName')]\",\n\"typeProperties\": {\n\"folderPath\": \"[concat(parameters('sourceBlobContainer'), '/')]\",\n\"fileName\": \"[parameters('sourceBlobName')]\",\n\"format\": {\n\"type\": \"TextFormat\"\n              }\n            },\n\"availability\": {\n\"frequency\": \"Hour\",\n\"interval\": 1\n            },\n\"external\": true\n          }\n        },\n```", "```\n {\n\"type\": \"datasets\",\n\"name\": \"[variables('intermediateDataset')]\",\n\"dependsOn\": [\n\"[variables('dataFactoryName')]\",\n\"[variables('sqlLinkedServiceName')]\"\n          ],\n\"apiVersion\": \"2018-06-01\",\n\"properties\": {\n\"type\": \"AzureSqlTable\",\n\"linkedServiceName\": \"[variables('sqlLinkedServiceName')]\",\n\"typeProperties\": {\n\"tableName\": \"[variables('intermediateDataset')]\"\n            },\n\"availability\": {\n\"frequency\": \"Hour\",\n\"interval\": 1\n            }\n          }\n        },\n```", "```\n {\n\"type\": \"datasets\",\n\"name\": \"[variables('sqlDataset')]\",\n\"dependsOn\": [\n\"[variables('dataFactoryName')]\",\n\"[variables('sqlLinkedServiceName')]\"\n          ],\n\"apiVersion\": \"2018-06-01\",\n\"properties\": {\n\"type\": \"AzureSqlTable\",\n\"linkedServiceName\": \"[variables('sqlLinkedServiceName')]\",\n\"typeProperties\": {\n\"tableName\": \"[parameters('sqlTargetTable')]\"\n            },\n\"availability\": {\n\"frequency\": \"Hour\",\n\"interval\": 1\n            }\n          }\n        },\n```", "```\n{\n\"type\": \"dataPipelines\",\n\"name\": \"[variables('pipelineName')]\",\n\"dependsOn\": [\n\"[variables('dataFactoryName')]\",\n\"[variables('storageLinkedServiceName')]\",\n\"[variables('sqlLinkedServiceName')]\",\n\"[variables('storageDataset')]\",\n\"[variables('sqlDataset')]\"\n          ],\n\"apiVersion\": \"2018-06-01\",\n\"properties\": {\n\"description\": \"Copies data from Azure Blob to Sql DB while invoking stored procedure\",\n\"activities\": [\n              {\n\"name\": \"BlobtoSqlTableCopyActivity\",\n\"type\": \"Copy\",\n\"typeProperties\": {\n\"source\": {\n\"type\": \"BlobSource\"\n                  },\n\"sink\": {\n\"type\": \"SqlSink\",\n\"writeBatchSize\": 0,\n\"writeBatchTimeout\": \"00:00:00\"\n                  }\n                },\n\"inputs\": [\n                  {\n\"name\": \"[variables('storageDataset')]\"\n                  }\n                ],\n\"outputs\": [\n                  {\n\"name\": \"[variables('intermediateDataset')]\"\n                  }\n                ]\n              },\n              {\n\"name\": \"SqlTabletoSqlDbSprocActivity\",\n\"type\": \"SqlServerStoredProcedure\",\n\"inputs\": [\n                  {\n\"name\": \"[variables('intermediateDataset')]\"\n                  }\n                ],\n\"outputs\": [\n                  {\n\"name\": \"[variables('sqlDataset')]\"\n                  }\n                ],\n\"typeProperties\": {\n\"storedProcedureName\": \"[parameters('sqlWriterStoredProcedureName')]\"\n                },\n\"scheduler\": {\n\"frequency\": \"Hour\",\n\"interval\": 1\n                },\n\"policy\": {\n\"timeout\": \"02:00:00\",\n\"concurrency\": 1,\n\"executionPriorityOrder\": \"NewestFirst\",\n\"retry\": 3\n                }\n              }\n            ],\n\"start\": \"2020-10-01T00:00:00Z\",\n\"end\": \"2020-10-02T00:00:00Z\"\n          }\n        }\n      ]\n    }\n```", "```\n  {\n\"name\": \"[variables('adAvailabilitySetNameRoot')]\",\n\"type\": \"Microsoft.Compute/availabilitySets\",\n\"apiVersion\": \"2019-07-01\",\n\"location\": \"[parameters('location')]\",\n\"sku\": {\n\"name\": \"Aligned\"\n      },\n\"properties\": {\n\"PlatformUpdateDomainCount\": 3,\n\"PlatformFaultDomainCount\": 2\n      }\n    },\n```", "```\n\"availabilitySet\" : {\n\"id\": \"[resourceId('Microsoft.Compute/availabilitySets', parameters('adAvailabilitySetName'))]\"\n      }\n```", "```\n  {\n\"name\": \"[parameters('virtualNetworkName')]\",\n\"type\": \"Microsoft.Network/virtualNetworks\",\n\"location\": \"[parameters('location')]\",\n\"apiVersion\": \"2019-09-01\",\n\"properties\": {\n\"addressSpace\": {\n\"addressPrefixes\": [\n\"[parameters('virtualNetworkAddressRange')]\"\n          ]\n        },\n\"dhcpOptions\": {\n\"dnsServers\": \"[parameters('DNSServerAddress')]\"\n        },\n\"subnets\": [\n          {\n\"name\": \"[parameters('subnetName')]\",\n\"properties\": {\n\"addressPrefix\": \"[parameters('subnetRange')]\"\n            }\n          }\n        ]\n      }\n    },\n```", "```\n {\n\"type\": \"Microsoft.Compute/virtualMachines/extensions\",\n\"name\": \"[concat(parameters('adNextDCVMName'),'/PrepareNextDC')]\",\n\"apiVersion\": \"2018-06-01\",\n\"location\": \"[parameters('location')]\",\n\"properties\": {\n\"publisher\": \"Microsoft.Powershell\",\n\"type\": \"DSC\",\n\"typeHandlerVersion\": \"2.21\",\n\"autoUpgradeMinorVersion\": true,\n\"settings\": {\n\"modulesURL\": \"[parameters('adNextDCConfigurationModulesURL')]\",\n\"configurationFunction\": \"[parameters('adNextDCConfigurationFunction')]\",\n\"properties\": {\n\"domainName\": \"[parameters('domainName')]\",\n\"DNSServer\": \"[parameters('DNSServer')]\",\n\"DNSForwarder\": \"[parameters('DNSServer')]\",\n\"adminCreds\": {\n\"userName\": \"[parameters('adminUserName')]\",\n\"password\": \"privateSettingsRef:adminPassword\"\n            }\n          }\n        },\n\"protectedSettings\": {\n\"items\": {\n\"adminPassword\": \"[parameters('adminPassword')]\"\n          }\n        }\n      }\n    },\n```"]