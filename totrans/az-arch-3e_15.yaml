- en: 15\. Cross-subscription deployments using ARM templates
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 15. 使用 ARM 模板进行跨订阅部署
- en: '**Azure Resource Manager** (**ARM**) templates are the preferred mechanism
    for provisioning resources and configuring them on Azure.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**Azure 资源管理器**（**ARM**）模板是配置和管理 Azure 上资源的首选机制。'
- en: ARM templates help to implement a relatively new paradigm known as **Infrastructure
    as Code** (**IaC**). ARM templates convert the infrastructure and its configuration
    into code, which has numerous advantages. IaC brings a high level of consistency
    and predictability to deployments across environments. It also ensures that environments
    can be tested before going to production, and, finally, it gives a high level
    of confidence in the deployment process, maintenance, and governance.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: ARM 模板有助于实现一种相对较新的范式，称为 **基础设施即代码**（**IaC**）。ARM 模板将基础设施及其配置转化为代码，具有众多优势。IaC
    为跨环境的部署带来了高度一致性和可预测性。它还确保在投入生产之前可以对环境进行测试，最终，它使得部署过程、维护和治理更具信心。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: ARM templates
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM 模板
- en: Deploying resource groups with ARM templates
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 ARM 模板部署资源组
- en: Deploying resources across subscriptions and resource groups
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨订阅和资源组部署资源
- en: Deploying cross-subscription and resource group deployments using linked templates
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用链接模板进行跨订阅和资源组部署
- en: Creating ARM templates for PaaS, data, and IaaS solutions
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 PaaS、数据和 IaaS 解决方案创建 ARM 模板
- en: ARM templates
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ARM 模板
- en: A prominent advantage of IaC is that it can be version controlled. It can also
    be reused across environments, which provides a high degree of consistency and
    predictability in deployments, and ensures that the impact and result of deploying
    an ARM template is the same no matter the number of times the template is deployed.
    This feature is known as **idempotency**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: IaC 的一个显著优势是它可以进行版本控制。它还可以跨环境复用，这在部署中提供了高度的一致性和可预测性，并确保无论模板部署多少次，部署 ARM 模板的影响和结果都是相同的。这个特性被称为
    **幂等性**。
- en: ARM templates debuted with the introduction of the ARM specification and have
    been getting richer in features and growing in maturity since then. It's important
    to understand that there's generally a feature gap of a few weeks to a couple
    of months between the actual resource configuration and the availability of the
    configuration in ARM templates.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ARM 模板随着 ARM 规范的引入而首次亮相，并且自那时以来功能逐渐丰富，成熟度也在不断提高。需要理解的是，实际资源配置与 ARM 模板中配置的可用性之间通常存在几周到几个月的功能差距。
- en: Each resource has its own configuration. This configuration can be affected
    in a multitude of ways, including using Azure PowerShell, the Azure CLI, Azure
    SDKs, REST APIs, and ARM templates.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 每个资源都有自己的配置。此配置可以通过多种方式进行更改，包括使用 Azure PowerShell、Azure CLI、Azure SDK、REST API
    和 ARM 模板。
- en: Each of these techniques has its own development and release life cycle, which
    is different from the actual resource development. Let's try to understand this
    with the help of an example.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 每种技术都有其独立的开发和发布生命周期，这与实际资源的开发不同。让我们通过一个例子来理解这一点。
- en: The Azure Databricks resource has its own cadence and development life cycle.
    The consumers of this resource have their own development life cycle, in turn,
    which is different from the actual resource development. If Databricks gets its
    first release on December 31, the Azure PowerShell cmdlets for it might not be
    available on the same date and might even be released on January 31 of the next
    year; similarly, the availability of these features in the REST API and ARM templates
    might be around January 15.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Databricks 资源有其自身的发布周期和开发生命周期。使用该资源的消费者也有自己的开发生命周期，这与实际资源的开发周期不同。如果 Databricks
    在 12 月 31 日首次发布，那么针对它的 Azure PowerShell cmdlet 可能在同一天无法使用，甚至可能在次年的 1 月 31 日才发布；同样，这些功能在
    REST API 和 ARM 模板中的可用性可能是在 1 月 15 日左右。
- en: ARM templates are JSON-based documents that, when executed, invoke a REST API
    on the Azure management plane and submit the entire document to it. The REST API
    has its own development life cycle, and the JSON schema for the resource has its
    own life cycle too.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ARM 模板是基于 JSON 的文档，执行时会调用 Azure 管理平面上的 REST API 并提交整个文档。REST API 有自己的开发生命周期，而资源的
    JSON 架构也有自己的生命周期。
- en: 'This means the development of a feature within a resource needs to happen in
    at least three different components before they can be consumed from ARM templates.
    These include:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，资源中的功能开发至少需要在三个不同的组件中进行，才能从 ARM 模板中使用。包括：
- en: The resource itself
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该资源本身
- en: The REST API for the resource
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该资源的 REST API
- en: The ARM template resource schema
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM 模板资源架构
- en: 'Each resource in the ARM template has the `apiVersion` property. This property
    helps to decide the REST API version that should be used to provision and deploy
    the resource. *Figure 15.1* shows the flow of requests from the ARM template to
    resource APIs that are responsible for the creation, updating, and deletion of
    resources:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 ARM 模板中的资源都有`apiVersion`属性。该属性帮助确定应使用的 REST API 版本，以便配置和部署该资源。*图 15.1* 显示了从
    ARM 模板到负责创建、更新和删除资源的资源 API 请求流：
- en: '![A flow diagram illustrating the flowofrequestsfromtheARMtemplatetoresourceAPIs,
    which starts from ARM templates, then moves to the Resource REST API and finally
    moves to the Resource Management API.](img/Figure_15.1.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![一个流程图，展示了从 ARM 模板到资源 API 的请求流，流程从 ARM 模板开始，然后转到资源 REST API，最后转到资源管理 API。](img/Figure_15.1.jpg)'
- en: 'Figure 15.1: Request flow'
  id: totrans-22
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 15.1：请求流
- en: 'A resource configuration, such as a storage account in an ARM template, looks
    as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 资源配置，例如 ARM 模板中的存储帐户，格式如下：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the preceding code, the availability of this schema for defining `sku` is
    based on the development of the ARM template schema. The availability of the REST
    API and its version number is determined by `apiVersion`, which happens to be
    `2019-04-01`. The actual resource is determined by the `type` property, which
    has the following two parts:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，定义 `sku` 的架构可用性基于 ARM 模板架构的开发。REST API 的可用性及其版本号由 `apiVersion` 决定，版本为`2019-04-01`。实际资源由
    `type` 属性决定，该属性包括以下两个部分：
- en: '**Resource-provider namespace**: Resources in Azure are hosted within namespaces
    and related resources are hosted within the same namespace.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源提供者命名空间**：Azure 中的资源托管在命名空间内，相关的资源也托管在相同的命名空间内。'
- en: '**Resource type**: Resources are referenced using their type name.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源类型**：资源通过其类型名称进行引用。'
- en: In this case, the resource is identified by its provider name and type, which
    happens to be `Microsoft.Storage/storageaccounts`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，资源通过其提供者名称和类型来识别，类型为`Microsoft.Storage/storageaccounts`。
- en: Previously, ARM templates expected resource groups to be available prior to
    deployment. They were also limited to deploying to a single resource group within
    a single subscription.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，ARM 模板要求在部署之前资源组必须已存在。它们也仅限于在单一订阅的单一资源组中进行部署。
- en: This meant that, until recently, an ARM template could deploy all resources
    within a single resource group. Azure ARM templates now have added functionality
    for deploying resources to multiple resource groups within the same subscription
    or multiple subscriptions simultaneously. It's now possible to create resource
    groups as part of ARM templates, which means it's now possible to deploy resources
    in multiple regions into different resource groups.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，直到最近，ARM 模板只能在单一资源组内部署所有资源。现在，Azure ARM 模板增加了将资源部署到同一订阅内的多个资源组或多个订阅的功能。现在可以在
    ARM 模板中创建资源组，这意味着现在可以将资源部署到多个区域的不同资源组中。
- en: Why would we need to create resource groups from within ARM templates, and why
    would we need to have cross-subscription and resource group deployments simultaneously?
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为什么需要在 ARM 模板中创建资源组？为什么需要同时进行跨订阅和跨资源组的部署？
- en: To appreciate the value of creating a resource group and cross-subscription
    deployments, we need to understand how deployments were carried out prior to these
    features being available.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解创建资源组和跨订阅部署的价值，我们需要了解这些功能可用之前是如何进行部署的。
- en: To deploy an ARM template, a resource group is a prerequisite. Resource groups
    should be created prior to the deployment of a template. Developers use PowerShell,
    the Azure CLI, or the REST API to create resource groups and then initiate the
    deployment of ARM templates. This means that any end-to-end deployment consists
    of multiple steps. The first step is to provision the resource group and the next
    step is the deployment of the ARM template to this newly created resource group.
    These steps could be executed using a single PowerShell script or individual steps
    from the PowerShell command line. The PowerShell script should be complete with
    regard to code related to exception handling, taking care of edge cases, and ensuring
    that there are no bugs in it before it can be said to be enterprise-ready. It
    is important to note that resource groups can be deleted from Azure, and the next
    time the script runs, they might be expected to be available. It would fail because
    it might assume that the resource group exists. In short, the deployment of the
    ARM template to a resource group should be an atomic step rather than multiple
    steps.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 部署 ARM 模板之前，资源组是一个前提条件。资源组应该在模板部署之前创建。开发人员可以使用 PowerShell、Azure CLI 或 REST API
    创建资源组，然后启动 ARM 模板的部署。这意味着任何端到端的部署都包括多个步骤。第一步是创建资源组，接下来的步骤是将 ARM 模板部署到这个新创建的资源组。这些步骤可以通过单个
    PowerShell 脚本执行，或者通过 PowerShell 命令行中的独立步骤执行。PowerShell 脚本应该包含与异常处理相关的代码，考虑到边缘情况，并确保在脚本可以被称为企业级之前没有任何错误。需要注意的是，资源组可以从
    Azure 中删除，下次脚本运行时可能会假设资源组已经存在并失败。简而言之，部署 ARM 模板到资源组应该是一个原子步骤，而不是多个步骤。
- en: Compare this with the ability to create resource groups and their constituent
    resources together within the same ARM templates. Whenever you deploy the template,
    it ensures that the resource groups are created if they don't yet exist and continues
    to deploy resources to them after creation.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 将这一点与能够在相同的 ARM 模板中创建资源组及其组成资源进行比较。每次部署模板时，它都会确保如果资源组尚未存在，则创建它，并在创建后继续向其中部署资源。
- en: Let's also look at how these new features can help to remove some of the technical
    constraints related to disaster recovery sites.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还来看看这些新功能如何帮助消除与灾难恢复站点相关的一些技术限制。
- en: 'Prior to these features, if you had to deploy a solution that was designed
    with disaster recovery in mind, there were two separate deployments: one deployment
    for the primary region and another deployment for the secondary region. For example,
    if you were deploying an ASP.NET MVC application using App Service, you would
    create an app service and configure it for the primary region, and then you would
    conduct another deployment with the same template to another region using a different
    `parameters` file. When deploying another set of resources in another region,
    as mentioned before, the parameters used with the template should be different
    to reflect the differences between the two environments. The parameters would
    include changes such as a SQL connection string, domain and IP addresses, and
    other configuration items unique to an environment.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些新功能之前，如果你需要部署一个以灾难恢复为设计目标的解决方案，会有两个独立的部署：一个是主区域的部署，另一个是备用区域的部署。例如，如果你使用 App
    Service 部署一个 ASP.NET MVC 应用程序，你会创建一个应用服务并为主区域配置它，然后使用相同的模板在另一个区域进行另一个部署，并使用不同的`parameters`文件。当在另一个区域部署一组资源时，如前所述，模板使用的参数应该有所不同，以反映两个环境之间的差异。这些参数包括像
    SQL 连接字符串、域名和 IP 地址以及其他特定于环境的配置项。
- en: With the availability of cross-subscription and resource group deployment, it's
    possible to create the disaster recovery site at the same time as the primary
    site. This eliminates two deployments and ensures that the same configuration
    can be used on multiple sites.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 随着跨订阅和资源组部署功能的引入，您可以在创建主站点的同时创建灾难恢复站点。这消除了两个部署的需要，并确保相同的配置可以在多个站点上使用。
- en: Deploying resource groups with ARM templates
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ARM 模板部署资源组
- en: In this section, an ARM template will be authored and deployed, which will create
    a couple of resource groups within the same subscription.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，将编写并部署一个 ARM 模板，该模板将在同一订阅内创建几个资源组。
- en: 'To use PowerShell to deploy templates that contain resource groups and cross-subscription
    resources, the latest version of PowerShell should be used. At the time of writing,
    Azure module version 3.3.0 is being used:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 PowerShell 部署包含资源组和跨订阅资源的模板，应使用最新版本的 PowerShell。编写时，使用的是 Azure 模块版本 3.3.0：
- en: '![The output of the get-module –Name az command showing that the current Azure
    module version on the machine is 3.3.0\. ](img/Figure_15.2.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![显示当前计算机上 Azure 模块版本为 3.3.0 的 get-module –Name az 命令输出。](img/Figure_15.2.jpg)'
- en: 'Figure 15.2: Verifying the latest Azure module version'
  id: totrans-42
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 15.2：验证最新的 Azure 模块版本
- en: 'If the latest Azure module is not installed, it can be installed using the
    following command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有安装最新的 Azure 模块，可以使用以下命令进行安装：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'It''s time to create an ARM template that will create multiple resource groups
    within the same subscription. The code for the ARM template is as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是创建一个 ARM 模板的时机，该模板将在同一订阅内创建多个资源组。ARM 模板的代码如下：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The first section of the code is about parameters that the ARM templates expect.
    These are mandatory parameters, and anybody deploying these templates should provide
    values for them. Array values must be provided for both the parameters.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的第一部分是 ARM 模板所期望的参数。这些是必需的参数，任何部署这些模板的人都应提供相应的值。必须为这两个参数提供数组值。
- en: The second major section is the `resources` JSON array, which can contain multiple
    resources. In this example, we are creating resource groups, so it is declared
    within the `resources` section. Resource groups are getting provisioned in a loop
    because of the use of the `copy` element. The `copy` element ensures that the
    resource is run a specified number of times and creates a new resource in every
    iteration. If we send two values for the `resourceGroupInfo` array parameter,
    the length of the array would be two, and the `copy` element will ensure that
    the `resourceGroup` resource is executed twice.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个主要部分是 `resources` JSON 数组，它可以包含多个资源。在此示例中，我们正在创建资源组，因此它声明在 `resources` 部分内。由于使用了
    `copy` 元素，资源组在循环中被创建。`copy` 元素确保资源运行指定次数，并在每次迭代中创建新的资源。如果我们为 `resourceGroupInfo`
    数组参数传递两个值，则数组长度为二，`copy` 元素将确保 `resourceGroup` 资源执行两次。
- en: All resource names within a template should be unique for a resource type. The
    `copyIndex` function is used to assign the current iteration number to the overall
    name of the resource and make it unique. Also, we want the resource groups to
    be created in different regions using distinct region names sent as parameters.
    The assignment of a name and location for each resource group is done using the
    `copyIndex` function.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 模板中的所有资源名称在同一资源类型内应唯一。`copyIndex` 函数用于将当前迭代编号分配给资源的整体名称，并确保其唯一性。此外，我们希望资源组在不同区域中创建，使用作为参数传递的不同区域名称。每个资源组的名称和位置分配是通过
    `copyIndex` 函数完成的。
- en: 'The code for the `parameters` file is shown next. This code is pretty straightforward
    and provides array values to the two parameters expected by the previous template.
    The values in this file should be changed for all parameters according to your
    environment:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`parameters` 文件的代码如下所示。该代码相当简单，并为之前模板中预期的两个参数提供了数组值。此文件中的值应根据你的环境更改所有参数：'
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Deploying ARM templates
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署 ARM 模板
- en: 'To deploy this template using PowerShell, log in to Azure with valid credentials
    using the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 PowerShell 部署此模板，使用以下命令登录 Azure 并提供有效的凭据：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The valid credentials could be a user account or a service principal. Then,
    use a newly released `New-AzDeployment` cmdlet to deploy the template. The deployment
    script is available in the `multipleResourceGroups.ps1` file:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的凭据可以是用户帐户或服务主体。然后，使用新发布的 `New-AzDeployment` cmdlet 来部署模板。部署脚本可在 `multipleResourceGroups.ps1`
    文件中找到：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: It's important to understand that the `New-AzResourceGroupDeployment` cmdlet
    can't be used here because the scope of the `New-AzResourceGroupDeployment` cmdlet
    is a resource group and it expects a resource group to be available as a prerequisite.
    For deploying resources at the subscription level, Azure had released a new cmdlet
    that can work above the resource group scope. The new cmdlet, `new-AzDeployment`,
    works at the subscription level. It is also possible to have a deployment at the
    management group level. Management groups are at a higher level than subscriptions
    using the `New-AzManagementGroupDeployment` cmdlet.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，不能使用 `New-AzResourceGroupDeployment` cmdlet，因为 `New-AzResourceGroupDeployment`
    cmdlet 的作用范围是资源组，并且它期望资源组已经存在作为前提条件。为了在订阅级别部署资源，Azure 发布了一个新的 cmdlet，可以超越资源组范围进行操作。这个新的
    cmdlet `new-AzDeployment` 是在订阅级别运行的。同时，也可以在管理组级别进行部署。管理组处于比订阅更高的层级，使用 `New-AzManagementGroupDeployment`
    cmdlet 进行部署。
- en: Deployment of templates using Azure CLI
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Azure CLI 部署模板
- en: 'The same template can also be deployed using the Azure CLI. Here are the steps
    to deploy it using the Azure CLI:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个模板也可以使用 Azure CLI 进行部署。以下是使用 Azure CLI 部署模板的步骤：
- en: Use the latest version of the Azure CLI to create resource groups using the
    ARM template. At the time of writing, version 2.0.75 was used for deployment,
    as shown here:![The output of the az –version command displaying the version of
    the Azure CLI as 2.0.75.](img/Figure_15.3.jpg)
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用最新版本的 Azure CLI，通过 ARM 模板创建资源组。在撰写本文时，部署时使用的是版本 2.0.75，如下所示：![Azure CLI 版本为
    2.0.75 的 az --version 命令输出](img/Figure_15.3.jpg)
- en: 'Figure 15.3: Checking the version of the Azure CLI'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 15.3：检查 Azure CLI 版本
- en: 'Log in to Azure using the following command and select the right subscription
    for use:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令登录 Azure，并选择正确的订阅进行使用：
- en: '[PRE6]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If the login has access to multiple subscriptions, select the appropriate subscription
    using the following command:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果登录用户有多个订阅的访问权限，可以使用以下命令选择合适的订阅：
- en: '[PRE7]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Execute the deployment using the following command. The deployment script is
    available in the `multipleResourceGroupsCLI.txt` file:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令执行部署。部署脚本可以在`multipleResourceGroupsCLI.txt`文件中找到：
- en: '[PRE8]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Once the command is executed, the resources defined within the ARM template
    should be reflected on the Azure portal.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令执行完成，ARM 模板中定义的资源应该会在 Azure 门户中显示出来。
- en: Deploying resources across subscriptions and resource groups
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在不同订阅和资源组之间部署资源
- en: 'In the last section, resource groups were created as part of ARM templates.
    Another feature in Azure is the provision of resources into multiple subscriptions
    simultaneously from a single deployment using a single ARM template. In this section,
    we will provide a new storage account to two different subscriptions and resource
    groups. The person deploying the ARM template would select one of the subscriptions
    as the base subscription, using which they would initiate the deployment and provision
    the storage account into the current and another subscription. The prerequisite
    for deploying this template is that the person doing the deployment should have
    access to at least two subscriptions and that they have contributor rights on
    these subscriptions. The code listing is shown here and is available in the `CrossSubscriptionStorageAccount.json`
    file within the accompanying code:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，资源组是作为 ARM 模板的一部分创建的。Azure 还有一个功能，可以通过单个部署从单一 ARM 模板同时在多个订阅中提供资源。在本节中，我们将为两个不同的订阅和资源组提供一个新的存储帐户。部署
    ARM 模板的人将选择其中一个订阅作为基础订阅，利用该订阅发起部署，并将存储帐户同时提供到当前订阅和另一个订阅。部署此模板的前提条件是，部署者必须至少拥有对两个订阅的访问权限，并且在这些订阅中拥有贡献者权限。以下是代码清单，代码也可以在随附代码中的
    `CrossSubscriptionStorageAccount.json` 文件中找到：
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: It is important to note that the names of the resource group used within the
    code should already be available in the respective subscriptions. The code will
    throw an error if the resource groups are not available. Moreover, the names of
    the resource group should precisely match those in the ARM template.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，代码中使用的资源组名称应已在各自的订阅中存在。如果资源组不存在，代码将抛出错误。此外，资源组的名称必须与 ARM 模板中的名称完全匹配。
- en: 'The code for deploying this template is shown next. In this case, we use `New-AzResourceGroupDeployment`,
    because the scope of the deployment is a resource group. The deployment script
    is available in the `CrossSubscriptionStorageAccount.ps1` file within the code
    bundle:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 部署此模板的代码如下所示。在这种情况下，我们使用 `New-AzResourceGroupDeployment`，因为部署的范围是一个资源组。部署脚本可以在代码包中的
    `CrossSubscriptionStorageAccount.ps1` 文件中找到：
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Once the command is executed, the resources defined within the ARM template
    should be reflected in the Azure portal.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令执行完成，ARM 模板中定义的资源应在 Azure 门户中反映出来。
- en: Another example of cross-subscription and resource group deployments
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跨订阅和资源组部署的另一个示例
- en: In this section, we create two storage accounts in two different subscriptions,
    resource groups, and regions from one ARM template and a single deployment. We
    will use the nested templates approach along with the `copy` element to provide
    different names and locations to these resource groups in different subscriptions.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将在一个 ARM 模板和单次部署中，从两个不同的订阅、资源组和区域创建两个存储帐户。我们将使用嵌套模板方法，并结合 `copy` 元素为这些资源组提供不同的名称和位置，部署到不同的订阅中。
- en: However, before we can execute the next set of ARM templates, an Azure Key Vault
    instance should be provisioned as a prerequisite and a secret should be added
    to it. This is because the names of the storage accounts are retrieved from Azure
    Key Vault and passed as parameters to ARM templates to provision the storage account.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在执行下一组 ARM 模板之前，应先配置一个 Azure Key Vault 实例，并向其中添加一个密钥。这是因为存储帐户的名称是从 Azure
    Key Vault 中获取的，并作为参数传递给 ARM 模板，以便部署存储帐户。
- en: 'To provision Azure Key Vault using Azure PowerShell, the next set of commands
    can be executed. The code for the following commands is available in the `CreateKeyVaultandSetSecret.ps1`
    file:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Azure PowerShell 配置 Azure Key Vault，可以执行以下一组命令。以下命令的代码可以在 `CreateKeyVaultandSetSecret.ps1`
    文件中找到：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You should note that the `ResourceID` value should be noted from the result
    of the `New-AzKeyVault` cmdlet. This value will need to be replaced in the `parameters`
    file. See *Figure 15.4* for details:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该注意，从 `New-AzKeyVault` cmdlet 的结果中记录下 `ResourceID` 值。这个值需要在 `parameters` 文件中进行替换。有关详细信息，请参见
    *图 15.4*：
- en: '![The output displaying the values for Key Vault Name, Resource Group Name,
    Location, ResourceID, Tenant ID, and so on.](img/Figure_15.4.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![显示 Key Vault 名称、资源组名称、位置、ResourceID、租户 ID 等值的输出。](img/Figure_15.4.jpg)'
- en: 'Figure 15.4: Creating a Key Vault instance'
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 15.4：创建 Key Vault 实例
- en: 'Execute the following command to add a new secret to the newly created Azure
    Key Vault instance:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令，将新密钥添加到新创建的 Azure Key Vault 实例中：
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The code listing is available in the `CrossSubscriptionNestedStorageAccount.json`
    file within the code bundle:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 代码列表可以在代码包中的 `CrossSubscriptionNestedStorageAccount.json` 文件中找到：
- en: '[PRE13]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here''s the code for the `parameters` file. It is available in the `CrossSubscriptionNestedStorageAccount.parameters.json`
    file:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `parameters` 文件的代码。它可以在 `CrossSubscriptionNestedStorageAccount.parameters.json`
    文件中找到：
- en: '[PRE14]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here''s the PowerShell code for deploying the previous template. The deployment
    script is available in the `CrossSubscriptionNestedStorageAccount.ps1` file:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这是部署前面模板的 PowerShell 代码。部署脚本可以在 `CrossSubscriptionNestedStorageAccount.ps1`
    文件中找到：
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Once the command gets executed, the resources defined within the ARM template
    should be reflected in the Azure portal.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令执行完成，ARM 模板中定义的资源应在 Azure 门户中反映出来。
- en: Deploying cross-subscription and resource group deployments using linked templates
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用链接模板部署跨订阅和资源组的部署
- en: 'The previous example used nested templates to deploy to multiple subscriptions
    and resource groups. In the next example, we will deploy multiple App Service
    plans in separate subscriptions and resource groups using linked templates. The
    linked templates are stored in Azure Blob storage, which is protected using policies.
    This means that only the holder of the storage account key or a valid shared access
    signature can access this template. The access key is stored in Azure Key Vault
    and is accessed from the `parameters` file using references under the `storageKey`
    element. You should upload the `website.json` file to a container in Azure Blob
    storage. The `website.json` file is a linked template responsible for provisioning
    an App Service plan and an app service. The file is protected using the `armtemplates`
    and set it with a private policy:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的示例使用了嵌套模板进行多订阅和资源组的部署。在下一个示例中，我们将使用链接模板在不同的订阅和资源组中部署多个应用服务计划。链接模板存储在 Azure
    Blob 存储中，并通过策略进行保护。这意味着只有存储账户密钥的持有者或有效的共享访问签名（SAS）才能访问此模板。访问密钥存储在 Azure 密钥保管库中，并通过`parameters`文件中的`storageKey`元素引用进行访问。你应该将`website.json`文件上传到
    Azure Blob 存储中的一个容器。`website.json`文件是一个链接模板，负责为应用服务计划和应用服务提供配置。该文件通过`armtemplates`进行保护，并设置为使用私有策略：
- en: '![Setting the Public access level in the Access policy panefor the armtemplates
    containeras ‘Private (no anonymous access)’.](img/Figure_15.5.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![在访问策略面板中为 armtemplates 容器设置公共访问级别为“私有（没有匿名访问）”。](img/Figure_15.5.jpg)'
- en: 'Figure 15.5: Setting a private policy for the container'
  id: totrans-96
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 15.5：为容器设置私有策略
- en: 'This file can only be accessed using the **Shared Access Signature** (**SAS**)
    keys. The SAS keys can be generated from the Azure portal for a storage account
    using the **Shared access signature** item in the left menu shown in *Figure 15.6*.
    You should click on the **Generate SAS and connection string** button to generate
    the SAS token. It is to be noted that an SAS token is displayed once and not stored
    within Azure. So, copy it and store it somewhere so that it can be uploaded to
    Azure Key Vault. *Figure 15.6* shows the generation of the SAS token:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件只能使用**共享访问签名**（**SAS**）密钥访问。可以从 Azure 门户的存储账户中使用左侧菜单中的**共享访问签名**项生成 SAS 密钥。你应该点击**生成
    SAS 和连接字符串**按钮以生成 SAS 令牌。需要注意的是，SAS 令牌只会显示一次，并且不会存储在 Azure 中。因此，必须复制并将其存储在其他地方，以便可以上传到
    Azure 密钥保管库中。*图 15.6*展示了生成 SAS 令牌的过程：
- en: '![Selecting the ‘Shared access signature’ tab in the Azure portalfrom the left-hand
    navigation and generating the SAS token.](img/Figure_15.6.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![选择 Azure 门户左侧导航栏中的“共享访问签名”标签并生成 SAS 令牌。](img/Figure_15.6.jpg)'
- en: 'Figure 15.6: Generating an SAS token in the Azure portal'
  id: totrans-99
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 15.6：在 Azure 门户中生成 SAS 令牌
- en: 'We will use the same Key Vault instance that was created in the previous section.
    We just have to ensure that there are two secrets available within the Key Vault
    instance. The first secret is `StorageName` and the other one is `StorageKey`.
    The commands to create these secrets in the Key Vault instance are as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用在上一节中创建的相同密钥保管库实例。只需确保密钥保管库实例中有两个密钥可用。第一个密钥是`StorageName`，另一个是`StorageKey`。在密钥保管库实例中创建这些密钥的命令如下：
- en: '[PRE16]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You are advised to change the names of the Key Vault instance and the secret
    key value based on your storage account.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 建议根据你的存储账户更改密钥保管库实例和密钥值的名称。
- en: After ensuring that the Key Vault instance has the necessary secrets, the ARM
    template file code can be used to deploy the nested templates across subscriptions
    and resource groups.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在确保密钥保管库实例具有必要的密钥后，可以使用 ARM 模板文件代码在多个订阅和资源组中部署嵌套模板。
- en: 'The ARM template code is available in the `CrossSubscriptionLinkedStorageAccount.json`
    file and is also shown here. You are advised to change the value of the `templateUrl`
    variable within this file. It should be updated with a valid Azure Blob storage
    file location:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: ARM 模板代码可以在`CrossSubscriptionLinkedStorageAccount.json`文件中找到，并且在这里也有展示。建议你更改该文件中`templateUrl`变量的值。它应该更新为有效的
    Azure Blob 存储文件位置：
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The code for the `parameters` file is shown next. You are advised to change
    the values of the parameters, including the `resourceid` of the Key Vault instance
    and the secret name. The names of app services should be unique, or the template
    will fail to deploy. The code for the `parameters` file is available in the `CrossSubscriptionLinkedStorageAccount.parameters.json`
    code file:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`parameters` 文件的代码如下所示。建议您更改参数的值，包括 Key Vault 实例的 `resourceid` 和密钥名称。应用服务的名称应该是唯一的，否则模板将无法部署。`parameters`
    文件的代码可以在 `CrossSubscriptionLinkedStorageAccount.parameters.json` 代码文件中找到：'
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here''s the command to deploy the template. The deployment script is available
    in the `CrossSubscriptionLinkedStorageAccount.ps1` file:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这是部署模板的命令。部署脚本可以在 `CrossSubscriptionLinkedStorageAccount.ps1` 文件中找到：
- en: '[PRE19]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Once the command gets executed, the resources defined within the ARM template
    should be reflected in the Azure portal.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令执行，ARM 模板中定义的资源应该会在 Azure 门户中反映出来。
- en: Now that you know how to provision resources across resource groups and subscriptions,
    we will look at some of the solutions that can be created using ARM templates.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经知道如何跨资源组和订阅配置资源，接下来我们将了解使用 ARM 模板创建的一些解决方案。
- en: Virtual machine solutions using ARM templates
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ARM 模板的虚拟机解决方案
- en: '**Infrastructure as a service** (**IaaS**) resources and solutions can be deployed
    and configured using ARM templates. The major resources related to IaaS are virtual
    machine resources.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**基础设施即服务**（**IaaS**）资源和解决方案可以通过 ARM 模板进行部署和配置。与 IaaS 相关的主要资源是虚拟机资源。'
- en: 'Creating a virtual machine resource is dependent on multiple other resources
    in Azure. Some of the resources that are needed to create a virtual machine include:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 创建虚拟机资源依赖于 Azure 中的多个其他资源。创建虚拟机所需的一些资源包括：
- en: A storage account or a managed disk for hosting the operating system and data disk
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储账户或用于托管操作系统和数据磁盘的托管磁盘
- en: A virtual network along with subnets
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟网络以及子网
- en: A network interface card
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络接口卡
- en: 'There are other resources that are optional, including:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他可选的资源，包括：
- en: Azure Load Balancer
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 负载均衡器
- en: Network security groups
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络安全组
- en: Public IP address
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公共 IP 地址
- en: Route tables and more
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由表等
- en: This section will deal with the process of creating virtual machines using ARM
    templates. As mentioned before in this section, we need to create a few resources,
    upon which the virtual machine resource will depend, prior to creating the virtual
    machine resource itself.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将讲解如何使用 ARM 模板创建虚拟机。正如本节前面提到的，我们需要在创建虚拟机资源之前，先创建一些虚拟机资源所依赖的其他资源。
- en: It is important to note that it is not always necessary to create the dependent
    resources. They should be created only if they do not exist already. If they already
    are available within the Azure subscription, the virtual machine resource can
    be provisioned by referencing those dependent resources.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，并非总是需要创建依赖资源。只有在依赖资源不存在时，才应该创建它们。如果它们已经存在于 Azure 订阅中，可以通过引用这些依赖资源来配置虚拟机资源。
- en: The template is dependent on a few parameters that should be supplied to it
    at the time of executing the template. These variables relate to the location
    of the resources and some of their configuration values. These values are taken
    from parameters because they might change from one deployment to another, so using
    parameters helps keep the template generic.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 模板依赖于几个参数，这些参数应该在执行模板时提供。这些变量与资源的位置以及某些配置值有关。由于这些值可能会在不同的部署中发生变化，因此使用参数可以使模板保持通用。
- en: 'The first step is to create a storage account, as shown in the following code:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建一个存储账户，如以下代码所示：
- en: '[PRE20]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'After creating a storage account, a virtual network should be defined within
    the ARM template. It is important to note that there is no dependency between
    a storage account and a virtual network. They can be created in parallel. The
    virtual network resource has a subnet as its sub-resource. These are both configured
    with their IP ranges; the subnet typically has a smaller range than the virtual
    network IP range:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 创建存储账户后，应该在 ARM 模板中定义一个虚拟网络。需要注意的是，存储账户和虚拟网络之间没有依赖关系，它们可以并行创建。虚拟网络资源具有一个子网作为其子资源。它们都配置了自己的
    IP 范围；子网通常比虚拟网络的 IP 范围小：
- en: '[PRE21]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If the virtual machine needs to be accessed over the public internet, a public
    IP address can also be created, as shown in the following code. Again, it is a
    completely independent resource and can be created in parallel with the storage
    account and virtual network:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果虚拟机需要通过公共互联网访问，还可以创建公共IP地址，如以下代码所示。同样，它是一个完全独立的资源，并可以与存储帐户和虚拟网络并行创建：
- en: '[PRE22]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'After creating the virtual network, storage account, and public IP address,
    a network interface can be created. A network interface is dependent on a virtual
    network and subnet resource. It can optionally also be associated with a public
    IP address as well. This is shown in the following code:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建虚拟网络、存储帐户和公共IP地址后，可以创建网络接口。网络接口依赖于虚拟网络和子网资源。它也可以选择性地与公共IP地址关联。如下代码所示：
- en: '[PRE23]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: It is important to note that both the public IP address and the subnet are referred
    to by their unique Azure identifiers.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，公共IP地址和子网通过其独特的Azure标识符来引用。
- en: After the creation of the network interface, we have all the resources that
    are needed to create a virtual machine. The next code block shows how to create
    a virtual machine using an ARM template. It has a dependency on the network card
    and storage account. This indirectly creates dependencies on the virtual network,
    subnet, and the public IP address.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建网络接口后，我们就拥有了创建虚拟机所需的所有资源。接下来的代码块展示了如何使用ARM模板创建虚拟机。它依赖于网络卡和存储帐户，这间接地创建了对虚拟网络、子网和公共IP地址的依赖。
- en: 'For the virtual machine, we configure the mandatory resource configuration,
    lincluding `type`, `apiVersion`, `location`, and `name`, along with any dependencies,
    as shown in the following code:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 对于虚拟机，我们配置必需的资源配置，包括`type`、`apiVersion`、`location`和`name`，以及任何依赖项，如以下代码所示：
- en: '[PRE24]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'In the preceding code, the virtual machine is configured with:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，虚拟机被配置为：
- en: A hardware profile—the size of the virtual machine.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 硬件配置——虚拟机的大小。
- en: An OS profile—the name and credentials for logging in to the virtual machine.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统配置——用于登录虚拟机的名称和凭据。
- en: A storage profile—the storage account on which to store the **Virtual Hard Disk**
    (**VHD**) file for the virtual machine, including data disks.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储配置——存储虚拟机的**虚拟硬盘**（**VHD**）文件的存储帐户，包括数据磁盘。
- en: A network profile—the reference to the network interface card.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络配置——指向网络接口卡的引用。
- en: The next section will show an example of using ARM templates to provision a
    Platform as a Service solution.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的部分将展示如何使用ARM模板配置一个平台即服务解决方案的示例。
- en: PaaS solutions using ARM templates
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用ARM模板的PaaS解决方案
- en: '**Platform as a service** (**PaaS**) resources and solutions can be deployed
    using ARM templates. One of the main resources related to PaaS is Azure Web Apps,
    and in this section, we will focus on creating web apps on Azure using ARM templates.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**平台即服务**（**PaaS**）资源和解决方案可以通过ARM模板进行部署。与PaaS相关的主要资源之一是Azure Web应用程序，在本节中，我们将重点介绍如何使用ARM模板在Azure上创建Web应用程序。'
- en: The template expects a few parameters to be supplied while executing it. The
    parameters needed are the SKU for the App Service plan, the Azure region hosting
    the resources, and the SKU capacity of the App Service plan.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 模板执行时需要提供一些参数。所需的参数包括应用服务计划的SKU、托管资源的Azure区域和应用服务计划的SKU容量。
- en: There are a couple of variables declared within the template to make it generic
    and maintainable. The first one, `hostingPlanName`, is for the App Service plan
    name, and the next one, `webSiteName`, is for the app service itself.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 模板中声明了一些变量，以使其更加通用和可维护。第一个变量`hostingPlanName`是应用服务计划的名称，第二个变量`webSiteName`是应用服务本身的名称。
- en: 'There are at minimum two resources that should be declared and provisioned
    for a working web app in Azure. They are the following:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 至少有两个资源应该被声明并配置，以便在Azure中创建一个可用的Web应用程序。它们是：
- en: The Azure App Service plan
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure应用服务计划
- en: Azure App Service
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure应用服务
- en: 'The first step in creating a web app on Azure is defining the configuration
    for an Azure App Service plan. The following code defines a new App Service plan.
    It is important to note that the resource type is `Microsoft.Web/serverfarms`.
    Most of the configuration values of the plan, such as `location`, `name`, and
    `capacity`, come as parameters to the ARM template:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure 上创建 Web 应用的第一步是定义 Azure 应用服务计划的配置。以下代码定义了一个新的应用服务计划。值得注意的是，资源类型是 `Microsoft.Web/serverfarms`。计划的多数配置值，如
    `location`、`name` 和 `capacity`，都作为参数传递给 ARM 模板：
- en: '[PRE25]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The next resource that should be provisioned after a plan is the app service
    itself. It is important that a dependency between both these resources is created
    such that a plan is already created before the app service itself is created:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在计划之后，应该预配的下一个资源是应用服务本身。重要的是要在这两个资源之间创建一个依赖关系，以确保在创建应用服务之前，计划已经创建：
- en: '[PRE26]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: In the preceding code, a resource of type `Microsoft.Web/sites` is defined and
    it has a dependency on the plan. It is also using the App Service plan and is
    associated with it using `serverFarmId`. It further declares a connection string
    that can be used for connecting to SQL Server.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，定义了一个类型为 `Microsoft.Web/sites` 的资源，并且它依赖于计划。它还使用了应用服务计划，并通过 `serverFarmId`
    与之关联。它进一步声明了一个连接字符串，可用于连接到 SQL Server。
- en: This section showed an example of creating a PaaS solution on Azure using an
    ARM template. Similarly, other PaaS solutions, including Azure Function apps,
    Kubernetes Service, and Service Fabric, among many others, can be created using
    ARM templates.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了如何使用 ARM 模板在 Azure 上创建 PaaS 解决方案的示例。同样，其他 PaaS 解决方案，包括 Azure Function 应用、Kubernetes
    服务和 Service Fabric 等，均可使用 ARM 模板创建。
- en: Data-related solutions using ARM templates
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 ARM 模板的数据相关解决方案
- en: There are many resources in Azure related to data management and storage. Some
    of the important data-related resources include Azure SQL, Azure Cosmos DB, Azure
    Data Lake Storage, Data Lake Analytics, Azure Synapsis, Databricks, and Data Factory.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure 中，有许多与数据管理和存储相关的资源。一些重要的与数据相关的资源包括 Azure SQL、Azure Cosmos DB、Azure Data
    Lake 存储、Data Lake Analytics、Azure Synapse、Databricks 和 Data Factory。
- en: All of these resources can be provisioned and configured using an ARM template.
    In this section, we will create an ARM template to provision a Data Factory resource
    responsible for migrating data from Azure Blob storage to Azure SQL Database using
    stored procedures.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些资源都可以通过 ARM 模板进行预配和配置。在本节中，我们将创建一个 ARM 模板，以预配一个数据工厂资源，负责通过存储过程将数据从 Azure
    Blob 存储迁移到 Azure SQL 数据库。
- en: You will find the parameters file along with the template. These values might
    change from one deployment to another; we'll keep the template generic so that
    you can customize and use it easily with other deployments as well.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你将会找到参数文件与模板一起提供。这些值可能会在每次部署之间发生变化；我们将保持模板的通用性，以便你可以轻松地自定义并在其他部署中使用。
- en: The entire code for this section can be found at [https://github.com/Azure/azure-quickstart-templates/blob/master/101-data-factory-blob-to-sql-copy-stored-proc](https://github.com/Azure/azure-quickstart-templates/blob/master/101-data-factory-blob-to-sql-copy-stored-proc).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的完整代码可以在 [https://github.com/Azure/azure-quickstart-templates/blob/master/101-data-factory-blob-to-sql-copy-stored-proc](https://github.com/Azure/azure-quickstart-templates/blob/master/101-data-factory-blob-to-sql-copy-stored-proc)
    找到。
- en: 'The first step is to declare the configuration for the data factory in the
    ARM template, as shown in the following code:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是声明 ARM 模板中数据工厂的配置，如下代码所示：
- en: '[PRE27]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Each data factory has multiple linked services. These linked services act as
    connectors to get data into the data factory, or the data factory can send data
    to them. The following code listing creates a linked service for the Azure storage
    account from which the blobs will be read into the data factory, and another linked
    service for Azure SQL Database:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据工厂都有多个连接的服务。这些连接的服务充当连接器，将数据引入数据工厂，或者数据工厂可以将数据发送到它们。以下代码列出了为 Azure 存储账户创建的一个连接服务，从中读取
    Blob 数据进入数据工厂，以及为 Azure SQL 数据库创建的另一个连接服务：
- en: '[PRE28]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: After linked services, it's time to define the datasets for Azure Data Factory.
    Datasets help in identifying the data that should be read and placed in the data
    factory. They could also represent the temporary data that needs to be stored
    by the Data Factory during the transformation, or even the destination location
    where the data will be written. The next code block creates three datasets—one
    for each of the aspects of datasets that were just mentioned.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在链接服务之后，是时候为 Azure 数据工厂定义数据集了。数据集有助于识别应读取并放入数据工厂的数据。它们还可以表示在转换过程中需要由数据工厂存储的临时数据，甚至是数据将写入的目标位置。接下来的代码块创建了三个数据集——分别代表刚才提到的各个数据集方面。
- en: 'The read dataset is shown in the following code block:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 读取数据集在以下代码块中显示：
- en: '[PRE29]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The intermediate dataset is shown in the following lines of code:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 中间数据集在以下代码行中显示：
- en: '[PRE30]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Finally, the dataset used for the destination is shown here:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，用于目标的数据集在这里显示：
- en: '[PRE31]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Finally, we need a pipeline in Data Factory that can bring together all the
    datasets and linked services, and help in creating extract-transform-load data
    solutions. A pipeline consists of multiple activities, each fulfilling a particular
    task. All these activities can be defined within the ARM template, as you''ll
    see now. The first activity copies the blobs in the storage account to an intermediate
    SQL Server, as shown in the following code:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要在数据工厂中创建一个管道，能够将所有数据集和链接服务汇集在一起，帮助创建提取-转换-加载（ETL）数据解决方案。管道由多个活动组成，每个活动完成特定任务。所有这些活动都可以在
    ARM 模板中定义，正如你接下来看到的。第一个活动将存储帐户中的 Blob 复制到一个中间 SQL 服务器，如下所示的代码：
- en: '[PRE32]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The last activity copies data from the intermediate dataset to the final destination
    dataset.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个活动将数据从中间数据集复制到最终目标数据集。
- en: There are also start and end times during which the pipeline should be running.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 还有管道运行期间的开始和结束时间。
- en: This section focused on creating an ARM template for a data-related solution.
    In the next section, we will deal with ARM templates for creating datacenters
    on Azure with Active Directory and DNS.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 本节重点介绍了为数据相关解决方案创建 ARM 模板。在下一节中，我们将讨论用于在 Azure 上创建数据中心的 ARM 模板，涉及 Active Directory
    和 DNS。
- en: Creating an IaaS solution on Azure with Active Directory and DNS
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Azure 上创建带有 Active Directory 和 DNS 的 IaaS 解决方案
- en: Creating an IaaS solution on Azure means creating multiple virtual machines,
    promoting a virtual machine to be a domain controller, and making other virtual
    machines join the domain controller as domain-joined nodes. It also means installing
    a DNS server for name resolution and, optionally, a jump server for accessing
    these virtual machines securely.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure 上创建 IaaS 解决方案意味着创建多个虚拟机，将虚拟机提升为域控制器，并使其他虚拟机加入该域控制器，成为域连接节点。还意味着安装一个用于名称解析的
    DNS 服务器，并可以选择安装一个跳板服务器，以安全访问这些虚拟机。
- en: The template creates an Active Directory forest on the virtual machines. It
    creates multiple virtual machines based on the parameters supplied.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 模板在虚拟机上创建一个 Active Directory 林。它根据提供的参数创建多个虚拟机。
- en: 'The template creates:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 模板创建：
- en: A couple of availability sets
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些可用性集
- en: A virtual network
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个虚拟网络
- en: Network security groups to define the allowed and disallowed ports and IP addresses
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络安全组用于定义允许和不允许的端口及 IP 地址
- en: 'The template then does the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 模板执行以下操作：
- en: Provisions one or two domains. The root domain is created by default; the child
    domain is optional
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置一个或两个域。默认情况下创建根域；子域是可选的
- en: Provisions two domain controllers per domain
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每个域配置两个域控制器
- en: Executes the desired state configuration scripts to promote a virtual machine
    to be a domain controller
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行所需的状态配置脚本，将虚拟机提升为域控制器
- en: We can create multiple virtual machines using the approach discussed in the
    *Virtual machine solutions using ARM templates* section. However, these virtual
    machines should be part of an availability set if they need to be highly available.
    It is to be noted that availability sets provide 99.95% availability for applications
    deployed on these virtual machines, while Availability Zones provide 99.99% availability.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用在 *使用 ARM 模板的虚拟机解决方案* 部分讨论的方法创建多个虚拟机。但是，如果这些虚拟机需要高可用性，它们应当是可用性集的一部分。需要注意的是，可用性集为部署在这些虚拟机上的应用程序提供
    99.95% 的可用性，而可用性区域则提供 99.99% 的可用性。
- en: 'An availability set can be configured as shown in the following code:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 可以按照以下代码配置可用性集：
- en: '[PRE33]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Once the availability set is created, an additional profile should be added
    to the virtual machine configuration to associate the virtual machine with the
    availability set, as shown in the following code:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦可用性集创建完成，就需要在虚拟机配置中添加一个附加配置文件，以将虚拟机与可用性集关联，具体代码如下所示：
- en: '[PRE34]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: You should note that availability sets are mandatory in order to use load balancers
    with virtual machines.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该注意，使用负载均衡器与虚拟机配合时，可用性集是强制性的。
- en: 'Another change needed in the virtual network configuration is adding DNS information,
    as shown in the following code:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟网络配置中需要的另一个更改是添加 DNS 信息，如下所示的代码所示：
- en: '[PRE35]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Finally, to convert a virtual machine into Active Directory, a PowerShell script
    or **desired state configuration** (**DSC**) script should be executed on the
    virtual machine. Even for joining other virtual machines to the domain, another
    set of scripts should be executed on those virtual machines.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，要将虚拟机转换为 Active Directory，应该在虚拟机上执行 PowerShell 脚本或 **期望状态配置**（**DSC**）脚本。即使是将其他虚拟机加入域，也应该在那些虚拟机上执行另一组脚本。
- en: 'Scripts can be executed on the virtual machine using the `CustomScriptExtension`
    resource, as shown in the following code:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `CustomScriptExtension` 资源在虚拟机上执行脚本，具体代码如下所示：
- en: '[PRE36]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In this section, we created a datacenter on Azure using the IaaS paradigm. We
    created multiple virtual machines and converted one of them into domain controller,
    installed DNS, and assigned a domain to it. Now, other virtual machines on the
    network can be joined to this domain and they can form a complete datacenter on
    Azure.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们使用 IaaS 模式在 Azure 上创建了一个数据中心。我们创建了多个虚拟机，并将其中一台转换为域控制器，安装了 DNS，并为其分配了域。现在，网络上的其他虚拟机可以加入该域，并可以在
    Azure 上形成一个完整的数据中心。
- en: Please refer to [https://github.com/Azure/azure-quickstart-templates/tree/master/301-create-ad-forest-with-subdomain](https://github.com/Azure/azure-quickstart-templates/tree/master/301-create-ad-forest-with-subdomain)
    for the complete code listing for creating a datacenter on Azure.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考 [https://github.com/Azure/azure-quickstart-templates/tree/master/301-create-ad-forest-with-subdomain](https://github.com/Azure/azure-quickstart-templates/tree/master/301-create-ad-forest-with-subdomain)
    获取在 Azure 上创建数据中心的完整代码清单。
- en: Summary
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: The option to deploy resources using a single deployment to multiple subscriptions,
    resource groups, and regions provides enhanced abilities to deploy, reduce bugs
    in deployment, and access advanced benefits, such as creating disaster recovery
    sites and achieving high availability.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 使用单一部署将资源部署到多个订阅、资源组和区域的选项，提供了增强的部署能力，减少了部署中的错误，并能访问高级功能，如创建灾难恢复站点和实现高可用性。
- en: In this chapter, you saw how to create a few different kinds of solution using
    ARM templates. This included creating an infrastructure-based solution comprising
    virtual machines; a platform-based solution using Azure App Service; a data-related
    solution using the Data Factory resource (including its configuration); and a
    datacenter on Azure with virtual machines, Active Directory, and DNS installed
    on top of the virtual machine.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了如何使用 ARM 模板创建几种不同类型的解决方案。这包括创建一个基于基础架构的解决方案，其中包含虚拟机；使用 Azure App Service
    创建的基于平台的解决方案；使用数据工厂资源（及其配置）创建的数据相关解决方案；以及在 Azure 上创建的一个数据中心，其中虚拟机上安装了 Active Directory
    和 DNS。
- en: In the next chapter, we will focus on creating modular ARM templates, an essential
    skill for architects who really want to take their ARM templates to the next level.
    The chapter will also show you various ways to design ARM templates and create
    reusable and modular ARM templates.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将专注于创建模块化 ARM 模板，这是架构师们希望将 ARM 模板提升到更高水平时必须掌握的关键技能。本章还将向你展示设计 ARM 模板的各种方式，并教你如何创建可重用和模块化的
    ARM 模板。
