["```\n$ret = Invoke-WebRequest -Uri \"https://eastus.api.cognitive.microsoft.com/vision/v2.0/ocr?language=en&detectOrientation=true\"  -Method Post -Headers @{\"Ocp-Apim-Subscription-Key\"=\"ff0cd61f27d8452bbadad36942570c48\"; \"Content-type\"=\"application/json\"} -Body $(ConvertTo-Json -InputObject  @{\"url\"=\"https://ichef.bbci.co.uk/news/320/cpsprodpb/F944/production/_109321836_oomzonlz.jpg\"}) \n$val = Convertfrom-Json $ret.content\nforeach ($region in $val.regions) {\n    foreach($line in $region.lines) {\n        foreach($word in $line.words) {\n            $word.text\n        }\n    }\n} \n```", "```\n        [HttpPost]\n        public async Task<string> Post([FromBody] string value)\n        {\n            string myurl = \" https://eastus.api.cognitive.microsoft.com/vision/v2.0/ocr?language=en&detectOrientation=true\n            string token = \"…………………………\";\n            using (HttpClient httpClient = new HttpClient())\n            {\n                var responseMessage = await httpClient.GetAsync(value);\n                 using (var httpClient1 = new HttpClient())\n                {\n                     httpClient1.BaseAddress = new Uri(myurl);\n                   httpClient1.DefaultRequestHeaders.Add(\"Ocp-Apim-Subscription-Key\", token);\n                    HttpContent content = responseMessage.Content;\n                    content.Headers.ContentType = new MediaTypeWithQualityHeaderValue(\"application/octet-stream\");\n                    var response = await httpClient1.PostAsync(myurl, content);\n                    var responseContent = await response.Content.ReadAsByteArrayAsync();\n                    string ret = Encoding.ASCII.GetString(responseContent, 0, responseContent.Length);\n                    dynamic image = JsonConvert.DeserializeObject<object>(ret);\n                    string temp = \"\";\n                    foreach (var regs in image.regions)\n                    {\n                        foreach (var lns in regs.lines)\n                        {\n                            foreach (var wds in lns.words)\n                            {\n                                temp += wds.text + \" \";\n                            }\n                        }\n                    }\n                    return temp;\n                }\n            }\n        }\n```", "```\n[HttpPost]\n        public string Post([FromBody] string value)\n        {\n        private string visionapiurl = \" https://eastus.api.cognitive.microsoft.com/vision/v2.0/analyze?visualFeaure=tags,description,objects&language=en\";\n        private string apikey = \"e55d36ac228f4d718d365f1fcddc0851\";\n        private ComputerVisionClient client;\n        private List<VisualFeatureTypes> visionType =  new List<VisualFeatureTypes>();\nclient = new ComputerVisionClient(new ApiKeyServiceClientCredentials(apikey)) { \n                Endpoint = visionapiurl\n            };\n            visionType.Add(VisualFeatureTypes.Description);\n            visionType.Add(VisualFeatureTypes.Tags);\n            visionType.Add(VisualFeatureTypes.Objects);\n\n            string tags = \"\";\n            string descrip   = \"\";\n            string objprop = \"\";\n            using (HttpClient hc = new HttpClient()) {\n                var responseMessage =  hc.GetAsync(value).GetAwaiter().GetResult();\n                Stream streamData = responseMessage.Content.ReadAsStreamAsync().GetAwaiter().GetResult();\n                var result = client.AnalyzeImageInStreamAsync(streamData, visionType).GetAwaiter().GetResult();\n                foreach (var tag in result.Tags) {\n                    tags += tag.Name + \" \";\n                }\n                foreach (var caption in result.Description.Captions)\n                {\n                    descrip += caption.Text + \" \";\n                }\n                foreach (var obj in result.Objects)\n                {\n                    objprop += obj.ObjectProperty + \" \";\n                }\n            }\n\treturn tags;\n\t// return descrip or objprop\n\n        }\n```"]