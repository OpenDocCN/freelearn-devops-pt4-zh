- en: 'Chapter 9:'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第 9 章：
- en: Integrating Azure DevOps with GitHub
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Azure DevOps 与 GitHub 集成
- en: GitHub is one of the most popular development platforms that's used by open
    source developers and businesses across the globe to store their code. In this
    chapter, you will learn how to leverage Azure DevOp's capabilities while you continue
    to use GitHub as your software development hub.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 是全球最受欢迎的开发平台之一，被开源开发者和企业广泛使用来存储代码。在本章中，你将学习如何在继续使用 GitHub 作为软件开发中心的同时，利用
    Azure DevOps 的能力。
- en: 'We''ll be covering the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: An overview of Azure DevOps and GitHub integration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure DevOps 和 GitHub 集成概述
- en: Integrating Azure Pipelines with GitHub
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Azure Pipelines 与 GitHub 集成
- en: Integrating Azure Boards with GitHub
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Azure Boards 与 GitHub 集成
- en: Overview of GitHub Actions
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub Actions 概述
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To follow this chapter, you need to have an active Azure DevOps organization
    and a GitHub account. You can sign up for a GitHub account here: [https://github.com/join](https://github.com/join).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟随本章内容，你需要拥有一个有效的 Azure DevOps 组织和一个 GitHub 账户。你可以在此注册 GitHub 账户：[https://github.com/join](https://github.com/join)。
- en: 'Let''s get this chapter''s prerequisites ready. This chapter requires that
    you have the **Parts Unlimited** GitHub repository cloned to your GitHub account.
    You will also need an Azure DevOps project to follow the examples in this chapter.
    Follow these steps before moving on to the next section:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们准备好本章的前提条件。本章要求你已经将**Parts Unlimited** GitHub 仓库克隆到你的 GitHub 账户中。你还需要一个 Azure
    DevOps 项目来跟随本章的示例。在继续到下一部分之前，请先完成以下步骤：
- en: Launch a browser instance and go to [https://github.com/microsoft/PartsUnlimitedE2E](https://github.com/microsoft/PartsUnlimitedE2E).
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动浏览器实例并访问 [https://github.com/microsoft/PartsUnlimitedE2E](https://github.com/microsoft/PartsUnlimitedE2E)。
- en: Click **Fork**, as shown in the following screenshot:![Figure 9.1 – GitHub repository
    for Parts Unlimited
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Fork**，如下图所示：![图 9.1 – GitHub 仓库：Parts Unlimited
- en: '](img/Figure_9.01_B16392.jpg)'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.01_B16392.jpg)'
- en: Figure 9.1 – GitHub repository for Parts Unlimited
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.1 – GitHub 仓库：Parts Unlimited
- en: GitHub should prompt you to log into your account if you're not logged in already.
    Select the account you wish to clone the repository to.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你尚未登录，GitHub 会提示你登录到你的账户。选择你希望将仓库克隆到的账户。
- en: This will take a couple of minutes to complete. You should see the repository
    in your account upon completion.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成此操作需要几分钟的时间。完成后，你应该能在你的账户中看到该仓库。
- en: We will be using this repository to test GitHub integration in this chapter.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本章我们将使用这个仓库来测试 GitHub 集成。
- en: 'Now, log into Azure DevOps ([https://dev.azure.com](https://dev.azure.com))
    and create a new empty project:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，登录到 Azure DevOps ([https://dev.azure.com](https://dev.azure.com)) 并创建一个新的空项目：
- en: '![Figure 9.2 – Creating a new project'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.2 – 创建新项目'
- en: '](img/Figure_9.02_B16392.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.02_B16392.jpg)'
- en: Figure 9.2 – Creating a new project
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2 – 创建新项目
- en: You're now ready to try out the examples described in this chapter.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经准备好尝试本章中描述的示例。
- en: An overview of Azure DevOps and GitHub integration
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure DevOps 和 GitHub 集成概述
- en: GitHub and Azure DevOps go hand in hand to provide a superior software development
    experience for teams, enabling them to ship and release software at a faster pace
    with minimal effort. In many scenarios, GitHub and Azure DevOps are competitors
    (for example, Azure Repos versus GitHub repositories), so it is typically up to
    you to choose the one that fits your needs and integrate them together for a wholesome
    platform setup.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 和 Azure DevOps 是互补的，它们为团队提供卓越的软件开发体验，使团队能够以更快的速度和更少的努力发布和交付软件。在许多场景中，GitHub
    和 Azure DevOps 是竞争对手（例如，Azure Repos 与 GitHub 仓库），因此通常由你来选择适合自己需求的工具，并将它们集成在一起，构建一个完善的平台。
- en: Azure DevOps provides various RBAC levels, native enterprise identity integration,
    and so on, whereas GitHub enables simple collaboration across identities (while
    including AD integration in its Enterprise version).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 提供了多种 RBAC 级别、原生企业身份集成等功能，而 GitHub 则提供了跨身份的简单协作（在其企业版中包括 AD 集成）。
- en: When it comes to Continuous Integration/Continuous Development, Azure DevOps
    is way ahead and has matured compared to its counterpart, GitHub Actions. So,
    overall, it depends on your use case and requirements whether you choose Azure
    DevOps and/or GitHub for specific components in your software development life
    cycle.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在持续集成/持续开发方面，Azure DevOps 相较于其竞争对手 GitHub Actions 处于领先地位，且已经成熟。因此，是否选择 Azure
    DevOps 和/或 GitHub 来处理你软件开发生命周期中的特定组件，取决于你的使用场景和需求。
- en: GitHub includes an extension marketplace where you can find many third-party
    applications to extend GitHub to the applications you use. Azure DevOps integration
    is available through many of these extensions on GitHub Marketplace. Let's look
    at some of them.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 包含一个扩展市场，您可以在其中找到许多第三方应用程序，以将 GitHub 扩展到您使用的应用程序。Azure DevOps 集成可以通过
    GitHub Marketplace 上的许多扩展来实现。让我们来看一些扩展。
- en: 'GitHub and Azure DevOps integration is achieved through the Azure Boards and
    Azure Pipelines extensions. Let''s start by taking a look at the Azure DevOps
    extensions available in GitHub Marketplace:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 和 Azure DevOps 的集成通过 Azure Boards 和 Azure Pipelines 扩展来实现。让我们先看看在 GitHub
    Marketplace 中可以找到的 Azure DevOps 扩展：
- en: Launch a browser instance and go to [https://github.com/marketplace](https://github.com/marketplace).
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动浏览器并访问[https://github.com/marketplace](https://github.com/marketplace)。
- en: Search for `Azure` in the extension marketplace. You'll find many extensions
    that can integrate Azure solutions with your GitHub repositories.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在扩展市场中搜索`Azure`。您将找到许多可以将 Azure 解决方案与您的 GitHub 仓库集成的扩展。
- en: 'Here, we''re interested in two specific extensions: Azure Boards and Azure
    Pipelines. Let''s talk about them in a bit more detail:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们关心两个特定的扩展：Azure Boards 和 Azure Pipelines。稍后我们会详细讲解：
- en: '--**Azure Boards**: This extension allows you to link your Azure Boards work
    items to GitHub objects such as commits, pull requests, and issues:'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: --**Azure Boards**：这个扩展允许您将 Azure Boards 工作项与 GitHub 对象（如提交、拉取请求和问题）关联：
- en: '![Figure 9.3 – Azure Boards extension'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.3 – Azure Boards 扩展'
- en: '](img/Figure_9.03_B16392.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.03_B16392.jpg)'
- en: Figure 9.3 – Azure Boards extension
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3 – Azure Boards 扩展
- en: '--**Azure Pipelines**: This extension allows you to build and release software
    using Azure Pipelines while your code is stored and maintained in your GitHub
    repository:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: --**Azure Pipelines**：这个扩展使您可以在 GitHub 仓库中存储和维护代码的同时，使用 Azure Pipelines 构建和发布软件：
- en: '![Figure 9.4 – Azure Pipelines extension'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.4 – Azure Pipelines 扩展'
- en: '](img/Figure_9.04_B16392.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.04_B16392.jpg)'
- en: Figure 9.4 – Azure Pipelines extension
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4 – Azure Pipelines 扩展
- en: You can install these extensions from GitHub Marketplace and start configuration
    from GitHub itself, but in this chapter, we will be starting the integration process
    from Azure DevOps. GitHub and Azure DevOps integration is also supported for the
    on-premise variants of both products (GitHub on-premises and Azure DevOps Server).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 GitHub Marketplace 安装这些扩展，并从 GitHub 本身开始配置，但在本章中，我们将从 Azure DevOps 开始集成过程。GitHub
    和 Azure DevOps 的集成也支持这两个产品的本地版本（GitHub 本地和 Azure DevOps Server）。
- en: Integrating Azure Pipelines with GitHub
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Azure Pipelines 与 GitHub 集成
- en: Integrating Azure Pipelines with GitHub enables developers to continue using
    GitHub as their preferred source control management platform while leveraging
    Azure Pipelines' build and release capabilities. Azure Pipelines offers unlimited
    pipeline job minutes for open source projects.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Azure Pipelines 与 GitHub 集成使开发人员能够继续使用 GitHub 作为首选的源代码管理平台，同时利用 Azure Pipelines
    的构建和发布功能。Azure Pipelines 为开源项目提供无限制的管道作业分钟数。
- en: We looked at Azure Pipelines in detail previously in this book, so in this section,
    we'll take a look at how to store our Azure Pipelines configuration and source
    code in GitHub and build a CI/CD process with GitHub and Azure DevOps.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书前面详细介绍了 Azure Pipelines，所以在这一部分，我们将看看如何将 Azure Pipelines 配置和源代码存储在 GitHub
    中，并利用 GitHub 和 Azure DevOps 构建 CI/CD 流程。
- en: Setting up Azure Pipelines and GitHub integration
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Azure Pipelines 和 GitHub 集成
- en: 'In order to use Azure Pipelines with GitHub, you must authorize Azure Pipelines
    to access your GitHub repositories. Let''s take a look at the steps for this:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 GitHub 上使用 Azure Pipelines，您必须授权 Azure Pipelines 访问您的 GitHub 仓库。让我们来看看如何进行授权：
- en: Log into your Azure DevOps account and select the project we created in the
    *Technical requirements* section.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录您的 Azure DevOps 账户并选择我们在*技术要求*部分创建的项目。
- en: Click on **Pipelines** > **Create Pipeline**:![Figure 9.5 – Create Pipeline
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Pipelines** > **创建管道**：![图 9.5 – 创建管道](img/Figure_9.05_B16392.jpg)
- en: '](img/Figure_9.05_B16392.jpg)'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.05_B16392.jpg)'
- en: Figure 9.5 – Create Pipeline
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.5 – 创建管道
- en: Select **GitHub** as your code source location:![Figure 9.6 – GitHub source
    for Azure Pipelines
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**GitHub**作为您的代码源位置：![图 9.6 – Azure Pipelines 的 GitHub 源](img/Figure_9.04_B16392.jpg)
- en: '](img/Figure_9.06_B16392.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.06_B16392.jpg)'
- en: Figure 9.6 – GitHub source for Azure Pipelines
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.6 – Azure Pipelines 的 GitHub 源
- en: You will need to grant permission from Azure Pipelines to your GitHub account:![Figure
    9.7 – Authorize Azure Pipelines (OAuth)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要从 Azure Pipelines 向您的 GitHub 账户授予权限：![图 9.7 – 授权 Azure Pipelines（OAuth）](img/Figure_9.07_B16392.jpg)
- en: '](img/Figure_9.07_B16392.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.07_B16392.jpg)'
- en: Figure 9.7 – Authorize Azure Pipelines (OAuth)
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.7 – 授权Azure Pipelines（OAuth）
- en: Upon successful completion, you will have your GitHub repositories listed in
    Azure DevOps. Select the newly created **PartsUnlimitedE2E** repository:![Figure
    9.8 – Parts Unlimited repository
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功完成后，你将在Azure DevOps中看到你的GitHub仓库列表。选择新创建的**PartsUnlimitedE2E**仓库：![图9.8 –
    Parts Unlimited 仓库
- en: '](img/Figure_9.08_B16392.jpg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.08_B16392.jpg)'
- en: Figure 9.8 – Parts Unlimited repository
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.8 – Parts Unlimited 仓库
- en: You will now get the option to install the Azure Pipelines application in your
    GitHub account. You can choose to install it for only a specific repository or
    for all repositories. Once you've made this choice, click **Approve & Install**:![Figure
    9.9 – Installing the Azure Pipeline extension
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在会得到在GitHub帐户中安装Azure Pipelines应用程序的选项。你可以选择仅为特定仓库安装，或为所有仓库安装。做出选择后，点击**批准并安装**：![图9.9
    – 安装Azure Pipelines扩展
- en: '](img/Figure_9.09_B16392.jpg)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.09_B16392.jpg)'
- en: Figure 9.9 – Installing the Azure Pipelines extension
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.9 – 安装Azure Pipelines扩展
- en: Since **Parts Unlimited** is a ASP.NET-based application, please choose **ASP.NET**
    as your pipeline configuration template:![Figure 9.10 – Azure Pipelines task configuration
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于**Parts Unlimited**是一个基于ASP.NET的应用程序，请选择**ASP.NET**作为你的管道配置模板：![图9.10 – Azure
    Pipelines任务配置
- en: '](img/Figure_9.10_B16392.jpg)'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.10_B16392.jpg)'
- en: Figure 9.10 – Azure Pipelines task configuration
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.10 – Azure Pipelines任务配置
- en: Azure DevOps will automatically generate a pipeline YAML file. You can review
    and modify it based on your requirements. `vs2017-win2016` before continuing:![Figure
    9.11 – Azure Pipelines task YAML
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps将自动生成一个管道YAML文件。你可以根据需求查看并修改它。`vs2017-win2016`继续：![图9.11 – Azure
    Pipelines任务YAML
- en: '](img/Figure_9.11_B16392.jpg)'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.11_B16392.jpg)'
- en: Figure 9.11 – Azure Pipelines task YAML
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.11 – Azure Pipelines任务YAML
- en: Click **Save and run** to save the pipeline.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并运行**以保存管道。
- en: You will need to make a commit to the repository to store the pipeline YAML
    file. You can commit the changes to the master branch or create a new branch to
    do so:![Figure 9.12 – Running an Azure pipeline
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要向仓库提交一次更改，以存储管道YAML文件。你可以提交到主分支，或者创建一个新分支来进行此操作：![图9.12 – 运行Azure管道
- en: '](img/Figure_9.12_B16392.jpg)'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.12_B16392.jpg)'
- en: Figure 9.12 – Running an Azure pipeline
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.12 – 运行Azure管道
- en: Clicking on **Save and run** will create the pipeline and start its execution.
    It may take a few minutes for the build job to complete:![Figure 9.13 – Pipeline
    jobs
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并运行**将创建管道并开始执行。构建任务完成可能需要几分钟：![图9.13 – 管道任务
- en: '](img/Figure_9.13_B16392.jpg)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.13_B16392.jpg)'
- en: Figure 9.13 – Pipeline jobs
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.13 – 管道任务
- en: While this completes, let's look at the changes you made to your GitHub repository.
    Browse to your GitHub account and go to the **PartsUnlimitedE2E** repository.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此过程中完成时，我们来看看你对GitHub仓库所做的更改。浏览到你的GitHub帐户并进入**PartsUnlimitedE2E**仓库。
- en: You will see a commit and a newly added `azure-pipelines.yml` file, which stores
    the pipeline's configuration:![Figure 9.14 – Pipeline YAML in GitHub
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到一次提交以及一个新添加的`azure-pipelines.yml`文件，它存储着管道的配置：![图9.14 – GitHub中的管道YAML
- en: '](img/Figure_9.14_B16392.jpg)'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.14_B16392.jpg)'
- en: Figure 9.14 – Pipeline YAML in GitHub
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图9.14 – GitHub中的管道YAML
- en: 'If you click on the little yellow dot shown in the preceding screenshot, you
    will be shown the status of your Azure pipeline on your GitHub repository page.
    Upon successful completion of the pipeline job, you should see its status update
    on your GitHub account:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你点击前面截图中显示的小黄色圆点，你将看到GitHub仓库页面上Azure管道的状态。在管道任务成功完成后，你应该能看到它在GitHub帐户上的状态更新：
- en: '![Figure 9.15 – Job logs in GitHub'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.15 – GitHub中的任务日志'
- en: '](img/Figure_9.15_B16392.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.15_B16392.jpg)'
- en: Figure 9.15 – Job logs in GitHub
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.15 – GitHub中的任务日志
- en: With that, you have set up an Azure pipeline with GitHub.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，你就已经设置好了一个带有GitHub的Azure管道。
- en: Testing continuous integration
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试持续集成
- en: In this section, we will try out the CI capabilities of GitHub and Azure Pipelines.
    We'll make a code change in GitHub and raise a pull request that will trigger
    the Azure Pipelines job automatically.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将尝试GitHub和Azure Pipelines的CI功能。我们将在GitHub中做出代码更改并提交拉取请求，这将自动触发Azure Pipelines任务。
- en: 'Let''s get started:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: Browse to your GitHub account and open the **PartsUnlimited E2E** repository.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到你的GitHub帐户并打开**PartsUnlimited E2E**仓库。
- en: Click on `Readme.MD` and click **Edit**:![Figure 9.16 – Readme.MD
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Readme.MD`并点击**编辑**：![图9.16 – Readme.MD
- en: '](img/Figure_9.16_B16392.jpg)'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.16_B16392.jpg)'
- en: Figure 9.16 – Readme.MD
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.16 – Readme.MD
- en: Update the file so that it includes some sample text. Choose the option to create
    a new branch and click **Propose changes**:![Figure 9.17 – Propose changes
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新文件，使其包含一些示例文本。选择创建新分支的选项并单击**提出更改**：![图 9.17 – 提出更改
- en: '](img/Figure_9.17_B16392.jpg)'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.17_B16392.jpg)'
- en: Figure 9.17 – Propose changes
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.17 – 提出更改
- en: Click Create pull request, as shown in the following screenshot:![Figure 9.18
    – Create pull request
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击创建拉取请求，如下图所示：![图 9.18 – 创建拉取请求
- en: '](img/Figure_9.18_B16392.jpg)'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.18_B16392.jpg)'
- en: Figure 9.18 – Create pull request
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.18 – 创建拉取请求
- en: This will open the **Pull request** page. It'll take a couple of minutes for
    the Azure Pipelines job to start. Once started, you can click on **Details** to
    see the status of the pipeline job:![Figure 9.19 – PR automated checks
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开**拉取请求**页面。Azure Pipelines 作业将花费几分钟时间启动。一旦启动，您可以单击**详细信息**查看流水线作业的状态：![图
    9.19 – PR 自动化检查
- en: '](img/Figure_9.19_B16392.jpg)'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.19_B16392.jpg)'
- en: Figure 9.19 – Pull request automated checks
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.19 – 拉取请求自动化检查
- en: This concludes testing out the continuous integration capabilities of GitHub
    and Azure Pipelines. As we can see, Azure Pipelines and GitHub integrate very
    well and provide a whole new DevOps experience. You can merge the pull request
    to complete this process.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这就完成了对 GitHub 和 Azure Pipelines 持续集成功能的测试。正如我们所看到的，Azure Pipelines 与 GitHub
    集成得非常好，并提供了全新的 DevOps 体验。您可以合并拉取请求来完成此过程。
- en: Adding a build Status badge
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加构建状态徽章
- en: Azure Pipelines provides markup text that can be used in your GitHub repository
    documentation to provide the status of the pipelines job for the project. This
    can help developers be aware of the pipeline's status at any time, without the
    need to go to Azure DevOps.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Pipelines 提供了可以在 GitHub 仓库文档中使用的标记文本，以提供项目流水线作业的状态。这可以帮助开发人员随时了解流水线的状态，无需访问
    Azure DevOps。
- en: 'Let''s learn how to set up an Azure Pipelines Status badge:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何设置 Azure Pipelines 状态徽章：
- en: Log into Azure DevOps and browse to **Your project** > **Pipelines** > **PartsUnlimited
    E2E**.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Azure DevOps 并浏览到**您的项目** > **流水线** > **PartsUnlimited E2E**。
- en: Click on the ellipses (**…**) and select **Status badge**:![Figure 9.20 – Status
    badge
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击省略号（**...**），然后选择**状态徽章**：![图 9.20 – 状态徽章
- en: '](img/Figure_9.20_B16392.jpg)'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.20_B16392.jpg)'
- en: Figure 9.20 – Status badge
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.20 – 状态徽章
- en: Copy the **Sample markdown** text box's value. Optionally, you can choose to
    get the markdown for a specific branch. Please save this markdown in a temporary
    location:![Figure 9.21 – Status badge URL
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制**示例 markdown**文本框的值。您还可以选择获取特定分支的 markdown。请将此 markdown 保存在临时位置：![图 9.21
    – 状态徽章 URL
- en: '](img/Figure_9.21_B16392.jpg)'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.21_B16392.jpg)'
- en: Figure 9.21 – Status badge URL
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.21 – 状态徽章 URL
- en: Now, before we can use this in GitHub, we must allow anonymous access to the
    project's badge.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在我们可以在 GitHub 中使用它之前，我们必须允许对项目徽章的匿名访问。
- en: Click on **Project Settings** > **Pipelines** > **Settings**.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**项目设置** > **流水线** > **设置**。
- en: Turn off the **Disable anonymous access to badges** setting. If you find this
    option grayed out, you must turn this off in the organization settings first:![Figure
    9.22 – Status badge access
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭**禁用匿名访问徽章**设置。如果您发现该选项是灰色的，请首先在组织设置中关闭此选项：![图 9.22 – 状态徽章访问
- en: '](img/Figure_9.22_B16392.jpg)'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.22_B16392.jpg)'
- en: Figure 9.22 – Status badge access
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.22 – 状态徽章访问
- en: Now, you can use this markdown in your GitHub documentation. It is recommended
    that you keep this in your repository's README file so that it's the first thing
    anyone will see:![Figure 9.23 – Status badge markdown
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以在 GitHub 文档中使用此 markdown。建议您将其保留在您的仓库的 README 文件中，这样任何人都会首先看到它：![图 9.23
    – 状态徽章 markdown
- en: '](img/Figure_9.23_B16392.jpg)'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.23_B16392.jpg)'
- en: Figure 9.23 – Status badge markdown
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.23 – 状态徽章 markdown
- en: 'Upon committing your changes, you should see the Azure Pipelines badge:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交更改后，您应该会看到 Azure Pipelines 徽章：
- en: '![Figure 9.24 –Status badge showcase'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.24 – 状态徽章展示'
- en: '](img/Figure_9.24_B16392.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.24_B16392.jpg)'
- en: Figure 9.24 – Status badge showcase
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.24 – 状态徽章展示
- en: With that, you've completed the Azure Pipelines integration with GitHub. In
    the next section, we'll take a look at integrating Azure Boards with GitHub.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，您就完成了 Azure Pipelines 与 GitHub 的集成。在接下来的部分，我们将看看如何将 Azure Boards 与 GitHub
    集成。
- en: Integrating Azure Boards with GitHub
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Azure Boards 与 GitHub 集成
- en: Azure Boards is the best place to plan and track your work items. Integrating
    Azure Boards with GitHub allows you to keep using Azure Boards as your planning
    and managing platform while you continue using GitHub as your source control management
    platform.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Boards 是规划和跟踪工作项的最佳平台。将 Azure Boards 与 GitHub 集成，您可以在继续使用 GitHub 作为源代码管理平台的同时，继续使用
    Azure Boards 作为您的规划和管理平台。
- en: 'By integrating Azure Boards with GitHub, you can link objects from Azure Boards
    to GitHub. A few examples are as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 Azure Boards 与 GitHub 集成，您可以将 Azure Boards 中的对象链接到 GitHub。以下是几个示例：
- en: Work item and Git commit/issue/pull request linking means you can link your
    work items to the corresponding work being done in GitHub.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作项和 Git 提交/问题/拉取请求链接意味着您可以将工作项链接到 GitHub 中相应的工作。
- en: You can update your work item's status from GitHub itself.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以直接在 GitHub 上更新工作项的状态。
- en: Overall, integration allows us to track and link the deliverable across the
    two platforms easily.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总的来说，集成使我们可以轻松地跨两个平台跟踪和链接交付物。
- en: Now, let's set up our Azure Boards integration.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们设置 Azure Boards 集成。
- en: Setting up Azure Boards and GitHub integration
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Azure Boards 和 GitHub 集成
- en: Azure Boards is another extension available in GitHub Marketplace. You can configure
    the integration from both Azure DevOps and GitHub Marketplace.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Boards 是 GitHub 市场中的另一个扩展。您可以从 Azure DevOps 和 GitHub 市场配置集成。
- en: 'Let''s set this up with the help of the following steps:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下步骤进行设置：
- en: Log into Azure DevOps and browse to your **Parts Unlimited** project > **Project
    settings** > **Boards** > **GitHub connections**:![Figure 9.25 – Connecting GitHub
    to Boards
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Azure DevOps，浏览到您的 **Parts Unlimited** 项目 > **项目设置** > **Boards** > **GitHub
    连接**：![图 9.25 – 将 GitHub 连接到 Boards
- en: '](img/Figure_9.25_B16392.jpg)'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.25_B16392.jpg)'
- en: Figure 9.25 – Connecting GitHub to Boards
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.25 – 将 GitHub 连接到 Boards
- en: Click on **Connect your GitHub account**. You will need to authorize Azure Boards
    in order to access your GitHub account. Upon successfully linking them, you'll
    need to select the GitHub organization you want to connect to.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **连接您的 GitHub 帐户**。您需要授权 Azure Boards 访问您的 GitHub 帐户。成功链接后，您需要选择要连接的 GitHub
    组织。
- en: Azure DevOps will list your repositories. Please choose **PartsUnlimited E2E**
    for the purpose of this project and click **Save**:![Figure 9.26 – Selecting a
    GitHub repository
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps 会列出您的代码库。请为本项目选择**PartsUnlimited E2E**并点击**保存**：![图 9.26 – 选择 GitHub
    代码库
- en: '](img/Figure_9.26_B16392.jpg)'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.26_B16392.jpg)'
- en: Figure 9.26 – Selecting a GitHub repository
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.26 – 选择 GitHub 代码库
- en: This will redirect you back to GitHub so that you can install the Azure Boards
    application. You can choose to install it for specific repositories or for all
    your repositories:![Figure 9.27 – Approving the Azure Boards extension
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将引导您回到 GitHub，安装 Azure Boards 应用程序。您可以选择为特定代码库或所有代码库安装该应用程序：![图 9.27 – 批准 Azure
    Boards 扩展
- en: '](img/Figure_9.27_B16392.jpg)'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.27_B16392.jpg)'
- en: Figure 9.27 – Approving the Azure Boards extension
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.27 – 批准 Azure Boards 扩展
- en: 'Upon installing Azure Boards, you should see your GitHub connection listed
    with a green checkmark, meaning it has been successful:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Azure Boards 后，您应该会看到 GitHub 连接列出，并带有绿色勾选标志，表示连接成功：
- en: '![Figure 9.28 – GitHub connection status'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.28 – GitHub 连接状态'
- en: '](img/Figure_9.28_B16392.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.28_B16392.jpg)'
- en: Figure 9.28 – GitHub connection status
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.28 – GitHub 连接状态
- en: With that, you have set up Azure Boards and GitHub integration.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您已经成功设置了 Azure Boards 和 GitHub 集成。
- en: Adding an Azure Boards Status badge
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加 Azure Boards 状态徽章
- en: Like the Azure Pipelines status badge, Azure Boards also provides a status badge
    that can show stats about the work items inside your GitHub repository.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Azure Pipelines 状态徽章类似，Azure Boards 也提供状态徽章，显示 GitHub 仓库中工作项的统计信息。
- en: 'In this section, we''ll add a status badge from Azure Boards to our GitHub
    repository with the help of the following steps:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过以下步骤将 Azure Boards 的状态徽章添加到我们的 GitHub 仓库：
- en: Log into Azure DevOps, browse to **Boards**, and click on the settings gear
    icon:![Figure 9.29 – Azure Boards work items
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Azure DevOps，浏览到 **Boards**，并点击设置齿轮图标：![图 9.29 – Azure Boards 工作项
- en: '](img/Figure_9.29_B16392.jpg)'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.29_B16392.jpg)'
- en: Figure 9.29 – Azure Boards work items
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.29 – Azure Boards 工作项
- en: 'On the Settings page, browse to the status badge and set the following settings:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置页面中，浏览到状态徽章并设置以下选项：
- en: a) Check the **Allow anonymous users to access the status badge** box.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 勾选 **允许匿名用户访问状态徽章** 复选框。
- en: b) You can choose to show only the 'In Progress' columns or include all columns.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 您可以选择只显示“进行中”列，或包含所有列。
- en: 'Your screen should look as follows:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您的屏幕应该如下所示：
- en: '![Figure 9.30 – Azure Boards status access'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 9.30 – Azure Boards 状态访问'
- en: '](img/Figure_9.30_B16392.jpg)'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.30_B16392.jpg)'
- en: Figure 9.30 – Azure Boards status access
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.30 – Azure Boards 状态访问
- en: Copy the sample markdown field and save the settings. You can use this markdown
    in your GitHub documentation.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制示例 markdown 字段并保存设置。您可以在 GitHub 文档中使用此 markdown。
- en: 'Once you''ve added the markdown to your GitHub README file, it should show
    the **Work Items** status, as shown in the following screenshot:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您将 markdown 添加到 GitHub README 文件中，它应该显示 **工作项** 状态，如下截图所示：
- en: '![Figure 9.31 – Azure Boards status showcase'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.31 – Azure Boards 状态展示'
- en: '](img/Figure_9.31_B16392.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.31_B16392.jpg)'
- en: Figure 9.31 – Azure Boards status showcase
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.31 – Azure Boards 状态展示
- en: Next, we'll look at linking Azure Boards objects to GitHub objects.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看看如何将 Azure Boards 对象链接到 GitHub 对象。
- en: Linking Azure Boards work items to GitHub objects
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 Azure Boards 工作项链接到 GitHub 对象
- en: 'Now that we have Azure Boards integrated with GitHub, let''s learn how to link
    and track items across the two platforms. Let''s get started:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经将 Azure Boards 与 GitHub 集成，让我们学习如何在这两个平台之间链接和跟踪项目。让我们开始吧：
- en: In Azure Boards, create a new work item. You can use the Azure board status
    badge task we completed earlier as an example here:![](img/Figure_9.32_B16392.jpg)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure Boards 中，创建一个新的工作项。您可以使用我们之前完成的 Azure 看板状态徽章任务作为示例：![](img/Figure_9.32_B16392.jpg)
- en: Figure 9.32 – Azure Boards work items
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.32 – Azure Boards 工作项
- en: You will see that your status badge icon in GitHub gets updated immediately
    upon being refreshed, with one item in the **To Do** state.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将看到，在 GitHub 中刷新后，您的状态徽章图标会立即更新，其中有一个项目处于 **待办** 状态。
- en: Since this task has already been completed, we can link it to the respective
    GitHub commit. Open the newly created task and click on **Add link**:![Figure
    9.33 – Add link
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于此任务已完成，我们可以将其链接到相应的 GitHub 提交。打开新创建的任务并点击 **添加链接**：![图 9.33 – 添加链接
- en: '](img/Figure_9.33_B16392.jpg)'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.33_B16392.jpg)'
- en: Figure 9.33 – Add link
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.33 – 添加链接
- en: Click on the **Link type** drop-down and choose **GitHub Commit**. Provide your
    GitHub commit URL and click **OK**. Note that you also have the options to link
    to a GitHub issue or pull request:![Figure 9.34 – The Add link window
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **链接类型** 下拉菜单，选择 **GitHub 提交**。提供您的 GitHub 提交 URL 并点击 **确定**。请注意，您还可以选择链接到
    GitHub 问题或拉取请求：![图 9.34 – 添加链接窗口
- en: '](img/Figure_9.34_B16392.jpg)'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.34_B16392.jpg)'
- en: Figure 9.34 – The Add link window
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.34 – 添加链接窗口
- en: You will now see the GitHub commit linked to the work item. Change its **State**
    to **Done**:![Figure 9.35 – GitHub link added
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在会看到 GitHub 提交链接到工作项。将其 **状态** 更改为 **已完成**：![图 9.35 – 已添加 GitHub 链接
- en: '](img/Figure_9.35_B16392.jpg)'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.35_B16392.jpg)'
- en: Figure 9.35 – GitHub link added
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.35 – 已添加 GitHub 链接
- en: 'By doing this, you can view your GitHub objects in Azure Boards, which can
    be used to directly open the respective commit link in GitHub:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过这样做，您可以在 Azure Boards 中查看您的 GitHub 对象，并可以直接打开相应的提交链接到 GitHub：
- en: '![Figure 9.36 – GitHub link added to Azure Boards'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.36 – 已添加 GitHub 链接到 Azure Boards'
- en: '](img/Figure_9.36_B16392.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.36_B16392.jpg)'
- en: Figure 9.36 – GitHub link added to Azure Boards
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.36 – 已添加 GitHub 链接到 Azure Boards
- en: Next, we'll learn how to update a work item's status from GitHub.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何从 GitHub 更新工作项的状态。
- en: Updating work items from GitHub
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 GitHub 更新工作项
- en: In this section, we'll learn how to change the state of a work item in Azure
    Boards from GitHub itself. This will help you link your GitHub objects to an Azure
    Boards work item, enabling a two-way linking and tracking system.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何从 GitHub 本身更改 Azure Boards 中工作项的状态。这将帮助您将 GitHub 对象链接到 Azure Boards
    的工作项，实现双向链接和跟踪系统。
- en: 'Let''s get started:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧：
- en: Go to **Azure Boards** > **Boards** > **New item**. Create a test work item
    with a name of your choice:![Figure 9.37 – Updating the work item
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 **Azure Boards** > **Boards** > **新建项**。创建一个您选择名称的测试工作项：![图 9.37 – 更新工作项
- en: '](img/Figure_9.37_B16392.jpg)'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.37_B16392.jpg)'
- en: Figure 9.37 – Updating the work item
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.37 – 更新工作项
- en: Take note of the ID of the work item (it's `347` in this example).
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下工作项的 ID（在此示例中为 `347`）。
- en: Now, go to your GitHub repository, make any minor change to any file, and create
    a pull request.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，去您的 GitHub 仓库，对任何文件进行一些小的修改，并创建一个拉取请求。
- en: In the pull request information box, you can refer to the Azure Boards task
    by using `AB#347`, where `347` is your work item ID:![Figure 9.38 – Pull request
    information box
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在拉取请求信息框中，你可以通过使用 `AB#347` 来引用 Azure Boards 任务，其中 `347` 是你的工作项 ID：![图 9.38 –
    拉取请求信息框
- en: '](img/Figure_9.38_B16392.jpg)'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_9.38_B16392.jpg)'
- en: Figure 9.38 – Pull request information box
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 9.38 – 拉取请求信息框
- en: Once you've completed the pull request, you will see that the commit message
    is now hyperlinked to Azure Boards and that the status for this work item in Azure
    Boards is updated to `AB#<Work Item ID` `>`. As soon as you link the work item
    to GitHub, your Azure Board work item will also be updated with a link to the
    corresponding GitHub object.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你完成拉取请求，你会看到提交信息现在已经超链接到 Azure Boards，并且该工作项在 Azure Boards 中的状态更新为 `AB#<Work
    Item ID` `>`。一旦你将工作项与 GitHub 链接，Azure Board 中的工作项也会更新，并附上指向相应 GitHub 对象的链接。
- en: 'Along with the link objective, in this demonstration, you also updated the
    state of the work item by using a simple instruction in the commit message. Let''s
    take a look at some of the sample messages you can use:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了链接目标外，在本演示中，你还通过提交信息中的简单指令更新了工作项的状态。让我们来看一些你可以使用的示例消息：
- en: '![Figure 9.40 – Sample messages'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.40 – 示例消息'
- en: '](img/Figure_9.40_B16392.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.40_B16392.jpg)'
- en: Figure 9.40 – Sample messages
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.40 – 示例消息
- en: This concludes how to integrate with Azure Boards and GitHub. In this section,
    we looked at how to manage tasks better by using Azure Boards and GitHub together.
    In the next section, we'll take a look at GitHub Actions.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容介绍了如何与 Azure Boards 和 GitHub 集成。在本节中，我们探讨了如何通过将 Azure Boards 和 GitHub 一起使用来更好地管理任务。在接下来的章节中，我们将介绍
    GitHub Actions。
- en: Overview of GitHub Actions
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GitHub Actions 概述
- en: GitHub Actions is a CI/CD service from GitHub that's used to build and release
    applications being developed in GitHub repositories. Essentially, GitHub Actions
    is similar to Azure Pipelines, where you can set up your build and release pipelines
    to automate the entire software development life cycle.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 是 GitHub 提供的 CI/CD 服务，用于构建和发布在 GitHub 仓库中开发的应用程序。本质上，GitHub Actions
    类似于 Azure Pipelines，你可以设置构建和发布管道来自动化整个软件开发生命周期。
- en: GitHub Actions was launched in early 2019 to provide a simple DevOps experience
    built into GitHub itself. GitHub Actions includes enterprise-grade features, such
    as support for any language with built-in, self-hosted agents for various OSes
    and container images.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub Actions 于 2019 年初推出，提供了一个内置于 GitHub 中的简单 DevOps 体验。GitHub Actions 包括企业级功能，如支持任何语言，并为各种操作系统和容器镜像提供内置的自托管代理。
- en: It includes various pre-built workflow templates built by the community, which
    can make it easier for you to build your DevOps pipeline.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 它包含了社区构建的各种预构建工作流模板，可以帮助你更轻松地构建 DevOps 管道。
- en: It is outside the scope of this book to talk about GitHub Actions in detail,
    but you can refer to the GitHub Actions documentation at [https://github.com/features/actions](https://github.com/features/actions)
    to get started.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 详细讨论 GitHub Actions 超出了本书的范围，但你可以参考 [https://github.com/features/actions](https://github.com/features/actions)
    上的 GitHub Actions 文档来入门。
- en: Summary
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at how to use GitHub and Azure DevOps together to
    build an integrated software development platform for our software teams. To do
    this, we learned how to set up and manage Azure DevOps pipelines from GitHub,
    as well as build and integrate CI/CD solutions.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了如何将 GitHub 和 Azure DevOps 一起使用，为我们的软件团队构建一个集成的软件开发平台。为此，我们学习了如何从 GitHub
    设置和管理 Azure DevOps 管道，以及构建和集成 CI/CD 解决方案。
- en: We also learned about how to plan and track our work better in Azure Boards
    while doing software development in GitHub. You should now be able to use GitHub
    and Azure DevOps together and improve your overall productivity and DevOps experience.
    You should also be able to set up integration between the two services and use
    it in your daily DevOps work.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还了解了在 GitHub 上进行软件开发时，如何更好地规划和跟踪我们的工作。在这一点上，你应该能够将 GitHub 和 Azure DevOps 一起使用，提升整体的生产力和
    DevOps 体验。你还应该能够设置这两项服务之间的集成，并在日常 DevOps 工作中使用它。
- en: In the next chapter, we'll look at several real-world CI/CD examples with the
    help of Azure DevOps.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过 Azure DevOps 的帮助，看看一些真实世界中的 CI/CD 示例。
