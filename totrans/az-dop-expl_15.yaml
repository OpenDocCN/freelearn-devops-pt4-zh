- en: 'Chapter 10:'
  prefs: []
  type: TYPE_NORMAL
- en: Using Test Plans with Azure DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered how you can integrate Azure DevOps with
    GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we are going to cover how to use test plans with Azure DevOps.
    Comprehensive testing should be added to each software development project, because
    it delivers quality and a great user experience for your applications. We will
    begin with a brief introduction to Azure Test Plans. Then we will look at how
    you can manage test plans, suites, and cases in Azure DevOps. We will run and
    analyze a test as well. After that, we will cover exploratory testing and we will
    install the Test & Feedback extension.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Azure Test Plans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploratory testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and using the Test & Feedback extension
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planned manual testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test plans, test suites, and test cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing test plans, test suites, and test cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running and analyzing a manual test plan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow this chapter, you need to have an active Azure DevOps organization.
    The organization used in this chapter is the **Parts Unlimited** organization
    that we created in [*Chapter 1*](B16392_01_Final_JM_ePub.xhtml#_idTextAnchor027)*,
    Azure DevOps Overview*. You also need to have Visual Studio 2019 installed, which
    can be downloaded from [https://visualstudio.microsoft.com/downloads/](https://visualstudio.microsoft.com/downloads/).
  prefs: []
  type: TYPE_NORMAL
- en: The test plan that is used to run and analyze a manual test plan can be downloaded
    from [https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter%2010](https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter%2010).
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Azure Test Plans
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Manual and exploratory testing can be key testing techniques in delivering quality
    and a great user experience for your applications. In modern software development
    processes, quality is the responsibility of all the team members, including developers,
    managers, business analysts, and product owners.
  prefs: []
  type: TYPE_NORMAL
- en: To drive that quality, Azure DevOps Test Plans offers powerful tools that can
    be used by everyone in the team. And by embedding your test plans in Azure DevOps,
    testing can be done throughout the whole development life cycle as well.
  prefs: []
  type: TYPE_NORMAL
- en: Azure DevOps Test Plans offers support for planned manual testing, user acceptance
    testing, exploratory testing, and stakeholder feedback. This will be covered in
    more detail in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at each of them in detail in the following sections. In the next
    section, we are going to cover exploratory testing.
  prefs: []
  type: TYPE_NORMAL
- en: Exploratory testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With exploratory testing, testers are exploring the application to identify
    and document potential bugs. It focuses on discovery and relies on the guidance
    of the individual tester to discover defects that are not easily discovered using
    other types of tests. This type of testing is often referred to as *ad hoc* testing.
  prefs: []
  type: TYPE_NORMAL
- en: Most quality testing techniques use a structured approach by creating test cases
    up front (just like we did in our previous demo). Exploratory testing is the opposite
    of this and is mostly used in scenarios where someone needs to learn about a product
    or application. They can review the quality of the product from the user perspective
    and provide feedback quickly. This will also make sure that you don't miss cases
    that can lead to critical quality failures. The outcome of these ad hoc tests
    can later be converted into a test plan as well.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft has released a **Test & Feedback** extension for exploratory testing.
    This extension can be installed on the browser and used by all the stakeholders
    that are involved in the software development project, such as developers, product
    owners, managers, UX or UI engineers, marketing teams, and early adopters. The
    extension can be used to submit bugs or provide feedback to contribute to the
    quality of the software.
  prefs: []
  type: TYPE_NORMAL
- en: In the next demonstration, we are going to look at how we can install the **Test
    & Feedback** extension.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and using the Test & Feedback extension
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Test & Feedback** extension can be installed from the Visual Studio Marketplace
    and is currently available for Chrome and Firefox (version 50.0 and higher). Chrome
    extensions can also be installed in the Microsoft Edge browser. This browser is
    based on Chromium.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'For a detailed overview of what browsers and features are supported, you can
    refer to the following article: https://docs.microsoft.com/en-us/azure/devops/test/reference-qa?view=azure-devops#browser-support.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the Test & Feedback extension, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to the Visual Studio Marketplace: [https://marketplace.visualstudio.com/](https://marketplace.visualstudio.com/).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the `Test & Feedback`. Select the **Test & Feedback** extension for the
    list:![Figure 10.1 – Selecting the Test & Feedback extension
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.01_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.1 – Selecting the Test & Feedback extension
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will open the detail page for the extension. From here, you can install
    it. Click the **Install** button at the top of the screen:![Figure 10.2 – Installing
    the Test & Feedback extension
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.02_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.2 – Installing the Test & Feedback extension
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, you will be redirected to the supported browsers where this extension
    can be installed. Click the **Install** button below the browser that you are
    currently using to install the extension. You will be redirected to the extension
    page of your current browser. There, you can install it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the extension is installed, the icon will be added to the right of the
    address bar. Select the **Connections** button:![Figure 10.3 – Test & Feedback
    extension configuration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.03_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.3 – Test & Feedback extension configuration
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You need to specify the Azure DevOps server URL there to connect to your Azure
    DevOps instance. The URL begins with `https://dev.azure.com/` and ends with the
    project name. After providing the URL, click **Next**. After connecting to the
    project, you can select the team. Select **Parts.Unlimited Team**:![Figure 10.4
    – Connecting to Azure DevOps
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.04_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.4 – Connecting to Azure DevOps
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now that the extension is configured, we can start using it. You can use the
    extension for exploratory testing or for providing feedback:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We are going to start an exploratory testing session. Click the **Start** button:![Figure
    10.5 – Starting exploratory testing
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.05_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.5 – Starting exploratory testing
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will activate the menus. Once you have a web application open for testing,
    you can find the area that has a bug, take screenshots, make notes, or record
    actions as a video:![Figure 10.6 – Extension options
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.06_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.6 – Extension options
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you are done with exploring and gathering and registering information,
    you can create a bug, task, or test case. Click **Create bug**:![Figure 10.7 –
    Extension options
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.07_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.7 – Extension options
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can provide a title and include your discovered information in there as
    well:![Figure 10.8 – Creating a bug
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.08_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.8 – Creating a bug
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can also view a list of all the activities from the extension. There you
    can also see the bug ID, so you can trace it in Azure DevOps as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.9 – Overview of actions'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_10.09_B16392.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.9 – Overview of actions
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'For more information about how to create feedback items in Azure DevOps, refer
    to the following website: [https://docs.microsoft.com/en-us/azure/devops/test/request-stakeholder-feedback?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/test/request-stakeholder-feedback?view=azure-devops).
    To respond to this feedback items using the **Test & Feedback** extension, visit
    https://docs.microsoft.com/en-us/azure/devops/test/provide-stakeholder-feedback?view=azure-devops#provide.'
  prefs: []
  type: TYPE_NORMAL
- en: In this demonstration, we installed the **Test & Feedback** extension from the
    Visual Studio Marketplace, which can be used for exploratory testing.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we are going to look into planned manual testing.
  prefs: []
  type: TYPE_NORMAL
- en: Planned manual testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Over the years, manual testing has evolved together with the software development
    process into a more agile approach. With Azure DevOps, manual testing is integrated
    into the different agile processes that are supported and can be configured in
    Azure DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The different agile processes that are supported and integrated in Azure DevOps
    are covered in more detail in [*Chapter 2*](B16392_02_Final_JM_ePub.xhtml#_idTextAnchor059)*,
    Managing Projects with Azure DevOps Boards*.
  prefs: []
  type: TYPE_NORMAL
- en: Software development teams can begin manual testing right from the Kanban board
    from Azure Boards. From the board, you can monitor the status of the tests directly
    from the cards. This way, all team members can get an overview of what tests are
    connected to the work items and stories. From there the team can also see what
    the status is of the different tests.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following image, you can see the tests and statuses that are displayed
    on the board:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.10 – Tests displayed in the work hub'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_10.10_B16392.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.10 – Tests displayed in the work hub
  prefs: []
  type: TYPE_NORMAL
- en: If more advanced testing capabilities are needed, Azure Test Plans can also
    be used for all the test management needs. The **Test hub** can be accessed from
    the left menu, under **Test Plans**, and there it offers all the capabilities
    that are needed for a full testing life cycle.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following image, you see the how the Test Hub can be accessed from the
    left menu, together with the different menu options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.11 – Test Hub in Azure DevOps'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_10.11_B16392.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.11 – Test Hub in Azure DevOps
  prefs: []
  type: TYPE_NORMAL
- en: These capabilities include test plans, test suites, test cases, test authoring,
    testing applications, and test tracking. Test plans, test suites, and test cases
    will be covered in more detail in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Test plans, test suites, and test cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In Azure DevOps Test Plans, you can create and manage test plans and test suites
    for sprints or milestones that are defined for your software development project.
    Test Plans offers three main types of test management artifacts: **Test plans**,
    **Test suites**, and **Test cases**. These artifacts are all stored in the work
    repository as special types of work items and can be exported and shared with
    the different team members or across different teams. This also enables the integration
    of the test artifacts with all of the DevOps tasks that are defined for the project.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The three artifacts have the following capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Test plans**: A test plan groups different test suites, configurations, and
    individual test cases together. In general, every major milestone in a project
    should have its own test plan.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test suites**: A test suite can group different test cases into separate
    testing scenarios within a single test plan. This makes it easier to see which
    scenarios are complete.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test cases**: With test cases, you can validate individual parts of your
    code or app deployments. They can be added to both test plans and test suites.
    They can also be added to multiple test plans and suites if needed. This way,
    they can be reused effectively without the need to copy them. A test case is designed
    to validate a work item in Azure DevOps, such as a feature implementation or a
    bug fix.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next section, we are going to put this theory into practice and see how
    you can create and manage test plans in Azure DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Managing test plans, test suites, and test cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For this demonstration, we are going to use the **Parts Unlimited** project
    again. It also has a test plan in Azure DevOps, so we are going to look at that
    first. Therefore, we have to follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a web browser and navigate to [https://dev.azure.com/](https://dev.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in with your Microsoft account and select the **Parts.Unlimited** project.
    Then, in the left menu, select **Test Plans**. This will let you navigate to the
    test plan that has already been added to the project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Parts.Unlimited_TestPlan1** from the list to open it. The suites of
    tests are added to this plan. Select **As a customer, I would like to store my
    credit card details securely**. This will open the list of individual test cases
    that have been added to this suite:![Figure 10.12 – Open the test suite item
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.12_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.12 – Open the test suite item
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Then, right-click the first item in the list: **Verify that user is allowed
    to save his credit card detail**. In the menu, select **Edit test case**:![Figure
    10.13 – Edit the test case'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.13_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.13 – Edit the test case
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the edit screen of this test case, there are four steps. You can also link
    the test case to a commit, pull request, branch, or work item from here. We are
    going to add this test case to an existing work item. Under **Related Work**,
    select **+ Add link** and then click **Existing item**:![Figure 10.14 – Add a
    work item to the test case
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.14_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.14 – Add a work item to the test case
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the `credit card`. Select the **Credit Card Purchase** feature to link the
    test case to:![Figure 10.15 – Select the work item
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.15_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.15 – Select the work item
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **OK** to link the work item. The parent feature is now linked to the
    test case and test suite. Anyone can now navigate between them and view the relationship.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the test case window, click **Save & Close**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In some cases, test cases should be run in a specific order. To do this click
    **Define** in the top menu and select the **Verify that user is not allowed to
    save invalid credit card details** test case. Then drag the test case above the
    first test case in the list:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.16 – Reordering test cases'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_10.16_B16392.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.16 – Reordering test cases
  prefs: []
  type: TYPE_NORMAL
- en: You will now see that the order of the test cases has changed.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also assign different configurations to each test case. For example,
    you can assign configurations for different environments such as different versions
    of Windows or browsers, mobile devices, and so on:'
  prefs: []
  type: TYPE_NORMAL
- en: To assign a configuration, right-click on the test case and select **Assign
    configuration**:![Figure 10.17 – Assign configuration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.17_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.17 – Assign configuration
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the configurations overview list, you will see that there is already a configuration
    selected for this test case, which is Windows 10\. If not, assign it and click
    **Save**. Close the list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.18 – Available and selected configurations'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_10.18_B16392.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.18 – Available and selected configurations
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'Adding and managing test plan configurations is beyond the scope of this book.
    However, if you want more information you can refer to the following article:
    [https://docs.microsoft.com/en-us/azure/devops/test/test-different-configurations?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/test/test-different-configurations?view=azure-devops).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will create a new test suite. You can create three different types
    of test suites: **static**, where you manually assign the test cases; **requirement-based**,
    where you create the suite based on common requirements; and **query-based**,
    where test cases are automatically added based on the outcome of a query:'
  prefs: []
  type: TYPE_NORMAL
- en: Let's add a new requirement-based test suite. For this, select the three dots
    next to **Parts.Unlimited_TestPlan1** > **New Suite** > **Requirement based suite**:![Figure
    10.19 – Creating a requirement-based test suite
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.19_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.19 – Creating a requirement-based test suite
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, you can create your own query for retrieving work items based on your
    requirements. For this demonstration, we will use the default settings. Click
    **Run query** and then select the three items that are related to shipping:![Figure
    10.20 – Select the work items related to shipping
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.20_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.20 – Select the work items related to shipping
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Create suites** to create a test suite for each item.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are going to add some test cases to this suite. You can add them one at a
    time or use a grid layout to quickly add many test cases. We are going to use
    the grid layout here. Select one of the added test suites, click the arrow new
    to the **New Test Case** button, and then click **Add test cases using grid**:![Figure
    10.21 – Add test cases using grid
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.21_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.21 – Add test cases using grid
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Add the following test cases to the grid:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'a) First test case:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'i) **Title**: **Order summary shows expected delivery date**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'ii) **Step action**: **Visit ''my orders''**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'iii) **Step expected result**: **Expected delivery date shown**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'b) Second test case:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'i) **Title**: **Delayed orders highlighted**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'ii) **Step action**: **Visit order page for delayed package**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'iii) **Step expected result**: **Delayed status is highlighted**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'c) Third test case:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'i) **Title**: **Delivery steps for package**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'ii) **Step action**: **Visit order page for in-progress package**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'iii) **Step expected result**: **Delivery steps and status shown**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This will look like the following screenshot:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.22 – Define the test cases'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](img/Figure_10.22_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.22 – Define the test cases
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Save test cases** button on the left and then click **Close Grid**
    on the right of the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this demonstration, we have managed some test cases and created a new requirement-based
    test suite. In the next section, we are going to run and analyze a manual test
    plan.
  prefs: []
  type: TYPE_NORMAL
- en: Running and analyzing a manual test plan
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this demonstration, we are going to run and analyze a manual test plan.
    For this, we are going to use the test plan that is already added to the **Parts.Unlimited**
    project in Azure DevOps again and import a test suite. The test suite can be downloaded
    from the GitHub repository that belongs to this chapter. You can obtain the GitHub
    URL at the beginning of the chapter from the *Technical requirements* section:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the test plan of the **Parts.Unlimited** project again in Azure DevOps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, we need to add a new static test suite. For this, select the three dots
    next to `End-to-end tests`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the newly created suite and in the top menu, select the import button
    to import test cases:![Figure 10.23 – Import test cases
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.23_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.23 – Import test cases
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Import the test plan that is in the folder of [*Chapter 10*](B16392_10_Final_JM_ePub.xhtml#_idTextAnchor211)
    in the source code on GitHub. Select the CSV file and click the **Import** button:![Figure
    10.24 – Import the CSV file
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.24_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.24 – Import the CSV file
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After importing the file, double click on the test case and navigate to the
    parameters section. There add some parameters that can be used for testing, similar
    to the following screenshot:![Figure 10.25 – Parameter values
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.25_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.25 – Parameter values
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Save & Close** in the top menu. Now that we have our test suite in place,
    we can start testing. Click on the **Execute** tab in the top menu and click on
    the **test case**, then **Run**, then **Run with options**:![Figure 10.26 – Run
    the test
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.26_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.26 – Run the test
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Keep the default settings in the **Run with options** window and click **Run**:![Figure
    10.27 – Run with options
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.27_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.27 – Run with options
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The test runner is now displayed with all the steps:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.28 – Test runner window'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_10.28_B16392.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.28 – Test runner window
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we can start the actual testing:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the **Parts.Unlimited** project in Visual Studio. We already cloned the
    repository earlier in the book. If you need to clone the project again, refer
    to [*Chapter 5*](B16392_05_Final_JM_ePub.xhtml#_idTextAnchor123)*, Running Quality
    Tests in a Build Pipeline*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the application by pressing *F5* and wait until the **Parts Unlimited**
    website is running. Now add the browser next to the test runner window and start
    testing:![Figure 10.29 – Start testing the web application
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.29_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.29 – Start testing the web application
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Follow the instructions according to the test runner. Each time you finish a
    step, click on the pass test icon to the right of each step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you discover bugs or issues, you can add a comment to the step directly,
    or create a separate bug at the top:![Figure 10.30 – Adding a comment or bug
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.30_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.30 – Adding a comment or bug
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To finish the test, click **Save and close** in the top menu of the test runner.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now go back to Azure DevOps. In the left menu, click **Test Plans** > **Runs**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the list of recent runs, select the run that we just executed:![Figure 10.31
    – Recent test runs
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_10.31_B16392.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.31 – Recent test runs
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'There, you can see all the details of the test and the outcome:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.32 – Test results'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_10.32_B16392.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.32 – Test results
  prefs: []
  type: TYPE_NORMAL
- en: In this demonstration, we have created a test suite and imported a test case.
    We then ran the test and tested the Parts Unlimited application, and we looked
    at the results in Azure DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: This concludes this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have covered Azure DevOps Test Plans. We looked at the different
    features and capabilities and managed test plans, test suites, and test cases.
    Then we imported a test case from a CSV file and tested the **Parts Unlimited**
    application. Then, we covered exploratory testing in detail, and we used the Test
    & Feedback extension to report a bug.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we are going to focus on real-world CI/CD scenarios with
    Azure DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Check out the following links for more information about the topics that were
    covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Exploratory and manual testing scenarios and capabilities: [https://docs.microsoft.com/en-us/azure/devops/test/overview?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/test/overview?view=azure-devops)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Creating manual test cases: [https://docs.microsoft.com/en-us/azure/devops/test/create-test-cases?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/test/create-test-cases?view=azure-devops)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Providing feedback using the Test & Feedback extension: [https://docs.microsoft.com/en-us/azure/devops/test/provide-stakeholder-feedback?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/test/provide-stakeholder-feedback?view=azure-devops)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Exploratory testing with the Test & Feedback extension in Connected mode: [https://docs.microsoft.com/en-us/azure/devops/test/connected-mode-exploratory-testing?view=azure-devops](https://docs.microsoft.com/en-us/azure/devops/test/connected-mode-exploratory-testing?view=azure-devops)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
