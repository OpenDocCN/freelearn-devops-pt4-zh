- en: 'Chapter 11:'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章：
- en: Real-World CI/CD Scenarios with Azure DevOps
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure DevOps进行实际的CI/CD场景
- en: In this chapter, we'll show you some sample projects where the **continuous
    integration and continuous delivery** (**CI/CD**) processes are handled by using
    Azure DevOps. We'll be taking sample applications and setting up a CI/CD pipeline
    using Azure DevOps for managing the software development, deployment, and upgrade
    life cycle.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将展示一些示例项目，其中**持续集成和持续交付**（**CI/CD**）过程通过使用Azure DevOps来处理。我们将以示例应用程序为基础，使用Azure
    DevOps设置CI/CD管道，以便管理软件开发、部署和升级生命周期。
- en: 'We''ll be covering the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Setting up a CI/CD pipeline for .NET-based applications
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为基于.NET的应用程序设置CI/CD管道
- en: Setting up a CI/CD pipeline for a container-based infrastructure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为基于容器的基础设施设置CI/CD管道
- en: Azure Architecture Center for DevOps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure架构中心为DevOps提供支持
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow along with this chapter, you need to have an active Azure DevOps organization
    and an Azure subscription.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章学习，您需要有一个有效的Azure DevOps组织和一个Azure订阅。
- en: You can sign up for a test Azure DevOps organization at [https://dev.azure.com](https://dev.azure.com).
    You can get a trial for an Azure subscription at [https://azure.microsoft.com/en-in/free/](https://azure.microsoft.com/en-in/free/)
    if you do not have one already.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://dev.azure.com](https://dev.azure.com)注册一个测试版Azure DevOps组织。如果您还没有Azure订阅，可以在[https://azure.microsoft.com/en-in/free/](https://azure.microsoft.com/en-in/free/)获得一个试用版。
- en: The code for this chapter is available at [https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11](https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码可以在[https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11](https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11)找到。
- en: Setting up a CI/CD pipeline for .NET-based applications
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为基于.NET的应用程序设置CI/CD管道
- en: A typical .NET-based application includes applications developed using Microsoft's
    .NET Framework and uses a SQL database in the backend. You may have multiple layers
    of applications, such as a frontend, backend (also known as the middle tier or
    API tier), and data tier (SQL Server).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的基于.NET的应用程序包括使用Microsoft的.NET Framework开发的应用程序，并在后端使用SQL数据库。应用程序可能有多个层次，例如前端、后端（也称为中间层或API层）和数据层（SQL
    Server）。
- en: Azure Pipelines, which is part of Azure DevOps, provides a comprehensive solution
    to build, deploy, and manage your .NET-based infrastructure deployments. In this
    section, we'll look at the steps to configure CI/CD for a sample .NET-based application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Pipelines，作为Azure DevOps的一部分，提供了一个全面的解决方案来构建、部署和管理基于.NET的基础设施部署。在本节中，我们将查看为示例基于.NET的应用程序配置CI/CD的步骤。
- en: We will be creating two environments, named **staging** and **production**,
    for the application and setup of a CI/CD pipeline.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为应用程序创建两个环境，分别命名为**暂存**和**生产**，并设置CI/CD管道。
- en: Introduction to the sample application
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例应用程序简介
- en: We'll be using a simple **ToDo** application for this walkthrough. It's a web-based
    application that uses a SQL database in the backend.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用一个简单的**ToDo**应用程序来进行这次演示。它是一个基于Web的应用程序，后端使用SQL数据库。
- en: 'It is built using Microsoft ASP.NET, targeted for .NET Framework version 4.62\.
    You can access the source code here: [https://github.com/Azure-Samples/dotnet-sqldb-tutorial/tree/master/DotNetAppSqlDb](https://github.com/Azure-Samples/dotnet-sqldb-tutorial/tree/master/DotNetAppSqlDb).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 它是使用Microsoft ASP.NET构建的，针对的是.NET Framework版本4.62。您可以在这里访问源代码：[https://github.com/Azure-Samples/dotnet-sqldb-tutorial/tree/master/DotNetAppSqlDb](https://github.com/Azure-Samples/dotnet-sqldb-tutorial/tree/master/DotNetAppSqlDb)。
- en: It is recommended that you take a quick look at the application code to get
    familiar with it before we start building the CI/CD pipeline.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 建议您在开始构建CI/CD管道之前，快速浏览一下应用程序代码，以便熟悉它。
- en: Preparing the pre-requisite Azure infrastructure
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备所需的Azure基础设施
- en: 'In this section, we''ll create the required Azure infrastructure to host the
    application. We will be creating the following resources:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建所需的Azure基础设施来托管应用程序。我们将创建以下资源：
- en: '`Contoso-ToDo-Staging`'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Contoso-ToDo-Staging`'
- en: b) `Contoso-ToDo-Production`
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `Contoso-ToDo-Production`
- en: '**Application components**: We''ll be creating the following resources for
    both the staging and production environments:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应用程序组件**：我们将为暂存环境和生产环境创建以下资源：'
- en: a) Azure App Service to host the web application
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 使用Azure App Service来托管Web应用程序
- en: b) Azure SQL Database to host the SQL database
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 使用Azure SQL数据库来托管SQL数据库
- en: Creating a resource group in Azure
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Azure 中创建资源组
- en: 'A resource group is a container that holds resources in the Azure cloud. Typically,
    a resource group includes resources that you want to manage as a group or are
    maintained in a similar life cycle. We''ll be creating two resource groups: one
    for production and one for staging. Let''s create the resource groups in Azure:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 资源组是一个容器，用于在 Azure 云中存储资源。通常，资源组包括您希望作为一组管理的资源，或者生命周期相似的资源。我们将创建两个资源组：一个用于生产，另一个用于预发布。让我们在
    Azure 中创建这些资源组：
- en: Log in to the Azure portal, [https://portal.azure.com](https://portal.azure.com),
    with your Azure credentials.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的 Azure 凭证登录到 Azure 门户，[https://portal.azure.com](https://portal.azure.com)。
- en: Click on `resource group`:![ ](img/Figure_11.01_B16392.jpg)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `资源组`：![ ](img/Figure_11.01_B16392.jpg)
- en: Figure 11.1 – Resource groups in the Azure portal
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.1 – Azure 门户中的资源组
- en: Click **Create** on the resource group page.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在资源组页面上点击 **创建**。
- en: Select your subscription and enter the resource group name as `Contoso-ToDo-Staging`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的订阅，并输入资源组名称为 `Contoso-ToDo-Staging`。
- en: Choose a region close to your location:![Figure 11.2 – Resource group creation
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个离您位置较近的区域：![图 11.2 – 资源组创建
- en: '](img/Figure_11.02_B16392.jpg)'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.02_B16392.jpg)'
- en: Figure 11.2 – Resource group creation
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.2 – 资源组创建
- en: Click on **Review + Create** and then **Create** to start the deployment.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **查看 + 创建**，然后点击 **创建** 以开始部署。
- en: Repeat the steps to create another resource group for the production environment
    named `Contoso-ToDo-Prod`.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤，为生产环境创建另一个资源组，命名为 `Contoso-ToDo-Prod`。
- en: You've now created resource groups to host Azure resources.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经创建了资源组来托管 Azure 资源。
- en: Creating Azure App Service
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Azure 应用服务
- en: Azure App Service is Microsoft Azure's **Platform as a Service** (**PaaS**)
    web hosting service. You can host any web-based application built in almost any
    language using App Service. Being a PaaS offering, App Service allows you to just
    push your code and get your application live without worrying about the underlying
    hardware, OS, and platform components.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 应用服务是 Microsoft Azure 提供的 **平台即服务**（**PaaS**）Web 托管服务。您可以使用应用服务托管几乎任何语言构建的基于
    Web 的应用程序。作为 PaaS 服务，应用服务允许您只需推送代码即可使应用程序上线，而无需担心底层的硬件、操作系统和平台组件。
- en: 'In this example, we''ll be using Azure App Service to host the **ToDo** application:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们将使用 Azure 应用服务来托管 **ToDo** 应用：
- en: In the Azure portal, click on **+ Create a resource** and click on **Web App**:![Figure
    11.3 – Azure Web App in the portal
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure 门户中，点击 **+ 创建资源**，然后点击 **Web 应用**：![图 11.3 – 门户中的 Azure Web 应用
- en: '](img/Figure_11.03_B16392.jpg)'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.03_B16392.jpg)'
- en: Figure 11.3 – Azure Web App in the portal
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.3 – 门户中的 Azure Web 应用
- en: On the `contosotodostagingXX`, where `XX` is your initials.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `contosotodostagingXX` 上，其中 `XX` 是您的首字母。
- en: 'd) **Publish**: Choose **Code**.'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) **发布**：选择**代码**。
- en: 'e) **Runtime stack**: Choose **ASP.NET V4.7**.'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e) **运行时堆栈**：选择 **ASP.NET V4.7**。
- en: 'f) **Operating System**: Choose **Windows**.'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: f) **操作系统**：选择 **Windows**。
- en: 'g) **Region**: Choose a region close to your location:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: g) **区域**：选择一个离您位置较近的区域：
- en: '![Figure 11.4 – Azure App Service creation'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.4 – 创建 Azure 应用服务'
- en: '](img/Figure_11.04_B16392.jpg)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.04_B16392.jpg)'
- en: Figure 11.4 – Azure App Service creation
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.4 – 创建 Azure 应用服务
- en: 'Under **App Service Plan**, choose the following:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **应用服务计划** 下，选择以下选项：
- en: 'a) **Windows Plan**: Enter a new App Service plan name'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) **Windows 计划**：输入一个新的应用服务计划名称
- en: 'b) **Sku and Size**: You can choose any SKU; it is recommended using **S0**
    or **Basic** to avoid any significant Azure costs since this is for testing. In
    production, you''d use a size that is suitable for your application resources
    demand:'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) **SKU 和大小**：您可以选择任何 SKU；建议使用 **S0** 或 **Basic**，以避免由于测试目的而产生过高的 Azure 成本。在生产环境中，您应根据应用程序的资源需求选择适合的大小：
- en: '![Figure 11.5 – App Service SKU'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.5 – 应用服务 SKU'
- en: '](img/Figure_11.05_B16392.jpg)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.05_B16392.jpg)'
- en: Figure 11.5 – App Service SKU
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.5 – 应用服务 SKU
- en: Click **Review + Create** and then **Create** to start the deployment.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **查看 + 创建**，然后点击 **创建** 以开始部署。
- en: Once completed, you'll receive a notification with the status displayed as completed.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成后，您将收到一个通知，显示状态为完成。
- en: Repeat the steps in this task to create another Azure app service for the production
    environment.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复此任务中的步骤，为生产环境创建另一个 Azure 应用服务。
- en: In this task, we created an Azure app service for hosting the **ToDo** web application.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在此任务中，我们为托管 **ToDo** Web 应用程序创建了一个 Azure 应用服务。
- en: Creating an Azure SQL database
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Azure SQL 数据库
- en: 'Our sample **ToDo** app is using Microsoft SQL Server to store all its application
    data. In this task, we''ll create a new Azure SQL database that will be used by
    the **ToDo** app to store all the persistent data:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的示例 **ToDo** 应用使用 Microsoft SQL Server 存储所有的应用数据。在此任务中，我们将创建一个新的 Azure SQL
    数据库，供 **ToDo** 应用存储所有持久化数据：
- en: In the Azure portal, click on **+ Create a resource** and select **SQL Database**:![](img/Figure_11.06_B16392.jpg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure 门户中，点击 **+ 创建资源**，然后选择 **SQL 数据库**：![](img/Figure_11.06_B16392.jpg)
- en: Figure 11.6 – SQL Database in Azure
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.6 – Azure 中的 SQL 数据库
- en: On the SQL Server `contosotodo-staging-db`.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 SQL 服务器 `contosotodo-staging-db` 上。
- en: d) `contosotodo-staging-dbserver`.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) `contosotodo-staging-dbserver`。
- en: ii) Provide a username and password of your choice.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ii) 提供你选择的用户名和密码。
- en: 'iii) **Location**: The Azure region used for deploying the web application.'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: iii) **位置**：用于部署 Web 应用的 Azure 区域。
- en: 'e) **Want to use SQL elastic pool?**: **No**.'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e) **想使用 SQL 弹性池吗？**：**否**。
- en: 'f) **Compute + storage**: Change the SKU to **S0** or **Basic** to keep the
    Azure costs low during this test project. In reality, you''d need to choose the
    right compute and storage combination as per your application requirements:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: f) **计算 + 存储**：将 SKU 更改为 **S0** 或 **基础** 以保持 Azure 成本在本测试项目期间较低。实际上，你需要根据应用需求选择合适的计算和存储组合：
- en: '![Figure 11.7 – Create SQL Database in Azure'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.7 – 在 Azure 中创建 SQL 数据库'
- en: '](img/Figure_11.07_B16392.jpg)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.07_B16392.jpg)'
- en: Figure 11.7 – Create SQL Database in Azure
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.7 – 在 Azure 中创建 SQL 数据库
- en: 'Click on **Next: Networking >**.'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **下一步：网络 >**。
- en: For the **Networking** configuration, select **Public endpoint** for **Connectivity
    method** and choose **Yes** for **Allow Azure services and resources to access
    this server**. Please note that this is just for the purpose of this test project
    deployment; in production, it is advised to allow access to SQL Server from your
    specific application servers only. Once selected, click on **Review + create**:![Figure
    11.8 – Reviewing SQL database creation in Azure
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 **网络** 配置，选择 **公共端点** 作为 **连接方式**，并选择 **是** 以允许 **Azure 服务和资源访问此服务器**。请注意，这仅用于本测试项目的部署；在生产环境中，建议仅允许来自特定应用服务器的访问。一旦选择，点击
    **查看 + 创建**：![图 11.8 – 在 Azure 中审核 SQL 数据库创建
- en: '](img/Figure_11.08_B16392.jpg)'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.08_B16392.jpg)'
- en: Figure 11.8 – Reviewing SQL database creation in Azure
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.8 – 在 Azure 中审核 SQL 数据库创建
- en: Click **Create** to start the deployment. Once completed, you'll receive a notification
    in the notification menu.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建** 以开始部署。完成后，你将在通知菜单中收到通知。
- en: Navigate to the newly create Azure SQL database and copy the connection string.
    This will be used in the upcoming sections.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到新创建的 Azure SQL 数据库并复制连接字符串。这将在接下来的部分中使用。
- en: Repeat the steps to create another Azure SQL database for production.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复这些步骤为生产环境创建另一个 Azure SQL 数据库。
- en: In this task, we've created Azure SQL databases for our application.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个任务中，我们已经为我们的应用创建了 Azure SQL 数据库。
- en: Setting up an Azure DevOps project
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Azure DevOps 项目
- en: 'Now that our Azure infrastructure is ready, we''ll now set up an Azure DevOps
    organization to build the CI/CD pipeline. We will be using Azure Repos as our
    source control management system:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的 Azure 基础设施已准备好，接下来我们将设置一个 Azure DevOps 组织来构建 CI/CD 流水线。我们将使用 Azure Repos
    作为我们的源代码管理系统：
- en: Log in to [https://dev.azure.com](https://dev.azure.com) using your Azure DevOps
    account.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的 Azure DevOps 账号登录 [https://dev.azure.com](https://dev.azure.com)。
- en: Create a new project named `Contoso ToDo` in your DevOps tenant:![Figure 11.9
    – Creating a DevOps project
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 DevOps 租户中创建一个名为 `Contoso ToDo` 的新项目：![图 11.9 – 创建 DevOps 项目
- en: '](img/Figure_11.09_B16392.jpg)'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.09_B16392.jpg)'
- en: Figure 11.9 – Creating a DevOps project
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.9 – 创建 DevOps 项目
- en: We will start by importing the application code in Azure Repos. Click on **Repos**.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将从导入 Azure Repos 中的应用代码开始。点击 **Repos**。
- en: Click on **Import** under **Import a repository**:![Figure 11.10 – Import a
    repository
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **导入仓库** 下点击 **导入**：![图 11.10 – 导入一个仓库
- en: '](img/Figure_11.10_B16392.jpg)'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.10_B16392.jpg)'
- en: Figure 11.10 – Import a repository
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.10 – 导入一个仓库
- en: 'For the repository URL, enter [https://github.com/Azure-Samples/dotnet-sqldb-tutorial/](https://github.com/Azure-Samples/dotnet-sqldb-tutorial/)
    and click **Import**:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于仓库 URL，输入 [https://github.com/Azure-Samples/dotnet-sqldb-tutorial/](https://github.com/Azure-Samples/dotnet-sqldb-tutorial/)，然后点击
    **导入**：
- en: '![Figure 11.11 – Importing a repository from GitHub'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.11 – 从 GitHub 导入仓库'
- en: '](img/Figure_11.11_B16392.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.11_B16392.jpg)'
- en: Figure 11.11 – Importing a repository from GitHub
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.11 – 从 GitHub 导入仓库
- en: 'Once the import is successful, we''ll see that project files are now available
    in Azure Repos. You can explore the code files to look under the hood of the `DotNetAppSQLDb`
    contains the source file of the application:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 导入成功后，我们将看到项目文件现已在 Azure Repos 中可用。您可以浏览代码文件，查看 `DotNetAppSQLDb` 中包含的应用程序源文件：
- en: '![Figure 11.12 – Files in the Azure repo'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.12 – Azure 仓库中的文件'
- en: '](img/Figure_11.12_B16392.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.12_B16392.jpg)'
- en: Figure 11.12 – Files in the Azure repo
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12 – Azure 仓库中的文件
- en: We will now set up a build pipeline for the application.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将为应用程序设置构建管道。
- en: Setting up CI for the application
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为应用程序设置 CI
- en: 'Now that our application code is in Azure Repos, let''s create a build pipeline
    that will build the application package to be deployed to Azure App Service:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的应用程序代码已上传至 Azure Repos，接下来我们将创建一个构建管道，该管道将构建应用程序包，以便部署到 Azure 应用服务：
- en: In Azure DevOps, browse to **Pipelines** and click on **Create Pipeline**:![Figure
    11.13 – Creating a pipeline
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure DevOps 中，浏览到**管道**并点击**创建管道**：![图 11.13 – 创建管道
- en: '](img/Figure_11.13_B16392.jpg)'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.13_B16392.jpg)'
- en: Figure 11.13 – Creating a pipeline
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.13 – 创建管道
- en: Click on **Use the classic editor** to create the pipeline using the GUI (this
    is optional; as described in previous chapters, you can choose to configure the
    pipeline using a YAML file):![Figure 11.14 – Select the classic editor
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**使用经典编辑器**，通过 GUI 创建管道（这一步是可选的；如前面章节所述，您可以选择使用 YAML 文件配置管道）：![图 11.14 – 选择经典编辑器
- en: '](img/Figure_11.14_B16392.jpg)'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.14_B16392.jpg)'
- en: Figure 11.14 – Select the classic editor
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.14 – 选择经典编辑器
- en: Select your Azure repo and master branch, then click **Continue** to move to
    the next step:![Figure 11.15 – Selecting the repo
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的 Azure 仓库和主分支，然后点击**继续**进入下一步：![图 11.15 – 选择仓库
- en: '](img/Figure_11.15_B16392.jpg)'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.15_B16392.jpg)'
- en: Figure 11.15 – Selecting the repo
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.15 – 选择仓库
- en: Select **ASP.NET** as the pipeline template:![Figure 11.16 – Selecting the pipeline
    template
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**ASP.NET**作为管道模板：![图 11.16 – 选择管道模板
- en: '](img/Figure_11.16_B16392.jpg)'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.16_B16392.jpg)'
- en: Figure 11.16 – Selecting the pipeline template
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.16 – 选择管道模板
- en: Review the pipeline configuration. For the purpose of this project, the default
    configuration does the job. Once it's reviewed, click on **Save & queue**:![Figure
    11.17 – Pipeline build tasks
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看管道配置。对于这个项目，默认配置已经能够完成工作。检查无误后，点击**保存并排队**：![图 11.17 – 管道构建任务
- en: '](img/Figure_11.17_B16392.jpg)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.17_B16392.jpg)'
- en: Figure 11.17 – Pipeline build tasks
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.17 – 管道构建任务
- en: In the **Run Pipeline** wizard, you can add a comment and click **Save and run
    to start execution**.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**运行管道**向导中，您可以添加评论并点击**保存并运行以开始执行**。
- en: Once the job is in progress, you can review the status by click on the job name:![Figure
    11.18 – Pipeline build status
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦作业开始执行，您可以通过点击作业名称来查看状态：![图 11.18 – 管道构建状态
- en: '](img/Figure_11.18_B16392.jpg)'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.18_B16392.jpg)'
- en: Figure 11.18 – Pipeline build status
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.18 – 管道构建状态
- en: 'Now, let''s enable CI on the pipeline to auto-start the build on commit to
    the **master** branch. Edit the pipeline and browse to **Triggers**, and enable
    CI. You can choose to filter by branch or change to a different branch if you
    are not using **master** as your primary branch:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们在管道上启用 CI，以便在提交到**主**分支时自动启动构建。编辑管道并浏览到**触发器**，启用 CI。如果您不是使用**主**分支作为主要分支，您可以选择按分支进行过滤或切换到其他分支：
- en: '![Figure 11.19 – Enable continuous integration'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.19 – 启用持续集成'
- en: '](img/Figure_11.19_B16392.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.19_B16392.jpg)'
- en: Figure 11.19 – Enable continuous integration
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.19 – 启用持续集成
- en: In this task, we created a build pipeline and performed a successful build of
    our sample **ToDo** application. In the next task, we'll perform the deployments.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这项任务中，我们创建了一个构建管道，并成功构建了我们的示例**待办事项**应用程序。在接下来的任务中，我们将执行部署。
- en: Setting up continuous delivery for the application
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为应用程序设置持续交付
- en: Now that our application is ready to be deployed, we'll create a release pipeline
    to deploy the application in Azure. In this pipeline, we'll define which Azure
    resources to deploy the application to and add additional deployment controls.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的应用程序已准备好进行部署，我们将创建一个发布管道，将应用程序部署到 Azure。在这个管道中，我们将定义要将应用程序部署到哪些 Azure 资源，并添加额外的部署控制。
- en: Setting up the service connection
  id: totrans-131
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 设置服务连接
- en: 'Azure DevOps requires access to an Azure subscription in order to be able to
    deploy and update Azure resources. Service connections in Azure DevOps allow you
    to connect your Azure DevOps project to external services. Let''s create a service
    connection for Azure Pipelines:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 需要访问 Azure 订阅，以便能够部署和更新 Azure 资源。Azure DevOps 中的服务连接允许你将 Azure
    DevOps 项目连接到外部服务。让我们为 Azure Pipelines 创建一个服务连接：
- en: Log in to Azure DevOps and browse to **Project Settings** | **Service Connections**.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Azure DevOps 并浏览至 **项目设置** | **服务连接**。
- en: Click on **Create service connection**.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建服务连接**。
- en: In the connections list, select **Azure Resource Manager**:![Figure 11.20 –
    ARM service connections
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在连接列表中，选择 **Azure 资源管理器**：![Figure 11.20 – ARM 服务连接
- en: '](img/Figure_11.20_B16392.jpg)'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.20_B16392.jpg)'
- en: Figure 11.20 – ARM service connections
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.20 – ARM 服务连接
- en: For the service connection authentication method, choose **Service principal
    (automatic)**:![Figure 11.21 – ARM service connections service principal
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于服务连接身份验证方法，选择 **服务主体（自动）**：![Figure 11.21 – ARM 服务连接服务主体
- en: '](img/Figure_11.21_B16392.jpg)'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.21_B16392.jpg)'
- en: Figure 11.21 – ARM service connections service principal
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.21 – ARM 服务连接服务主体
- en: 'Azure DevOps will now require you to authenticate to Azure. Please log in with
    an account with at least subscription owner rights and global admin rights in
    the Azure **Active Directory** (**AD**) tenant. You can choose to allow the service
    connection scope to be limited to a resource group or allow the entire subscription.
    Select your Azure subscription and give it a name:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps 现在将要求你进行 Azure 身份验证。请使用至少拥有订阅所有者权限和全局管理员权限的帐户登录到 Azure **Active
    Directory** (**AD**) 租户。你可以选择将服务连接的作用域限制为某个资源组，或者允许整个订阅。选择你的 Azure 订阅并为其命名：
- en: '![Figure 11.22 – Creating a service connections service principal'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 11.22 – 创建服务连接服务主体'
- en: '](img/Figure_11.22_B16392.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.22_B16392.jpg)'
- en: Figure 11.22 – Creating a service connections service principal
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 11.22 – 创建服务连接服务主体
- en: This service connection is now ready to be used in Azure Pipelines.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务连接现在可以在 Azure Pipelines 中使用。
- en: Creating a release pipeline
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 创建发布流水线
- en: 'Release pipelines include all the steps and the workflow to deploy the application
    to various environments, such as development, staging, QA, and production. Let''s
    start with creating a release pipeline for our **ToDo** app:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 发布流水线包括所有步骤和工作流，用于将应用程序部署到不同的环境中，例如开发、暂存、质量保证和生产。我们从为 **ToDo** 应用创建一个发布流水线开始：
- en: Log in to Azure DevOps and launch your `Contoso ToDo` project.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到 Azure DevOps 并启动你的 `Contoso ToDo` 项目。
- en: Browse to **Pipeline** | **Releases**.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览至 **Pipeline** | **Releases**。
- en: Click on **New pipeline**:![Figure 11.23 – New release pipeline
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **新建流水线**：![Figure 11.23 – 新发布流水线
- en: '](img/Figure_11.23_B16392.jpg)'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.23_B16392.jpg)'
- en: Figure 11.23 – New release pipeline
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.23 – 新发布流水线
- en: This will open a page to select a template. Since we're planning to deploy our
    **ToDo** app to App Service, select **Azure App Service deployment**:![Figure
    11.24 – The Azure App Service deployment task
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个页面以选择模板。由于我们计划将 **ToDo** 应用部署到 App Service，请选择 **Azure App Service 部署**：![Figure
    11.24 – Azure App Service 部署任务
- en: '](img/Figure_11.24_B16392.jpg)'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.24_B16392.jpg)'
- en: Figure 11.24 – The Azure App Service deployment task
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.24 – Azure App Service 部署任务
- en: Enter `Staging Environment` for **Stage name**. You can choose to give any other
    meaningful name that best depicts the scenario in your environment:![Figure 11.25
    – Staging stage
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **阶段名称** 输入 `Staging Environment`。你可以选择给出任何其他有意义的名称，最好能描述你环境中的场景：![Figure
    11.25 – Staging 阶段
- en: '](img/Figure_11.25_B16392.jpg)'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.25_B16392.jpg)'
- en: Figure 11.25 – Staging stage
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.25 – Staging 阶段
- en: You can now close the **Stage** blade. Your pipeline should look as follows:![Figure
    11.26 – Pipeline snapshot
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以关闭 **阶段** 窗格。你的流水线应该如下所示：![Figure 11.26 – 流水线快照
- en: '](img/Figure_11.26_B16392.jpg)'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.26_B16392.jpg)'
- en: Figure 11.26 – Pipeline snapshot
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.26 – 流水线快照
- en: In order to deploy the application, first we need to get the application package
    from the outputs of the build pipeline. Under **Artifacts**, click **+ Add**:![Figure
    11.27 – Artifact in the release pipeline
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了部署应用程序，首先我们需要从构建流水线的输出中获取应用程序包。在 **Artifacts** 下，点击 **+ 添加**：![Figure 11.27
    – 发布流水线中的工件
- en: '](img/Figure_11.27_B16392.jpg)'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.27_B16392.jpg)'
- en: Figure 11.27 – Artifact in the release pipeline
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.27 – 发布流水线中的工件
- en: Select **Build** as **Source type** and select the build pipeline created in
    the previous task. You can choose to configure which version is to be deployed
    by default:![Figure 11.28 – Artifact source in the release pipeline](img/Figure_11.28_B16392.jpg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**构建**作为**源类型**，并选择在上一任务中创建的构建管道。你可以选择配置默认要部署的版本：![图 11.28 – 发布管道中的工件源](img/Figure_11.28_B16392.jpg)
- en: Figure 11.28 – Artifact source in the release pipeline
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.28 – 发布管道中的工件源
- en: Click on the **Continuous deployment trigger** button and enable continuous
    deployment. Enabling continuous deployment will trigger a release every time there's
    a new build version available (typically after you run a build pipeline with CI).
    If you enable **Pull request trigger**, a release will be created every time we
    have a new build version, even with a pull request. This may be a useful scenario
    for pure development pipelines:![Figure 11.29 – Enabling continuous deployment
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**持续部署触发器**按钮并启用持续部署。启用持续部署后，每当有新的构建版本可用时，都会触发发布（通常是在运行包含CI的构建管道之后）。如果启用**拉取请求触发器**，每次有新的构建版本时，都会创建一个发布，即使是有拉取请求的情况下。这对于纯开发管道可能是一个有用的场景：![图
    11.29 – 启用持续部署
- en: '](img/Figure_11.29_B16392.jpg)'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.29_B16392.jpg)'
- en: Figure 11.29 – Enabling continuous deployment
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.29 – 启用持续部署
- en: In **Stages**, click on **1 job, 1 task** in the development environment:![Figure
    11.30 – Pipeline stage
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**阶段**中，点击开发环境中的**1个任务，1个工作**：![图 11.30 – 管道阶段
- en: '](img/Figure_11.30_B16392.jpg)'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.30_B16392.jpg)'
- en: Figure 11.30 – Pipeline stage
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.30 – 管道阶段
- en: Inside the tasks view, select your Azure subscription service connection and
    the app service that you deployed earlier:![Figure 11.31 – App service deployment
    task
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任务视图中，选择你之前部署的Azure订阅服务连接和应用服务：![图 11.31 – 应用服务部署任务
- en: '](img/Figure_11.31_B16392.jpg)'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.31_B16392.jpg)'
- en: Figure 11.31 – App service deployment task
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.31 – 应用服务部署任务
- en: Click on **Deploy Azure App Service** and review the app service deployment
    information.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**部署 Azure 应用服务**并检查应用服务的部署信息。
- en: Click on **+** to add another task to apply the **SQL migration scripts** for
    getting the database ready. Search for SQL and select **Azure SQL Database deployment**.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**+**添加另一个任务来应用**SQL迁移脚本**以使数据库准备就绪。搜索SQL并选择**Azure SQL数据库部署**。
- en: 'In **Azure SQL Task**, change the following settings:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Azure SQL 任务**中，修改以下设置：
- en: 'a) **Display Name**: Apply database migration script.'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) **显示名称**：应用数据库迁移脚本。
- en: b) Select your Azure subscription and provide the database connection details
    captured while creating the Azure SQL database.
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 选择你的Azure订阅并提供在创建Azure SQL数据库时捕获的数据库连接详情。
- en: 'c) **Deploy Type**: Inline SQL script'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) **部署类型**：内联SQL脚本
- en: 'd) **Inline SQL Script**: Provide the following script code. This will create
    the required tables in the SQL database. Please note that this is a sample SQL
    script to create the required schema (also available at [https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11](https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11));
    in a production environment, you may choose to do so using the SQL Server Data
    Tools project in Azure Pipelines. Please refer to this documentation to learn
    more about doing Azure DevOps for SQL: [https://devblogs.microsoft.com/azure-sql/devops-for-azure-sql/](https://devblogs.microsoft.com/azure-sql/devops-for-azure-sql/):'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) **内联 SQL 脚本**：提供以下脚本代码。这将会在SQL数据库中创建所需的表。请注意，这是一个用于创建所需架构的示例SQL脚本（也可以在[https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11](https://github.com/PacktPublishing/Learning-Azure-DevOps---B16392/tree/master/Chapter11)中找到）；在生产环境中，您可以选择使用Azure
    Pipelines中的SQL Server数据工具项目来完成此操作。请参阅此文档了解更多关于SQL的Azure DevOps的内容：[https://devblogs.microsoft.com/azure-sql/devops-for-azure-sql/](https://devblogs.microsoft.com/azure-sql/devops-for-azure-sql/)：
- en: '[PRE0]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Click **Save** and **+** to add another task. We'll now need to add another
    task to update the connection string of the database in the connection settings
    of Azure App Service.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**并点击**+**添加另一个任务。现在我们需要添加另一个任务，更新Azure应用服务连接设置中的数据库连接字符串。
- en: Search for **Azure App Service Settings** in the task's menu:![Figure 11.32
    – The Azure App Service Settings task
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任务菜单中搜索**Azure 应用服务设置**：![图 11.32 – Azure 应用服务设置任务
- en: '](img/Figure_11.32_B16392.jpg)'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.32_B16392.jpg)'
- en: Figure 11.32 – The Azure App Service Settings task
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.32 – Azure 应用服务设置任务
- en: In the **Azure App Service Settings** task, select the Azure subscription and
    app service connection details for the staging environment.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Azure App Service 设置**任务中，选择 Azure 订阅和用于暂存环境的应用服务连接详情。
- en: 'In **Connection Settings**, provide the database connection string in the following
    format. Please update your database connection details before saving. Since this
    is a test lab, we''re storing the secure information directly in the pipeline
    task. However, in a production environment, please use variables and parameters
    to store any connection string or other information. Please refer to this documentation
    to learn more about securely using variables and parameters in an Azure pipeline:
    [https://docs.microsoft.com/bs-cyrl-ba/azure/devops/pipelines/security/inputs?view=azure-devops](https://docs.microsoft.com/bs-cyrl-ba/azure/devops/pipelines/security/inputs?view=azure-devops):'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**连接设置**中，提供以下格式的数据库连接字符串。在保存之前，请更新您的数据库连接详情。由于这是一个测试实验室，我们直接在管道任务中存储了安全信息。然而，在生产环境中，请使用变量和参数来存储任何连接字符串或其他信息。请参考此文档了解如何在
    Azure 管道中安全地使用变量和参数：[https://docs.microsoft.com/bs-cyrl-ba/azure/devops/pipelines/security/inputs?view=azure-devops](https://docs.microsoft.com/bs-cyrl-ba/azure/devops/pipelines/security/inputs?view=azure-devops)：
- en: '[PRE1]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once all the tasks are updated, click on **Save**. You can save the pipeline
    in the root folder upon prompt. This should be the order of the tasks:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦所有任务更新完成，点击**保存**。在提示时，可以将管道保存在根文件夹中。任务的顺序应如下：
- en: a) **Apply Database migration script**
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) **应用数据库迁移脚本**
- en: b) **Apply Azure App Service Settings**
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) **应用 Azure App Service 设置**
- en: 'c) **Deploy Azure App Service**:'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) **部署 Azure App Service**：
- en: '![Figure 11.33 – Saving the release pipeline'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.33 – 保存发布管道'
- en: '](img/Figure_11.33_B16392.jpg)'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.33_B16392.jpg)'
- en: Figure 11.33 – Saving the release pipeline
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.33 – 保存发布管道
- en: In the pipeline, click on **+ Add** to add another stage for production. You
    can select the same Azure App Service deployment, or you can also clone your development
    environment stage. You can configure the production stage while targeting the
    production app service and SQL database instances. Your pipeline should now look
    as follows:![Figure 11.34 – Release pipeline
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在管道中，点击**+ 添加**以添加另一个用于生产的阶段。您可以选择相同的 Azure App Service 部署，也可以克隆开发环境阶段。您可以在定位生产应用服务和
    SQL 数据库实例时配置生产阶段。您的管道现在应如下所示：![图 11.34 – 发布管道
- en: '](img/Figure_11.34_B16392.jpg)'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.34_B16392.jpg)'
- en: Figure 11.34 – Release pipeline
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.34 – 发布管道
- en: Typically, you wouldn't want to auto-deploy to production. Let's modify the
    flow to include a manual approval for production deployment. Click on **Pre-Deployment
    Conditions**:![Figure 11.35 – Release pipeline trigger control
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，您不希望自动部署到生产环境。让我们修改流程，以便在生产部署之前进行手动审批。点击**预部署条件**：![图 11.35 – 发布管道触发控制
- en: '](img/Figure_11.35_B16392.jpg)'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.35_B16392.jpg)'
- en: Figure 11.35 – Release pipeline trigger control
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.35 – 发布管道触发控制
- en: Enable the **pre-deployment approval** and select at least one user to approve
    before deployment to production happens.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用**预部署审批**，并选择至少一个用户进行审批，才能在部署到生产环境之前进行批准。
- en: You can add an additional stage, such as test cases, performance benchmarks,
    and so on, and prepare the overall flow. Click **Save** once you've completed
    reviewing the pipeline.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以添加一个额外的阶段，如测试用例、性能基准等，并准备好整体流程。完成检查管道后，点击**保存**。
- en: The Azure release pipeline to deploy the application is now ready. Let's create
    a release and see whether we can get our application up and running through CI/CD
    pipelines.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，部署应用程序的 Azure 发布管道已准备就绪。让我们创建一个发布，并查看我们是否能够通过 CI/CD 管道将应用程序启动并运行。
- en: Creating a release
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建发布
- en: 'Let''s test the release pipeline by creating a release manually:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过手动创建一个发布来测试发布管道：
- en: In Azure DevOps, browse to **Releases** and click on **Create release**:![Figure
    11.36 – Create release
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure DevOps 中，浏览到**发布**并点击**创建发布**：![图 11.36 – 创建发布
- en: '](img/Figure_11.36_B16392.jpg)'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.36_B16392.jpg)'
- en: Figure 11.36 – Create release
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.36 – 创建发布
- en: Review the release details and click **Create**:![Figure 11.37 – Reviewing release
    creation
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审核发布详情并点击**创建**：![图 11.37 – 审核发布创建
- en: '](img/Figure_11.37_B16392.jpg)'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.37_B16392.jpg)'
- en: Figure 11.37 – Reviewing release creation
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.37 – 审核发布创建
- en: Clicking **Create** will start a release execution; you can review the progress
    by clicking on logs on the stage:![Figure 11.38 – Release status
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**将开始执行发布；您可以通过点击阶段上的日志来查看进度：![图 11.38 – 发布状态
- en: '](img/Figure_11.38_B16392.jpg)'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.38_B16392.jpg)'
- en: Figure 11.38 – Release status
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.38 – 发布状态
- en: 'Once the development environment deployment has completed, you should try to
    launch the app service and see whether the **ToDo** application is working well
    for you:'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一旦开发环境部署完成，你应该尝试启动应用服务，并查看**ToDo**应用程序是否正常工作：
- en: '![Figure 11.39 – The ToDo app'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![Figure 11.39 – ToDo 应用'
- en: '](img/Figure_11.39_B16392.jpg)'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.39_B16392.jpg)'
- en: Figure 11.39 – The ToDo app
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.39 – ToDo 应用
- en: 'You can try to add **to-do** items and test the application. Once you''re ready
    to approve this for production deployment, click **Approve** to start the production
    deployment:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以尝试添加**待办事项**并测试应用程序。一旦你准备好批准生产部署，点击**批准**开始生产部署：
- en: '![Figure 11.40 – Approving the production deployment'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 11.40 – 批准生产部署'
- en: '](img/Figure_11.40_B16392.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.40_B16392.jpg)'
- en: Figure 11.40 – Approving the production deployment
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: Figure 11.40 – 批准生产部署
- en: You've now completed a release and your application is now ready to be used.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经完成了发布，应用程序已经准备好使用。
- en: Trying out end-to-end CI/CD flow
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 尝试端到端 CI/CD 流程
- en: 'Now that you''ve completed setting up an end-to-end CI/CD pipeline, go ahead
    and try out the following to experience the whole flow:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经完成了端到端 CI/CD 流水线的设置，继续尝试以下操作，体验整个流程：
- en: In Azure Repos, modify the view for the home page. Go to **Repos** | **DotNetAppSQLDB**
    | **Views** | **Todos** | **index.cshtml** and modify the label from **Create
    new** to **Create New ToDo Item**:![Figure 11.41 – Modifying the app code
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure Repos 中，修改主页的视图。前往 **Repos** | **DotNetAppSQLDB** | **Views** | **Todos**
    | **index.cshtml**，并将标签从**Create new**修改为**Create New ToDo Item**：![Figure 11.41
    – 修改应用程序代码
- en: '](img/Figure_11.41_B16392.jpg)'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.41_B16392.jpg)'
- en: Figure 11.41 – Modifying the app code
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Figure 11.41 – 修改应用程序代码
- en: Commit the change in a new branch and follow through the pull request. You should
    approve and complete the pull request.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新分支中提交更改，并完成拉取请求。你应该批准并完成拉取请求。
- en: This should start an automated build pipeline execution followed through automated
    release execution.
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这应该会启动自动构建流水线执行，并通过自动发布执行进行后续操作。
- en: In the end, you should have your application updated with the change without
    having to do any manual steps except the approval task configured for production.
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最终，你应该在不需要任何手动步骤的情况下更新你的应用程序，唯一需要执行的任务是配置好的生产审批任务。
- en: Congratulations, you've now completed the setup and testing of an end-to-end
    CI/CD pipeline! In the next section, we'll set up a similar pipeline for a Kubernetes-based
    application.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，你现在已经完成了端到端 CI/CD 流水线的设置和测试！在下一节中，我们将为 Kubernetes 基础的应用程序设置类似的流水线。
- en: Setting up a CI/CD pipeline for a container-based application
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为基于容器的应用程序设置 CI/CD 流水线
- en: In this example, we'll take a container-based application and build an end-to-end
    CI/CD pipeline. We'll take a Python and Redis-based sample application for the
    purpose of this demonstration.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将采用一个基于容器的应用程序，并构建一个端到端的 CI/CD 流水线。为了演示，我们将使用一个基于 Python 和 Redis 的示例应用程序。
- en: 'In this example, we''ll be using various Azure resources in the overall solution
    architecture. This includes the following:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将在整个解决方案架构中使用各种 Azure 资源。包括以下内容：
- en: '**Azure DevOps**: CI/CD pipeline'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure DevOps**：CI/CD 流水线'
- en: '**Azure Kubernetes Service** (**AKS**): For hosting the containers'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Kubernetes 服务**（**AKS**）：用于托管容器'
- en: '**Azure Container Registry** (**ACR**): Container image storage and management'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 容器注册表**（**ACR**）：容器镜像存储和管理'
- en: Introduction to the sample app
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例应用介绍
- en: 'In this section, we''ll be using a sample application called **Azure Voting
    App**. It is a standard multi-container-based application that uses the following
    components:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用一个名为**Azure 投票应用**的示例应用。它是一个标准的基于多容器的应用，使用以下组件：
- en: '**The Azure Voting App backend**: This will be running on Redis.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 投票应用后端**：将在 Redis 上运行。'
- en: '**The Azure Voting App frontend**: Web application built with Python.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 投票应用前端**：使用 Python 构建的 Web 应用程序。'
- en: 'You can review the application code here: [https://github.com/Azure-Samples/azure-voting-app-redis](https://github.com/Azure-Samples/azure-voting-app-redis).'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里查看应用程序代码：[https://github.com/Azure-Samples/azure-voting-app-redis](https://github.com/Azure-Samples/azure-voting-app-redis)。
- en: Setting up the required infrastructure
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置所需的基础设施
- en: In order to be able to build the pipeline, first we need to set up the required
    infrastructure, including the AKS cluster and Azure container registry. We will
    be creating separate resources for the staging and production environments as
    a standard best practice; however, it is possible to use a single environment
    for both the production and development environments by using a combination of
    tags and a Kubernetes namespace.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够构建管道，首先需要设置所需的基础设施，包括 AKS 集群和 Azure 容器注册表。我们将为预发布和生产环境创建独立的资源作为标准最佳实践；然而，通过使用标签和
    Kubernetes 命名空间的组合，也可以使用单一环境来同时处理生产和开发环境。
- en: In this section, we'll be using the Azure **command-line interface** (**CLI**)
    for all infrastructure provisioning tasks.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用 Azure **命令行界面**（**CLI**）来执行所有基础设施部署任务。
- en: Creating the Azure resource group
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Azure 资源组
- en: 'Let''s start by creating an Azure resource group for organizing all the resources
    for your development and production environments:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从创建一个 Azure 资源组开始，用于组织开发和生产环境的所有资源：
- en: Log in to Azure Cloud Shell ([https://shell.azure.com](https://shell.azure.com))
    with your Azure credentials.
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的 Azure 凭据登录 Azure Cloud Shell（[https://shell.azure.com](https://shell.azure.com)）。
- en: If this is your first time logging in to Azure Cloud Shell, it will prompt you
    to create an Azure storage account. Select your subscription and click **Create
    Storage**.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这是你第一次登录 Azure Cloud Shell，它会提示你创建一个 Azure 存储账户。选择你的订阅并点击**创建存储**。
- en: Select **Bash** on the shell type selection.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 shell 类型选择中选择**Bash**。
- en: 'Run the following command to list all your subscriptions:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以列出所有订阅：
- en: '[PRE2]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you need to select a specific subscription for provisioning resources, run
    the following command:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果需要为资源提供指定订阅，请运行以下命令：
- en: '[PRE3]'
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create a resource named `Contoso-Voting-Stage` by running the following command.
    You can choose to upload the location with a region of your choice:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令创建名为`Contoso-Voting-Stage`的资源。你可以选择上传一个自己选择区域的位置：
- en: '[PRE4]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Repeat the resource group creation command to create another resource group
    named `Contoso-Voting-Prod` for the production environment.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复资源组创建命令，创建另一个名为`Contoso-Voting-Prod`的资源组，用于生产环境。
- en: You have now completed the required resource groups. In the next step, you'll
    create an Azure Kubernetes cluster.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经完成了所需的资源组创建。在接下来的步骤中，你将创建一个 Azure Kubernetes 集群。
- en: Creating an Azure Kubernetes service
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Azure Kubernetes 服务
- en: AKS is a managed Kubernetes offering from Microsoft Azure. There are two types
    of hosts in Kubernetes clusters – master (aka the control plane) and nodes. In
    the world of AKS, there's no master for end users. Microsoft creates and manages
    master nodes and hides them away from end users. As a user, you only deploy AKS
    nodes (Kubernetes nodes) in your subscription, whereas the configuration of Kubernetes
    and the joining of Microsoft-managed Kubernetes masters happens in the background.
    With AKS, you only pay for the nodes' infrastructure costs; masters are provided
    for free by Microsoft.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: AKS 是微软 Azure 提供的托管 Kubernetes 服务。在 Kubernetes 集群中有两种类型的主机——主节点（也称为控制平面）和节点。在
    AKS 中，终端用户并不直接使用主节点。微软会创建并管理主节点，并将其隐藏在终端用户之外。作为用户，你只需在自己的订阅中部署 AKS 节点（Kubernetes
    节点），而 Kubernetes 配置和微软托管的 Kubernetes 主节点的连接则在后台进行。使用 AKS 时，你只需为节点的基础设施费用付费；主节点由微软免费提供。
- en: We will be using AKS to host our containers.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 AKS 来托管我们的容器。
- en: 'Let''s start by creating an AKS cluster:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从创建一个 AKS 集群开始：
- en: Log in to Cloud Shell with your Azure credentials.
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的 Azure 凭据登录 Cloud Shell。
- en: 'Run the following command to create an AKS cluster with the default configuration
    and latest version:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以创建一个具有默认配置和最新版本的 AKS 集群：
- en: '[PRE5]'
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'It may take up to 10 minutes for the AKS cluster to be ready. You can review
    the status by running the following command:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AKS 集群可能需要最多 10 分钟才能准备好。你可以通过运行以下命令来查看状态：
- en: '[PRE6]'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Once your cluster is ready, you can get the Kubernetes authentication configuration
    in your Cloud Shell session by running the following command:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你的集群准备就绪，你可以通过运行以下命令在 Cloud Shell 会话中获取 Kubernetes 认证配置：
- en: '[PRE7]'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can try running `kubectl` commands now to interact with Kubernetes. Run
    the following command to get a list of all the Kubernetes nodes:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你可以尝试运行`kubectl`命令与 Kubernetes 进行交互。运行以下命令以获取所有 Kubernetes 节点的列表：
- en: '[PRE8]'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Your Azure Kubernetes cluster is now ready; please repeat the process to create
    another AKS cluster for the production environment.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的 Azure Kubernetes 集群已经准备好；请重复该过程为生产环境创建另一个 AKS 集群。
- en: Creating an Azure container registry
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建 Azure 容器注册表
- en: ACR is a private Docker container registry that's hosted and managed by Microsoft
    Azure. ACR is fully compatible with Docker and works in the same way, except that
    it's managed, hosted, and secured by Microsoft. We will be using ACR to store
    our container images.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: ACR 是一个由 Microsoft Azure 托管和管理的私有 Docker 容器注册表。ACR 完全兼容 Docker，并且工作方式与 Docker
    相同，唯一的区别是它由微软管理、托管并提供安全保障。我们将使用 ACR 来存储我们的容器镜像。
- en: 'Let''s create a container registry for the project:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为该项目创建一个容器注册表：
- en: 'Log in to Azure Cloud Shell and run the following command to create a container
    registry:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Azure Cloud Shell 并运行以下命令来创建容器注册表：
- en: '[PRE9]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once your container registry is ready, you can get the status and details of
    it by running the following command:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您的容器注册表准备好，您可以通过运行以下命令获取其状态和详细信息：
- en: '[PRE10]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Integrating ACR with AKS
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成 ACR 与 AKS
- en: AKS needs to have permissions to access the container images from ACR in order
    to run the application. Let's enable access for AKS to interact with our ACR.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: AKS 需要有权限访问 ACR 中的容器镜像才能运行应用。让我们启用 AKS 与 ACR 进行交互的权限。
- en: 'Run the following command to integrate AKS with our ACR:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令将 AKS 与我们的 ACR 集成：
- en: '[PRE11]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Now that our infrastructure is ready, we'll begin with setting up the code repository
    for the application.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的基础设施已经准备好，我们将开始为应用设置代码仓库。
- en: Setting up Azure Repos for the voting application
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Azure Repos 用于投票应用
- en: 'In this section, we''ll create a new Azure DevOps project and import the **voting
    app** source code in Azure Repos:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将创建一个新的 Azure DevOps 项目并导入 Azure Repos 中的**投票应用**源代码：
- en: Log in to Azure DevOps and create a new project named `Contoso Voting App` or
    any other name of your choice.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Azure DevOps 并创建一个名为 `Contoso Voting App` 或您选择的其他名称的新项目。
- en: 'Navigate to Azure Repos and click **Import a Git repository**. Please import
    the Azure voting app repository from: [https://github.com/Azure-Samples/azure-voting-app-redis](https://github.com/Azure-Samples/azure-voting-app-redis):'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 Azure Repos 并点击**导入 Git 仓库**。请从以下链接导入 Azure 投票应用仓库：[https://github.com/Azure-Samples/azure-voting-app-redis](https://github.com/Azure-Samples/azure-voting-app-redis)：
- en: '![Figure 11.42 – Importing the repository'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.42 – 导入仓库'
- en: '](img/Figure_11.42_B16392.jpg)'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.42_B16392.jpg)'
- en: Figure 11.42 – Importing the repository
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.42 – 导入仓库
- en: Now that our repo is ready, let's start with a build pipeline.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的仓库已经准备好，接下来让我们从构建管道开始。
- en: Setting up the CI pipeline
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 CI 管道
- en: 'The build pipeline will be responsible for building the container image and
    pushing them in ACR. Let''s get started:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 构建管道将负责构建容器镜像并将其推送到 ACR。让我们开始吧：
- en: Log in to Azure DevOps and open **Contoso Voting App Project**.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Azure DevOps 并打开**Contoso Voting App 项目**。
- en: Navigate to **Pipeline** and click **Create Pipeline**.
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**管道**并点击**创建管道**。
- en: Click on **Use the Classic Editor** for creating the pipeline with the UI.
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**使用经典编辑器**通过 UI 创建管道。
- en: Select the source Azure repo that you created in the previous section as the
    source for the pipeline.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您在上一部分中创建的源 Azure 仓库作为管道的源。
- en: For the template, select **Docker Container** as the template type:![Figure
    11.43 – Docker container pipeline template
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于模板，选择**Docker 容器**作为模板类型：![图 11.43 – Docker 容器管道模板
- en: '](img/Figure_11.43_B16392.jpg)'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.43_B16392.jpg)'
- en: Figure 11.43 – Docker container pipeline template
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.43 – Docker 容器管道模板
- en: In the `root/azure-vote/Dockerfile` repo.
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `root/azure-vote/Dockerfile` 仓库中。
- en: 'f) Check **Include Latest Tag**:'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: f) 勾选**包含最新标签**：
- en: '![Figure 11.44 – Push an image'
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.44 – 推送镜像'
- en: '](img/Figure_11.44_B16392.jpg)'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.44_B16392.jpg)'
- en: Figure 11.44 – Push an image
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.44 – 推送镜像
- en: In the **Push an image** task, select the Azure subscription and ACR again,
    with the task being **Push an image**. Be sure to check **Include Latest Tag**.
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**推送镜像**任务中，重新选择 Azure 订阅和 ACR，并确保任务为**推送镜像**。请确保勾选**包含最新标签**。
- en: Once you're done, review both tasks and click **Save and Run** to start the
    pipeline job execution.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，审查两个任务并点击**保存并运行**以开始管道作业执行。
- en: Review the job logs to see the detailed information about image building and
    pushing to ACR.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查作业日志以查看有关镜像构建和推送到 ACR 的详细信息。
- en: Upon completion, navigate to the Azure portal and open the container registry
    you created earlier.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，导航到 Azure 门户并打开您之前创建的容器注册表。
- en: Navigate to **Repositories**; you should see a new image being created there.
    Let's look at the image and find out the image name to update in our application
    deployment configuration:![Figure 11.45 – Container image in ACR
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**仓库**；您应该能看到一个新镜像在那里被创建。让我们查看该镜像，找出我们在应用程序部署配置中需要更新的镜像名称：![图 11.45 – ACR
    中的容器镜像
- en: '](img/Figure_11.45_B16392.jpg)'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.45_B16392.jpg)'
- en: Figure 11.45 – Container image in ACR
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.45 – ACR 中的容器镜像
- en: Make a note of the image pull connection string. We'll need it in the next exercise:![Figure
    11.46 – Image syntax in ACR
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下镜像拉取连接字符串。我们将在下一个练习中使用它：![图 11.46 – ACR 中的镜像语法
- en: '](img/Figure_11.46_B16392.jpg)'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.46_B16392.jpg)'
- en: Figure 11.46 – Image syntax in ACR
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.46 – ACR 中的镜像语法
- en: 'Our pipeline is now ready and tested, so let''s go back and enable CI in the
    pipeline trigger configuration:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的管道现在已准备好并测试完成，所以让我们返回并在管道触发器配置中启用 CI：
- en: '![Figure 11.47 – Enabling CI'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.47 – 启用 CI'
- en: '](img/Figure_11.47_B16392.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.47_B16392.jpg)'
- en: Figure 11.47 – Enabling CI
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.47 – 启用 CI
- en: Now that our CI pipeline is ready, let's start with the deployment pipeline.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的 CI 管道已经准备好，让我们从部署管道开始。
- en: Setting up the CD pipeline
  id: totrans-326
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 CD 管道
- en: In this section, we'll set up the deployment pipeline, which will deploy the
    application code to AKS and update when necessary. Azure Pipelines provides native
    integration with Kubernetes clusters hosted on-premises and in the cloud.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将设置部署管道，该管道将把应用程序代码部署到 AKS，并在需要时进行更新。Azure Pipelines 提供与托管在本地和云中的 Kubernetes
    集群的本地集成。
- en: Updating the Kubernetes deployment manifest file
  id: totrans-328
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更新 Kubernetes 部署清单文件
- en: In the Kubernetes world, application deployment is managed through manifest
    files written in JSON or YAML. The deployment file for this sample application
    is already included in the Azure repo. You can review the deployment configuration
    by reviewing the `azure-vote-all-in-one-redis.yaml` file in the Azure Repos root.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Kubernetes 的世界里，应用程序部署是通过编写 JSON 或 YAML 格式的清单文件来管理的。此示例应用程序的部署文件已经包含在 Azure
    仓库中。您可以通过查看 Azure Repos 根目录中的`azure-vote-all-in-one-redis.yaml`文件来检查部署配置。
- en: 'By default, the deployment manifest is configured to use the Microsoft-provided
    container image. We''ll need to update it to start using our own custom image.
    Let''s get started:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，部署清单已配置为使用微软提供的容器镜像。我们需要更新它，开始使用我们自己的自定义镜像。让我们开始吧：
- en: Navigate to `azure-vote-all-in-one-redis.yaml` file.
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到`azure-vote-all-in-one-redis.yaml`文件。
- en: Click on **Edit** at the top-right corner of the file editor.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件编辑器的右上角点击**编辑**。
- en: 'Look for the following part of the deployment manifest. This redirects the
    container engine to use a Microsoft-provided Docker image:'
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找部署清单中的以下部分。这会将容器引擎重定向为使用微软提供的Docker镜像：
- en: '[PRE12]'
  id: totrans-334
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Replace the value with your own container registry and image name. It should
    look like the one given as follows. You should specify the latest tag to ensure
    that the newest image is always used:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用您自己的容器注册表和镜像名称替换该值。它应该像下面给出的示例一样。您应该指定最新的标签，以确保始终使用最新的镜像：
- en: '[PRE13]'
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Commit the changes to save the deployment manifest file.
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交更改以保存部署清单文件。
- en: Your application manifest is now ready for deployment.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您的应用程序清单已经准备好进行部署。
- en: Setting up the release pipeline
  id: totrans-339
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置发布管道
- en: 'The release pipeline will be applying the deployment manifest in the Kubernetes
    cluster and perform image update tasks. Let''s build a pipeline to automate the
    deployment:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 发布管道将在 Kubernetes 集群中应用部署清单，并执行镜像更新任务。让我们构建一个管道来自动化部署：
- en: Log in to **Azure DevOps** | **Pipelines** | **Releases**.
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到**Azure DevOps** | **管道** | **发布**。
- en: Create a new release pipeline. Select the **Deploy to a Kubernetes cluster**
    template:![Figure 11.48 – The Deploy to a Kubernetes cluster template
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的发布管道。选择**Deploy to a Kubernetes cluster**模板：![图 11.48 – Deploy to a Kubernetes
    cluster 模板
- en: '](img/Figure_11.48_B16392.jpg)'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.48_B16392.jpg)'
- en: Figure 11.48 – The Deploy to a Kubernetes cluster template
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.48 – Deploy to a Kubernetes cluster 模板
- en: Update the stage name to `Development Environment`.
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将阶段名称更新为`Development Environment`。
- en: Let's start with adding artifacts. Click on **Add** in **artifacts**.
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从添加工件开始。在**工件**中点击**添加**。
- en: In **Artifact**, select the Azure repo and choose the repository we imported.
    Click **Add**:![Figure 11.49 – Adding an artifact to a pipeline
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Artifact**中，选择 Azure 仓库并选择我们导入的仓库。点击**添加**：![图 11.49 – 向管道中添加工件
- en: '](img/Figure_11.49_B16392.jpg)'
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.49_B16392.jpg)'
- en: Figure 11.49 – Adding an artifact to a pipeline
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.49 – 向管道中添加工件
- en: In the `Deploy to Kubernetes`.
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Deploy to Kubernetes`中。
- en: 'b) `azure-vote-all-in-one-redis.yaml`). Browse to your default directory and
    select the deployment YAML file. We can define additional options, such as Kubernetes
    secrets and config maps, if required. Click **Save** after verifying that all
    the configurations are valid:'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `azure-vote-all-in-one-redis.yaml`）。浏览到您的默认目录并选择部署 YAML 文件。如果需要，我们可以定义其他选项，例如
    Kubernetes 秘密和配置映射。验证所有配置有效后，点击**保存**：
- en: '![Figure 11.51 – Selecting the deployment YAML'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.51 – 选择部署 YAML'
- en: '](img/Figure_11.51_B16392.jpg)'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.51_B16392.jpg)'
- en: Figure 11.51 – Selecting the deployment YAML
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.51 – 选择部署 YAML
- en: 'e) Review the task configurations and click **Save** to save the progress so
    far:'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e) 查看任务配置并点击**保存**以保存到目前为止的进度：
- en: '![Figure 11.52 – Task configuration'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 11.52 – 任务配置'
- en: '](img/Figure_11.52_B16392.jpg)'
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.52_B16392.jpg)'
- en: Figure 11.52 – Task configuration
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.52 – 任务配置
- en: Now, we'll add another step in the pipeline so that we can update the images
    in AKS after deployment. This will ensure that, at every release, Kubernetes is
    pulling the latest images. Click on the **+** sign to add another **kubectl**
    task to the pipeline.
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将在管道中添加另一个步骤，以便在部署后更新 AKS 中的镜像。这将确保每次发布时，Kubernetes 都会拉取最新的镜像。点击**+**号，向管道中添加另一个**kubectl**任务。
- en: Configure the task so that it uses the same Kubernetes connection. Under `image
    deployments/azure-vote-front azure-vote-front=youracrname.azurecr.io/contosovotingapp:latest`
    as the argument. In a production deployment, you may not want to use the latest
    tag in your pipeline and rather refer to the version tag generated using the build
    pipeline. This will help you manage your deployments with specific versions and
    roll back easily if you wish to.
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置任务，使其使用相同的 Kubernetes 连接。在参数中使用`image deployments/azure-vote-front azure-vote-front=youracrname.azurecr.io/contosovotingapp:latest`。在生产部署中，您可能不希望在管道中使用最新标签，而是应引用使用构建管道生成的版本标签。这样可以帮助您管理特定版本的部署，并且在需要时可以轻松回滚。
- en: Once you're ready, save the pipeline and create a release to test the deployment
    pipeline.
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦准备就绪，保存管道并创建一个发布，以测试部署管道。
- en: Review the release logs to understand the deployment steps and flow.
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看发布日志以了解部署步骤和流程。
- en: Once it's completed successfully, go back to editing the pipeline again and
    enable continuous deployment:![Figure 11.53 – Enabling continuous deployment
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦成功完成，返回编辑管道并启用持续部署：![图 11.53 – 启用持续部署
- en: '](img/Figure_11.53_B16392.jpg)'
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.53_B16392.jpg)'
- en: Figure 11.53 – Enabling continuous deployment
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.53 – 启用持续部署
- en: 'With that, our build and release configuration with full CI/CD automation is
    ready. Let''s look at the AKS cluster to ensure that our application has been
    deployed properly and is accessible (with the release that we just did):'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 至此，我们的构建和发布配置已完成，具备了完整的 CI/CD 自动化。接下来查看 AKS 集群，确保我们的应用已正确部署并且可以访问（使用我们刚刚发布的版本）：
- en: Connect to your AKS cluster using the Azure shell.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Azure shell 连接到您的 AKS 集群。
- en: Run `kubectl get pods` and `kubectl get services`:![Figure 11.54 – The kubectl
    results
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`kubectl get pods`和`kubectl get services`：![图 11.54 – kubectl 结果
- en: '](img/Figure_11.54_B16392.jpg)'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.54_B16392.jpg)'
- en: Figure 11.54 – The kubectl results
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.54 – kubectl 结果
- en: 'Make a note of the public IP of the `azure-vote-front` application. You can
    try launching the public IP to check that the application is working as expected:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下`azure-vote-front`应用的公共 IP。您可以尝试访问该公共 IP，以检查应用是否按预期运行：
- en: '![Figure 11.55 – Voting app launched'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.55 – 投票应用已启动'
- en: '](img/Figure_11.55_B16392.jpg)'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_11.55_B16392.jpg)'
- en: Figure 11.55 – Voting app launched
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.55 – 投票应用已启动
- en: Next, we will be simulating an end-to-end CI/CD experience for this application.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将为这个应用模拟一次端到端的 CI/CD 体验。
- en: Simulating an end-to-end CI/CD experience
  id: totrans-376
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟端到端的 CI/CD 体验
- en: 'In the previous sections, we set up a CI/CD pipeline. Let''s try to play around
    with it and experience the overall flow. Let''s start by updating the title of
    the application from **Azure Voting App** to **Contoso Voting App**:'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分中，我们设置了 CI/CD 管道。让我们尝试操作它，体验整体流程。首先，从**Azure 投票应用**更新应用标题为**Contoso 投票应用**：
- en: Browse to **Azure Repos** | **Files** | **azure-vote** | **azure-vote** | **config_file.cfg**
    and click **Edit**.
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览到**Azure Repos** | **文件** | **azure-vote** | **azure-vote** | **config_file.cfg**并点击**编辑**。
- en: Change the value of **Title** from **Azure Voting App** to **Contoso Voting
    App**:![Figure 11.56 – Updating the app name
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**标题**的值从**Azure 投票应用**更改为**Contoso 投票应用**：![图 11.56 – 更新应用名称
- en: '](img/Figure_11.56_B16392.jpg)'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_11.56_B16392.jpg)'
- en: Figure 11.56 – Updating the app name
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.56 – 更新应用名称
- en: Commit the changes through a pull request process.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过拉取请求流程提交更改。
- en: Once the pull request is completed, a build pipeline will trigger that will
    build the Docker images and push to ACR.
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦拉取请求完成，构建流水线将会触发，构建 Docker 镜像并推送到 ACR。
- en: Once the build pipeline is completed, it'll trigger the release pipeline to
    start another release. In the end, you should see that your web application is
    updated with the title.
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦构建流水线完成，它将触发发布流水线以启动另一个发布。最终，你应该能看到你的 Web 应用已更新标题。
- en: This concludes setting up a CI/CD pipeline for container-based infrastructure
    hosted on AKS.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 本文到此结束，关于在 AKS 上托管的基于容器的基础设施的 CI/CD 流水线设置。
- en: Azure Architecture Center for DevOps
  id: totrans-386
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 的 Azure 架构中心
- en: Azure Architecture Center is a centralized place to take guidance for architecting
    solutions on Azure using established patterns and practices. There are several
    sample architectures available around DevOps.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 架构中心是一个集中式平台，提供关于在 Azure 上使用已建立的模式和实践来构建解决方案的指导。关于 DevOps，有多个示例架构可供参考。
- en: 'You can access Azure Architecture Center here: [https://docs.microsoft.com/en-us/azure/architecture/](https://docs.microsoft.com/en-us/azure/architecture/).'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里访问 Azure 架构中心：[https://docs.microsoft.com/en-us/azure/architecture/](https://docs.microsoft.com/en-us/azure/architecture/)。
- en: 'Refer to the following links to learn more about planning the right architecture
    for DevOps across various infrastructure and application scenarios:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下链接，了解更多关于在各种基础设施和应用场景中规划适当 DevOps 架构的内容：
- en: 'Azure DevOps: [https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-dotnet-webapp](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-dotnet-webapp)'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure DevOps：[https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-dotnet-webapp](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-dotnet-webapp)
- en: 'DevOps with containers: [https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-with-aks](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-with-aks)'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器的 DevOps：[https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-with-aks](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-with-aks)
- en: 'Microservices with AKS and Azure DevOps: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/microservices-with-aks](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/microservices-with-aks)'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 AKS 和 Azure DevOps 构建微服务：[https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/microservices-with-aks](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/microservices-with-aks)
- en: 'Secure DevOps for AKS: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/secure-devops-for-kubernetes](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/secure-devops-for-kubernetes)'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS 的安全 DevOps：[https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/secure-devops-for-kubernetes](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/secure-devops-for-kubernetes)
- en: 'Azure DevOps CI/CD pipelines for chatbots: [https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-cicd-chatbot](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-cicd-chatbot)'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于聊天机器人 Azure DevOps CI/CD 流水线：[https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-cicd-chatbot](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/devops-cicd-chatbot)
- en: 'CI/CD for Azure VMs: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-azure-vms](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-azure-vms)'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 虚拟机的 CI/CD：[https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-azure-vms](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-azure-vms)
- en: 'CI/CD for Azure web apps: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/azure-devops-continuous-integration-and-continuous-deployment-for-azure-web-apps](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/azure-devops-continuous-integration-and-continuous-deployment-for-azure-web-apps)'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Web 应用的 CI/CD：[https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/azure-devops-continuous-integration-and-continuous-deployment-for-azure-web-apps](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/azure-devops-continuous-integration-and-continuous-deployment-for-azure-web-apps)
- en: 'CI/CD for containers: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-containers](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-containers)'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器的 CI/CD：[https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-containers](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/cicd-for-containers)
- en: 'Container CI/CD using Jenkins and Kubernetes on AKS: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/container-cicd-using-jenkins-and-kubernetes-on-azure-container-service](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/container-cicd-using-jenkins-and-kubernetes-on-azure-container-service)'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在 AKS 上使用 Jenkins 和 Kubernetes 进行容器 CI/CD: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/container-cicd-using-jenkins-and-kubernetes-on-azure-container-service](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/container-cicd-using-jenkins-and-kubernetes-on-azure-container-service)'
- en: 'DevSecOps in Azure: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/devsecops-in-azure](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/devsecops-in-azure)'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Azure 中的 DevSecOps: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/devsecops-in-azure](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/devsecops-in-azure)'
- en: 'DevTest deployment for testing IaaS solutions: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-iaas](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-iaas)'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '用于测试 IaaS 解决方案的 DevTest 部署: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-iaas](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-iaas)'
- en: 'DevTest deployment for testing PaaS solutions: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-paas](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-paas)'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '用于测试 PaaS 解决方案的 DevTest 部署: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-paas](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-paas)'
- en: 'DevTest deployment for testing microservice solutions: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-microservice](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-microservice)'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '用于测试微服务解决方案的 DevTest 部署: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-microservice](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-microservice)'
- en: 'DevTest Image Factory: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-image-factory](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-image-factory)'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'DevTest 镜像工厂: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-image-factory](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/dev-test-image-factory)'
- en: 'Immutable infrastructure CI/CD using Jenkins and Terraform on Azure virtual
    architecture overview: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/immutable-infrastructure-cicd-using-jenkins-and-terraform-on-azure-virtual-architecture-overview](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/immutable-infrastructure-cicd-using-jenkins-and-terraform-on-azure-virtual-architecture-overview)'
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '使用 Jenkins 和 Terraform 在 Azure 上进行不可变基础架构 CI/CD 的虚拟架构概述: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/immutable-infrastructure-cicd-using-jenkins-and-terraform-on-azure-virtual-architecture-overview](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/immutable-infrastructure-cicd-using-jenkins-and-terraform-on-azure-virtual-architecture-overview)'
- en: 'DevOps in a hybrid environment: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps)'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在混合环境中的 DevOps: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps)'
- en: 'Java CI/CD using Jenkins and Azure web apps: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps)'
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '使用 Jenkins 和 Azure Web 应用进行 Java CI/CD: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/java-cicd-using-jenkins-and-azure-web-apps)'
- en: 'Run a Jenkins server on Azure: [https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/jenkins](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/jenkins)'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在 Azure 上运行 Jenkins 服务器: [https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/jenkins](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/apps/jenkins)'
- en: 'SharePoint Farm for development testing: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/sharepoint-farm-devtest](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/sharepoint-farm-devtest)'
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '用于开发测试的 SharePoint Farm: [https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/sharepoint-farm-devtest](https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/sharepoint-farm-devtest)'
- en: 'Sharing location in real time using low-cost serverless Azure services: [https://docs.microsoft.com/en-us/azure/architecture/example-scenario/signalr/](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/signalr/)'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用低成本无服务器的 Azure 服务实时共享位置：[https://docs.microsoft.com/en-us/azure/architecture/example-scenario/signalr/](https://docs.microsoft.com/en-us/azure/architecture/example-scenario/signalr/)
- en: Summary
  id: totrans-410
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at a .NET and SQL-based application and set up a
    CI/CD pipeline for it using Azure DevOps. We looked at how you manage your production
    and staging environments through approval workflows.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们分析了一个基于 .NET 和 SQL 的应用程序，并使用 Azure DevOps 为其设置了 CI/CD 管道。我们还探讨了如何通过审批工作流管理生产和预发布环境。
- en: Similarly, we also looked at a container-based application and did a walkthrough
    of setting up an end-to-end CI/CD pipeline for the application using ACR and AKS.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们还分析了一个基于容器的应用程序，并演示了如何使用 ACR 和 AKS 设置端到端的 CI/CD 管道。
- en: In the end, we talked about Azure Architecture Center, which can be referred
    to while planning your DevOps architecture.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们讨论了 Azure 架构中心，在规划 DevOps 架构时可以参考此资源。
- en: This was the final chapter, and we hope you have enjoyed reading this book!
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最后一章，我们希望你喜欢阅读这本书！
