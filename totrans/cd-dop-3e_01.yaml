- en: The Evolution of Software Delivery
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件交付的演变
- en: As described in the preface, **Continuous Delivery** (**CD**) and DevOps are
    complementary ways of working. The former gives anyone who delivers customer value
    via software the ability to do so rapidly, consistently, and—as the name implies—continuously.
    The latter helps harmonize the teams that deliver and support said software. Both
    approaches can help you to optimize, streamline, and improve the way you work,
    and ultimately how you deliver value by shipping quality software.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如前言所述，**持续交付**（**CD**）和DevOps是互补的工作方式。前者使任何通过软件交付客户价值的人能够迅速、一致地，并且—正如名字所示—持续地完成交付。后者则有助于协调交付和支持该软件的团队。两者都能帮助你优化、精简并改进工作方式，最终提高通过交付高质量软件来传递价值的能力。
- en: It should be pointed out that the true meaning of these approaches have been
    blurred over the past decade—be that by tech press misunderstanding or recruitment
    businesses wanting to add 10% on salary rates, or software vendors and consultancies
    wanting to make their fortune by jumping on the bandwagon.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 需要指出的是，过去十年中，这些方法的真正意义已经被模糊化—无论是技术媒体的误解，还是招聘公司为了提高薪资而夸大其词，或者软件供应商和咨询公司希望通过跟风来赚取财富。
- en: 'I have summarized what CD and DevOps **are**, but before we proceed, it may
    help if I highlight what they **are not**:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经总结了CD和DevOps的**定义**，但在继续之前，可能有助于我强调它们**并非**什么：
- en: Continuous delivery and continuous deployment are not the same—the former focuses
    on business value and the latter is the mechanism of shipping software
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续交付和持续部署并不相同——前者关注的是商业价值，而后者是交付软件的机制。
- en: A DevOps engineer is not a magical wizard. Software engineers and DevOps engineers
    are basically the same—the former creates text files that are used to create software
    assets and the latter creates text files that create environments and configuration
    to run said software
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps工程师不是魔法师。软件工程师和DevOps工程师本质上是一样的——前者创建用于生成软件资产的文本文件，后者创建用于生成运行该软件所需环境和配置的文本文件。
- en: DevOps does not replace traditional system operations activities and approaches—it
    extends, complements, and enhances them
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps并未取代传统的系统运维活动和方法——它扩展、补充并增强了这些活动。
- en: DevOps does not remove the need for ensuring your software, and the environments
    in which they run are highly secure—although this can ease the adoption and implementation
    of SecOps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps并不消除确保软件及其运行环境高度安全的需求——尽管它可以促进SecOps的采纳和实施。
- en: CD and DevOps are not the silver bullet to remove all of your process and business
    issues, although they can help reduce the overall number
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CD和DevOps并不是解决所有流程和业务问题的灵丹妙药，尽管它们能帮助减少整体问题的数量。
- en: One thing you need to take into account is that almost all successful software
    businesses go through a number of phases of evolution. They normally start life
    as a small highly-focused team with good ideas, plenty of ambition, and some investment.
    As they build their market share, reach, and revenue, a period of rapid growth
    normally follows both in terms of workforce and spend. As the business matures
    and becomes established, they transition to the next phase of either continued
    and substantial growth to keep ahead of the competition, or make themselves a
    target for acquisition—this usually depends on how quickly investors want to see
    a return.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要考虑的一点是，几乎所有成功的软件公司都会经历多个演变阶段。它们通常从一个小而专注的团队开始，拥有很好的创意、雄心壮志和一些投资。随着市场份额、覆盖范围和收入的增长，通常会出现一个快速增长的阶段，体现在员工和支出的增加上。随着公司成熟并且站稳脚跟，它们会进入下一阶段，要么继续大规模增长以保持竞争优势，要么成为并购的目标——这通常取决于投资者希望多快看到回报。
- en: It's also inevitable that as a business goes through this evolution, the day-to-day
    business processes will become more complex, which in turn leads to complexity
    and pain in terms of how software is delivered.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，也不可避免地，随着业务的演变，日常的业务流程会变得更加复杂，这反过来会导致软件交付的复杂性和困难。
- en: The adoption of CD and DevOps can assist in reducing this complexity and pain;
    however, the effectiveness and benefits a business can reap are very much dependent
    on where the business sits on the evolutionary scale. If you are off the mark,
    then adoption can be more trouble than it is worth, and you may end up making
    things worse for the overall business. Not only that, but business, are strange
    and unique creatures—especially those whose raison d'etre is delivering software
    solutions—and no two are the same; therefore, the adoption needs to be uniquely
    tailored to fit.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: CD（持续交付）和DevOps的采用可以帮助减少这种复杂性和痛苦；然而，企业可以获得的效果和好处在很大程度上取决于企业在进化阶梯上的位置。如果你偏离了目标，采用这些方法可能反而会带来更多麻烦，甚至可能使整体业务变得更糟。不仅如此，企业是奇特且独特的存在——尤其是那些以提供软件解决方案为生的企业——没有两家企业是相同的；因此，采用这些方法需要量身定制，才能切合实际。
- en: 'The topics we will cover in this chapter are as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖的主题如下：
- en: A more detailed explanation of the various phases of the evolution of software
    delivery
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对软件交付进化各个阶段的更详细解释
- en: The positives and negatives of each phase
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个阶段的优点和缺点
- en: How you can ascertain which phase you are in
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何确定你处于哪个阶段
- en: The advantages—some unforeseen—that can come from a CD and DevOps way of working
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CD和DevOps工作方式可能带来的未曾预见的优势
- en: To make it a little easier to understand what all of this actually means, we'll
    now dig a little deeper into these phases by following the evolution of a typical
    software-based business, called ACME systems.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更容易理解这些实际意义，我们现在将通过追踪一个典型的软件公司——ACME系统的进化过程，深入探讨这些阶段。
- en: ACME systems – evolution phase 1.0
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ACME系统——进化阶段1.0
- en: 'ACME started out with a couple of things in common with the many thousands
    of small software businesses scattered around the globe: it had some good ideas
    and a saw gap in the market that it could exploit to make its fortune. It had
    a relatively small amount of cash so it needed to move fast to be able to survive
    and it needed to quickly entice, enlist, and retain customers at all costs. It
    did this by delivering what the customer wants just before the customer needs
    it. Deliver too soon, and it may have wasted money on building solutions that
    the customer decides they no longer want. Deliver too late, and someone else may
    well have taken the company''s market share—and the revenue—away. The keyword
    here is deliver.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: ACME起步时与全球成千上万的小型软件公司有一些共同点：它有一些不错的创意，并且看到了市场中的一个可以利用的空白，从而可以借此发财。它的资金相对较少，因此需要快速行动才能生存下去，并且必须不惜一切代价迅速吸引、招募和留住客户。它通过在客户需要之前交付他们想要的产品来实现这一目标。如果交付过早，可能会浪费资金构建客户最终决定不再需要的解决方案；如果交付过晚，别人可能已经抢走了公司的市场份额——以及收入。这里的关键词是交付。
- en: 'As a small start-up, in the early days, the going is slow and the work is hard:
    lots of R&D, frantically-built pre-sales prototypes, quick and dirty deliveries,
    and unrealistic deadlines. After many long days, nights, weeks, months, and weekends,
    things actually start to come together. The customer base starts to grow and the
    orders—and revenue—start rolling in. After a while, the number of employees are
    in double figures and the founders have become directors.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一家小型初创公司，在初期，进展缓慢，工作艰难：大量的研发，拼命构建的预售原型，快速且粗糙的交付，以及不切实际的截止日期。在经历了许多漫长的日子、夜晚、周末和几个月之后，事情终于开始有了起色。客户群体开始增长，订单和收入也开始滚滚而来。过了一段时间，员工人数达到了两位数，创始人也变成了董事。
- en: 'So, what has this got to do with CD or DevOps? Well, everything really. The
    culture, default behaviors, and engineering practices of a small software house
    are what would be classed as pretty good in terms of CD and DevOps. For example:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这与CD或DevOps有什么关系呢？实际上，关系非常大。一个小型软件公司的文化、默认行为和工程实践，在CD和DevOps方面被视为相当不错。例如：
- en: There are next to no barriers between developers and the operations teams—in
    fact, they are generally one and the same
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员与运维团队之间几乎没有任何障碍——事实上，他们通常是同一个团队
- en: Developers have full access to the production environment and can closely monitor
    their software
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发人员可以完全访问生产环境，并能够密切监控他们的软件
- en: All areas of the business are focused on the same thing, that being to get software
    into the production environment a quickly as possible, thus delighting customers
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 业务的所有领域都专注于同一目标，即尽可能快速地将软件投入生产环境，从而让客户满意。
- en: Speed of delivery is crucial
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交付速度至关重要
- en: If things break, everyone swarms around to help fix the problem—even out of
    hours
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果出现故障，每个人都会聚集起来帮助修复问题——即使是非工作时间
- en: The software evolves quickly and features are added in incremental chunks
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件快速演进，特性以增量方式添加
- en: The ways of working are normally very agile
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作方式通常是非常敏捷的
- en: Communication and collaboration across the business is efficient and, for the
    most part, effective
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨业务部门的沟通和协作高效且大多数情况下有效
- en: 'There is a reason for stating that the culture, default behaviors, and engineering
    practices of a small software house would be classed as pretty good rather than
    ideal. This is because there are many flaws in the way a small software business
    typically has to operate to stay alive:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 提出小型软件公司文化、默认行为和工程实践属于“相当好”而非“理想”的原因是，小型软件公司通常必须以某种方式运作以生存，这其中有很多缺陷：
- en: Corners will be cut to hit deadlines, which compromises software design, quality,
    and elegance
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了赶上截止日期，常常会削减角落，导致软件设计、质量和优雅性受到妥协
- en: Application security best practices are given short shrift or even ignored
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用安全最佳实践常常被忽视或根本不予考虑
- en: Engineering best practices are compromised to hit deadlines
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了赶上截止日期，工程最佳实践常常被妥协
- en: The concept of technical debt is pretty much ignored
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术债务的概念几乎被忽视
- en: Testing won't be in the forefront of the developer's mind (even if it were,
    there may not be enough time to work in a test-first way)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试不会是开发人员的首要任务（即使它是，也可能没有足够的时间以测试驱动的方式进行工作）
- en: Source-and version-control systems are not used religiously
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码和版本控制系统没有严格遵守使用规则
- en: With unrestricted access to the production environment, ad hoc and uncontrolled
    tweaks and changes can be made to the infrastructure and environmental setup
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于可以无限制地访问生产环境，因此可以随意且不受控制地调整基础设施和环境设置
- en: Software releasing will be mainly manual and most of the time an afterthought
    of the overall system design
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 软件发布将主要是手动操作，并且大多数时候是整体系统设计后的附加考虑
- en: At times, a rough and ready prototype may become production code without the
    opportunity for refactoring
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时，粗糙且即用的原型可能会直接成为生产代码，且没有机会进行重构
- en: Documentation is scant or non-existent—any that does exist is probably out of
    date
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档稀缺或不存在——现有的文档很可能是过时的
- en: The work-life balance for an engineer working within a small software house
    is not sustainable and burn out does happen
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在小型软件公司工作的工程师的工作与生活平衡是不可持续的，倦怠确实会发生
- en: Let's have a look at the software-delivery process for ACME systems Version
    1.0, which, to be honest, shouldn't take too long.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看ACME系统的软件交付流程1.0版本，老实说，这不应该花太多时间。
- en: Software-delivery process flow Version 1.0
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件交付流程版本1.0
- en: 'The following diagram gives an overview of the simple process used by ACME
    systems to deliver software. It''s simple, elegant (in a rough-and-ready kind
    of way), and easy to communicate and understand:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表展示了ACME系统用于交付软件的简单流程。它简单、优雅（以一种粗犷的方式），且易于沟通和理解：
- en: '![](img/a68dad07-2f2b-44ba-9646-17a43b39baee.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a68dad07-2f2b-44ba-9646-17a43b39baee.png)'
- en: Overview of ACME Version 1.0 software-delivery process
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ACME 1.0版本的软件交付流程概览
- en: This very simple process is something that many small software businesses and
    start-ups will recognize. From a CD and DevOps perspective, there are next to
    no barriers between those building and delivering the software and those supporting
    it (we'll cover this later in this chapter).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个非常简单的流程是许多小型软件企业和初创公司会认同的。从CD和DevOps的角度来看，构建和交付软件的人员与支持它的人员之间几乎没有障碍（我们将在本章后面详细讲解这一点）。
- en: Let's move forward a few years and see how ACME systems is doing, and gain some
    insight into the benefits and pitfalls of being the leader of the field.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们往前看几年，看看ACME系统的现状，并从中获得一些关于成为行业领导者的好处和陷阱的见解。
- en: ACME systems evolution phase 2.0
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ACME系统进化阶段2.0
- en: The business has grown in both size and turnover. The customer base is now global
    and the ACME software platform is being used by millions of customers on a daily
    basis. ACME systems as a business is well-established, well-renowned, and recognized
    as being at the forefront in their area of expertise. However, the level of growth
    and investment has had an impact on profits—which are still pretty much non-existent.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 企业的规模和营业额都在增长。客户基础已扩展到全球，ACME软件平台每天为数百万客户提供服务。ACME系统作为一家公司已经建立了稳固的基础，声誉良好，并被认为是该领域的前沿者。然而，增长和投资的水平已经对利润产生了影响——利润几乎是不存在的。
- en: The board of ACME systems are approached by a larger competitor with an acquisition
    offer. The board and investors feel this makes good commercial sense and that
    this will help stabilize the business for the future so the sale is agreed. On
    the whole, everyone is happy with the deal and most see this as positive recognition
    that they have at last reached the big time.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: ACME 系统的董事会接到了一个来自更大竞争对手的收购提议。董事会和投资者认为这一提议具有良好的商业意义，且将有助于未来业务的稳定，因此同意出售。总体而言，大家都对这笔交易感到满意，大多数人视此为他们终于迎来成功的标志。
- en: At first everything is good—everything is great, in fact. The ACME systems team
    now has the backing it needs to invest in the business and be able to scale out
    and obtain a truly global reach. It can also focus on the important things, such
    as building quality software, scaling out the software platform, investing in
    new technologies, tools, and R&D. The drier side of business—administration, program
    and project management, sales, marketing, and so on—can be passed to the new parent
    company that has all of this in place already.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始，一切都很顺利——事实上，一切都非常好。ACME 系统团队现在获得了所需的支持，可以投资于业务并实现扩展，进而获得真正的全球影响力。它还可以专注于重要事项，例如构建高质量的软件、扩展软件平台、投资于新技术、工具和研发。企业中较为枯燥的一面——行政管理、项目与程序管理、销售、市场营销等等——可以交给已经拥有这些体系的新母公司来处理。
- en: The ACME engineering team moves forward in excited anticipation. The level of
    investment is such that the software engineering team doubles in size in a number
    of months. The R&D team—as it's now called—introduces new development tools and
    processes to enable the speedy delivery of quality software. Agile is adopted
    across the R&D team, and the opportunity to fully exploit engineering best practices
    is realized. The original ACME platform starts to creak and is showing its age,
    so further investment is provided to re-architect and rewrite the software platform
    using the latest architectural approaches and technologies. In short, the R&D
    team feels that it's all starting to come together and it has the opportunity
    to do things right.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ACME 工程团队满怀期待地向前推进。投资的规模之大，以至于软件工程团队在几个月内翻了一番。现在称为研发团队的团队引入了新的开发工具和流程，以加速高质量软件的交付。敏捷方法在研发团队中得到了广泛采用，充分利用工程最佳实践的机会也得以实现。原先的
    ACME 平台开始出现老化的迹象，逐渐显得力不从心，因此又获得了进一步投资，以重新设计并重写软件平台，采用最新的架构方法和技术。简而言之，研发团队觉得一切开始走向正轨，且有机会做对的事情。
- en: In parallel to this, the ACME engineering team members who looked after the
    production environments are absorbed into the parent's global operations organization.
    On the face of it, this seems a very good idea; there are datacenters filled with
    cutting-edge kit, cloud capabilities, global network capabilities, and scalable
    infrastructure. Everything that is needed to host and run the ACME platform is
    there. Like the R&D team, the operations team has more than they could have dreamed
    of. In addition to the tin and string, the operations team also has resources
    available to help maintain quality, control change to the platform, and ensure
    the platform is stable and available 24 x 7.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，负责生产环境的 ACME 工程团队成员被吸收到母公司的全球运营组织中。从表面上看，这似乎是个非常好的主意；数据中心里充满了尖端设备，云能力、全球网络能力和可扩展的基础设施一应俱全。所有托管和运行
    ACME 平台所需的资源都在这里。和研发团队一样，运营团队拥有比他们曾经梦想的更多资源。除了硬件和基本的设施，运营团队还有可用于维护质量、控制平台变更的资源，并确保平台能够稳定运行并提供
    24 小时不间断的服务。
- en: Sitting above all of this, the parent company also has well-established governance,
    and program—and project-management functions to control and coordinate the overall
    end-to-end product delivery schedule and process.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一切之上，母公司也拥有成熟的治理结构，以及程序和项目管理职能，用以控制和协调整体的端到端产品交付时间表和流程。
- en: 'On the face of it, everything seems rosy and the teams are working more effectively
    than ever. At first, this is true, but very soon things start to take a downward
    turn. Under the surface, things are not all that rosy:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 表面上看，一切似乎都很美好，团队们比以往任何时候都更加高效地工作。最初，这的确是事实，但很快，情况开始发生下滑。在表面之下，情况并非那么美好：
- en: It is getting increasingly difficult to deliver software—what took days now
    takes weeks or even months
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交付软件变得越来越困难——原本只需几天的工作，现在可能需要几周甚至几个月。
- en: Releases are getting overly complex and larger as the new ACME platform rapidly
    grows and more features are added and changes are made
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着新的 ACME 平台快速增长，更多的功能被添加，变更不断进行，发布变得过于复杂且越来越大。
- en: Despite the advances in re-architecting the ACME platform, there still remain
    large sections of buggy legacy code deep within the bowels of the system, which
    refuses to die
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管在重新架构 ACME 平台方面取得了一些进展，但系统深处仍然存在大量有缺陷的遗留代码，它们顽固不化，拒绝消失。
- en: The R&D team members are now so far removed from the production environment
    that they are ignorant as to how the software they are writing functions or performs,
    once it eventually goes live
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 研发团队成员现在距离生产环境如此遥远，以至于他们对自己编写的软件如何运作或表现一无所知，直到软件最终上线。
- en: The operations team members are now so far removed from the development process
    that they are ignorant to what's being delivered and how it's being developed
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运维团队成员现在距离开发流程如此遥远，以至于他们对交付的内容以及其开发方式一无所知。
- en: There are many corporate hoops to jump through and process hurdles to overcome
    before software changes can go anywhere near the production servers
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在软件变更能够接近生产服务器之前，必须通过许多公司流程和解决各种过程障碍。
- en: Quality is starting to suffer as last-minute changes and frantic bug fixes are
    being applied to fit into release cycles
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 质量开始受到影响，因为最后一分钟的更改和匆忙的错误修复被应用于适应发布周期。
- en: Technical debt amassed during the fast and loose days is starting to cause major
    issues
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在快速而松散的开发阶段积累的技术债务开始引发重大问题。
- en: More and more R&D resources are being applied to assist in releases, which is
    impacting the development of new features
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 越来越多的研发资源被投入到协助发布的工作中，这影响了新功能的开发。
- en: Deployments are causing prolonged production downtime—both planned and unplanned
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署导致了生产停机时间的延长——包括计划内和计划外的停机。
- en: Deadlines are being missed, stakeholders are being let down, and trust is being
    eroded
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 截止日期被错过，利益相关者受到失望，信任正在被侵蚀。
- en: The once-glowing reputation is being tarnished
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 曾经光辉的声誉正在被玷污。
- en: The main problem here, however, is that this attrition has been happening very
    slowly over a number of months and not everyone has noticed—they're all too busy
    trying to deliver.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，主要问题在于，这种渐进性的损耗已经缓慢发生了数月，并非每个人都注意到——他们都太忙于试图完成交付。
- en: Let's now revisit the process flow for delivering software and see what's changed
    since last we looked—it's not a pretty picture.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们重新审视软件交付的流程，看看自上次查看以来发生了什么变化——这不是一幅美丽的画面。
- en: Software-delivery process flow Version 2.0
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件交付流程版本 2.0
- en: 'As you can see from the following diagram, things have become very complicated
    for the ACME team. What was simple and elegant has become complex, convoluted,
    and highly inefficient. The number of steps and barriers has increased, making
    it extremely difficult to get software delivered. In fact, it''s increasingly
    difficult to get anything done. The following figure gives you an overview of
    the ACME Version 2.0 software-delivery process:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，ACME 团队的情况变得非常复杂。曾经简单优雅的流程变得复杂、曲折且高度低效。步骤和障碍的数量增加了，使得软件交付变得极为困难。事实上，几乎什么都做不成了。以下图表概述了
    ACME 版本 2.0 的软件交付流程：
- en: '![](img/65a61c87-f4ba-4601-b62e-f8b3eafc4369.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65a61c87-f4ba-4601-b62e-f8b3eafc4369.png)'
- en: Overview of ACME Version 2.0 software-delivery process
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: ACME 版本 2.0 软件交付流程概述。
- en: This far-from-simple process is something that large software businesses will
    recognize. Looking again from a CD and DevOps perspective, this process is far
    from ideal as there are now many barriers between those delivering software and
    those supporting it.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这一远非简单的流程是许多大型软件公司都会认识到的。从持续交付和 DevOps 的角度来看，这个流程远非理想，因为现在交付软件的团队与支持它的团队之间存在许多障碍。
- en: 'If I''m honest, the process as depicted is actually missing some additional
    detail in relation to the change-management hoops that can add more complexity,
    effort, and pain. Let''s add this detail and look again:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 坦率地说，所描绘的流程实际上缺少一些关于变更管理环节的附加细节，这些细节可能会增加更多的复杂性、工作量和痛苦。让我们补充这些细节，再次审视一下：
- en: '![](img/dbea9504-24a6-449e-91d9-e6bd1a5cd712.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dbea9504-24a6-449e-91d9-e6bd1a5cd712.png)'
- en: More realistic overview of ACME Version 2.0 software-delivery process
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: ACME 版本 2.0 软件交付流程的更现实概述。
- en: As you can see, things are far from ideal. What was efficient and effective
    is now the exact opposite. More importantly, the dialogue, quality of the communication,
    and trust between all of those involved in delivering changes is at best fragmented
    and pretty much non-existent at worst. What used to be a five-minute chat over
    a coffee is now a 20-page email thread, meetings, and Skype chats. The ex-ACME
    engineering team members are less like colleagues and more like entrenched combatants.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，情况远非理想。曾经高效有效的流程现在已经变成了完全的反面。更重要的是，所有参与变更交付的人之间的对话、沟通质量和信任，充其量是支离破碎的，最糟糕的是几乎完全不存在。曾经的五分钟咖啡聊天现在变成了20页的邮件线程、会议和Skype聊天。前ACME工程团队成员不再像同事，更像是深陷战斗的对手。
- en: Not only is the process long-winded, but the chances of a single change getting
    all the way through the process without issue is very slim—most of the time, changes
    have to go around the loop a number of times before they can be classed as shippable;
    for example, a defect found within any part of the process may push the change
    all the way back to the beginning of the process.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程不仅冗长，而且一个变更在没有问题地完成整个流程的机会非常渺小——大多数情况下，变更必须在循环中绕一圈又一圈，才能算作可以发布的版本；例如，过程中任何环节发现的缺陷可能会将变更推回到流程的开始。
- en: I mention dialogue, quality of the communication, and trust for a very specific
    reason—most of the things you read about and hear in relation to CD and DevOps
    seem to imply that some new tooling and best-of-breed architectural approaches
    will give you what you need. While this can help, it can also massively hinder—especially
    when trying to bring these changes on board whilst a business is going through
    organizational changes and/or growth. In the ACME example, too much was changing
    too quickly for everyone to understand what was going on and where the journey
    would end. This inevitably lead to human nature kicking in and people building
    up barriers and silos to add some stability within the chaos.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我提到对话、沟通质量和信任是有非常特定的原因的——你在CD和DevOps相关的许多文章和讨论中会看到，它们似乎暗示一些新的工具和最佳架构方法会提供你所需要的东西。虽然这些可能有所帮助，但也可能会带来巨大的阻碍——特别是在公司经历组织变革和/或增长的同时引入这些变更时。在ACME的例子中，变化来得太快，大家都没能理解发生了什么，旅程将会走向何方。这不可避免地导致了人性发挥作用，人们在混乱中建立起了屏障和孤岛，以保持一些稳定。
- en: If you were to take all of this into account, from an outsider's perspective,
    the process(es) ACME systems uses to deliver software is now, for all intents
    and purposes, broken.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把这一切都考虑进去，从外部的角度看，ACME系统用来交付软件的过程，现在在实际意义上已经完全失败了。
- en: OK, so this may be a little over the top, but it just goes to highlight how
    having a relative chasm between those involved in the delivery of changes—especially
    the R&D team members (who are tasked with delivering much-needed changes and features)
    and the operations team members (who are tasked with supporting the live environment
    into which the changes will be applied)—can completely derail things.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，这可能有点夸张，但它突出了一个问题，那就是在那些参与变更交付的人之间——尤其是研发团队成员（负责交付急需的变更和功能）与运维团队成员（负责支持将要应用变更的生产环境）之间，存在着相对的巨大隔阂，这完全可能导致事情脱轨。
- en: An outsider's perspective from the inside
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从内部看外部的视角
- en: As was previously stated, not everyone noticed the attrition within the organization—luckily,
    a few observant souls did. A small number of the ACME team's members were aware
    things are not great and decided to step back and look at things from an outsider's
    perspective. They then started to see the issues within the overall process as
    clear as day and became determined to expose these issues for all to see. In addition,
    they decided to sort the issues out—there was just the small problem of how to
    do this while everyone was going at full pelt to get software delivered at all
    costs in their own silos with their own problems.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 正如之前所说，并非每个人都注意到了组织中的人员流失——幸运的是，还是有一些细心的人察觉到了。少数ACME团队成员意识到情况并不理想，决定从外部的视角回顾问题。然后，他们开始清楚地看到了整体流程中的问题，并决心让所有人都看到这些问题。此外，他们决定解决这些问题——只是有一个小问题，如何在每个人都全力以赴地在自己的孤岛内以解决自己的问题、以任何代价交付软件的情况下做到这一点。
- en: At first, they invested a vast amount of personal time into investigating and
    building rough and ready tools, including build and test automation, **Continuous
    Integration** (**CI**), a continuous-deployment pipeline, and system-monitoring
    solutions. The intention was to automate as many parts of the broken process as
    possible to reduce the pain. They also applied energies evangelizing within their
    technically-focused peer groups. Although their ideas and suggestions were welcomed
    by the majority, there was not the appetite to adopt these new-fangled tools—everyone
    was far too busy trying to ship software within the broken process. They needed
    another way.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，他们投入了大量个人时间来研究和构建简单粗糙的工具，包括构建和测试自动化、**持续集成**（**CI**）、持续部署流水线和系统监控解决方案。其目的是尽可能自动化断裂流程中的各个部分，以减少痛苦。他们还在技术驱动的同侪群体中积极宣传这些想法。尽管大多数人欢迎他们的想法和建议，但没有足够的动力去采纳这些新式工具——每个人都忙于在断裂的流程中交付软件，他们需要另一种方法。
- en: They decided that they needed some assistance, so they sought out a like-minded
    manager with influence within the wider business who could help them get some
    much-needed traction. After much cajoling, discussions, and pleading, the manager
    agreed to help them to obtain budget to form a small team focusing on advancing
    the CD and DevOps tooling. The newly-formed team's members spent a few months
    identifying and breaking down the immediate and most painful issues, and built,
    installed, and implemented tooling to remove some of the pain—to ease the adoption,
    many of the tools are bespoke to fit into the existing processes.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 他们决定需要一些帮助，于是寻求了一位在更广泛业务中具有影响力、志同道合的经理，帮助他们获得急需的支持。在经过多次劝说、讨论和恳求后，这位经理同意帮助他们获得预算，组建一个专注于推进
    CD 和 DevOps 工具的小团队。新成立的团队成员花了几个月的时间识别并拆解最紧迫和最痛苦的问题，构建、安装并实施了能够缓解一些痛苦的工具——为了便于采用，许多工具是量身定制的，以适应现有的流程。
- en: This went some way to address the broken process but the reality is that the
    tools did not have the impact they envisaged. In fact, the tools themselves needed
    to be altered so much to fit the existing process that they started to become
    unreliable and too complex, so much so that those who were originally behind the
    approach started to question the validity of their decisions.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这在一定程度上解决了断裂的流程，但现实是，这些工具并没有产生他们预期的影响。实际上，为了使工具适应现有流程，它们本身需要做出如此多的修改，以至于它们开始变得不可靠和过于复杂，甚至最初支持这种方法的人开始质疑自己决策的有效性。
- en: Ultimately, there is a much bigger issue that tooling cannot address—the culture
    of the organization itself, the behaviors of those within it, and the many disjointed
    methods of communication between the disconnected silos that had formed over the
    years. It became obvious that all the tools and tea in China will not bring pain
    relief; something more drastic was needed.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，存在一个更大的问题是工具无法解决的——那就是组织本身的文化、其中人员的行为，以及多年来在分裂的业务孤岛之间形成的各种脱节的沟通方式。很明显，所有的工具和中国的茶都无法缓解痛苦；需要更为彻底的变革。
- en: The team's members refocused and soon realized that it's not the tools that
    need to change to fit the process, but the process and ways of working that needs
    to change. If this was addressed, the tools could simply be taken off the shelf—so
    to speak—and used without extensive modification. The team's members have to drastically
    change their direction, become less technology-focused, and act more like agents
    for business change. They then highlighted this now-obvious fact to as many people
    as they can up and down the organization while the influential manager worked
    to obtain backing from the senior leadership to implement far-reaching business
    change. Luckily, their reputation and standing within the organization was such
    that getting backing was easy.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 团队成员重新聚焦，并很快意识到，真正需要改变的不是工具去适应流程，而是流程和工作方式本身需要改变。如果这个问题得到解决，工具可以直接从货架上取下来——可以这么说——并且无需大量修改就能使用。团队成员必须大幅改变方向，减少对技术的关注，更像是业务变革的推动者。他们随后将这一显而易见的事实传递给尽可能多的组织内外人员，同时这位有影响力的经理努力争取高层领导的支持，以实施深远的业务变革。幸运的是，他们在组织内的声誉和地位使得获得支持变得容易。
- en: We're now going on to the third stage of the evolution, where things start to
    come back together and the ACME team regains their ability to deliver quality
    software when it is needed.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在进入了演变的第三阶段，事情开始重新聚集在一起，ACME 团队重新获得了在需要时交付高质量软件的能力。
- en: ACME systems evolution phase 3.0
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ACME系统演进阶段3.0
- en: Now that the CD and DevOps team has official backing from high up, its members
    start to address the broken culture and behaviors, and develop ways to overcome
    and/or remove the barriers. They are no longer simply a technical team; they are
    a catalyst for business change.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，CD和DevOps团队得到了高层的正式支持，成员们开始解决破碎的文化和行为，制定克服和/或消除障碍的方法。他们不再仅仅是一个技术团队；他们是业务变革的催化剂。
- en: The remit is clear—do whatever is needed to streamline the process of software
    delivery and make it seamless and repeatable. In essence, implement what we now
    commonly refer to as CD and DevOps.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 任务明确——采取一切必要措施简化软件交付流程，并使其无缝且可重复。实质上，实施我们现在通常称之为CD和DevOps的内容。
- en: The first thing they do is to go out and talk with as many people across the
    business as possible to ensure they are also aware of the broken process and its
    root causes. Simply put, if someone is actively involved in the decision-making
    process of getting software from conception to consumer, or involved in supporting
    it when it's live, they are a chat target. This not only gathers useful information,
    but also gives the team the opportunity to evangelize and form a wider network
    of like-minded individuals.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 他们首先做的就是与尽可能多的业务人员进行交谈，确保他们也意识到破碎的流程及其根本原因。简单来说，如果有人积极参与将软件从构想到消费者的决策过程，或参与支持软件上线后的工作，他们就是交谈对象。这不仅收集了有用的信息，还为团队提供了传播理念和建立志同道合网络的机会。
- en: The team has a vision, a purpose, that its members passionately believe in what
    needs to be done, and they have the energy and drive to do it.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 团队有一个愿景，一个目标，其成员热情地相信需要做的事情，并且他们有能量和动力去实现它。
- en: 'Over the next few months, they embark on (among other things):'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几个月里，他们将开始（包括其他事项）：
- en: Running various in-depth sessions to understand and map out the end-to-end product-delivery
    process
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 举办各种深入的会议，以理解并绘制端到端的产品交付流程
- en: Refining and simplifying the tooling based upon continuous feedback from those
    using it—where applicable, replacing in-house built solutions with off-the-shelf
    ones
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据使用者的持续反馈，精炼和简化工具——在适用的情况下，将内部开发的解决方案替换为现成的产品
- en: Addressing the complexity of managing dependencies and the order of deployment
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决管理依赖关系和部署顺序的复杂性
- en: Engaging experts in the field of CD and DevOps to independently assess the progress
    being made (or not, as the case may be)
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邀请CD和DevOps领域的专家独立评估所取得的进展（或者没有进展，根据具体情况）
- en: Arranging offsite CD and DevOps training and encouraging both R&D and Ops team
    members to attend the training together (it's amazing how much DevOps collaboration
    stems from a chat in the hotel bar)
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安排离线的CD和DevOps培训，并鼓励研发和运维团队成员共同参加培训（真是令人惊讶，很多DevOps合作都是从酒店酒吧的一次聊天开始的）
- en: Reducing the many handover and decision-making points throughout the software-release
    process
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少整个软件发布过程中众多的交接和决策点
- en: Removing the barriers to allow developers to safely deploy their own software
    to the production platform
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除障碍，使开发人员能够安全地将自己的软件部署到生产平台
- en: Working with other business functions to gain trust and help them to refine
    and streamline their processes
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与其他业务职能部门合作，赢得信任，并帮助他们完善和简化他们的流程
- en: Removing the us-and-them attitudes and behaviors, and reinforcing trust-based
    relationships
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除“我们和他们”态度与行为，强化基于信任的关系
- en: Working with R&D and operations teams to experiment with different agile methodologies,
    such as Kanban, scrum, and lean
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与研发和运维团队合作，尝试不同的敏捷方法论，如看板、Scrum和精益方法
- en: Openly and transparently sharing information and data around deliveries and
    progress being made across all areas of the business
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公开透明地分享关于交付和进展的数据和信息，涵盖所有业务领域
- en: Replacing the need for complex performance-testing with the ability for developers
    to closely monitor their own software running in the production environment
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用开发人员能够密切监控其在生产环境中运行的软件来取代复杂的性能测试需求
- en: Removing the need for downtime to release changes
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消除需要停机以发布更改的需求
- en: Evangelizing across all areas of the business to share and sell the overall
    vision and value of CD and DevOps
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在整个业务范围内推广，分享并推销CD和DevOps的整体愿景和价值
- en: This is by no means a walk in the park and it takes determination, steadfast
    focus, patience, and, above all, time to produce quantifiable, positive results,
    however after some months, the vision and benefits start to be realized. Now the
    process of building and delivering software has transformed to the extent that
    a code change can be built, fully tested, and deployed to the production platform
    in minutes many times per day—all at the press of a button and initiated and monitored
    by the developer who made the change, all with no downtime and little/no impact
    on the customers. The stakeholders have a trusted and reliable way of delivering
    value to their customers, the R&D team has the tooling and empowerment to deliver
    value as and when it is needed, and the Ops team has a stable and reliable platform
    that it can support and optimize.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这绝非轻松之事，它需要决心、坚定的专注、耐心，最重要的是，需要时间来产生可量化的积极结果。然而，几个月之后，愿景和好处开始显现。如今，构建和交付软件的流程已经发生了转变，以至于代码更改可以在几分钟内构建、完全测试并部署到生产平台——而且是一天中多次进行的操作——这一切只需按下一个按钮，由进行更改的开发人员启动并监控，且完全没有停机时间，对客户几乎没有或没有影响。利益相关者拥有了一种可信赖且可靠的方式来向客户交付价值，研发团队拥有必要的工具和授权，可以按需交付价值，运维团队则拥有一个可以支持和优化的稳定可靠平台。
- en: Let's look again at the software-delivery process flow to see what results have
    been realized.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次回顾一下软件交付流程，看看已实现了哪些成果。
- en: Software-delivery process flow version 3.0
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 软件交付流程版本3.0
- en: 'As you can see from the diagram, the process looks much healthier. It''s not
    as simple as Version 1.0, but it is efficient, reliable, and repeatable. Some
    much-needed checks and balances have been retained from Version 2.0 and optimized
    to enhance rather than impede the overall process:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 从图表中可以看出，整个过程看起来更加健康。它不像版本1.0那样简单，但它高效、可靠且可重复。一些在版本2.0中非常必要的制衡机制被保留下来，并经过优化，以增强而非阻碍整体流程：
- en: '![](img/d75ba352-ff1a-4553-8c93-e5b374b185aa.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d75ba352-ff1a-4553-8c93-e5b374b185aa.png)'
- en: Overview of ACME 3.0 software-delivery process
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: ACME 3.0软件交付流程概览
- en: This more elegant and well-oiled process is something that a mature yet modern
    software business will recognize. The barriers between those delivering the software
    and those that support it are there to ensure there is a degree of control and
    quality assurance, but both sides benefit from and embrace them.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个更加优雅和顺畅的流程是一个成熟而现代的软件企业所能认同的。那些负责交付软件和支持软件的人之间的隔阂，旨在确保一定程度的控制和质量保证，但双方都能从中受益并且接受它们。
- en: This highly efficient process has freed up valuable R&D and operations resources
    so that they can focus on what they are best at—developing and delivering new
    high-quality features, and ensuring that the production platform is healthy and
    customers are delighted.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这个高效的流程解放了宝贵的研发和运维资源，让他们可以专注于自己最擅长的事情——开发和交付新的高质量功能，确保生产平台健康，令客户满意。
- en: The ACME systems team has got back its mojo and is moving forward with a newfound
    confidence and drive. It now has the best of both worlds, and there's nothing
    stopping it.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: ACME系统团队找回了自己的动力，正朝着更加自信和有动力的方向前进。现在，它拥有了两全其美的优势，前方没有任何阻碍。
- en: ACME systems beyond Version 3.0
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ACME系统版本3.0及之后
- en: The ACME systems team's members have come through their challenges stronger
    and leaner but their story doesn't end there. As with any successful business,
    they don't rest on their laurels but decide to expand into new markets and opportunities—namely,
    to build and deliver mobile-optimized clients to work with and complement their
    core web-based propositions.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: ACME系统团队的成员在经历了挑战后变得更加坚韧和精简，但他们的故事并未就此结束。和任何成功的企业一样，他们不会自满，而是决定扩展到新的市场和机会——即构建并交付移动优化客户端，以便与其核心的基于Web的产品互补并协同工作。
- en: With all they have learned throughout their evolution, they know they have an
    optimal way of working to allow them to deliver quality products that customers
    want, when they want them, and they know how to deliver quickly, reliably, and
    incrementally. However, the complexities of delivering features to a hosted web-based
    platform are not the same as the complexities of delivering features to an end
    consumer's mobile device—they are comparable but not the same. For example, the
    process of delivering code to production servers many times per day is under the
    control of the ACME team, whereas they have little or no control over how their
    mobile clients are delivered to end customers, nor if and when the end customer
    will install the latest and greatest version from the various app stores onto
    which the mobile client is published. In addition to this, the production platform
    onto which the mobile client will be installed is pretty much an unknown in terms
    of spec, performance, and storage.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个进化过程中，他们学到了很多，他们知道已经有了一种最佳的工作方式，可以让他们在客户需要时交付客户想要的优质产品，并且知道如何快速、可靠、渐进地交付。然而，将功能交付到托管的基于
    Web 的平台的复杂性与将功能交付到终端消费者的移动设备的复杂性是不同的——它们是可比的，但并不完全相同。例如，每天多次将代码交付到生产服务器的过程由ACME团队控制，而他们几乎无法控制如何将移动客户端交付给最终客户，也无法控制最终客户是否会在各种应用商店发布移动客户端的情况下，何时安装最新的版本。此外，移动客户端将要安装的生产平台在规格、性能和存储方面几乎是未知的。
- en: All is not lost, though—far from it. The members of the ACME systems team have
    learned a vast amount throughout their evolutionary journey, and decide to approach
    this new challenge as they had done previously. They know they can build, test,
    and deliver software with consistent quality. They know how to deliver change
    incrementally with little or no impact. They know how to support customers and
    monitor and react quickly to change. They know their culture is mature and that
    the wider organization can work as one to overcome shared challenges.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，一切并未失去——远非如此。ACME系统团队的成员们在进化过程中学到了大量的知识，并决定像以前一样应对这一新挑战。他们知道自己可以以一致的质量构建、测试和交付软件。他们知道如何以渐进的方式交付变更，且几乎不会带来任何影响。他们知道如何支持客户，并迅速响应变化。他们知道自己的文化已经成熟，整个组织能够团结一致，克服共同的挑战。
- en: 'As the new venture progresses, they also discover another side-effect of their
    newly rekindled success: the amount of traffic and transactions start to grow
    very quickly. They therefore need to scale out their platform and they need to
    do it as soon as possible. Rather than rely on their own datacenters, they decide
    to move their entire platform to a globally-distributed cloud-based solution.
    This brings with it new challenges: the infrastructure is completely different,
    the provisioning tools are new, the tools used to build and deliver software are
    incompatible with the existing ACME tools. Again, the ACME systems team take this
    in stride and forge ahead with confidence using the highly collaborative ways
    of working, techniques, and approaches that are now part of their DNA.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 随着新业务的进展，他们还发现了另一个副作用：他们重新点燃的成功带来了流量和交易量的快速增长。因此，他们需要扩展平台，并且必须尽快完成。与其依赖自己的数据中心，他们决定将整个平台迁移到一个全球分布的云解决方案。这带来了新的挑战：基础设施完全不同，资源配置工具是新的，用于构建和交付软件的工具与现有的ACME工具不兼容。同样，ACME系统团队迎难而上，凭借高度协作的工作方式、技术和方法，继续自信地前进，这些方式、技术和方法现在已经成为他们文化的一部分。
- en: Would ACME systems Version 1.0 business have been able to take on these new
    challenges and succeeded? It's possible, but the results would have been mixed,
    the risks that much greater, and the quality that much lower. It's pretty obvious
    that ACME systems Version 2.0 business would have had major struggles, and by
    the time the products had hit the market, they would have been out of date and
    fighting for market share with the quicker and leaner competition.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，ACME系统1.0版的业务能否应对这些新挑战并取得成功呢？这有可能，但结果可能会是好坏参半，风险会大得多，质量也会更低。很明显，ACME系统2.0版的业务将面临重大困难，到产品进入市场时，它们可能已经过时，并且与更迅速、更精简的竞争对手争夺市场份额。
- en: Let's look at what this all means from a holistic point of view.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个整体的角度来看，这一切意味着什么。
- en: The evolution in a nutshell
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进化简述
- en: 'Throughout this chapter, we have been following the evolution of ACME systems:
    where they started, the growing pains that came from success, how they discovered
    that rapid growth brings with it negatives as well as positives, how they overcame
    their near extinction by adopting CD and DevOps, and how they regained their mojo
    and confidence to move forward. All of this can be represented by the following
    simple diagram:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们一直在跟踪 ACME 系统的演变：它们的起步，成功带来的成长烦恼，如何发现快速增长既带来负面影响也带来正面影响，如何通过采纳 CD 和 DevOps
    克服差点灭绝的困境，以及如何恢复活力和信心继续前进。所有这一切可以通过以下简单的图表来表示：
- en: '![](img/1bc13852-24f7-421c-a7ad-ac26b5c410d5.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1bc13852-24f7-421c-a7ad-ac26b5c410d5.png)'
- en: Overview of ACME systems evolution
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: ACME 系统演变概述
- en: What they also learned—somewhat late in the evolution—was that CD, and DevOps-adoption
    has little to do with technical tools and everything to do with how people work
    together. Without the changes to the culture and behaviors of everyone involved
    in the end-to-end delivery process, it is almost impossible to realize and maximize
    the benefits that a successful adoption of CD and DevOps brings. It could be said
    that if they knew this simple, yet mostly overlooked, fact from day one, then
    the adoption would have happened sooner and the business would have been far stronger
    far sooner. Hopefully, this will provide some food for thought for you as you
    move through the rest of the book.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 他们还学到了一些东西——虽然是在进化的后期——那就是 CD 和 DevOps 的采纳与技术工具无关，完全取决于人们如何协作。如果没有对参与端到端交付过程的每个人的文化和行为进行改变，几乎不可能实现并最大化成功采纳
    CD 和 DevOps 所带来的好处。可以说，如果他们从一开始就知道这一简单但常常被忽视的事实，采纳就会更早发生，企业也会更早变得更强大。希望这为你在阅读本书的剩余部分时提供一些思考。
- en: Where am I on the evolutionary scale?
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我在进化阶梯上的位置在哪里？
- en: At the beginning of this chapter, I stated that the effectiveness of adopting
    CD and DevOps is very much dependent on where a business sits on the evolutionary
    scale. We've been through ACME's evolution and the phases it went through. Please
    take into account that ACME is fictional and its story is pretty simplistic. A
    real-world business is not simple—far from it—and it is pretty difficult to ascertain
    where a given business sits on the CD and DevOps evolutionary scale. Without this
    information, it's hard to understand how receptive, responsive, and open to adoption
    a business actually is.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章开头，我提到采用 CD 和 DevOps 的有效性在很大程度上取决于一个企业在进化阶梯上的位置。我们已经经历了 ACME 的演变及其所经历的各个阶段。请注意，ACME
    是虚构的，它的故事非常简单。现实中的企业并非如此——远非简单——要确定一个企业在 CD 和 DevOps 进化阶梯上的位置是相当困难的。如果没有这些信息，很难理解企业的接受程度、反应能力以及对采纳的开放性。
- en: 'With that said, there are some simple ways of getting a clearer idea. For example,
    the following list of questions can help you get a rough idea. Looking at your
    business, ask yourself the following:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，有一些简单的方法可以让你更清楚地了解情况。例如，以下问题列表可以帮助你大致了解。看一下你的企业，问问自己以下问题：
- en: '|  | **Option #1** | **Option #2** | **Option #3** |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '|  | **选项 #1** | **选项 #2** | **选项 #3** |'
- en: '| Does your business favor process over people? | Process | People | We don''t
    have any processes worth mentioning. |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| 你的业务是否更注重流程而非人员？ | 流程 | 人员 | 我们没有任何值得一提的流程。 |'
- en: '| Do immovable deadlines in project plans take precedence over delivering quality
    solutions incrementally? | Yes, meeting deadlines is the only thing that matters.
    | We have the flexibility to make small changes, and re-plan to ensure quality
    doesn''t suffer. | We do whatever is needed to keep the customer happy. |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 项目计划中的不可移动的截止日期是否优先于逐步交付高质量解决方案？ | 是的，按时完成任务是唯一重要的。 | 我们在至少一个领域具有灵活性，可以进行小范围调整，并重新规划以确保质量不受影响。
    | 我们会做任何必要的事情来保持客户满意。 |'
- en: '| Are your projects run with fixed timescales, fixed resource, and fixed scope,
    or is there flexibility? | Yes, and this is all agreed up front, signed off, and
    intricately planned. | No, we have flexibility in at least one of these areas.
    | We do whatever is needed to keep the customer happy. |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 你的项目是按照固定的时间表、固定资源和固定范围来执行，还是具有灵活性？ | 是的，所有这些都事先商定、签署并精心规划。 | 不，我们在至少一个方面具有灵活性。
    | 我们会做任何必要的事情来保持客户满意。 |'
- en: '|  | **Option #1** | **Option #2** | **Option #3** |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '|  | **选项 #1** | **选项 #2** | **选项 #3** |'
- en: '| Do your developers have access to the production environment? | No, why would
    we trust developers to not screw things up? | All developers have secure read-only
    access to the live environments and all configuration via specific tools. | Yes,
    they have full access to do whatever is needed. |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 开发人员是否可以访问生产环境？ | 不，为什么我们要信任开发人员不会搞砸事情？ | 所有开发人员都有对实时环境的安全只读访问权限，并可以通过特定工具访问所有配置。
    | 是的，他们可以完全访问，并做任何需要做的事情。 |'
- en: '| Is failure scorned upon or used as something to learn from? | Failure is
    failure and there are no excuses—heads will roll. | We ensure failure will have
    a small impact and learn from our mistakes. | Failure means no more business and
    we''re all out of a job. |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| 失败是被鄙视还是作为学习的机会？ | 失败就是失败，没有借口——责任人会被开除。 | 我们确保失败的影响最小，并从错误中学习。 | 失败意味着公司倒闭，我们都得失业。
    |'
- en: '| Who is on-call for out-of-hours production issues? | The T1 help desk, with
    the T2 operations support and T3 applications support teams backing them up. |
    We normally have a point of contact on call who can reach out to anyone they need.
    | Everyone within software engineering |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 谁负责处理超时的生产问题？ | T1帮助台，T2运营支持和T3应用支持团队为其提供后备支持。 | 通常有一个联系人随时待命，可以联系任何他们需要的人。
    | 软件工程团队中的每个成员都需要处理。 |'
- en: '| Are you able to ship code when it is ready or do you have to wait for a scheduled
    release? | The release team schedule and agree on the delivery into production
    via the CAB and transition team based upon the agreed program plan. | We trust
    our engineers to ship code using our deployment tools when they are confident
    it is ready and doesn''t compromise overall quality. | Our engineers normally
    FTP code to the production servers when it''s finished compiling. |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 当代码准备好时，你能立即部署吗，还是需要等待预定的发布？ | 发布团队根据已达成的程序计划，通过CAB和过渡团队安排并同意将代码交付到生产环境。
    | 我们信任工程师在确定代码准备就绪且不影响整体质量时使用我们的部署工具进行发布。 | 我们的工程师通常在代码编译完成后，直接通过FTP将代码上传到生产服务器。
    |'
- en: '| Does your senior leadership understand the complexities and challenges of
    delivering software? | They don''t know in detail, but there are many reports
    compiled and generated by the PMO which are regularly reviewed during project-review
    meetings. | They all have access to tools which give visibility of the various
    projects and metrics representing progress. | They don''t have the time or inclination
    to understand this—they expect stuff gets done. |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 高层领导是否理解交付软件的复杂性和挑战？ | 他们不清楚具体细节，但项目管理办公室（PMO）会编制并生成许多报告，这些报告会在项目审查会议中定期审查。
    | 他们都有访问工具，可以看到各个项目及其进展的相关指标。 | 他们没有时间或兴趣去理解这些——他们只是期望事情能按时完成。 |'
- en: '| Do the engineering teams have an understanding of how the business is doing
    from a commercial perspective? | All of the top-level financial information is
    compiled and published by the CFO to the company intranet every 6-12 months. |
    They all have access to the tools that give visibility of the current KPIs and
    metrics representing progress. | They don''t, but as long as they get paid, that
    should be enough. |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 工程团队是否了解公司在商业方面的表现？ | 所有顶级财务信息由首席财务官编制并每6-12个月在公司内网发布。 | 他们都有访问工具，能够看到当前的KPI和衡量进展的指标。
    | 他们不了解，但只要工资照发就足够了。 |'
- en: '| Does the engineering team have access to customer feedback? | This is normally
    collected and vetted by the customer service team and raised as defect or enhancement
    requests. | Customer feedback is captured via specialist tools and available to
    all. | Yes, this normally relates to defects and bugs that need fixing. |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 工程团队是否能访问客户反馈？ | 通常由客户服务团队收集并审核，作为缺陷或增强请求提出。 | 客户反馈通过专门的工具收集并对所有人开放。 | 是的，这通常与需要修复的缺陷和错误相关。
    |'
- en: If you were to apply these to the ACME business at certain points through their
    evolution, you would find that the Version 1.0 business would mostly answer 3,
    the version 2.0 business would mostly answer 1, and the highly-evolved version
    of the business would mostly answer 2.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将这些应用于ACME公司在其发展过程中的某些阶段，你会发现，1.0版本的公司大多会回答第3个问题，2.0版本的公司大多会回答第1个问题，而高度进化的版本的公司则大多会回答第2个问题。
- en: The preceding is simply an example that gives you and insight into how you can—at
    a very holistic viewpoint—ascertain how mature the business is and where it sits
    within the CD and DevOps evolutionary scale. You will no doubt have some additional,
    complimentary, or more relevant questions you could use. However, if you follow
    a similar format, you will be able to get a feel for where things sit, and more
    importantly, what areas need the most focus. You should widen the net as much
    as possible to get a view from as many parts of your business as possible—that
    way, you won't come across surprises when you decide to take the plunge.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 上述内容仅仅是一个示例，旨在让你从一个非常宏观的角度了解如何评估企业的成熟度以及它在持续交付（CD）和DevOps发展过程中所处的位置。你无疑会有一些额外的、互补的或更相关的问题可以使用。然而，如果你遵循类似的格式，你将能够感知当前的情况，更重要的是，能够识别出哪些领域最需要关注。你应该尽可能多地扩大视野，从企业的各个部分获取反馈，这样，当你决定深入实践时，就不会遇到惊讶的情况。
- en: Summary
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: The ACME systems evolution story is not atypical of the many software businesses
    out there today. No doubt, you will recognize and relate to some of the traits
    and challenges detailed in the ACME journey, and you should now be able to plot
    where your business (or your client's/partner's business) currently sits within
    the CD and DevOps evolutionary scale. You also got a holistic view of what CD
    and DevOps is and what it isn't.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: ACME系统的发展故事并非今天许多软件企业的典型代表。无疑，你会认出并与ACME旅程中描述的一些特点和挑战产生共鸣，你现在应该能够绘制出你的企业（或你客户/合作伙伴的企业）在持续交付（CD）和DevOps发展过程中的位置。你还全面了解了什么是CD和DevOps，以及它们不是些什么。
- en: We'll now move from storytelling mode and start to look in more detail at some
    of the practical aspects of adopting CD and DevOps, starting with how you identify
    the underlying problems that can (and do) stifle the delivery of quality software.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将从讲故事的模式转变，开始更详细地探讨采纳CD和DevOps的一些实际方面，首先从如何识别那些可能（并且确实）会阻碍高质量软件交付的潜在问题开始。
- en: In [Chapter 2](03ef279d-c51d-4e35-a137-701636c17d5f.xhtml), *Understanding Your
    Current Pain Points*, we'll be looking into how you go about identifying the problems
    and issues within their **Software Delivery Life Cycle** (**SDLC**) and highlight
    some tools, techniques, and approaches to surface said problems and issues so
    that they can be fixed.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](03ef279d-c51d-4e35-a137-701636c17d5f.xhtml)《了解当前的痛点》中，我们将探讨如何识别**软件交付生命周期**（**SDLC**）中的问题和挑战，并突出一些工具、技术和方法，以便发现这些问题并加以解决。
