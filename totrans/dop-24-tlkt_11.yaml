- en: Distributing Kubernetes Applications
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分发 Kubernetes 应用程序
- en: We are already storing our images in [Docker Hub](https://hub.docker.com/).
    We could have chosen a different container registry but, since Docker Hub is so
    convenient, we’ll continue using it throughout the book. Even though that might
    not be the best choice, if we move the discussion about repositories for container
    images out of the way, we can focus on YAML files or, to be more concrete, Helm
    Charts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经将镜像存储在[Docker Hub](https://hub.docker.com/)中。我们本可以选择其他容器注册表，但由于 Docker Hub
    非常方便，我们将继续在本书中使用它。尽管这可能不是最好的选择，但如果我们将关于容器镜像仓库的讨论放到一边，就可以集中精力讨论 YAML 文件，或者更具体地说，Helm
    Charts。
- en: At this point, you might be thinking that being able to run Charts located on
    your laptop is an excellent way to go. All you have to do is check out the code
    of an application hoping that the Chart is there and execute a command like `helm
    upgrade -i go-demo-3 helm/go-demo-3`. You’d be correct that’s the easiest way
    to install or upgrade an application that you are developing. However, your application
    is not the only one you’ll be installing.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你可能会认为在笔记本电脑上运行位于本地的 Charts 是一种非常好的方式。你只需检查某个应用程序的代码，期望该 Chart 已经存在，然后执行像`helm
    upgrade -i go-demo-3 helm/go-demo-3`这样的命令。你是对的，这是安装或升级你正在开发的应用程序的最简单方式。然而，你安装的不仅仅是你自己的应用程序。
- en: If you are a developer, you will almost certainly want to run many applications
    on your laptop. If you need to check whether your app integrates with those developed
    by your colleagues, you’ll want to run theirs as well. You can continue down the
    same path of checking out their code and installing local Charts. But that already
    starts being tedious. You’ll need to know which repositories they’re using, and
    check out more code than you truly need. Wouldn’t it be better to install your
    colleagues’ applications in the same way as installing publicly available third-party
    applications? Wouldn’t it be great if you could execute something like `helm search
    my-company-repo/`, get the list of all the apps created in your organization,
    and install those you need? We are already using the same approach with container
    images (e.g., `docker image pull`), with Linux packages (`apt install vim`), and
    many other packages and distributions. Why not do the same with Helm Charts? Why
    would we restrict the ability to pull a definition of an application only to those
    created by third-parties? We should be able to distribute our apps in the same
    way.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是开发者，你几乎肯定希望在笔记本电脑上运行多个应用程序。如果你需要检查你的应用程序是否与同事开发的应用程序集成，你也需要运行他们的应用程序。你可以继续检查他们的代码并安装本地的
    Charts。但这开始变得繁琐。你需要知道他们使用的仓库，并检查比你真正需要更多的代码。难道不更好地像安装公开的第三方应用程序一样安装同事的应用程序吗？如果你能执行类似`helm
    search my-company-repo/`的命令，获取你所在组织内所有应用程序的列表，并安装你需要的那些，岂不是更方便？我们已经在使用相同的方法来处理容器镜像（例如`docker
    image pull`）、Linux 包（`apt install vim`）以及许多其他包和分发版了。为什么不把 Helm Charts 也做成这样呢？为什么我们只限制从第三方获取应用程序定义的能力？我们应该能够以相同的方式分发我们的应用程序。
- en: Helm Charts are still very young. The project just started, and there aren’t
    many repositories to choose. Today (June 2018), [ChartMuseum](https://github.com/kubernetes-helm/chartmuseum)
    is one of the few, if not the only one available. So, picking the right solution
    is very straightforward. When there aren’t many choices, the selection process
    is easy.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Helm Charts 仍然非常年轻。该项目刚刚起步，选择的仓库也不多。今天（2018年6月），[ChartMuseum](https://github.com/kubernetes-helm/chartmuseum)
    是为数不多的选择之一，甚至可能是唯一的选择。因此，选择正确的解决方案非常直接。当选择不多时，选择过程就变得简单。
- en: In this chapter, we’ll explore Helm repositories and how we can leverage them
    to distribute our Charts across an organization, or even publish them to a broader
    audience if we are in the business of providing software to the more general public.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨 Helm 仓库以及如何利用它们在组织内分发我们的 Charts，或者如果我们从事向更广泛的公众提供软件的业务，如何将它们发布给更广泛的受众。
- en: As always, we need to start from somewhere, and that is a Kubernetes cluster.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，我们需要从某个地方开始，那就是 Kubernetes 集群。
- en: Creating A Cluster And Retrieving Its IP
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建集群并获取其 IP
- en: You know the drill. Create a new cluster or reuse the one you dedicated to the
    exercises.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道该怎么做。创建一个新集群，或者重用你为练习而专门设置的集群。
- en: First, we’ll go to the local copy of the *vfarcic/k8s-specs* repository and
    make sure that we have the latest revision. Who knows? I might have changed something
    since you read the last chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将前往本地的*vfarcic/k8s-specs* 仓库，并确保我们拥有最新的版本。谁知道呢？自从你读完上一章后，我可能已经做了一些修改。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
