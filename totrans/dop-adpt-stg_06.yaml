- en: '*Chapter 4*: Building a DevOps Culture and Breaking Down Silos'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will look at what culture means in DevOps, how you build
    a successful DevOps culture within an organization, and why culture is an important
    aspect of DevOps. We'll look at the characteristics of DevOps culture and how
    to maintain a strong culture within your organization, as well as how to break
    down existing silos in your organization.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: What is a DevOps culture?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why is culture important?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintaining a strong culture
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breaking down silos in your organization
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is a DevOps culture?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In previous chapters, we discussed a little bit about culture. Now, it''s time
    to go into more detail. Culture has many meanings but for DevOps, when we talk
    about culture, we''re really talking about a shared understanding between development
    and operations teams, as well as a shared responsibility for the applications
    they build. That then roughly translates to the following things:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Increasing transparency
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better communication
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collaboration across teams
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Despite what some people think, there is much more to DevOps than technology.
    DevOps is not a technological evolution of your tooling or the platforms that
    you use within your organization.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Culture in DevOps is also not letting teams define their own destiny; it is
    about working together. Implementing these things can be scary, but I want to
    take you through four things that can help practice this and build up the right
    culture in your organization.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: All the things we are about to look at will help with the preceding key bullet
    points and start to foster the right culture in your organization.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Roles and responsibilities workshop
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Defining very clear roles and responsibilities for your team helps create a
    strong culture. It prevents people from wondering what they should be doing and
    ensures that everyone knows not only what they are doing but how important everyone's
    role is to the overall team.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Include your team in this session; it's a very fulfilling experience and one
    that creates a mutual contract with your team, as everyone has participated in
    the development of the roles and responsibilities for the team.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'Look at the following diagram. This is an example of what the output from a
    roles and responsibilities workshop looks like:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.1 – Example roles and responsibilities matrix'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17192_04_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Figure 4.1 – Example roles and responsibilities matrix
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: You can use the preceding example to, with the help of your team, define the
    roles within your organization and then complete the responsibilities the rest
    of the team thinks that role should have.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: If you are working remotely, convert this into a Word document and share it
    so it can be edited by the team collaboratively.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Once you have completed this step, work with the team to discuss what you have
    come up with and get an agreement of where the responsibilities lie. You may even
    find yourself moving them to another role, and that's OK, just as long as you
    make sure the team is in agreement.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这一步后，与团队一起讨论你们的成果，并达成一致，明确责任分配。你可能会发现自己将某些成员调到其他角色，这没问题，只要确保团队达成一致。
- en: Once the session is completed, make sure you share it with your team first,
    ensuring that no more feedback needs to happen. Once everyone is finished, inform
    other leaders that this is the way your team will be working.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦会议结束，确保首先与团队分享成果，确保不再需要任何反馈。所有人完成后，通知其他领导们这就是你团队将要采用的工作方式。
- en: This highly collaborative approach creates a strong relationship within the
    team, one that is difficult to break and will set you up for success.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这种高度协作的方式在团队内部建立了牢固的关系，这种关系很难打破，并将为你的成功奠定基础。
- en: Rules of engagement
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 协作规则
- en: It may sound like a term from the military, but this is a serious exercise and
    can prove valuable in the future. Think of the output of this exercise as a social
    contract with your team, one that should be refreshed on a quarterly basis.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来可能像是军事术语，但这是一个严肃的练习，未来可能证明它非常有价值。将这次练习的产出视为与你团队的社会契约，应该每季度更新一次。
- en: Defining your rules of engagement defines *how you will work together*. If you
    are in a cross-functional team, then defining these rules early in the process
    can prevent tension from building up in the team. You could also call this a working
    agreement for your team.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 定义你的协作规则就是定义*你们如何共同工作*。如果你在一个跨职能团队中，那么在早期定义这些规则可以防止团队内部的紧张情绪积累。你也可以称之为你团队的工作协议。
- en: 'Start by asking your team some simple questions:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 从向团队提问一些简单的问题开始：
- en: As a team, what is important to us?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为一个团队，对我们来说，什么是重要的？
- en: How can we avoid mistakes of the past?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何避免过去的错误？
- en: What do teams who work well together do that we can adopt?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表现良好的团队都做了什么，我们可以借鉴？
- en: Ask your team to write down their answers privately, to begin with. This moment
    of reflection for the team will help set the tone of the session. Next, ask the
    team to write down one statement that will make working together as a team successful.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，请团队成员私下写下他们的答案。这一反思时刻将帮助为会议定下基调。接下来，要求团队写下一个让团队合作成功的声明。
- en: When you are finished, collate all the answers together and combine any similar
    statements together. If you have a small team of fewer than five people, ask them
    to write down two statements.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成后，将所有答案汇总在一起，并将相似的声明合并。如果你有一个小团队（少于五人），可以让他们写下两条声明。
- en: Then you vote on the ideas as a team. The idea of the vote is a collaborative
    one, and the result is a commitment written down in the agreement. If an idea
    gets a vote of no, just ask what it would take to make it a yes and see whether
    the team agrees.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你们作为团队对这些想法进行投票。投票的目的是为了协作，投票结果是书面协议中的承诺。如果一个想法被投反对票，只需询问将其转为支持票需要什么条件，并看看团队是否同意。
- en: Important note
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Follow up with your agreement regularly with the team; put it somewhere the
    team visits frequently so they are reminded of what you collectively agreed to.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 定期与团队跟进你的协议；将它放在团队经常访问的地方，以便他们时刻提醒自己你们共同达成的协议。
- en: The key is to facilitate an open discussion with the team that gets them thinking
    about how to work together successfully. Keep it open, honest, and, above all,
    respectful.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是要促进与团队的开放讨论，使他们思考如何成功地合作。保持开放、诚实，最重要的是，保持尊重。
- en: Retrospectives
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回顾会议
- en: Running retrospectives is something that if you practice agile you will be used
    to already. This technique focuses on getting the team together after each sprint
    and discussing the previous sprint in detail. Along with the **Scrum Master**,
    the team will look at the accomplishments of the last sprint as well as the things
    that did not go as planned and could be improved.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 进行回顾会议是敏捷实践中的一部分，你可能已经习惯了这种方式。这种技术侧重于在每个迭代结束后召集团队，详细讨论上一个迭代的内容。与**Scrum Master**一起，团队将回顾上一个迭代的成果以及那些未能按计划完成的事情，看看哪些可以改进。
- en: The atmosphere in retrospectives is one that fosters continuous improvement
    and learning. It is considered a safe space to discuss what is working, what may
    not be working, and what could be changed. Retrospectives are run after each sprint
    usually.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: For larger organizations, you could run them by leaders from each of your teams
    monthly to discuss the adoption of DevOps. Much like sprint retrospectives, discuss
    with your leaders what is working, what is not working, and what they would change
    about your DevOps transformation.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: The technique for running a retrospective is easy. A quick search will find
    numerous different ways of running a retrospective and from time to time, you
    should change how you run your retrospectives to keep the team engaged. I find
    them incredibly valuable to run as a leader and preparing for them takes no time
    at all. You should allow around 1 hour for your retrospective. You can even run
    them online very easily.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: If you complete your retrospective in the office, then for your meeting space,
    ensure you get a whiteboard and some markers, as well as sticky notes and a timer
    displayed somewhere easily visible.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: If you are running a remote retrospective, you can use software to have people
    place their virtual sticky notes on the appropriate heading. For in-person meetings,
    you can set up four different areas for people to place their sticky notes.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, for running a very simple retrospective, here is what you need to do with
    some appropriate timings:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '**Preparation (15 mins)**: Either digitally or on paper, set up four headings:
    *What Went Well*, *What Did Not Go Well*, *What Can We Do Better?*, and finally
    have one for *Actions*.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ground rules (5 mins)**: Take no more than a few minutes to explain and set
    the ground rules. The key thing for every retrospective is to remember comments
    are not personal; every comment is valid, so listen with an open mind. Set the
    time period you will discuss (last sprint, month, quarter, and so on) and focus
    on improvement rather than pointing blame.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**What went well (15 mins)**: Either write down and place upon the appropriate
    heading or create a digital card with your personal thoughts for what went well
    in the previous time period.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**What did not go well (15 mins)**: Either write down and place upon the appropriate
    heading or create a digital card with your personal thoughts for what did not
    go well in the previous time period.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**What can we do better? (15 mins)**: Either write down and place upon the
    appropriate heading or create a digital card with your personal thoughts for what
    you can do better compared to the previous time period.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Actions (10 mins)**: Finally, capture any actions from the retrospective.
    Ensure you take pictures of the outcomes or screenshots if you are working virtually.
    Discuss the ideas presented and assign responsibility for follow-up.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you end up with a large amount of action, then use a voting system to enable
    yourself as a team to prioritize any immediate actions. Good examples of voting
    systems include Lean Coffee and Scrum poker.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你面临大量的行动项，可以使用投票系统来帮助团队优先处理紧急事项。常见的投票系统示例包括 Lean Coffee 和 Scrum poker。
- en: Now that we understand what DevOps culture is, it's now necessary to understand
    why that culture is important.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们理解了 DevOps 文化是什么，接下来有必要了解这种文化为何如此重要。
- en: Why is culture important?
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么文化很重要？
- en: I always like to describe culture as the backbone of DevOps. Think of DevOps
    like a tree where you have people, processes, and technology as branches, but
    they're all connected by culture.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我总是喜欢把文化描述为 DevOps 的支柱。可以把 DevOps 想象成一棵树，其中有人员、流程和技术作为树枝，但它们都由文化相互连接。
- en: In my various years working in and around DevOps with different organizations,
    all the work I have done has taught me that you can have the best processes in
    the world, the best engineers, and the best technology to support it, but if you
    don't have the best culture and do not look to improve on that culture, then it's
    all wasted effort.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在我多年的 DevOps 工作经验中，服务于不同的组织，所有的工作都让我明白，即使拥有世界上最好的流程、最优秀的工程师以及最好的技术支持，但如果没有最好的文化，并且不去改进这种文化，那么一切努力都将是徒劳的。
- en: 'Earlier in the chapter, we listed out the three important aspects of culture
    in DevOps; let''s take a reminder of what those are:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章早些时候，我们列出了 DevOps 中文化的三个重要方面；我们来回顾一下这些内容：
- en: Increasing transparency
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 增加透明度
- en: Better communication
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的沟通
- en: Collaboration across teams
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队间的协作
- en: To understand why culture is important, let's take a look at these three areas
    in more detail. That way, we can build up a picture of why culture is so important.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解文化为何重要，我们来更详细地看看这三个方面。通过这种方式，我们可以逐步构建出文化为何如此重要的全貌。
- en: Increasing transparency
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 增加透明度
- en: Transparency is fundamental in many parts of business, but the further down
    the hierarchy you get, this can dilute, not on purpose but due to the way teams
    work and have worked historically. It is generally not the fault of specific individuals
    but rather a drift in culture from the organization as a whole.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 透明度在许多商业领域是基础，但随着层级的降低，透明度可能会稀释，这并非有意为之，而是因为团队的工作方式和历史积淀所致。这通常不是某个具体个人的过错，而是组织整体文化的漂移。
- en: Development teams are usually under a great deal of pressure to release software
    in their organization, which can lead to those teams going around the edges when
    it comes to controls put in place by operations. This single thing is what fundamentally
    leads to tension between teams as the developers now have infrastructure that
    is nonstandard and consumed in a way that operations cannot control. This all
    leads to what we call **shadow IT**.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 开发团队通常面临巨大的压力，要在组织内发布软件，这可能导致这些团队绕过运维团队所设定的控制措施。正是这一点根本上导致了团队之间的紧张关系，因为开发人员现在拥有非标准的基础设施，而且这种基础设施的使用方式无法被运维控制。这一切最终导致了我们所说的**影子
    IT**。
- en: You will find that many people point to public cloud services as a reason for
    this lack of transparency; however, this has been an issue long before the public
    cloud was even discussed. It is in fact the era of self-service that made this
    worse but even then, this has happened for a long time before either self-service
    or public cloud.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现，许多人将公共云服务视为缺乏透明度的原因；然而，这个问题早在公共云讨论之前就已经存在。事实上，正是自助服务时代使得这一问题更加严重，但即便在那之前，这一问题早已存在，无论是自助服务还是公共云的出现。
- en: If you think of developers requesting virtual machines from the self-service
    portal, the operations team will deploy that infrastructure with the operating
    system only. At that point, their operations have no insight into that infrastructure
    anymore.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把开发人员请求虚拟机的过程看作是通过自助门户进行的，运维团队将只部署操作系统的基础设施。此时，他们对该基础设施不再有任何洞察。
- en: You can say the same about the public cloud as well, and this is what happens
    in many organizations when developers voice their displeasure about the performance
    of operations slowing down their work. They go to a public cloud provider and
    consume the services themselves.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 关于公共云，你也可以做同样的解释，当开发人员表达对运维工作拖慢其进度的不满时，他们会转向公共云服务提供商，并自己使用这些服务。
- en: What are the three main disadvantages of this approach, though?
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种方法的三个主要缺点是什么？
- en: Verification of compliance with standards
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合规性标准的验证
- en: Infrastructure utilization and efficiency
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Infrastructure utilization and efficiency
- en: Cost control
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cost control
- en: Almost every organization I have spoken to at the start of their cloud journey
    has cited cost control as a problem. But what does this mean? Let's now look at
    some ways to improve transparency.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Almost every organization I have spoken to at the start of their cloud journey
    has cited cost control as a problem. But what does this mean? Let's now look at
    some ways to improve transparency.
- en: Verification of compliance with standards
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Verification of compliance with standards
- en: With the delivery of a baseline operating system, or for cloud-native resources
    the baseline configuration of that resource, applications that are deployed and
    any database instances deployed on the virtual machines are all items that have
    standards in most organizations for compliance.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: With the delivery of a baseline operating system, or for cloud-native resources
    the baseline configuration of that resource, applications that are deployed and
    any database instances deployed on the virtual machines are all items that have
    standards in most organizations for compliance.
- en: As an operations team, when you are blind to what is deployed on your servers
    and have limited control, you lose ground in your security posture and end up
    not knowing whether the applications and development tools are security patched.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: As an operations team, when you are blind to what is deployed on your servers
    and have limited control, you lose ground in your security posture and end up
    not knowing whether the applications and development tools are security patched.
- en: The exact same scenario can be said when consumed directly from a cloud provider
    without the knowledge of the operations team.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: The exact same scenario can be said when consumed directly from a cloud provider
    without the knowledge of the operations team.
- en: Infrastructure utilization and efficiency
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Infrastructure utilization and efficiency
- en: If your developers build 10 machines, with limited control, operations have
    no idea whether those resources are fully utilized, when they are utilized, whether
    they can be turned off outside of working hours, or whether they apply for a special
    licensing benefit.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: If your developers build 10 machines, with limited control, operations have
    no idea whether those resources are fully utilized, when they are utilized, whether
    they can be turned off outside of working hours, or whether they apply for a special
    licensing benefit.
- en: These decisions, or lack of decisions, can have implications for capacity planning
    and the future ability to scale the platform and build critical services.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: These decisions, or lack of decisions, can have implications for capacity planning
    and the future ability to scale the platform and build critical services.
- en: Cost control
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cost control
- en: Finally, developers are unlikely to realize the benefits of a cloud provider
    if they take that route on their own, the benefits of a scalable platform, and
    the benefits of overall spending a cloud platform can bring.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Finally, developers are unlikely to realize the benefits of a cloud provider
    if they take that route on their own, the benefits of a scalable platform, and
    the benefits of overall spending a cloud platform can bring.
- en: Spending outside of the main budget has an overall detrimental effect on the
    business and its ability to operate without distractions.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Spending outside of the main budget has an overall detrimental effect on the
    business and its ability to operate without distractions.
- en: Better communication
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Better communication
- en: Some of the things we have just discussed fall quite naturally into better communication
    as well. Imagine if developers and operations were able to communicate better
    with each other. From an infrastructure perspective, they could collaborate with
    operations to work on templates that match their requirements and operations could
    explain the controls in place for the security of the business.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Some of the things we have just discussed fall quite naturally into better communication
    as well. Imagine if developers and operations were able to communicate better
    with each other. From an infrastructure perspective, they could collaborate with
    operations to work on templates that match their requirements and operations could
    explain the controls in place for the security of the business.
- en: That mutual understanding then becomes working practice and the developers get
    the infrastructure builds in a timely manner and operations keep control.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: That mutual understanding then becomes working practice and the developers get
    the infrastructure builds in a timely manner and operations keep control.
- en: 'This isn''t the only place where better communication helps you build culture
    though. Communication can be made more efficient in a number of different ways:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 'This isn''t the only place where better communication helps you build culture
    though. Communication can be made more efficient in a number of different ways:'
- en: Operations participation in sprint planning
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Operations participation in sprint planning
- en: Developers performing releases
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Developers performing releases
- en: Operations working in development sprints
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Operations working in development sprints
- en: Developers working in operations
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Developers working in operations
- en: These examples may seem trivial, but they can have a real impact on the overall
    experience of those involved and can make them think about their interactions.
    Over time, this helps improve communication.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: These examples may seem trivial, but they can have a real impact on the overall
    experience of those involved and can make them think about their interactions.
    Over time, this helps improve communication.
- en: Operations participating in sprint planning
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Operations participating in sprint planning
- en: One of the classic pieces of feedback you will hear from operations teams is
    that developers rarely develop for the environment and that operational challenges,
    concerns, and requests are not taken into account.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: One of the models we discussed in the *Transformation topologies* section in
    [*Chapter 2*](B17192_02_Final_ASB_ePub.xhtml#_idTextAnchor038), *Business Benefits,
    Team Topologies, and Pitfalls of DevOps*, talks about bringing operations and
    developers closer together. In [*Chapter 1*](B17192_01_Final_ASB_ePub.xhtml#_idTextAnchor012),
    *Introducing DevOps and Agile*, we also discussed how agile plays a part in DevOps.
    When you start to move toward agile working, getting closer to one of the transformation
    topologies we explored, you will start to have operation teams working more closely
    with developers anyway.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: When operations participate in planning and before work on the sprint starts,
    they have a chance to voice any concerns about things the developers may not have
    considered that are in their field of expertise.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Starting this process early can have real benefits. At the beginning, it will
    be tricky, and it may feel unnatural for people who have not worked this way before,
    but persevere with it and the results will be clear.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: Completely changing the way people work presents them with challenges and you
    will come up against resistance.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: Developers performing releases
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For many organizations, it is the developers who take the compiled applications
    and release them to the production environment. Try having your developers work
    with operations to specifically perform releases.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: We want conversations between operations and development to be authentic and
    transparent. If both teams are notified of this change in the process in advance,
    it can lead to prepared statements and assumptions. Bring the operations team
    into a normal stand-up and allow this feedback to happen in real time.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: The benefit of doing this is that your developers should start to understand
    and have an appreciation of the work that needs to be done with every release
    of the application.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Operations working in development sprints
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In a similar fashion to previously, flip that around and have your operations
    teams do some work during the sprints with developers. Not only will they gain
    an appreciation and understanding of the development process, but you will also
    find that they can contribute during the sprint on operational matters.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Doing this can mean that operational issues are resolved during the development
    sprint and before release, rather than an issue coming up after release and causing
    more tension between teams.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: The majority of the time, you will find that operations teams cannot write software,
    so bring some of the operational tasks you would normally perform into the sprint,
    not only will you get better at communication, but you will start collaborating
    as well.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Developers working in operations
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Just as mentioned before, flip that idea on its head and have developers working
    with operations. This will give the developers an understanding of how important
    it is to understand the operational elements.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 正如之前提到的，颠覆这个想法，并让开发人员与运营人员一起工作。这将使开发人员了解理解运营元素的重要性。
- en: This working model can increase collaboration as well as communication and give
    a mutual understanding. Now developers understand what happens during an outage,
    how monitoring works, and how instrumentation in the application affects the operational
    processes, which will make a difference in how the application is developed, for
    the better.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这种工作模式可以增加协作和沟通，并达成共识。现在开发人员了解了故障期间发生的情况，监控如何工作，以及应用程序中的仪器化如何影响操作流程，这将对应用程序的开发产生积极影响。
- en: Collaboration across teams
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跨团队协作
- en: What exactly do we mean when we say collaboration? In the context of DevOps,
    it is working and creating together. Collaboration is essential for any business
    but when your teams are both diverse and global in presence, this is even more
    important.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们说协作时，我们到底是什么意思？在DevOps的背景下，它是一起工作和创造。协作对任何企业都是至关重要的，但当您的团队既多样又全球化时，这一点尤为重要。
- en: From a technology perspective, you'll find no shortage of tools to enable your
    teams to collaborate more. But when we talk about collaboration, how do we define
    it, and how can we improve it?
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度来看，您会发现许多工具可以帮助团队更好地协作。但当我们谈论协作时，我们如何定义它，以及如何改进它？
- en: Important note
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Collaboration tools can help, but they're not the whole solution. Choose a collaboration
    tooling that fits your needs the best.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 协作工具可以帮助，但它们并非整体解决方案。选择最适合您需求的协作工具。
- en: The primary goal of collaboration within DevOps is to reduce any operational
    delays that exist as well as communication gaps with teams that are geographically
    dispersed. This is the part of DevOps that requires the cultural step change so
    many people talk about.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 中协作的主要目标是减少存在的操作延迟，以及与地理分布的团队之间的沟通障碍。这是DevOps中需要文化性转变的部分，许多人都在谈论这一点。
- en: Your teams need both shared goal definitions and a single-team approach to their
    work. Identify a common set of goals, which lays the foundation for the future
    working relationship. Managers and leaders should also create a culture of inspiration,
    honesty, trust, and respect in their teams. This makes everyone feel like a part
    of the team and creates a stronger bond and message of what you are trying to
    achieve.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您的团队需要共享的目标定义以及一种团队一体化的工作方法。确定一组共同的目标，为未来的工作关系奠定基础。经理和领导还应在团队中营造鼓舞人心、诚实、信任和尊重的文化。这使每个人都感觉像是团队的一部分，并创造出更强的联系和您试图实现的信息传递。
- en: A clear roadmap is also critical that defines your path to success and helps
    in achieving the goals you have set out to do. The roadmap should be crystal clear
    with the avoidance of any ambiguity. Regular check-ins and discussions with your
    teams also help provide clarity as you progress.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 一个清晰的路线图同样至关重要，它定义了您成功的路径，并帮助实现您设定的目标。路线图应当清晰明了，避免任何歧义。随着进展，定期的跟进和与团队的讨论也有助于提供清晰度。
- en: One final point here is about diversity, which is key. A close-knit team requires
    you to get to know everyone and how they work, and even understanding their culture
    and personal situations. In remote teams, when people work in different time zones
    and have different cultures and religions, this is incredibly important.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一点是关于多样性的问题，这是关键。一个紧密结合的团队要求您了解每个人以及他们的工作方式，甚至理解他们的文化和个人情况。在远程团队中，当人们在不同的时区工作，并拥有不同的文化和宗教信仰时，这一点尤为重要。
- en: Now we understand in detail why culture in DevOps is important for our organization.
    Let's look at how you maintain that culture and develop it.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们详细了解了为何DevOps中的文化对我们的组织至关重要。让我们看看如何保持和发展这种文化。
- en: Maintaining a strong culture
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护强大的文化
- en: Now that you have spent time building up the culture in your organization, the
    last thing you want to do is see all that effort go to waste. It's important to
    maintain the culture you have built up so far, so it continues to foster the good
    practices you have put in place already. In fact, a survey by DZone ([https://dzone.com/articles/top-10-barriers-to-devops](https://dzone.com/articles/top-10-barriers-to-devops))
    found that 14% of people said culture was a barrier to DevOps adoption.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'As with most things, though, the daily running of a team and business can provide
    a number of threats to how strong you can maintain culture. Some things can even
    have a negative effect. Some of these might include the following:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Starters and leavers
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pushing too hard for success
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lack of innovation
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cultural differences
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lack of buy-in
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How can we avoid these roadblocks to our culture? Let's have a look at each
    of them.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Starters and leavers
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In any organization, people leave and people start. This is one of the most
    common elements of any business. Hopefully, the culture you have created means
    that when people leave, they are leaving for better opportunities that your business
    cannot provide, rather than leaving because of acrimonious reasons.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Knowing how to deal with starters and leavers in high-performing agile teams
    is something that agile leaders have to deal with all the time. It's important
    that you start off any new member of staff the way you mean to go on.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: This starts with making sure you bring the right people on board, which is easier
    said than done. As you already have an open culture with the team, seek out thoughts
    from the team about what a new member of staff should bring to the team. Be prepared
    to listen in a collaborative way, but also be prepared with your own ideas so
    you can counter if you feel the need.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to the interview process, include members of the team to validate
    your thinking on the individual's attributes and what they can bring to the business.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to leavers, following the practices you have in place should ensure
    that when a member of the team leaves, they don't leave a large hole in the way
    you work. Of course, people often become good friends with their colleagues and
    someone leaving can have an emotional impact on a team more than anything else.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Watch out, though, as this emotional impact can start to affect productivity
    and quality. The longer a team has worked together, the better rhythm they have
    together and when that is broken, it can have an effect on the team.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Replace the member of the team as soon as you possibly can to reduce any impact.
    Someone new in the team can often bring new ideas to everyone and give the team
    a renewed energy.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: When you have a significant change, run the roles and responsibilities exercise
    at the top of the chapter. Before the member of staff leaves, run a retrospective.
    If you think about it, that person leaving is a key moment and one that can be
    time-boxed. Learn from a wider perspective what worked, what did not work, and
    what could be improved.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Pushing too hard for success
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you have put lots of effort into building a culture and seen positive results,
    you can get into a mindset that makes you push too hard for more success. This
    can be as a team or as an individual. Either one of these will have a detrimental
    effect on what you have done so far and will be something you need to monitor
    closely.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: The simple reason to watch out for this is that when you start to push for success,
    you can slip back into old ways and cut corners to get more success. Stick to
    your guns, though, and don't overcommit work you cannot deliver and keep producing
    the strong results you have got used to at this point.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Following the processes of continuous feedback and continuous improvement will
    yield more success as you progress. Let it come naturally and don't force the
    issue.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: If you do that, you will find that success comes naturally to you and you don't
    need to push yourself or your team for more success.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: Lack of innovation
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One attribute of high-performing teams is their ability to innovate. Teams that
    are used to having the ability to innovate will continue to crave innovation.
    The ability to experiment and innovate is critical to the success of any business.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Watch out for the pace of innovation slowing down, or worse, other teams putting
    barriers up to your team innovating. This should be considered a red flag and
    one that makes you focus as a team to resolve the issues preventing you from innovating.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: Try not to get too distracted by this and deal with the situation as a leader,
    letting your team continue as normal. Do not, though, engage with the team and
    tell them they're no longer able to innovate.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Many DevOps professionals set themselves apart from others due to their ability
    to innovate quickly and come up with new ideas. Telling them they cannot do something
    that is within their domain of expertise is going to be damaging to the overall
    team and the culture you have built up.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Cultural differences
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have already talked a couple of times about remote teams, especially ones
    that are geographically dispersed. We discussed earlier as well about diversity
    and the important role that it plays.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Cultural differences also refer to those of the teams you work with. Everyone
    has an understanding of how things may be done within the organization. The problem,
    as we discussed, when looking at anti-patterns is that they may not line up with
    what you want to do as a team. The whole reason for this is why DevOps now exists.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: You can combat cultural differences in the team objectives by aligning goals.
    The key here is to keep doing this time and time again to make sure teams are
    tightly aligned. When team goals start to diverge is when they start to operate
    in old ways again.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Lack of buy-in
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Apart from the lack of innovation, one of the biggest impediments to maintaining
    culture is still the lack of buy-in. You may be thinking that to get to this point
    you have done the hard work and executives are already bought in. Of course, you
    are right, but just like in your own team, executives change, priorities of the
    business change, and the business trading environment can change.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: This is a common situation, and you need to make sure leaders are still bought
    into what you are doing, the reasons why you are doing it, and the results you
    have achieved so far to get you there.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to buy-in, don't be complacent. Leaders change, and with this
    change can come new ideas on how things should be done.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: To combat this, keep a note of the successes you have had as a team and make
    sure you can replay your journey along DevOps to show how that success has come
    about.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, it takes effort to not only build the culture but maintain it
    as well. Make sure you visit some of the tips and exercises shared in this section
    to keep the culture in your teams strong. Now, let's look at how to break down
    the silos that exist within your organization.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: Breaking down silos in your organization
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In DevOps, culture is brought about by the need to break down silos in your
    organization between certain teams. Silo mentality is behavior-driven and can
    be resolved using a number of techniques. A silo exists when teams operate independently
    and often have a crossover of their activities or lack of consideration for others'
    work.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: The danger of silos in the business world is that trust is destroyed, communication
    is cut off, and complacency starts to set into what you do day to day. Teams that
    are siloed cannot react to change quickly or take advantage of opportunities that
    present themselves.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: 'Worst of all is transparency, when data cannot be shared between teams freely,
    which impacts your ability to make data-driven decisions about your team or business.
    Some of the things we are about to discuss we have touched upon before:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Creating one vision for team collaboration
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working toward common goals with collaboration tools
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Educating together, working together, and training together
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Communicating often
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evaluating team compensation
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's look at each of these in a little more detail.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: Creating one vision for team collaboration
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We talked earlier about the importance of creating common goals for your teams
    and how they should also share one vision. It is counterproductive to have a vision
    for one team that is completely separate from another if they do no move toward
    a greater result.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: All teams should share, buy into, and adopt that one vision. When goals that
    conflict with other teams are set, silo mentality begins, meaning silos are often
    created by management.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: The leadership team must understand the long-term goals, departmental objectives,
    and key initiatives of the organization, before passing the unified vision down
    to the teams. The unified leadership team will, thanks to this approach, encourage
    trust, create a sense of empowerment, and break managers out of the *my department*
    mentality and into the *our organization* mentality.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Working toward common goals with collaboration tools
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The biggest downside to the silo mentality is that people see things from their
    perspective. This, of course, is not always a bad thing, but when this happens,
    people will make choices toward their own team, rather than from the company perspective.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: One of the simplest ways to keep everyone on point with common goals is to use
    a dashboard to highlight progress toward your common goals. This is a form of
    collaboration.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: When organizations give their employees quality tools for collaboration, people
    will naturally share more information and because of that communicate better with
    each other.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Finally, when the entire organization looks to understand each department (sometimes
    each team) and the specific issues they face on a day-to-day basis, departmental
    goals can become the goals of the entire company.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Educating together, working together, and training together
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: From experience, one of the easiest ways to break down silo thinking is to perform
    cross-organization exercises and events. Training on this level can really help
    start breaking down silos as they get to know other people in the organization.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: Working together can also have a big impact. Consider the idea of sitting people
    closer to each other if feasible. When people work close to others, they build
    rapport; as problems in their work arise, they look to those close by for answers.
    This can have a big impact.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Specific training is also a key way to make sure that you can shift the silo
    mindset from your organization. This training involves supporting the ideas of
    collaboration, teamwork, and communication.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Communicating often
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I firmly believe you cannot over-communicate. Regardless of the situation, frequency
    of communication is very important. When you communicate often, this introduces
    a level of trust and transparency.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: When teams feel this level of trust and transparency, data flows between teams
    and facilitates the breaking down of silos rather than breaking them down by one
    action of communication.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: Organizational structure is a silo and some organizations try and remove this
    structure to remove silos. This will not always work though. It's more effective
    to communicate properly in this situation than to remove that organizational structure,
    which is important to the delegation of duties.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Evaluating team compensation
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Competition between teams can be very healthy, but compensation plans between
    teams can create silos and an unhealthy relationship where competition becomes
    the goal rather than working together.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: If you have bonus or compensation plans within your business, make sure that
    they reflect the goals you set as an organization and do not play teams off against
    each other and what they are setting out to do.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: When compensation plans align with the company goals, employees are driven to
    collaborate, communicate, and achieve goals together.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have looked at DevOps culture and understood why culture
    is important in DevOps. We have discussed the need for increased transparency
    and better communication and the need to maintain a strong culture. Finally, we
    discussed the need to break down silos in your organization and the importance
    of this in DevOps.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll explore anti-patterns in DevOps and discuss how to
    avoid them.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s now recap some of what we have learned throughout this chapter:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: What are the key pillars of culture?
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) Roles and responsibilities, rules of engagement, and retrospectives
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b) Teamwork and collaboration
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c) Great social life with colleagues and retrospectives
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d) Completing work as quickly as possible and pushing other teams hard
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How can you promote better communication in your organization?
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) Have developers take time off.
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b) Take everyone on team-building courses.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c) Have developers perform releases.
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d) Let your operations team block all releases.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
