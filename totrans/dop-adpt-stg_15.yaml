- en: '*Chapter 11*: Keeping Up with Key DevOps Trends'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A number of different disciplines now exist that look to build upon the core
    principles and practices of DevOps and target different areas of the business,
    and even specific departments. Terms such as DataOps, GitOps, and DevSecOps are
    now common terminology in the industry and tooling exists for each of these, too.
    In this chapter, we look at some of these trends in more detail to understand
    what they are, what their goal is, and what tooling can be used.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will understand some of the key trends associated
    with DevOps specialties, understand what they are, how they apply to organizations,
    and how tooling can be used within them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: What is XOps?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the DataOps ecosystem
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the DevSecOps ecosystem
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the GitOps ecosystem
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is XOps?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**XOps** is a general catch-all term that describes the adoption of other forms
    of operations both inside and outside of technology. In this context, DevOps is
    really just the tip of the iceberg.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: DevOps is just the beginning. You can also include BizOps, FinOps, AIOps, and
    MarketingOps as a start, but the term *XOps* covers more than just the ones listed
    here. These are all cross-functional efforts, like DevOps is, but do organizations
    really need all of them, even some of them, or is the movement just hype?
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: One thing we can all agree on is that all organizations are at their own stages
    of maturity. The factors for this include their size, age, industry, technical
    adoption, budgets, and, of course, culture.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: Organizations are increasingly requiring the benefits of what these different
    kinds of operation models provide. Some organizations will implement as many of
    them as possible, while some will implement what they need and even manipulate
    the processes and level of adoption to best fit with their organization.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: This does not mean that the results will be any different depending on the factors
    previously mentioned. As with DevOps, the key element that all of these models
    have in common is the focus on value, which is something unique to each organization.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Where did XOps begin?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some people believe that XOps is just hype, hype that will disappear, and that
    much of what is proposed is a relabeling of what already exists. You can say the
    same about DevOps as well, but it is the way that practices within DevOps are
    brought together and not left fragmented that delivers real value to organizations.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Like DevOps, most of the types of operation models will look at the acceleration
    of the process and improvements in quality when it comes to what they deliver.
    For example, in DataOps, this would be data, and analytical insights into operations
    performance for AIOps.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Those who believe that XOps is overhyped believe that the risk is that fragmentation
    is created by the different groups that are involved. This fragmentation further
    dilutes the faster value that is created and creates a level of additional bureaucracy.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 那些认为XOps被过度炒作的人认为，风险在于不同的参与群体可能会导致碎片化。这种碎片化进一步稀释了更快创造的价值，并且产生了额外的官僚主义。
- en: Important note
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Agility has been at the heart of XOps since the turn of the millennium. Business
    leaders have since been aware that their organizations need to be more Agile in
    order to stay competitive in their industry.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷性自千禧年初以来一直是XOps的核心。自那时以来，商业领袖已经意识到，他们的组织需要更加敏捷，以便在行业中保持竞争力。
- en: Agile practices that form part of XOps have been around for some time and have
    been rising further up the business stack for some time. Sadly, some leaders take
    the view that agility will equal the ability to do more with less.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为XOps一部分的敏捷实践已经存在了一段时间，并且在商业领域中的地位逐渐上升。不幸的是，一些领导者认为敏捷就等于用更少的资源做更多的事。
- en: The truth is that fundamentally, agility backed up with solid processes provides
    your organization with the ability to scale when needed, deliver more value to
    your end users, improve your processes, and your efficiency.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，从根本上说，背靠扎实流程的敏捷性为您的组织提供了在需要时进行扩展的能力，能够为终端用户提供更多价值，改进您的流程，并提高效率。
- en: The link between XOps and DevOps is not just in the similarities in names, approaches
    to achieving the gold standard, or the processes involved. Culture is an important
    part of DevOps, specifically regarding the ability to improve your communication
    and collaboration in your organization.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: XOps和DevOps之间的联系不仅仅体现在名称的相似性、实现黄金标准的方法或相关流程上。文化是DevOps的重要组成部分，特别是在改善组织内沟通与协作的能力方面。
- en: Other important aspects that XOps takes from DevOps is the focus on continuous
    improvement, as well as the focus on the automation of tasks. Technical staff
    often forget that process automation does not just have to be on technical elements
    of the process. After all, business process automation was around long before
    DevOps was conceived.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: XOps从DevOps借鉴的其他重要方面包括关注持续改进以及任务自动化。技术人员常常忽略，流程自动化不仅仅局限于技术层面的流程。毕竟，业务流程自动化早在DevOps诞生之前就已经存在了。
- en: Understanding the XOps landscape
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解XOps格局
- en: To understand the XOps landscape further, let's look at two of the common initiatives
    in XOps, which are FinOps and CloudOps. We will learn about DataOps, DevSecOps,
    and GitOps in more detail later in this chapter.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步了解XOps格局，让我们来看一下XOps中的两个常见倡议：FinOps和CloudOps。我们将在本章稍后详细了解DataOps、DevSecOps和GitOps。
- en: FinOps
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: FinOps
- en: FinOps is also known as Cloud Financial Management, and it is the amalgamation
    of finance and operations teams within an organization. Specifically, FinOps focuses
    on the processes involved in managing financial operations while linking together
    the people involved, the processes, and, of course, the technology.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: FinOps也被称为云财务管理，它是组织内部财务和运营团队的融合。具体而言，FinOps专注于管理财务运营的过程，同时将相关人员、流程以及技术相结合。
- en: The need for FinOps arises from the traditional financial model in IT, which
    worked separately from other teams and lacked a level of data-driven decision
    making and technical modernization for managing scalable, cloud-enabled applications.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: FinOps的需求来源于传统的IT财务模型，该模型与其他团队分开运作，缺乏基于数据的决策制定和技术现代化来管理可扩展的、云支持的应用程序。
- en: Limitations regarding the lack of flexibility concerning business requirements
    only inflated the costs, which make the system slow moving and more expensive.
    As a result of this, organizations needed to come up with a method for providing
    cost control for their highly scalable cloud environments, understand what those
    costs are, how they are occurring, and keep track of their cloud spend.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 关于商业需求缺乏灵活性的问题只会使成本膨胀，这使得系统运作缓慢且更加昂贵。因此，组织需要提出一种方法，为其高度可扩展的云环境提供成本控制，了解这些成本是什么，如何发生，并跟踪云支出。
- en: As the cloud has evolved, so has the need for the ability to provide chargeback
    of services hosted in cloud environments for other parts of the organization.
    The granular costs involved with cloud computing have made the idea of chargeback
    simpler in many ways, but it is actually hard to implement.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Complexities around how to bill for shared services such as network and storage
    make it difficult to realize how these costs can be charged back to various departments.
    These fabric-level services, or core services, are often consumed by the technology
    department, while application services are charged back to cost centers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: To have robust practices regarding FinOps, it is important to follow three phases
    of adoption. These phases are inform, optimize, and operate. The first phase,
    *inform*, looks at a detailed assessment of assets, budget allocation, and providing
    an understanding of industry standards to detect areas of improvement.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: The second phase, *optimize*, helps to set alerts and metrics that identify
    any areas that need to both spend and redistribute resources. These generate decision-making
    capabilities and provide recommendations on architecture changes where required.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: The final phase, *operate*, assists in tracking costs and cost control mechanisms
    at a resource level. FinOps provides a level of flexibility in operations, but
    maintains financial accountability to the variable costs that are associated with
    cloud platforms.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: CloudOps
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: CloudOps is the process of defining and identifying operational procedures,
    which are appropriate to optimizing services within cloud environments. CloudOps
    is a bringing together of DevOps and traditional operations allowing cloud platforms,
    applications, and data to provide further technical strengthening while maintaining
    services.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: For organizations to accelerate agility any further, they must keep a check
    on any budget constraints, such as waste and overrun. This is one of the reasons
    why organizations decide to move to cloud platforms for their workloads.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: CloudOps provides predictability and proactiveness and helps enhance visibility
    and governance. In maintaining on-premises locations, the associated power, network,
    storage, and high availability are always a challenge. This is easier in the cloud
    even though challenges remain, but those challenges differ from on-premises.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Since CloudOps is an extension of DevOps, it aims to build cloud operations
    teams that are responsible for post-migration applications on cloud platforms.
    Governance tools that optimize costs, enhance security posture, and provide capacity
    planning are essential in CloudOps. It also promotes the notion of continuous
    monitoring as well as the management of cloud applications with smaller numbers
    of resources.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Automation provides techniques to increase the agility, speed, and performance
    of cloud applications. Automation in CloudOps also facilitates the handling of
    services, incidents, and problems in a smooth manner. Combining elements of DevOps
    such as continuous integration and continuous deployment with infrastructure services
    and introducing infrastructure as code provides high levels of automation, increases
    the value of CloudOps, and provides level scalability not previously seen by operations
    teams.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Approach to XOps
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's look at an example approach to XOps. The objective is to transform what
    is currently a monolithic application into a microservice architecture. Additionally,
    the migration process should be automated, along with separate environments for
    production, UAT, and test.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: The primary identity should be managed by the DevOps team. This allows you to
    manage users and groups as well as third-party services and applications. This
    approach advocates collaborative culture.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, to make resources modular, the team generates container-based modules
    for multiple resources, and stacks are then broken down, making them scalable
    and ensuring that deployment is easier.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Maintenance and debugging with this approach become simpler for development
    teams as well, and automated processes help enhance code quality. Role-based access
    control ensures secure authentication and authorization.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: The deployment of centralized systems for logging and monitoring allows views
    of performance, availability, and security on centralized dashboards. This helps
    to provide cost-effectiveness and improve the performance of the application.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Here, we have discussed a number of disciplines, such as DevOps, CloudOps, and
    FinOps, to make this happen.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: We now have an understanding of the term *XOps*. We understand where XOps came
    from and the landscape of XOps. Let's now look at the DataOps ecosystem in more
    detail.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the DataOps ecosystem
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the most common misconceptions around DataOps is that under the covers,
    it is just DevOps applied to data analytics. While the name shares similarities
    with both DevOps and DataOps, they're not the same.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'Look at the following diagram, which depicts the DevOps loop:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.1 – Graphic showing the phases of DevOps in an infinite loop'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17192_11_01.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.1 – Graphic showing the phases of DevOps in an infinite loop
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: 'DevOps is often depicted as an infinite loop. As you can see in the previous
    diagram, DataOps is different. When illustrating DataOps, it is shown as an intersection
    of value and innovation pipelines, as you can see in the following diagram:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.2 – DataOps depiction showing a value pipeline along the top and
    innovation from bottom to top'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17192_11_02.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.2 – DataOps depiction showing a value pipeline along the top and innovation
    from bottom to top
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: DataOps communicates that data analytics can achieve what DevOps accomplished
    for software development. That is, when data teams use new tools and methodologies,
    DataOps can result in an order of magnitude improvement in quality and cycle time.
    The specific methods by which DataOps achieves these gains reflect the distinct
    people, processes, and tools that characterize data teams.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: The Agile methodology is particularly useful in environments where requirements
    evolve quickly and often change. This is a situation that data professionals will
    understand all too well. Like in DevOps, Agile in DataOps allows organizations
    to respond very quickly to requirements and accelerate the time to value.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: DataOps is also as much about managing people as it is about the tools. The
    needs and preferences of stakeholders are one subtle difference between DataOps
    and DevOps.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: In DevOps, our users are software engineers and operations engineers who are
    comfortable with coding, the complexity involved with multiple languages in one
    environment, as well as hardware and software. However, in DataOps, our users
    are data scientists, engineers, and analysts who analyze data and build complex
    data models.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: DevOps was developed to meet the needs of software developers. Dev engineers
    enjoy coding and are technologically savvy. Learning a new language or deploying
    a new tool is an opportunity, not a burden. They take a keen interest in all aspects
    of code creation, integration, and deployment. DevOps welcomes complexity.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: DataOps users are frequently the polar opposite of that. They are data scientists
    or analysts who specialize in the development and deployment of models and visualizations.
    Engineers are typically more technically savvy than scientists and analysts. They
    concentrate on domain expertise. They are interested in making models more predictive
    or determining the best way to visually render data.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: The technology used to create these models and visualizations is merely a tool.
    Data professionals are happiest when they only use one or two tools. Anything
    more adds unwelcome complexity. In the most extreme cases, the complexity exceeds
    their ability to manage it.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: DataOps recognizes that data professionals live in a multi-tool, heterogeneous
    world, and strives to make it more manageable for them.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Understanding processes involved in DataOps
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By examining data analytics development and life cycle processes, we can begin
    to understand the unique complexity that data professionals face. We discovered
    that data analytics professionals face challenges that are both similar to and
    distinct from those faced by software developers.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: In DevOps, the life cycle starts with the planning phase, and this feeds back
    to the beginning, which is the code phase. Hence, the process iterates indefinitely.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 'The DataOps life cycle shares these iterative characteristics, but there is
    a significant difference: DataOps consists of two active and intersecting pipelines.
    The previously mentioned data factory is a single pipeline. The other pipeline
    governs how the data factory is updated, which includes the creation and deployment
    of new analytics into the data pipeline.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: DataOps 生命周期具有这些迭代特征，但有一个显著的区别：DataOps 由两个活跃且交叉的管道组成。之前提到的数据工厂是单一管道。另一个管道管理数据工厂的更新方式，包括创建和部署新分析到数据管道中。
- en: The process by which new analytic ideas are introduced into the value pipeline
    is referred to as the innovation pipeline. Although the innovation pipeline conceptually
    resembles the DevOps development process, several factors make the DataOps development
    process more difficult than DevOps.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 将新分析思想引入价值管道的过程被称为创新管道。尽管创新管道在概念上类似于 DevOps 开发过程，但有几个因素使得 DataOps 开发过程比 DevOps
    更加复杂。
- en: Understanding tools involved in DataOps
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解 DataOps 中涉及的工具
- en: 'To deliver a reliable data pipeline, the tooling to directly and indirectly
    support DataOps needs can be broken down into five steps, leveraging existing
    analytics tools along with toolchain components meant to address source control
    management, process management, and efficient communication among groups:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了交付一个可靠的数据管道，直接和间接支持 DataOps 需求的工具可以分为五个步骤，利用现有的分析工具以及旨在解决源代码管理、过程管理和小组之间高效沟通的工具链组件：
- en: Source control management
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码管理
- en: Automation of processes and workflow
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过程和工作流的自动化
- en: Adding data and logic tests
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加数据和逻辑测试
- en: Working without fear with consistent deployment
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在一致的部署中无畏地工作
- en: Implementing communication and process management
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施沟通和过程管理
- en: Now, let's provide a little more detail regarding these five steps.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更详细地介绍这五个步骤。
- en: Source control management
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 源代码管理
- en: A data pipeline is nothing more than source code that is responsible for converting
    raw data into usable information. We can automate the data pipeline from start
    to finish, resulting in reproducible source code. A revision control tool (such
    as GitHub) aids in the storage and management of all changes to code and configuration
    in order to reduce inconsistent deployment.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 数据管道不过是负责将原始数据转换为可用信息的源代码。我们可以自动化整个数据管道，从开始到结束，生成可复现的源代码。版本控制工具（如 GitHub）有助于存储和管理代码和配置的所有更改，从而减少不一致的部署。
- en: Automation of processes and workflow
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过程和工作流的自动化
- en: Automation is essential for the success of the DataOps methodology, which necessitates
    the design of a data pipeline with runtime flexibility. Automated data curation
    services, metadata management, data governance, master data management, and self-service
    interaction are critical requirements for achieving this.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化对于 DataOps 方法的成功至关重要，这需要设计具有运行时灵活性的数据管道。自动化数据策划服务、元数据管理、数据治理、主数据管理和自助互动是实现这一目标的关键需求。
- en: Adding data and logic tests
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加数据和逻辑测试
- en: To ensure that the data pipeline is working properly, inputs, outputs, and business
    logic must be tested. To ensure consistent data quality, the data pipeline is
    tested at each stage for accuracy or potential deviation, as well as errors or
    warnings.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保数据管道正常工作，必须对输入、输出和业务逻辑进行测试。为了确保数据质量的一致性，数据管道在每个阶段都要进行准确性或潜在偏差的测试，以及错误或警告的检查。
- en: Working without fear with consistent deployment
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在一致的部署中无畏地工作
- en: Data analytics professionals are terrified of introducing changes that will
    disrupt the current data pipeline. This can be addressed with two key workflows
    that will be integrated later in production. For starters, the value pipeline
    generates ongoing value for organizations. Second, the innovation pipeline consists
    of new analytics in the development stage that are later added to the production
    pipeline.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析专业人员害怕引入会破坏当前数据管道的更改。这个问题可以通过两个关键工作流来解决，这两个工作流将在生产中后期集成。首先，价值管道为组织生成持续的价值。其次，创新管道由处于开发阶段的新分析组成，后来这些分析会被添加到生产管道中。
- en: Implementing communication and process management
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施沟通和过程管理
- en: Within a DataOps practice, efficient and automated notifications are critical.
    When changes are made to any source code, or a data pipeline is triggered, failed,
    completed, or deployed, the appropriate stakeholders can be immediately notified.
    The toolchain also includes tools for facilitating cross-stakeholder communication
    (think Slack or Trello).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DataOps 实践中，高效且自动化的通知至关重要。当源代码发生更改，或数据管道被触发、失败、完成或部署时，相关利益相关者可以立即收到通知。工具链还包括促进跨利益相关者沟通的工具（如
    Slack 或 Trello）。
- en: We now have an understanding of what DataOps is, what it tries to achieve when
    implemented correctly, as well as an understanding of the processes and tooling
    involved in the DataOps life cycle. Now, let's look at the DevSecOps ecosystem.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经了解了什么是 DataOps，实施正确时它所期望达成的目标，以及涉及的 DataOps 生命周期中的流程和工具。现在，让我们来看看 DevSecOps
    生态系统。
- en: Understanding the DevSecOps ecosystem
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 DevSecOps 生态系统
- en: '**DevSecOps** is a software industry culture shift that aims to incorporate
    security into the rapid-release cycles typical of modern application development
    and deployment, also known as the DevOps movement. Embracing this shift-left mindset
    necessitates organizations bridging the gap that typically exists between development
    and security teams, to the point where many of the security processes are automated
    and handled by engineering teams.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**DevSecOps** 是一种软件行业的文化变革，旨在将安全性融入现代应用开发和部署中典型的快速发布周期，这也被称为 DevOps 运动。拥抱这种“向左推进”的思维方式要求组织弥合开发团队和安全团队之间通常存在的差距，以至于许多安全流程可以自动化并由工程团队处理。'
- en: 'The following diagram helps depict how security fits into the existing DevOps
    loop:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表帮助说明安全性如何融入现有的 DevOps 循环：
- en: '![Figure 11.3 – Diagram showing the interaction between DevOps and DevSecOps'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 11.3 – 显示 DevOps 与 DevSecOps 交互的图示'
- en: '](img/B17192_11_03.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17192_11_03.jpg)'
- en: Figure 11.3 – Diagram showing the interaction between DevOps and DevSecOps
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – 显示 DevOps 与 DevSecOps 交互的图示
- en: Historically, major software developers would release new versions of their
    applications every few months, if not years. This gave the code enough time to
    go through quality assurance and security testing, which was handled by separate
    specialized teams, either internal or externally contracted.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，主要的软件开发商通常每几个月甚至几年发布一次其应用的新版本。这给代码足够的时间进行质量保证和安全测试，这些测试由独立的专业团队（无论是内部团队还是外包团队）处理。
- en: However, the last 10 years have seen a rise in public clouds, containers, and
    the microservice model, which divides monolithic applications into smaller parts
    that run independently. This breakdown has also had a direct impact on the way
    software is developed, resulting in rolling releases and Agile development practices
    in which new features and code are constantly pushed into production at a rapid
    pace.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在过去的 10 年里，公共云、容器以及微服务模型的兴起，已经将单体应用程序拆分成可以独立运行的更小部分。这一分解也直接影响了软件开发方式，导致了滚动发布和敏捷开发实践，在这种模式下，新特性和代码以快速的速度不断推送到生产环境中。
- en: DevSecOps combines DevOps and SecOps to form a cyclical practice for software
    development, technology operations, and cybersecurity.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: DevSecOps 将 DevOps 和 SecOps 结合，形成一个软件开发、技术运营和网络安全的循环实践。
- en: DevSecOps aims to promote the rapid development of a secure code base. Rather
    than emphasizing development speed or security, the DevSecOps methodology assists
    developers and security professionals in striking a healthy balance. The use of
    an Agile framework allows development and security teams to collaborate continuously.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: DevSecOps 的目标是推动安全代码库的快速发展。DevSecOps 方法论并不单纯强调开发速度或安全性，而是帮助开发人员和安全专家在两者之间找到一个健康的平衡点。使用敏捷框架使得开发和安全团队能够持续合作。
- en: DevOps and DevSecOps methodologies are similar in many ways, including the use
    of automation and continuous processes to establish collaborative development
    cycles. While DevOps promotes delivery speed, DevSecOps promotes security.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 和 DevSecOps 方法论在许多方面是相似的，包括利用自动化和持续流程来建立协作开发周期。虽然 DevOps 强调交付速度，DevSecOps
    更加注重安全性。
- en: DevSecOps practices may initially increase development time, but they will ensure
    that the code base is secure from the start. After some practice, and once security
    has been fully integrated into the development process, teams will benefit from
    increased writing and delivery speed for secure code bases.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: Understanding processes involved in DevSecOps
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many of the processes involved in DevSecOps are not new. Your organization will
    hopefully be practicing them already. The main difference will be that current
    processes may not be optimal for use in a DevSecOps environment.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: 'A good starting point to look at what needs to be changed in your processes
    is to look at the *DevSecOps manifesto* ([https://www.devsecops.org](https://www.devsecops.org)).
    In a similar way to the Agile manifesto, the DevSecOps manifesto lays out nine
    points to mature your information security practice. These are as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Leaning in over and always saying no
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data and security science over fear, uncertainty, and doubt
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open contribution and collaboration over security-only requirements
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consumable security services with APIs over mandated security controls
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business-driven security scores over rubber stamp security
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red and blue team exploit testing over relying on scans and theoretical vulnerabilities
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 24x7 proactive monitoring over reacting
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shared threat intelligence over keeping information to ourselves
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compliance operations over clipboards and checklists
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can see that most of what the manifesto lays out involves the maturity of
    your existing investments in information security and goes a long way to retracting
    some of the negative connotations that have become attached to information security
    over the years.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'DevSecOps is hard, but when done well, you can significantly improve your security
    posture, as well as your understanding of security within your organization. To
    shift to the DevSecOps way of thinking, these five steps should be followed:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: DevSecOps is a cultural change.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Align practices with the development workflow.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Demonstrable evidence that security keeps pace with velocity.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change from prevention to detection.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the security budget to support the development workflow.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Let's have a look at the further five steps to understand the implementation.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: DevSecOps is a cultural change
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Adopting a DevSecOps approach will be a massive undertaking for most businesses,
    so be mindful of how significant a cultural shift it is. Start a conversation,
    be brave, and be the one to take the first step toward change. It will be easier
    to find common ground and reach an agreement if you engage in a clear and simple
    manner that highlights the business, efficiency, and security benefits for each
    organization.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Align practices with the development workflow
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is critical that when you engage in discussions with development teams, you
    do not bring your current security practices to the table and expect them to change
    the way they develop code.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: Obviously, you should not disregard your security needs in terms of monitoring,
    risk assessment, and so on, but you must be willing to change your security practices
    to align with the development workflow. If you tried to base your DevSecOps approach
    on how you traditionally approach security, the entire speed and cadence of your
    production releases would stall.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Demonstrable evidence that security keeps pace with velocity
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Your development, operations, or DevOps teams will most likely be hesitant to
    welcome your security teams or professionals into their *way of doing things*.
    You can overcome this hesitance by offering visibility and monitoring services,
    as well as collaborating to map your processes and identify opportunities to support
    agility.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: Early on, you should be less concerned with enforcement, blocking activities,
    and slowing down the pipeline, and more concerned with demonstrating that security
    can keep up with the velocity with which your development teams are building so
    much product to ensure that the pipeline runs smoothly.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Change from prevention to detection
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once security has established itself in the development workflow, you can consider
    shifting from a monitoring and visibility role to proactively identifying vulnerabilities
    in code. The security team can become the development team's best friend in this
    situation.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Using your security budget to support the development workflow
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Finally, consider your own security budget. Are there any areas where you can
    redirect some security budget to that workflow pipeline as you change your practices
    to align with the development workflow? This demonstrates your commitment to the
    sustainability of security in every release by devoting additional resources to
    the continuous integration and continuous deployment pipeline.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Understanding tools involved in DevSecOps
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As DevSecOps is closely aligned from a process perspective with the DevOps
    life cycle, the tooling involved in DevSecOps closely aligns with the flow of
    the DevOps life cycle. The tooling in DevSecOps therefore lines up with the eight
    different phases of DevOps. These are the phases, along with common security tooling
    and processes, that you might find at each point:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '**Plan**: Threat modeling'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Code**: Static analysis and code review'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Build**: Penetration testing'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test**: Compliance validation'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Release**: Logging'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deploy**: Auditing'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operate**: Threat intelligence'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitor**: Detect, respond, recover'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, let's have a look at some of these in more detail to understand some specifics
    regarding the tooling used.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Threat modeling
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Unfortunately, threat modeling has long been regarded as a time-consuming and
    labor-intensive activity. As a result, as organizations adopt a DevSecOps approach,
    threat modeling is frequently left out of the security practices employed. However,
    the importance of thread modeling in development should not be underestimated.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: According to the *2020 DevSecOps Insights Report* ([https://snyk.io/wp-content/uploads/dso_2020.pdf](https://snyk.io/wp-content/uploads/dso_2020.pdf)),
    threat modeling has a significant positive impact on a team's overall confidence
    in their code's security.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: At its core, threat modeling is intended to examine planned software to identify
    what might go wrong if an attacker targets that software. The purpose of this
    analysis is to inform the development team about which security controls should
    be considered as part of their implementation. Traditionally, threat modeling
    has been done with a broad scope across the entire application context. As part
    of this process, data flow diagrams, detailed threat analysis frameworks, and
    prescriptive threat prioritization methodologies are frequently used.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Static analysis
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Static analysis tools, or **Static Application Security Testing** (**SAST**),
    work well with almost any software automation toolchain, as well as any development
    methodology and process. This is primarily because they can be used locally by
    developers at their desktop for instantaneous feedback and to analyze a complete
    build, whether it is done hourly or at whatever other cadence.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, because they do not require interaction with testers or developers,
    SAST tools are completely autonomous. They are useful whenever it is necessary
    to check the code for bugs and security vulnerabilities.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Although not a panacea when used alone, these tools should be used in tandem
    with other automation tools. As software teams begin to integrate security into
    their DevOps processes, tools such as *SonarQube* ([https://www.sonarqube.org](https://www.sonarqube.org))
    are simple to implement and integrate into the automation pipeline. By detecting
    vulnerabilities early and preventing them from entering later in the development
    cycle, the pipeline pays off in reducing security fixes later.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: Penetration testing
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While automated tools in your pipeline can go a long way to detecting many different
    vulnerabilities, you will likely still have a need for penetration testing tools.
    Traditionally speaking, penetration testing is an art and a science in many ways.
    You would be forgiven for thinking that penetration testing and the focus on speed,
    frequency, and repeatability with DevOps would mean DevOps and penetration testing
    are juxtaposed.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '*BreachLock* ([https://www.breachlock.com](https://www.breachlock.com)), for
    example, can be fully integrated into a DevOps environment by performing end-to-end
    security testing for your product, ensuring the speed, reliability, and consistency
    of your development process.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: Threat intelligence
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Visibility for threat intelligence grows as more components of the environment
    are defined and documented in code. Many organizations struggle to identify their
    IT assets in such a way that threat intelligence can be effectively linked to
    the assets in their environment. By ensuring that processes are in place to feed
    metadata from the DevSecOps pipeline to threat intelligence capabilities, the
    organization can ensure that the right intelligence is gathered and applied, and
    responded to in a risk-prioritized manner.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: We now have an understanding of what DevSecOps is, what it tries to achieve
    when implemented correctly, as well as an understanding of the processes and tooling
    involved in the DevSecOps life cycle. Now, let's look at the GitOps ecosystem.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the GitOps ecosystem
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GitOps is a technique for implementing continuous deployment in cloud-native
    applications. It focuses on providing a developer-centric experience when operating
    infrastructure by utilizing tools that developers are already familiar with, such
    as Git and continuous deployment tools.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: The core concept of GitOps is to have a Git repository that always contains
    declarative descriptions of the infrastructure that is currently desired in the
    production environment, as well as an automated process to match the described
    state in the repository. If you want to deploy a new application or update an
    existing one, all you have to do is update the repository; the automated process
    will handle the rest. It's like having cruise control for managing your production
    applications.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: While we are specifically talking about Git, you can use any source control
    repository to achieve the same results.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: GitOps provides a complete history of how your environment has changed over
    time. This makes error recovery as simple as running `git revert` and watching
    your environment restore itself.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: GitOps enables you to manage deployments entirely from within your environment.
    Your environment only requires access to your repository and image registry for
    this purpose. That is all there is to it. You are not required to grant your developers
    direct access to the environment.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: When you use Git to store complete descriptions of your deployed infrastructure,
    everyone on your team can see how it evolves over time. With excellent commit
    messages, anyone can easily reproduce the thought process of changing infrastructure
    and find examples of how to set up new systems.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: The deployment process in GitOps is organized around code repositories as the
    central element. There are at least two repositories, one for the application
    and one for the environment configuration. The application repository contains
    the application's source code as well as the deployment manifests used to deploy
    the application.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: The environment configuration repository contains all deployment manifests for
    a deployment environment's currently desired infrastructure. It specifies which
    applications and infrastructure services should be run in the deployment environment
    and with what configuration and version.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: GitOps is a highly effective workflow pattern for managing modern cloud infrastructure.
    Despite its primary focus on Kubernetes cluster management, the DevOps community
    is applying and publishing GitOps solutions to non-Kubernetes systems. GitOps
    can benefit an engineering team in a variety of ways, including improved communication,
    visibility, stability, and system reliability.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: Understanding processes involved in GitOps
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The great thing about GitOps is that you don't need to be doing anything differently.
    If you are already writing infrastructure as code and you store your code in a
    repository, then you are almost there already.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: The hardest thing is moving from an imperative method of deployment to a declarative
    method of deployment. Infrastructure as code promotes a declarative approach to
    system administration, which has led to the development of tools such as Ansible,
    Terraform, and Kubernetes, which all use static files to declare configuration.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the following imperative statements, which are steps for deploying
    an application:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: Install the operating system.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install these dependencies.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the application from this URL.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Move the application to this directory.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat this thrice on three other servers.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The declarative version of this would simply be something like *Four machines
    have an application from this URL, installed at this directory*. Instead of a
    sequence of commands, declarative software follows a declaration of an expected
    state.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: A pipeline platform is required to complete a full GitOps installation. Some
    popular pipeline tools that complement GitOps include Jenkins, Azure DevOps pipelines,
    and CircleCI. Pipelines automate and connect Git pull requests to the orchestration
    system. Commands are sent to the orchestration piece after pipeline hooks are
    established and triggered by pull requests.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: The processes involved in GitOps are therefore not really that much different
    from the same phases involved in the software development life cycle. Those processes
    define how code should be stored, what language should be used, who should review,
    how pipelines should be built, and where those pipelines are executed.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: To achieve GitOps, you can extend what you already do in DevOps for software
    engineering and apply it to the infrastructure world.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: Understanding tools involved in GitOps
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As we touched on in the previous section, two tools are required to get started
    with GitOps. These tools are version control in the form of Git, as well as a
    tool to build and execute pipelines.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Git is the design center in the GitOps pipeline model. It serves as the source
    of authority for everything in the system, from code to configuration, and the
    entire stack. Building deployable artifacts necessitates the use of continuous
    integration, build, and test services. However, in the GitOps pipeline, the overall
    delivery orchestration is coordinated by the deployment and release automation
    system, which is triggered by repository updates. To summarize, continuous deployment,
    not continuous integration, owns delivery orchestration. It is a very subtle shift
    in how pipelines work from the software development life cycle. Any continuous
    integration provider should be able to adopt this model.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have looked at XOps in detail as well as at the various
    operating models that are available. We have looked at DevSecOps, DataOps, and
    GitOps in further detail to understand their origins, benefits, processes, and
    tooling, looking at how this differs from DevOps.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we look to bring together everything we have learned so
    far, review some key learnings, and walk through an example implementation of
    DevOps using an example organization, listing their challenges, what can be done
    to resolve these challenges, and finally how to implement those changes.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s now recap some of what we have learned throughout this chapter:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: What does FinOps set out to achieve?
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) Manage financial operations in cloud platforms.
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b) Set appropriate budgets.
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c) Ensure accountability for consumption.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d) Increase agility.
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What differentiates DevOps and DataOps?
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: a) DataOps focuses on data and not software.
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: b) DataOps focuses on database management.
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: c) DataOps is not an iterative process like DevOps.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: d) No difference; both are the same.
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
