- en: 3\. The Journey Ahead
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we conclude the first section of this book, this chapter will explain the
    journey we intend to take you through the remaining sections.
  prefs: []
  type: TYPE_NORMAL
- en: This will include how we intend to not just tell you about practices and techniques
    but also show them in action and apply them. We'll introduce a fun case study
    and real world stories to do this.
  prefs: []
  type: TYPE_NORMAL
- en: One of the challenges of writing a book intended to be read by a diverse group
    of people with different skill sets and backgrounds is how to write it in such
    a way that means it can be consumed, understood, and appreciated by all. From
    tech leads, infrastructure engineers, and OpenShift specialists, to Agile coaches,
    user experience designers, and project managers, to IT leaders and CXOs, we want
    you to grasp a shared understanding of what's behind all the practices being taught
    and the principles that underpin then.
  prefs: []
  type: TYPE_NORMAL
- en: The topics covered are going to range from how to capture behaviors in an empathy
    map using human-centered design practices to considering observability within
    applications using performance metrics. It will look at ways to help product owners
    prioritize value versus risk while also addressing instrumentation for applications,
    image tagging, and metadata!
  prefs: []
  type: TYPE_NORMAL
- en: 'Similar to the definition of done practice we use on our DevOps culture and
    practice enablement course, we''re going to use a few different approaches in
    this book to help you with your journey:'
  prefs: []
  type: TYPE_NORMAL
- en: Explaining the culture and practice
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Showing the culture and practice
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Applying the culture and practice
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To explain the culture and practice, we will introduce what the practice is
    and why and where we've chosen to use it, and give some guidance on how to use
    it. In some ways, this is the easy part.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have a saying among us that we prefer to **show, not tell**. It''s easy
    to research and write a load of words. It''s far more compelling to visually show
    a practice in action and the effect it is having. To show the culture and practice,
    we have a few techniques:'
  prefs: []
  type: TYPE_NORMAL
- en: As much as possible, we'll aim to make use of visualization techniques such
    as sketch notes, diagrams, and other charts. You will have seen a few of these,
    beautifully drawn by Ilaria Doria, in this section already, and hopefully, they
    have helped bring the words to life a little.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Where we can show you a practice in action through photographs or reproduced
    artifacts, we will do so. Where possible, we have made the diagrams and other
    visual artifacts open source, and they are available at [https://github.com/PacktPublishing/DevOps-Culture-and-Practice-with-OpenShift/](https://github.com/PacktPublishing/DevOps-Culture-and-Practice-with-OpenShift/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We find stories and real-world examples the best way to explain a practice
    and the value it brings. So, from time to time, we will break away and tell a
    story that one or more of the authors have experienced connected with these practices.
    We''ll visually tell these stories on their own by having a box around the story.
    Let''s start with one now:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A Story about Telling a Practice
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/author_face_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In December 2005, I was working in the billing workstream of a large telecommunications
    billing system replacement program in the UK. I'd been working on this program
    for 18 months already at this point. It was a 10-year program to replace all legacy
    billing systems with a more modern COTS software and introduce some new business
    capability enabling flexible and changeable product management.
  prefs: []
  type: TYPE_NORMAL
- en: I lead the billing interfaces workstream and was responsible for the delivery
    of interfaces between billing systems and third parties such as banks, BACS, and
    the treasury.
  prefs: []
  type: TYPE_NORMAL
- en: Our workstream was having our Christmas dinner in a pub near the office. We'd
    chosen this pub because most of us had been to the same pub 12 months previously
    for last year's Christmas dinner. It was funny to see so many of us in the same
    place around the same time of year 12 months on.
  prefs: []
  type: TYPE_NORMAL
- en: When I was there, I reflected on the last 12 months and what had been achieved
    by our expensive team of consultants during the period. It dawned on me that 12
    months ago, we were entering the design phase of a major release of the program.
    We were running a series of workshops over several weeks to map out the different
    work products and deliverables required for the release.
  prefs: []
  type: TYPE_NORMAL
- en: 12 months on, we were still in that design phase. A workstream of over 60 people
    had spent a year writing, rewriting, refining, and writing again design documents,
    more design documents, variations of design documents, technical clarification
    notes against design documents, and even change requests against design documents.
    At this point, no code had been written, no tests had been run, and no software
    had been released. All we had produced from 12 months was lots of design documents
    and lots of meetings.
  prefs: []
  type: TYPE_NORMAL
- en: I remember feeling somewhat underwhelmed by the impact of what we'd achieved
    in the last year. I said to myself then, *There has to be a better way of delivering
    software*.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we want to apply some of the culture and practices for real. To help
    us do that, we are going to use a simple, fun case study about a small start up
    organization going through some of the challenges and hurdles associated with
    creating a DevOps culture and establishing DevOps practices. This story will represent
    an anonymized account of some of the things we've seen in the field with our customers
    using these practices.
  prefs: []
  type: TYPE_NORMAL
- en: We'll regularly return to this story of applying DevOps culture and practices
    using OpenShift in shaded boxes. Let's get this rolling with the backstory — we
    hope you're ready for this!
  prefs: []
  type: TYPE_NORMAL
- en: PetBattle – the Backstory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pictures of domestic cats are some of the most widely viewed content on the
    internet[1](#footnote-007). Is this true? Who knows! Maybe it''s true. What we
    do know is that they make a great backstory for the example application we use
    in this book to help explain a number of DevOps practices:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.1: PetBattle — The backstory'
  prefs: []
  type: TYPE_NORMAL
- en: PetBattle is a hobbyist app, started for fun, hacked around with so that the
    authors can **Cat versus Cat** battle each other in a simple online forum. A **My
    cat is better than your cat** *type of thing*. There are very few bells and whistles
    to the initial architecture — there is a simple web-based user interface and an
    API layer coupled with a NoSQL database.
  prefs: []
  type: TYPE_NORMAL
- en: PetBattle begins life deployed on a single virtual machine. It's online but
    not attracting a lot of visitors. It's mainly frequented by the authors' friends
    and family.
  prefs: []
  type: TYPE_NORMAL
- en: While on holiday in an exotic paradise, one of the authors happensed to meet
    an online influencer. They date, they have a holiday romance, and PetBattle suddenly
    becomes Insta-famous! Nearly overnight, there was a drastically increased number
    of players, the PetBattle server crashes, and malicious pictures of **not** cats
    start appearing on the child-friendly application.
  prefs: []
  type: TYPE_NORMAL
- en: Back from holiday, the authors suddenly find themselves needing to earn a living
    from PetBattle and decide that developing a business and a production-ready version
    of the hobbyist app is now a viable thing to do.
  prefs: []
  type: TYPE_NORMAL
- en: '[1](#footnote-007-backlink) [https://en.wikipedia.org/wiki/Cats_and_the_Internet](https://en.wikipedia.org/wiki/Cats_and_the_Internet)'
  prefs: []
  type: TYPE_NORMAL
- en: The scene is set for the PetBattle founders to go on an exciting journey embracing
    DevOps culture and practice with OpenShift.
  prefs: []
  type: TYPE_NORMAL
- en: What about Legacy Systems?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: People often associate Agile and DevOps with greenfield, brand-new development
    and see it as only applicable to start-ups and those with the luxury to start
    again. *What about legacy systems?* is a common question we get asked.
  prefs: []
  type: TYPE_NORMAL
- en: We'll show throughout this book that the Mobius loop and the foundation can
    apply to any kind of project and any kind of technology; greenfield or brownfield,
    small web app or large mainframe, on-premises infrastructure delivery or hybrid
    cloud technology.
  prefs: []
  type: TYPE_NORMAL
- en: We tend to start our journey on the Mobius loop at the *discovery* part (after
    building the base foundation of culture, collaboration, and technical practices).
    But you don't have to start there. In fact, you can start anywhere on the loop.
    The most important tip is to make sure you regularly travel around all parts of
    the loop. Do not get stuck in delivery loops and never return to discovery to
    revisit hypotheses and assumptions previously made. Do not get stuck in discovery
    where you're moving so slowly, you're getting stuck in **analysis paralysis**
    and risk missing market windows and never delivering value. Most importantly,
    never forget to keep building on the foundation of culture, collaboration, and
    technical practices.
  prefs: []
  type: TYPE_NORMAL
- en: Borrowing Brilliance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we start to dive deeper into the detail, we should take a moment to point
    out that we did not write or dream up any of the practices in this book. The practices
    in this book and in the Open Practice Library are a growing list of contributions
    of some brilliant minds. We have borrowed that brilliance and will attribute it
    to the brilliant minds that came up with it. We hope we have attributed everyone
    correctly and any omissions are purely accidental.
  prefs: []
  type: TYPE_NORMAL
- en: What we have attempted to do with this book is show how these practices, when
    connected together, have delivered some highly impactful outcomes for organizations
    and show some of the underlying principles needed to enable those outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: What to Expect from the Rest of This Book?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So, you've almost made it to the end of this first section. Thanks for sticking
    with us so far! We hope you're feeling suitably enthused and motivated to read
    some more and have enough trust in us to want to read what we've written.
  prefs: []
  type: TYPE_NORMAL
- en: If you need just a little bit more information about what to expect, here's
    a short overview.
  prefs: []
  type: TYPE_NORMAL
- en: Section 2 — Establishing the Foundation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we'll look much deeper into the importance of establishing
    a foundation both culturally and technically. We'll look again at the purpose
    motive — the **start with why** that we kicked off this book with and how that
    should be the starting point for any product or any team. We'll look at some of
    our favorite and most powerful practices we've used to help create the foundation
    and culture of collaboration — social contracts, stop-the-world andon cords, real-time
    retrospectives, creating team identity, and getting into the habit of visualizing
    everything and having a cycle of inspection and adaptation. A relentless focus
    on creating an environment of psychological safety is a key success factor when
    establishing the foundation. We'll explain what this is and how we can help achieve
    it.
  prefs: []
  type: TYPE_NORMAL
- en: We'll explore how executive sponsorship can enable and impede a successful foundation
    and explore deeper what it means to be open in terms of technology and culture.
    We'll look into how Agile decision-making works and some of the useful tools and
    practices that can help with this. And we'll look at the adoption approach and
    how to convince the doubters and skeptics!
  prefs: []
  type: TYPE_NORMAL
- en: From a technical foundation perspective, we're going to share some of our most
    successful approaches, including the visualization of technology through a big
    picture, the **green from go** philosophy, and how we treat **everything as code**.
    We'll introduce some of the baseline metrics we've used to measure the success
    and impact of DevOps culture and practices. We'll even set the scene for some
    of the technical practice trade offs and approaches to consider when creating
    your foundation — GitFlow — versus Trunk-based development, setting up development
    workflows, considering different types of testing, and setting up an environment
    for pairing and mobbing.
  prefs: []
  type: TYPE_NORMAL
- en: 'To show and not tell, establishing the foundation is about turning the picture
    on the left into the picture on the right:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.2: Collaboration within the organization'
  prefs: []
  type: TYPE_NORMAL
- en: Section 3 — Discover It
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here, we'll dive into the discovery loop of Mobius and look at some of the best
    ways to use it. We'll share some of our favorite and most impactful practices
    from the Open Practice Library that have helped us in the discovery loop, including
    impact mapping, human-centered design, and event storming.
  prefs: []
  type: TYPE_NORMAL
- en: We'll look at how this relates to technology and the idea of emerging architecture
    and enabling true continuous delivery.
  prefs: []
  type: TYPE_NORMAL
- en: From a business perspective, we'll explore the difference between outcomes and
    outputs and how we're trying to move from the idea of more features being better
    to creating powerful outcomes with fewer features. We'll explore some practices
    for how we can continuously measure outcomes and how we can radiate information
    from the entire discovery loop on open source canvases.
  prefs: []
  type: TYPE_NORMAL
- en: 'To show and not tell, we''ll look at moving discovery from looking like what
    you see on the left to what you see on the right:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.3: Practicing discovery through impact mapping, human-centric design,
    and event storming'
  prefs: []
  type: TYPE_NORMAL
- en: Section 4 — Prioritize It
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here, we'll dive into the options pivot of Mobius and see why living, breathing,
    and always-changing options are important. We'll explore practices such as user
    story mapping and value slicing that help us with this and share some of the gotcha
    stories we have of where this has been misunderstood and misused. We'll look at
    how we go about building that initial product backlog using discovery that leads
    to options pivot practices. We'll look at different types of items that end up
    in product backlogs, which range from research work to experimentation work and
    implementation work. We'll look at some economic prioritization models and how
    to assess the trade-offs between value and risk with the mindset of continuous
    experimentation and continuous learning. We have lots of stories to share — some
    with a specific focus area and some with a thin thread of learning across many
    areas.
  prefs: []
  type: TYPE_NORMAL
- en: 'To show and not tell, we''ll see how prioritization can go from looking like
    what''s on the left to what''s on the right:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.4: Using the Options pivot to prioritize backlog items'
  prefs: []
  type: TYPE_NORMAL
- en: Section 5 — Deliver It
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In this section, we'll look at Agile delivery and where and when it is applicable
    according to levels of complexity and simplicity. We'll also look at Waterfall
    and the relative merits and where it might be appropriate. We'll explore different
    agile frameworks out there and how all of them relate to the Open Practice Library
    and Mobius loop. We'll explore the importance of visualization and of capturing
    measurements and learning. Technology-wise, we'll look at how advanced deployment
    techniques now available help underpin some of the experimentation and learning
    approaches being driven.
  prefs: []
  type: TYPE_NORMAL
- en: 'To show and not tell, we''ll see about getting delivery from looking like the
    picture on the left to something like the picture on the right:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.5: Practicing delivery through visualization and measurements'
  prefs: []
  type: TYPE_NORMAL
- en: Section 6 — Build It, Run It, Own It
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This section really focuses on technology as an enabler and why it is important
    to have an application platform.
  prefs: []
  type: TYPE_NORMAL
- en: We'll return to the philosophy of everything-as-code and look at Git and Helm
    as enablers for this. We'll dive deeper into containers and the cloud-native (the
    cloud, the platform, and the container) ecosystem. We'll explore OpenShift and
    Cloud IDE, as well as pipelines that enable continuous integration, including
    Jenkins and Tekton. We'll explore emerging deployment and configuration approaches,
    such as GitOps through ArgoCD, with guidance on how and where to store configuration.
    We'll explore advanced deployment techniques, such as A/B testing, feature toggles,
    canary deployments, and blue/green deployments, and how these are used with business
    outcome experimentation. We'll look at non-functional aspects of DevOps practices,
    including **Open Policy Agent** (**OPA**), the scanning of images, DevSecOps,
    BaseImage, and chain builds. We'll look at some functional and non-functional
    testing. We'll explore operational aspects such as app chassis, image tagging,
    metadata and labeling instrumentation, Knative and serverless, and observability
    in terms of business versus app performance metrics. We'll reference Service Mesh
    and focus on operators for management and day 2 operation considerations.
  prefs: []
  type: TYPE_NORMAL
- en: 'To show and not tell, we''ll explore taking building and running from being
    what you see on the left to what you see on the right:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.6: Creating the right environment for doing DevOps'
  prefs: []
  type: TYPE_NORMAL
- en: Section 7 — Improve It, Sustain It
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As we come out of the delivery loop, we'll ask, Did we learn enough? Should
    we pivot or go round the delivery loop again? We'll see how we're entering a continuous
    learning cycle – not a one-time thing. Assumptions are proven or disproven during
    delivery loops. We explore the world of technical debt and how we can bring qualitative
    and quantitative metrics from the platform, the feature, and the app dev workflow
    to help radiate this. We'll seek how to take measurements and learning from delivery
    back into discovery artifacts, such as event storms, metrics-based process maps,
    and user research.
  prefs: []
  type: TYPE_NORMAL
- en: We'll learn how to blend everything covered in the discovery loop, the options
    pivot, the delivery loop, and the foundation to help sustain this way of working.
    This is what enables double-loop learning for continuous discovery and continuous
    delivery.
  prefs: []
  type: TYPE_NORMAL
- en: Long lived, cross-functional product teams learn to build it, run it, and own
    it. In this section, we'll look at some of the practices that help them sustain
    it.
  prefs: []
  type: TYPE_NORMAL
- en: What role does leadership have to play in all of this? We'll show how to visualize
    the connection between leadership strategy, product development, and platform
    operations, all being driven by intent and informed by information and metrics.
  prefs: []
  type: TYPE_NORMAL
- en: We'll explore approaches to scaling everything described in the book and how
    a culture of following principles is more important than pure religious use of
    practices.
  prefs: []
  type: TYPE_NORMAL
- en: What about Distributed Teams?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you look at the photographs in the previous section, you may have noticed
    that the world that we’re moving towards involves people collaborating together.
    We are in the same space, around big white boards with lots of colourful sticky
    notes.
  prefs: []
  type: TYPE_NORMAL
- en: A common question we receive from leaders, executives and customers is how easy
    is it to apply these practices such as Event Storming or Social Contracting when
    people are not in the same location.
  prefs: []
  type: TYPE_NORMAL
- en: During the last couple of decades, there has been a steady increase in offshore
    and nearshore development models. Some organisations have been restructured resulting
    in different parts of the organisation being located in certain areas of the world.
    In some situations, this has resulted in a more siloed organisation with larger
    walls between different parts of it due to geography, time zones and lack of face-to-face
    collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: Our answer to whether the people, process and technology practices we’re going
    to explore in this book can be used with distributed teams is **yes, they can**.
  prefs: []
  type: TYPE_NORMAL
- en: However, the speed at which a distributed team will discover, deliver and learn
    is very unlikely to ever be as fast as the same team working together co-located.
    The ability to learn and learn fast is foundational to the whole way of working.
    Therefore we always seek opportunities to find the fastest way to learn and remove
    bottlenecks that might slow down a team's learning. Working distributed in nearly
    all situations we’ve observed is a bottleneck.
  prefs: []
  type: TYPE_NORMAL
- en: Until 2020, questions around whether use of these practices can be applied with
    distribution have been motivated by offshore teams, availability of skills and,
    ultimately, cost. Large System Integrators have spent the 2000s investing billions
    in nearshore and offshore development centres so it’s understandable why they
    will want to do everything possible to enable teams in those centres to be able
    to use agile, lean and DevOps practices. For Agilistas, this can be frustrating
    as the focus of agile is very much on switching the conversation to be about value
    rather than cost and how to continuously learn and improve in order to optimise
    value.
  prefs: []
  type: TYPE_NORMAL
- en: The year 2020 saw a new and significantly enhanced motivation for distributed
    teams - the COVID-19 global pandemic. We were in the early stages of writing this
    book when the pandemic was declared and governments started talking about lockdowns
    and other severe restrictions. From March 2020, most if not all people reading
    this book will recall that their working and personal lives changed significantly.
    The vast majority of IT development and operations was suddenly performed from
    employees’ homes. The opportunity to co-locate for any kind of in-person collaboration
    was severely restricted by companies, by governments and, given health risk, was
    a detractor for individuals themselves.
  prefs: []
  type: TYPE_NORMAL
- en: Like most, we had to pivot our own work and modify our own ways of working with
    our customers during the pandemic. Regardless of preference or prior thinking
    on distributed working, we now had to explore and invest in distributed working
    practices. For us personally, this meant the launch of the Open Innovation Labs
    Virtual Residency and other services to be provided remotely and distributed.
  prefs: []
  type: TYPE_NORMAL
- en: When we released this first section of this book as an early preview for feedback,
    we were strongly encouraged by our readers to explore distributed use of practices
    more than we were originally planning to. So, we will. In each of the sections
    of this book, we’ll include a section to share our experience of applying practices
    with distributed teams. This will include stories and experiences from the field
    during 2020 when we did this and the many learnings we got from doing so. Where
    relevant, we’ll also include details and links to digital templates that have
    supported us.
  prefs: []
  type: TYPE_NORMAL
- en: A note of caution. Just investing in a tool like Mural or Miro and having access
    to a bunch of templates will not enable you to carry on as normal with all the
    practices and techniques you may have used in a room. We’ve already outlined the
    importance of getting the balance of people, process and technology change to
    get successful DevOps Culture and Practice. When switching to using distributed
    mode - teams need extra and continued focus on people, process, and technology.
  prefs: []
  type: TYPE_NORMAL
- en: Some Words about the World of 'Open'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The term open has been used several times in this book already and it will be
    used many times more. We work for an open organization, a company built on open
    source principles and characteristics. We're using the experiences of Open Innovation
    Labs to tell many of our stories, and all the practices we're using are captured
    and will continue to evolve in the Open Practice Library.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3.7: Default to open'
  prefs: []
  type: TYPE_NORMAL
- en: We strongly believe that open culture and open practices using open technology
    makes the best cocktail for successful transformation.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we introduced PetBattle and the backstory of the hobbyist app
    that will form our fun case study we'll use throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: We also introduced how we'll regularly break out into real stories and examples
    from work we've done with our customers.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we set out the remaining sections of the book and what we'll explore
    in each of those sections.
  prefs: []
  type: TYPE_NORMAL
- en: Our introduction is complete. Let’s start working our way round the Mobius Loop
    and exploring our most used practices. Before we get onto the loop, we’re going
    to the foundation the loop will stand on. In the next chapter we’ll start by building
    the very important foundation of culture.
  prefs: []
  type: TYPE_NORMAL
