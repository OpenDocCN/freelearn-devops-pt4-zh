- en: 4\. Open Culture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many development teams, operations teams, and even cross-functional product
    teams have a tendency to jump straight into the technological aspect of the project.
    *Let's set up pipelines, let's automate our infrastructure, let's write some code!*
    It's such a natural temptation to dive straight in without investing at least
    some time in establishing a cultural foundation. It can also lead to ineffective
    and unnecessary complexity.
  prefs: []
  type: TYPE_NORMAL
- en: Don't worry, we will get to the technology in *Chapter 6, Open Technical Practices
    – Beginnings, Starting Right*. But, before we do, we want to talk about open culture
    and open leadership. In this chapter, we are going to explore what open culture
    is and why it proves to be such a critical enabler for development and operations.
  prefs: []
  type: TYPE_NORMAL
- en: Open culture stems from a performance-oriented approach to collaborative work.
    It provides motivated teams of individuals with an environment where they can
    be continuously inspired to work together and feel a sense of autonomy, mastery,
    and purpose. We are going to explore what these three elements entail and provide
    some good and bad examples of them.
  prefs: []
  type: TYPE_NORMAL
- en: We're going to dive into our Open Practice Library and explore some of our favorite
    practices that we have used to establish a foundation of culture, such as social
    contracting, stop-the-world cords, and real-time retrospectives. These are practices
    to help establish team identity, understand team sentiment, and visualize all
    of our work in a very transparent manner.
  prefs: []
  type: TYPE_NORMAL
- en: We have an array of stories to share about using these and other practices and
    we'll return to our PetBattle organization to see how they go about establishing
    an open culture as they move from being part-time hobbyists to establishing a
    high-performing team ready to take over the pet battling world!
  prefs: []
  type: TYPE_NORMAL
- en: Why Is It Important?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Culture refers to shared customs or behaviors among members of a group of people.
    Open culture refers to the custom of defaulting to open principles of transparency,
    collaboration, community, inclusivity, and adaptability. Studies have shown that
    high-performing teams need psychological safety, and open culture reinforces the
    behavior patterns that allow for this.
  prefs: []
  type: TYPE_NORMAL
- en: What do we mean by psychological safety? William Kahn introduced this term in
    1990,[1](#footnote-013) explaining *Psychological Safety was experienced as feeling
    able to show and employ one's self without fear of negative consequences to self-image,
    status, or career.* *Dr Amy Edmondson* provided further explanation in her 1999
    paper,[2](#footnote-012) where she stated, *Psychological safety is a belief that
    one will not be punished or humiliated for speaking up with ideas, questions,
    concerns, or mistakes.* This was taken from her 1999 paper that got picked up
    by the Google Project Aristotle in 2013\. That Google study found that psychological
    safety was (somewhat surprisingly) the most important factor for building high-performing
    teams.
  prefs: []
  type: TYPE_NORMAL
- en: '*Tom Geraghty, Transformation Lead for Red Hat Open Innovation Labs*, recently
    redefined this as a part of his own research and transformation services work
    with his customers. He explained, *In a group context, psychological safety manifests
    as the belief that other members value your contributions and concerns and will
    not harm you, actively or passively, for expressing them. It creates space for
    group members to take calculated risks, admit vulnerability and acknowledge mistakes
    without fear of negative consequences.*'
  prefs: []
  type: TYPE_NORMAL
- en: Open culture and psychological safety are essential ingredients of any organization.
    They are the enabler for an environment where people and teams feel an echo of
    trust with the freedom to explore new ideas, conduct experiments, learn by doing,
    and share freely with colleagues, peers, leaders, customers, users… in fact, everyone!
  prefs: []
  type: TYPE_NORMAL
- en: '[1](#footnote-013-backlink) [Kahn, W.A., (1990). Psychological conditions of
    personal engagement and disengagement at work. Academy of management journal,
    33(4), pp.692-724.](https://journals.aom.org/doi/10.5465/256287)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2](#footnote-012-backlink) [Edmondson, A., (1999). Psychological Safety and
    Learning Behavior in Work Teams Amy Edmondson. Administrative Science Quarterly,
    44(2), pp.350-383.](https://journals.sagepub.com/doi/abs/10.2307/2666999)'
  prefs: []
  type: TYPE_NORMAL
- en: Conversely, a closed culture has blockers and barriers all over the place that
    prevent these kinds of behaviors. Teams fall back into protective and secretive
    mode. When there is a fear of sharing bad news, or the idea of asking for feedback
    fills someone with dread, we end up in an environment where we protect what we're
    doing from the outside world. We don't want to share our code with others in case
    they shoot us down or ridicule us for not getting it right. We don't want to show
    our managers when we are behind the plan for fear of being mentally beaten up
    and being told we have to work nights and weekends to get back on track. We don't
    want to show features to business people or end users because they might tell
    us that what we've done is not right, which will trigger more re-work (and more
    angry managers).
  prefs: []
  type: TYPE_NORMAL
- en: By creating these types of environments, what we are really doing here is delaying
    the inevitable. Think about how many IT programs have run into problems that have
    only surfaced toward the end of the development timeline. Teams suddenly have
    to work above and beyond to meet a deadline. What was missing was an open, honest,
    and transparent view of work progress as the project developed.
  prefs: []
  type: TYPE_NORMAL
- en: Have you ever heard of the watermelon effect on IT projects? Nice and green
    and healthy on the outside but when you start to peel back the skin and look inside,
    it's red everywhere! An example we've seen is where team leads and project managers
    write reports with their own RAG (Red, Amber, Green) status and they all get passed
    up to a more senior project manager who summarizes everyone's reports with their
    own summary RAG status. That gets passed up for even more senior executive steering
    governance and an even higher level (or more diluted) set of information with
    a RAG status presented to senior customer stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.1: The watermelon effect'
  prefs: []
  type: TYPE_NORMAL
- en: Information Radiators
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The best way to encourage an open culture is by having information openly available
    to all team members and other interested stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: The term **information radiator** was coined by *Alistair Cockburn* for any
    of a number of handwritten, drawn, printed, or electronic displays that a team
    places in a highly visible location, so that all team members, as well as passers-by,
    can see the latest information at a glance. In Cockburn's book *Agile Software
    Development*, written in 2001, the information radiator formed part of an extended
    metaphor that equated the movement of information with the dispersion of heat
    and gas. We'll look at the many different types of information radiator we use
    with our customers and teams – counts of automated tests, velocity, incident reports,
    continuous integration status, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: We also sometimes use the term **information refrigerator** – where information
    becomes cold and sometimes out of date. The information refrigerator is somewhere
    you need to go looking for information rather than it being readily available
    and accessible. The refrigerator may even be locked! Information stored in files
    on shared drives, JIRA repositories, and other digital tooling all risk become
    refrigerated, so it's up to us to keep them warm and radiating.
  prefs: []
  type: TYPE_NORMAL
- en: Can You Make Those Red Lights Go Green, Please?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Noel.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Working with a UK retail organization, my team had instigated the idea of transparent,
    information radiation.
  prefs: []
  type: TYPE_NORMAL
- en: The project had been reporting green to the business stakeholders for months.
    But there were some key dependencies and blockers preventing progress to the delivery
    teams. Our team had set up TV monitors to highlight that none of our services
    could get access to pre-production or production servers. Some simple automated
    tests would show no traffic getting through the network infrastructure and therefore
    all tests were failing. These test results were being shown on a big monitor in
    the team's room. The monitor, which was very visible to lots of people, just showed
    big blocks of red.
  prefs: []
  type: TYPE_NORMAL
- en: As stakeholders had been, to date, reporting a healthy, successful program with
    no big issues, having big monitors showing lots of red gave an opposite and worrying
    message. I was asked if we could change these *traffic light* information radiators
    for a day because the CIO was coming in. If not, could we just turn the monitors
    off?
  prefs: []
  type: TYPE_NORMAL
- en: This was a classic watermelon effect.
  prefs: []
  type: TYPE_NORMAL
- en: NO – don't falsify the real-time information radiator that the team has set up.
  prefs: []
  type: TYPE_NORMAL
- en: DON'T hide the information. Instead, address the infrastructure issue that the
    information radiator is highlighting. That'll automatically turn the dashboard
    green the next time the automated tests run.
  prefs: []
  type: TYPE_NORMAL
- en: In an effort to continue empowering our team, we chose to ignore this request.
  prefs: []
  type: TYPE_NORMAL
- en: When we have an open culture, we have the opportunity to regularly inspect the
    health of everything – the health of the product, the teams, the investment, the
    stakeholders, the users, and the technology. An open culture means that when we
    do a health inspection and it does not give us positive news, we welcome the bad
    news with engagement and conversation. We do not berate people for giving bad
    news. Instead, we talk about what we have learned and what we need to do to make
    things better. What do we need to change? What should we adapt? Inspection and
    adaptation are healthy indicators of an open culture. The more open the culture,
    the greater freedom we have to inspect and adapt as we go along.
  prefs: []
  type: TYPE_NORMAL
- en: Before we get into a few specific practices that help build an open culture
    foundation, let's share a few thoughts on what we mean by that word **culture**
    and how motivation within teams is what can really drive culture up.
  prefs: []
  type: TYPE_NORMAL
- en: Culture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Culture is a mysterious energy. You can't see it but you can certainly feel
    it. You can feel when it's particularly strong within a team or in a physical
    space. If you've ever known what great open culture feels like, you'll also quickly
    know when you can't feel it.
  prefs: []
  type: TYPE_NORMAL
- en: 'We often liken open culture to the force in Star Wars. The force was strong
    in young Luke Skywalker in Star Wars IV – A New Hope: he wasn''t wearing a t-shirt
    that said so, but others could feel it when in his presence. Open culture is like
    that. You''ll know it when you''ve got it and you''ll know when it''s getting
    stronger. Your job is to regularly assess, sense, and check how strong the open
    culture is and, if you feel it could be stronger, explore more cultural foundation
    practices to strengthen it. We''ll explore different techniques and practices
    that help measure and learn from the impact of these changes in *Chapter 13, Measure
    and Learn*.'
  prefs: []
  type: TYPE_NORMAL
- en: In the remainder of this chapter, we're going to share a handful of practices
    we've had the most success with in establishing a cultural foundation during Open
    Innovation Labs residencies.
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'According to Dan Pink, author of the number 1 New York Times bestseller *Drive:
    The Surprising Truth About What Motivates Us*, people are not motivated in the
    ways we expect. He argues that *Organizations historically have incentivized employees
    the wrong way by offering rewards (money) and creating a culture of fear and punishment
    for underachieving. When work requires any cognitive skill or knowledge, then
    these methods do not work.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Through his research, he shows there are three things that motivate people
    beyond basic task completion:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Autonomy**: The desire to be self-directed and the freedom to take ownership'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mastery**: The desire to get better at something'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Purpose**: The desire to do something that has meaning or is important to
    you'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/B16297_04_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.2: Autonomy, mastery, and purpose'
  prefs: []
  type: TYPE_NORMAL
- en: Creating an open culture in your organization should embody these principles.
    Open source software development is built on the pillars of autonomy, mastery,
    and purpose. Examples include using open source code bases, collaborating on public
    discussion forums, and having transparent decision-making records; these practices
    make it easier for people to find purpose, gain expertise, and take ownership
    of their work. It eliminates dependencies on people and on scarce or hidden information.
    People across the globe are willingly contributing to open source projects such
    as *OKD* (the community distribution of Kubernetes that powers OpenShift), thus
    improving the product for all. Sometimes they are contributing because it is part
    of their paid work, but quite frequently they contribute because they want to.
    They are working on these projects because of the deep personal fulfillment that
    they gain through helping a community build something better that benefits everyone,
    being self-directed or listened to, and building something for the future; they
    also want to become a better coder by implementing and testing something on a
    public backlog.
  prefs: []
  type: TYPE_NORMAL
- en: In order to build this kind of ethos in your organization, leadership needs
    to set the environment for people to achieve these things. They should empower
    teams to make decisions and adopt self-organization and self-correction, thus
    providing autonomy. They should embrace and encourage continuous improvement and
    enable team members to continuously learn and improve themselves and their team,
    providing mastery. Leadership should remove obstacles and silos that prevent team
    members from connecting with and appreciating business purpose. They should enable
    regular and direct access to business stakeholders, customers, and leadership
    to drive up the sense of purpose to their work. Allowing employees to focus on
    autonomy, mastery, and purpose will have a twofold effect. Teams will have the
    freedom and *drive* to create brilliant products. With greater responsibility
    for the product, people will start to work harder because they truly believe they
    are listened to and are connected, and they will want to work on making the product
    better.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get back to our PetBattle case study and see how some of the employees
    felt autonomy, mastery, and purpose. Specifically, let's look at a few events
    that happened in the early days of establishing PetBattle that helped achieve
    this open culture.
  prefs: []
  type: TYPE_NORMAL
- en: PetBattle — Creating Autonomy, Mastery, and Purpose
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Connecting the engineers to the end users is a great way to create a sense of
    purpose. The PetBattle engineers do not want features or tickets dropped on them
    with no view of how the feature connects to the vision of the product. To combat
    this, they do regular demos with end users and generate some feedback. This connectivity
    allows them to build empathy with one another and see how the application is being
    used in real life.
  prefs: []
  type: TYPE_NORMAL
- en: Mary (a self-confessed cat lover who plays PetBattle regularly) was being asked
    to use the app while Ciarán (a member of the PetBattle engineering team) observed
    her. Mary was struggling to understand why her cat was not appearing immediately
    in the competition after she'd uploaded it. Ciarán knew she had to vote for another
    cat before hers would appear in the list, which seemed obvious to him. A few days
    after this feedback, Ciarán sees a ticket in his backlog to have the uploaded
    cat appear in the voting list immediately. Ciarán sees the purpose of this ticket
    immediately and starts thinking about the effect this feature will have on Mary,
    who plays the game regularly.
  prefs: []
  type: TYPE_NORMAL
- en: Ciarán and the other engineers working on PetBattle – Aidan, Emma, and Jen –
    recognized that having access to Mary's feedback was really rewarding, especially
    when they had the opportunity to deliver new features to Mary. *It's so much better
    than my previous projects, when I would be asked to code to a specification and
    not really understand what it was that I was helping to build*, said Jen in a
    recent retrospective meeting. Aidan suggested it would be even better if they
    could meet users like Mary every now and again, perhaps working with them to do
    some testing and hear all their other ideas for future development.
  prefs: []
  type: TYPE_NORMAL
- en: During that same retrospective meeting, Aidan called out his personal highlight
    from recent weeks working in the PetBattle engineering team. He said he loved
    how he could just release his new features and bug fixes when he was ready. He
    didn't have to wait for a release window or need a change review board to meet.
    He could just push the button and the awesome technical foundation practices that
    Ciarán and Emma in particular had focused on putting in place meant he could ship
    with confidence. He was learning to create feature toggles around his new code,
    which was even better as it empowered the business product owner to decide when
    to switch on the feature. Aidan thinks the team should look to explore more advanced
    deployment capabilities like this.
  prefs: []
  type: TYPE_NORMAL
- en: Meanwhile, Emma's highlight was having the opportunity to share openly with
    the wider community some of the technical foundation tips she'd picked up. She
    has written several blog articles and has been invited to present at a DevOps
    conference in the new year. She said that, in her previous projects, she wasn't
    allowed to share so openly the work she had done. She felt she had some great
    techniques to share back with the wider technical community. Many folks in this
    community had helped and inspired her own development, so she was very happy to
    share back. Everyone agreed they should seek opportunities to do these kinds of
    things – who knows, maybe it will even help promote and advertise PetBattle as
    a product and, as they grow the team, a really cool place to work!
  prefs: []
  type: TYPE_NORMAL
- en: 'Dan Pink, author of *Drive: The Surprising Truth About What Motivates Us*,
    gave an awesome talk at the **Royal Society for Arts** (**RSA**) in 2010 all about
    what really motivates us. The RSA produced a short video[3](#footnote-011) from
    this talk, which is awesome – we''ve shown it to many teams and leaders. It''s
    openly available on YouTube and we really recommend watching it at least once
    to explore this area of autonomy, mastery, and purpose further.'
  prefs: []
  type: TYPE_NORMAL
- en: At Red Hat, autonomy, mastery, and purpose are values that underpin much of
    our open culture. We're going to explore tactical practices that help create this.
    As we move into product discovery and product delivery, you will find that all
    practices here are also helping realize this culture.
  prefs: []
  type: TYPE_NORMAL
- en: Social Contracts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We, the four authors, are in a very fortunate position where we get to help
    kick-start new product teams. We use a range of practices to help bootstrap these
    teams and get them off to the best start possible. We've come to realize that
    one practice in particular is foundational – social contracts.
  prefs: []
  type: TYPE_NORMAL
- en: '[3](#footnote-011-backlink) [https://youtu.be/u6XAPnuFjJc](https://youtu.be/u6XAPnuFjJc)'
  prefs: []
  type: TYPE_NORMAL
- en: '*The social contract practice is a simple yet highly effective way to enable
    team autonomy and self-accountability for engagements. A social contract is created
    by and for the team. It looks to codify the behaviors and expectations of the
    team. It also provides a mechanism for the team to visualize and share its desired
    behaviors with management and other stakeholders.*'
  prefs: []
  type: TYPE_NORMAL
- en: A social contract is not some big expensive consulting engagement but a simple
    set of guidelines and behaviors put forward by a team for how they would like
    to interact with one another. It promotes autonomy and self-governance within
    a team.
  prefs: []
  type: TYPE_NORMAL
- en: One thing we've learned from previous engagements is that if we don't invest
    time and use tools such as social contracts upfront with new teams, we risk running
    into all sorts of cultural, teaming, and communication problems over time. *Figure
    4.3* shows an example of a social contract.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.3: An example of a social contract'
  prefs: []
  type: TYPE_NORMAL
- en: Do I Need One? If So, How Do I Build One?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In modern software development, we're all about tearing down walls. The wall
    between development and operations teams was only the beginning! Open organizations
    want their teams to act with more autonomy and so give them shared purpose around
    their products. Teams react to this by often trying to embody the *You build it,
    you own it, you run it* mantra. But how can we kick-start this change in people's
    behavior? How can we accelerate our teams to be high-performing, especially when
    starting with a new team whose members know nothing about each other? This is
    where our friendly social contract comes into play.
  prefs: []
  type: TYPE_NORMAL
- en: When we are kicking off with a new team, we get them to come up with a team
    name. Team identity is very important in setting up the ownership part of a high-performing
    team culture. We'll explore team identity further later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is simple: get the group to spend a few minutes thinking about
    the best teams they''ve ever worked in previously or the best products they''ve
    been a part of creating. With this in mind, they should think of all the amazing
    characteristics and behaviors they can remember and capture them on sticky notes.'
  prefs: []
  type: TYPE_NORMAL
- en: Conversely, think of all the terrible projects and what things created that
    toxic environment for the team to operate in. With some ideas of behaviors that
    they want to adhere to, the group can discuss them further to get a shared understanding
    and home in on the specific language to use.
  prefs: []
  type: TYPE_NORMAL
- en: A good social contract will contain concrete actionable items and not fluffy
    statements. To really tease these out, lead by giving examples of how someone
    would embody the statements they've come up with and try to capture that. For
    example, *be open* could be a good seed for an item in a social contract, but
    perhaps lacks specificity. We can explore this by getting examples of where we
    are, or are not, adhering to it. Teams may then come up with things like *Everyone's
    opinion and contribution is valuable*, *Give space to quieter people,* and *Actively
    listen to others the same way I want to be heard.*
  prefs: []
  type: TYPE_NORMAL
- en: With some items in the contract, the group signs the contract and hangs it high
    and visibly. It is now the responsibility of the team to abide by it and call
    out when others do not.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.4: Another example of a social contract'
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding example is from a cyber security company we worked with for 4
    weeks. This team had a mix of developers, designers, and site reliability engineers.
    Some of the things they included were as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Core Hours (10.00 to 16.00)**: This is the team''s agreed collaboration time.
    This is not the hours they work, but more the time in which they will have sync
    ups, meetings, or pairing and other collaboration. On this engagement, one of
    the team members wanted to miss the early morning traffic, so if she came in a
    tiny bit later her commute would take her a lot less time. Also, another member
    of the team had childcare responsibilities so getting out at a reasonable hour
    would have made his life easier.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mob to Learn / Pair to Build**: This is a simple mantra that describes how
    the team wanted to interact when writing code, tests, or even documentation. If
    there are new things to be tackled, such as that scary new microservice in a language
    or framework that''s new, do it as a full team. Get everyone on the same page
    from the beginning and ensure that you''re not creating individual heroes with
    all the knowledge in the team. Pair on implementing features to raise skills across
    the board.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Have a Weekly Social**: Celebrating success is an important thing for lots
    of teams. Taking the time as a group to get away from our desks, socialize together,
    and eat together helps build positive relationships. These events can lead to
    improving team morale and creating a positive culture around the people working
    on a product.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now we've considered the key tenets of social contracts, let's look at how to
    integrate them with other workplace practices.
  prefs: []
  type: TYPE_NORMAL
- en: To support gaining consensus on ideas and behaviors, use grouping techniques
    such as **Affinity Mapping**, the **Fist of Five**, and **Dot Voting**. These
    are simple yet very powerful practices and open facilitation techniques that help
    drive alignment, consensus, and the inclusion of all people involved. We will
    explore them in more detail in the next chapter about open leadership.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.5: Retrospective learnings driving social contract updates'
  prefs: []
  type: TYPE_NORMAL
- en: When the social contract is first created, it represents a snapshot in time.
    It represents a best guess of how a team should interact and is often written
    when we know the least about each other or our habits. It is a useful tool to
    accelerate a team to a comfortable position built on trust and psychological safety.
    However, it is not a fixed or static thing. Items in there could be invalid or
    possibly missing. A great thing a Scrum Master or Agile coach can do is bring
    the social contract along to a team's retrospective (a practice we will explore
    in more detail in *Section 5 - Deliver It*). It provides a great opportunity for
    the group to inspect and adapt it, possibly updating it with new ideas or improvements.
  prefs: []
  type: TYPE_NORMAL
- en: It's OK to Be Wrong
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Donal.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When working with the cyber security company, we found a great opportunity
    to update our social contract. There were two developers on that team that were
    quite hot-headed and both always liked to be right. Often, they could not agree
    on the approach to take for any given solution, which was creating a toxic vibe
    within the team and reducing morale. Through a retrospective, the team identified
    this issue. After some discussion and getting the issue out into the open, we
    updated our social contract with one simple phrase: *It''s OK to be wrong.*'
  prefs: []
  type: TYPE_NORMAL
- en: This had a profound effect on the team going forward. The competition within
    the team started to evaporate as we could focus less on *who was right* and more
    on *does the solution work for our end users*. We looked for opportunities for
    both developers to have their voices heard by trying more than one implementation
    of a feature. Building both solutions and evaluating each, both developers then
    started to pair on building out each other's solution, thus creating a better
    bond between the two. This also had the net benefit of writing a much better solution
    by often combining ideas from both individuals.
  prefs: []
  type: TYPE_NORMAL
- en: Social contracts are a powerful and easy-to-implement practice – they promote
    team autonomy, self-governance, and psychological safety. If your team does not
    have one, it's not too late to build one. Most importantly, keep it visible to
    the team and don't forget to revisit it when needed.
  prefs: []
  type: TYPE_NORMAL
- en: Social Contracting for Distributed People
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We mentioned at the end of *Section 1, Practices Make Perfect* that we would
    consider how our practices work in a more distributed environment where people
    are not physically in the same place. Using the social contract practice with
    a new virtual team can be tricky as we tend to use social contracts at a time
    when relationships, trust, and rapport have not yet formed.
  prefs: []
  type: TYPE_NORMAL
- en: The challenges we've seen include not having everyone engaged or contributing
    to the social contract. Hearing from the same voices puts those not so involved
    in the background. What follows are some recommendations on how to approach social
    contracting with distributed team members.
  prefs: []
  type: TYPE_NORMAL
- en: Using a virtual whiteboarding tool such as Miro or Mural with everyone connected
    and looking at the same artifact will set you up for the best possible success.
    As shown in *Figure 4.6*, we have created some templates, which are openly available
    and can be used as a starting point for your social contract. You can download
    this from the book's GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.6: Digital social contract template for a distributed team'
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider having a *pre-canned* social contract that is good for remote meetings,
    then allow people to add/change based on their thoughts:'
  prefs: []
  type: TYPE_NORMAL
- en: Everyone should *sign* their name with a sticky note or virtual pen.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add remote working elements to the social contract (for example, mute on entry
    to calls, turn your webcam on, and so on).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Establish global communication norms and individual teams'' exceptions: response
    time, writing style, tone, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some good examples of communication norms we''ve seen in our virtual engagements
    include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: One conversation at a time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assume positive intent.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not delete or move others' contributions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stay focused on our goal, working iteratively.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Respect breaks.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid other distractions such as email and chat.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A contract can be updated based on needs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Figure 4.7* shows an example social contract created by a team distributed
    with their suggestions and signatures:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.7: An example social contract used by a distributed team'
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more about the social contract practice by going to the Open Practice
    Library page at [openpracticelibrary.com/practice/social-contract](http://openpracticelibrary.com/practice/social-contract).
  prefs: []
  type: TYPE_NORMAL
- en: Creating a social contract over a video call with everyone remotely takes an
    extra level of facilitation skill. There are some great tips for facilitating
    this and other practices remotely in a blog post contributed by *Ilaria Doria*
    and *Marcus Maestri* at [https://openpracticelibrary.com/blog/facilitation-tips-for-remote-sessions/](https://openpracticelibrary.com/blog/facilitation-tips-for-remote-sessions/).
  prefs: []
  type: TYPE_NORMAL
- en: Stop the World
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Stop the World** event or **Andon Cord** is another of our favorite practices
    that we use regularly in our engagements and is a DevOps superpower.
  prefs: []
  type: TYPE_NORMAL
- en: '*John Willis* explained the origins of the word **Andon** in his *ITRevolition
    blog post*[4](#footnote-010) – in Japanese, it comes from the use of traditional
    lighting equipment using a fire-burning lamp made out of paper and bamboo. This
    idea was later translated for use in manufacturing in Japan. The **Andon** became
    used as a signal to highlight an anomaly (that is, a flashing light). This signal
    would be used to amplify potential defects in quality.'
  prefs: []
  type: TYPE_NORMAL
- en: '[4](#footnote-010-backlink) [https://itrevolution.com/kata/](https://itrevolution.com/kata/)'
  prefs: []
  type: TYPE_NORMAL
- en: The Andon Cord and Psychological Safety
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Author_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The first time I heard of the *Andon Cord* was when reading *The Phoenix Project*
    – *A Novel About IT, DevOps and Helping Your Business Win* by *Gene Kim*, *Kevin
    Behr*, and *George Spafford* – if an employee on the car production line suspects
    a problem is happening, they pull the cord and the whole production line immediately
    stops. By avoiding passing failures downstream, Toyota credits this disruptive
    behavior as being *the only way we can build 2,000 vehicles per day – that's one
    completed vehicle every 55 seconds*.
  prefs: []
  type: TYPE_NORMAL
- en: About eight years later, I heard Gene Kim talk about the relationship between
    the Andon Cord and team psychological safety. When you pulled the Andon Cord in
    the Toyota factory, the line manager ran up to you and THANKED YOU for stopping
    production so that whatever the problem was could be resolved. No-one would pull
    the cord if they thought they were going to be punished for it.
  prefs: []
  type: TYPE_NORMAL
- en: Yes ... Good DevOps you borrow, great DevOps you steal!
  prefs: []
  type: TYPE_NORMAL
- en: The process of stopping a system when a defect is suspected goes back to the
    original Toyota System Corporation and something called Jidoka. The idea behind
    Jidoka is that by stopping the system, you get an immediate opportunity for improvement,
    or to find the root cause, as opposed to letting the defect move further down
    the line and be left unresolved. The Jidoka concept was pioneered by the original
    Toyota founder, Sakichi Toyoda, also known as the father of the Japanese industrial
    revolution and also the founder of the original Toyota Systems Corporation (before
    they manufactured automobiles).
  prefs: []
  type: TYPE_NORMAL
- en: We use the *Stop the World* event during our engagements with customers. When
    somebody on the team identifies that the engagement is off-course, the full team
    works together to find a solution that is actionable and acceptable to all and
    progress can then resume.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a lot of hidden benefits to using Stop the World events within your
    team. In the Toyota factory, the line manager would physically go and see the
    station where the cord had been pulled and ask: *how can I help you?* Immediately
    the issue is treated as a priority and by going straight to the area where the
    problem is first raised, the process becomes evidential and fact-based. By thanking
    the team member who pulled the cord, this encouraged a *safety culture*: factory
    management was saying, *You have saved a customer from receiving a defect.* Whenever
    your application tests fail the pipeline, think of this! At their core, Toyota
    believed failure created learning opportunities and that failures are good things
    because of that.'
  prefs: []
  type: TYPE_NORMAL
- en: We're Just Rebuilding the Same Experience. Stop the World!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Tim.jpg)'
  prefs: []
  type: TYPE_IMG
- en: We spent 6 weeks delivering a dual-track Open Innovation Labs residency to a
    customer in the Nordics in 2018\. (A dual-track residency has one track/team focused
    on building a brand-new production OpenShift platform while the other team builds
    and maintains the first business applications to run on it. The two tracks collaborate
    closely together and work in the same physical space.)
  prefs: []
  type: TYPE_NORMAL
- en: For this client, the application being built was a modernization of an existing
    mobile application used by customers to buy new travel insurance products. The
    goal of the dual-track residency was to learn new skills around DevOps, develop
    microservices, and explore the OpenShift product while improving their customers'
    overall user experience.
  prefs: []
  type: TYPE_NORMAL
- en: Four days into the residency, the team was using a practice called event storming
    (which we'll explore in detail in *Section 3, Discover It*) to map out the end-to-end
    business process and discover the emerging architecture. This had been running
    for a couple of days.
  prefs: []
  type: TYPE_NORMAL
- en: Riley, our UX Designer, had a sudden moment of realization as he looked at the
    in-progress Event Storm. All the conversation and visualization was focused on
    capturing the EXISTING application flow. They were going down the path of just
    rebuilding exactly the same experience but with some new technology and approaches.
  prefs: []
  type: TYPE_NORMAL
- en: Riley pulled the Andon Cord, which, in this space, was a big bell. He stopped
    the world. It was loud and disruptive and intended to interrupt everyone and grab
    their immediate attention. Everyone stopped what they were doing and gathered
    in a circle. Riley explained his concerns and everyone agreed that this approach
    was not going to help much with the target outcome of improving the customers'
    overall user experience if they just designed exactly the same application again.
  prefs: []
  type: TYPE_NORMAL
- en: So, as a team, they agreed that they would use the Event Storm to capture assumptions
    that needed to be tested, ideas for fresh experiments, and lots of questions where
    there were unknowns that they should explore with end users.
  prefs: []
  type: TYPE_NORMAL
- en: The world was started again and the six weeks that followed took a hypothesis-
    and experiment-based approach.
  prefs: []
  type: TYPE_NORMAL
- en: That story showed the user-centered motivations behind stopping the world. A
    second story explains how a more technical team member stopped the world.
  prefs: []
  type: TYPE_NORMAL
- en: Losing Track of Original Purpose
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Noel1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The team here was running a number of experiments, technical spikes, and research
    efforts to maximize learning during a 6-week Open Innovation Labs residency as
    a precursor to launching their new cloud platform using OpenShift.
  prefs: []
  type: TYPE_NORMAL
- en: The team had agreed on a number of architectural principles for the residency.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Author_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: During the third sprint, one member of the team, Tom, noted an increasing number
    of side conversations and drawings happening on whiteboards. These had nothing
    to do with the work committed in the current sprint. They had nothing to do with
    the part of the business process the team was developing user stories for.
  prefs: []
  type: TYPE_NORMAL
- en: The team's burndown chart was well off-course and it was looking increasingly
    unlikely they would achieve the current iteration's goal. As Tom investigated
    further what all these side chats were about, he learned there was a lot of discussion
    about completely different scenarios and thinking about architecture in 2-3 years'
    time.
  prefs: []
  type: TYPE_NORMAL
- en: A little frustrated, **Tom stopped the world**. There was a *stop the world*
    bell in the labs space, which he rang.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.8: A team member stopping the world'
  prefs: []
  type: TYPE_NORMAL
- en: The team were all familiar with the practice but slightly alarmed to hear the
    bell for real. They gathered around and the team had an open, honest conversation.
    Tom shared his concerns and frustrations. The team re-visited their current commitments
    and reminded themselves of some of the decisions previously made during priority
    sliders and target outcomes practices. They agreed to put some items on the product
    backlog to park these discussions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.9: Team gathers after the world has stopped to fix the problem'
  prefs: []
  type: TYPE_NORMAL
- en: Within just 15 minutes, the team had re-aligned, re-focused their priorities,
    and were renewed with energy and commitment.
  prefs: []
  type: TYPE_NORMAL
- en: One wonders if Tom had not aired his concerns and frustrations and just let
    them sit in the back of his head, how long would this have gone on? What ripple
    effects might there have been? What would the overall impact have been?
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more and collaborate about the Stop the World practice by going
    to the Open Practice Library page at [https://openpracticelibrary.com/practice/stop-the-world-event/](https://openpracticelibrary.com/practice/stop-the-world-event/).
  prefs: []
  type: TYPE_NORMAL
- en: Real-Time Retrospective
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In seeking to establish an open culture and kick-start an ethos of autonomy,
    mastery, and purpose across the spaces we work in, we need to have feedback loops
    in place so we can sense if we're moving in the right direction.
  prefs: []
  type: TYPE_NORMAL
- en: So far, we've just introduced a couple of very simple practices that help to
    build the foundational culture. But will they work? How will you know? What if
    the new team is muttering bad things under their breath about how the social contract
    was fluffy and that Stop the World thing *will never work in a place like this*.
    Hopefully, this isn't happening, but if it is, you're probably heading in the
    opposite direction to an open culture by creating side silos and more closed behaviors
    and thinking.
  prefs: []
  type: TYPE_NORMAL
- en: We need to create a channel for folks to feed back on their own use of the practices,
    even first impressions. Do they like these things and think they're helping to
    create the foundation desired? Are there things they already foresee as barriers
    and blockers?
  prefs: []
  type: TYPE_NORMAL
- en: We've mentioned the practice of the retrospective a couple of times already
    and we'll be coming back to it several times during this book as the concept behind
    the practices brings the most important philosophy of continuous learning and
    continuous improvement.
  prefs: []
  type: TYPE_NORMAL
- en: But the practice being introduced here is a little different. Rather than scheduling
    in retrospectives to start capturing feedback on our early foundation activities,
    could we have a more continuous and *always on* self-service approach to capturing
    feedback?
  prefs: []
  type: TYPE_NORMAL
- en: The real-time retrospective technique shared by Emily Webber provides a simple,
    visual tool for anyone to add retrospective feedback on any item at any time.
    Rather than waiting for a formal feedback event or some kind of survey (which,
    let's be honest, is not everyone's cup of tea), the real-time retrospective enables
    faster, more accurate, and more direct feedback from everyone involved.
  prefs: []
  type: TYPE_NORMAL
- en: To make use of this technique, find a wall or surface that is long enough to
    handle the amount of feedback you are expecting. Make a long line to represent
    time.
  prefs: []
  type: TYPE_NORMAL
- en: Draw a happy face above the line, a sad face below the line, and a surprised
    face along the line (this represents the type of feedback that you wish to receive
    – positive, negative, and surprised).
  prefs: []
  type: TYPE_NORMAL
- en: 'Explain to your participants your goal of using this practice and how to use
    your prepped area. Here are the key things to share:'
  prefs: []
  type: TYPE_NORMAL
- en: Where to find materials for them to contribute.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How the timeline begins at the left and continues until the timeframe you designate
    as the end.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any and all feedback is welcome.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One sticky note per feedback item.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cycle back and monitor constantly to review your feedback and make appropriate
    improvements based on them.
  prefs: []
  type: TYPE_NORMAL
- en: We find that making some simple adjustments early based on a real-time retrospective's
    comments can really sow the seeds for autonomy, mastery, and purpose. Even reacting
    to temperature control, improving catering, or switching people's positioning
    around the workspace can have a great positive impact because the feedback came
    from the people and they see their ideas being responded to quickly. This is what
    we mean by empowering teams.
  prefs: []
  type: TYPE_NORMAL
- en: As always, we like to show more than tell, so let's look at a real example of
    where we used a real-time retrospective.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.10: A real-time retrospective used throughout a five-day DevOps Culture
    and Practice Enablement workshop'
  prefs: []
  type: TYPE_NORMAL
- en: This was used during the delivery of a five-day immersive enablement workshop
    – DevOps Culture and Practice Enablement. Given the short nature of this, a real-time
    retrospective is particularly useful because you don't want to learn feedback
    at the end of the week (or even the end of one of the days) if there was a simple
    improvement or resolution that could have been applied much earlier.
  prefs: []
  type: TYPE_NORMAL
- en: You'll see that a lot of the stickies in this example are beneath the middle
    line and represent the *sad* feedback. Does this mean this delivery was going
    really badly? No, not necessarily. When we facilitate real-time retrospectives,
    we actually tell people not to worry about giving us lots of *negative* feedback.
    While it is nice to read the *happy* or *positive* contributions (and it helps
    affirm what we should do more of), it's the improvement ideas that we really want
    to capture. How can we make ourselves better and how can we do that quickly?
  prefs: []
  type: TYPE_NORMAL
- en: 'You may not be able to read the low-level detail but a few great examples of
    early feedback captured on the real-time retrospective that were addressed in
    the second day included the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Having more frequent breaks and reducing the long lecture times
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ordering more vegetarian food
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adopting a group policy to *move on* when discussions were starting to *rabbit
    hole* (separately, the team came up with visual cues to call out when these things
    were happening)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting some more monitors to help with the collaborative nature of technical
    exercises
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Going outside for some fresh air at least a couple of times each day
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are all great feedback points from attendees and very easily addressable.
    The continuous feedback and continuous improvement journey starts here!
  prefs: []
  type: TYPE_NORMAL
- en: One of the things that make the real-time retrospective practice very powerful
    is that it is always on display and always in sight of the people contributing
    to and using it. We often use large eight foot by four-foot portable foam boards
    to put the real-time retrospective on so we can move it around the room and purposefully
    have it in places that team members have to walk by regularly. This encourages
    them to contribute, reorganize, or simply see what others have been feeding back.
  prefs: []
  type: TYPE_NORMAL
- en: If you're working with a distributed team using digital whiteboards and video
    conferencing, we can easily start a real-time retrospective. We have a good template
    that you can use as shown in *Figure 4.11* and available to download from the
    book's GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.11: Digital real-time retrospective canvas for a distributed team'
  prefs: []
  type: TYPE_NORMAL
- en: The challenge here is getting the adoption and usage to continue. Digital artifacts
    such as this risk becoming **information refrigerators** where information goes
    to die and is only found when someone opens it up, resulting in it being cold
    and out of date! Perhaps information should have *use-by* or *best-before* dates!
    To avoid this, we need strong facilitation. We should encourage all our team members
    to have these digital artifacts visible at all times. We should, as a team, regularly
    do a virtual walk-the-walls, and Engagement Leaders and facilitators should encourage
    contribution to the real-time retrospective where it makes sense.
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more and collaborate about the real-time retrospective practice
    by going to the Open Practice Library page at [https://openpracticelibrary.com/practice/realtime-retrospective/](https://openpracticelibrary.com/practice/realtime-retrospective/).
  prefs: []
  type: TYPE_NORMAL
- en: Social contracts, stop-the-world Andon cords, and real-time retrospectives are
    three great practices to start building the foundation of culture. If well facilitated,
    the conversations generated from these practices alone should start to drive a
    sense of team autonomy and team identity. We're going to explore team identity
    further as it is a crucial ingredient of great team culture.
  prefs: []
  type: TYPE_NORMAL
- en: Team Identity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Think about the teams you've worked with in the past. How many of them have
    been really great experiences that you enjoyed waking up to every morning? How
    many of them were terrible and you couldn't wait for it all to end? Have you ever
    worked with a group and thought, *That was amazing – I wish it could have gone
    on forever!* If so, what were the things that made working with that team so amazing?
  prefs: []
  type: TYPE_NORMAL
- en: Team identity, morale, and cohesion are all linked and are critical for building
    high-performing teams. They are all a state of mind, meaning the formula for creating
    awesome teams is a bit more abstract and a lot less formal. You cannot force a
    team to have high cohesion just by slapping people together, by adding one-part
    outgoing individuals and two parts hard-working individuals! It must form more
    organically than this.
  prefs: []
  type: TYPE_NORMAL
- en: Individual team identity can have an infectious enthusiasm and spread to other
    teams in the organization. When there is a level of energy, team culture, and
    shared identity evident, other teams want to be like that team. New teams should
    form to be like that team. And, to avoid the risk of a team's identity becoming
    their own silo, we can introduce ways to connect teams together through communities
    of interest and communities of practice. We'll explore this more in *Section 7
    – Improve It, Sustain It*.
  prefs: []
  type: TYPE_NORMAL
- en: Socializing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are lots of little cultural nuggets and practices that we've used to try
    and accelerate team forming and get us to a performing state quicker. If team
    members naturally get along with each other or have shared interests, this can
    infect the whole group and create bonds between everyone.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.12: Team social away from the office'
  prefs: []
  type: TYPE_NORMAL
- en: Getting to know people on a personal level and sharing interests easily spills
    over into the day job. Humans by their very nature are social creatures. That's
    why the first thing we always try to do with our teams is socialize together.
    Take that moment to get away from the office and relax. Sometimes that can be
    in the pub after work or even during the day while sharing lunches. In fact, on
    a previous residency, we've even had things like a weekly curry buffet for the
    team to use the time to socialize together. On one occasion we went twice in a
    week when one of the team was off sick on Curry Day!
  prefs: []
  type: TYPE_NORMAL
- en: If going to the pub after work does not suit, flip it on its head! We've often
    had teams go for a big tasty breakfast together first thing in the morning! It's
    a great way to start the first day of a new sprint with fresh eyes and fresh eggs!
    Socializing can take many forms, but it's important to stop and celebrate the
    work that's been done. Going out to play a game together or hit the bowling alley
    for an hour helps the team build friendships and get to know one another.
  prefs: []
  type: TYPE_NORMAL
- en: It may sound super fluffy, but teams that share in activities like this will
    always help each other out on the day job, even if they're unfamiliar with the
    tasks being tackled. Team members will go the extra mile for one another when
    they've established such relationships.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.13: Team social in the office'
  prefs: []
  type: TYPE_NORMAL
- en: Social music playlists provide a simple way for teams to get to know one another.
    Creating a shared playlist for all to be able to add songs they like, or upvote
    and downvote others, can create a very positive vibe within the team. Getting
    to know people's taste in music, or lack of taste in some cases, can open up new
    connections with people who may be shy or less likely to engage in a social outing.
    We've used Outloud.dj for social playlists, even on training events!
  prefs: []
  type: TYPE_NORMAL
- en: Network Mapping
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Network mapping is a handy practice for individuals to get to know each other.
    The practice is simple – line up all the people in your group so each person has
    a partner they've never met before.
  prefs: []
  type: TYPE_NORMAL
- en: Each person writes their name on a sticky note. Set a timer for three minutes
    for the pairs to write on a new sticky note something they have in common. With
    that in place, shuffle the group and go again with a new partner capturing something
    they have in common.
  prefs: []
  type: TYPE_NORMAL
- en: Two sticky notes are usually enough for each person to get started with this
    activity, but you could go around again, especially if the group is small. Select
    one person to go first and have them introduce the people they met. Pop their
    name sticky note on canvas along with the thing in common and draw a line connecting
    them. Pass over to the next person and have them introduce the other person they
    met, continuing to connect the people to the interests. With all in place, allow
    the team to draw additional lines they have with others in the group, forming
    a large spaghetti map! It's a simple practice, we know, but it helps to accelerate
    new groups getting to know one another.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.14: Network map example'
  prefs: []
  type: TYPE_NORMAL
- en: You can take it one step further to demonstrate metaphorically what happens
    when you break up a team that's already high performing. With the group standing
    around in a circle, connect each person who has the thing in common with string
    or wool. This should form a giant web; take the social contract and lay it on
    top of the web. To demonstrate the negative effect that swapping in team members
    or removing team members has on the group's inner workings, cut all the strings
    connecting those individuals. You will see the social contract is no longer supported
    and falls away to the floor, symbolizing the effect that moving team members in
    and out has on the collective.
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more about and discuss the network mapping practice by going to
    the Open Practice Library page at [openpracticelibrary.com/practice/network-mapping](http://openpracticelibrary.com/practice/network-mapping).
  prefs: []
  type: TYPE_NORMAL
- en: Team Logo and Prime Directive
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another practice that could appear a bit fluffy – but that we stand by – is
    creating a team name and logo. It strengthens the team's ability to contribute
    to the team's identity and culture. As the group gets to know each other and starts
    to build in-jokes, take the time to create a team motto or design a logo that
    can be printed on t-shirts!
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.15: Team identity with some customized t-shirts and a team name'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at a real world example where a team name and a team logo kick-started
    team identity:'
  prefs: []
  type: TYPE_NORMAL
- en: Team Name + Building a Team Logo = the Beginning of Team Identity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Author_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Some of the best teams we've worked with have co-created logos for their team
    and worn them with pride. While working for a space and defense customer, we had
    a team logo designing competition. We took a crest and broke it into segments
    with each team member doodling something appropriate for the team. We dot voted
    on all the pieces we liked and collaboratively built the crest from the top four
    pieces.
  prefs: []
  type: TYPE_NORMAL
- en: Team Space Force was born just like that!
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.16: Team Space Force logo'
  prefs: []
  type: TYPE_NORMAL
- en: A team with a strong identity will feel that they have purpose. All of these
    little practices and many more can help a team form, storm, norm, and perform
    as outlined in Tuckman's stages of group development[5](#footnote-009). It's important
    for teams to be allowed the space and bandwidth to get to know each other. When
    given space, a team will be happy to self-organize and share problems, and will
    want to succeed as a unit.
  prefs: []
  type: TYPE_NORMAL
- en: The responsibility of leadership is to just get out of the way and help facilitate
    the team. If the cost of a pizza and a few beers each week makes a better product
    or a happier team, it's a negligible cost in the long run. Supporting a team to
    create bonds like this helps to foster a positive culture. Creating this environment
    is key for a team to adopt a mantra such as—*You Build It, You Run It, You Own
    It*.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Team Identity with Distributed People
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Admittedly, during the COVID-19 pandemic, this has been and continues to be
    one of our biggest challenges and concerns. We knew how special and magical team
    identity could be and the impact it had in creating an awesome, psychologically
    safe environment for us to work in. Creating this with a bunch of people we'd
    never physically met nor were likely to meet any time soon felt impossible!
  prefs: []
  type: TYPE_NORMAL
- en: A variety of online ice breaker activities can help kick-start a distributed
    culture and are widely encouraged at the beginning of every meeting. Something
    fun that gets everyone saying something and generating a few smiles up front!
    One example is to have everyone introduce themselves and share a superpower they
    have and a superpower they would like to have. All team members are superheroes
    after all!
  prefs: []
  type: TYPE_NORMAL
- en: Regular break-out sessions and opportunities just to chat informally should
    not be underestimated. Think about all those conversations you have by the water
    cooler or coffee machine, over lunch or over a beer at the end of the day. Those
    conversations still need to happen when the team is distributed.
  prefs: []
  type: TYPE_NORMAL
- en: Building a collective identity may feel like just a nice thing to have but it
    really drives social bonds within the team. All of the tips mentioned earlier
    around team name, team logo, t-shirts, and so on, along with having virtual celebrations
    for events such as birthdays, are arguably even more important in distributed
    working to build a strong, high-performing virtual team. Even the act of going
    through this can be done in a collaborative and inclusive way.
  prefs: []
  type: TYPE_NORMAL
- en: '[5](#footnote-009-backlink) [Tuckman''s stages of group development](https://content.apa.org/record/1965-12187-001)'
  prefs: []
  type: TYPE_NORMAL
- en: Finally, don't underestimate the value and importance of being social while
    having lunch or breakfast together. This is something we build into our Open Innovation
    Labs residency experience because we see the strength it generates in relationships.
    So, while it may feel a little awkward, we still do it with our virtual teams.
    We have our team members show us around their houses, meet their kids and pets,
    and create fun selfie videos. We have virtual socials – order a pizza and chat
    over a glass of wine, watch a movie online, and even go to a virtual escape room
    activity.
  prefs: []
  type: TYPE_NORMAL
- en: A really strong team identity and a high-performing team often result from working
    in a great team space, full of energy, color, and information that the team is
    engaging with. Earlier in this section, we introduced the information radiator
    concept (and the information refrigerator). Let's explore this idea of information
    radiation further.
  prefs: []
  type: TYPE_NORMAL
- en: Radiate Everything
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Have you ever walked into a room housing a high-performing team and found that
    it just feels different? It's hard to capture why it feels different in text,
    but you just get a sensation of cohesion and openness all at the same time. You
    may see sticky notes on a wall showing things being worked on or tracking tools
    such as a burndown chart visible to all who enter showing the team's progress
    so far. Possibly you see things such as build monitors showing dashboards of code
    being built and deployed or tests executing, or even live stats of the applications'
    and platform's current usage!
  prefs: []
  type: TYPE_NORMAL
- en: All of these things are information radiators, and they are probably one of
    the most important things we have in our kit bags.
  prefs: []
  type: TYPE_NORMAL
- en: An information radiator serves one purpose – to show whoever passes by the latest
    information. Radiate all the things, from test scores to retrospectives, architecture
    diagrams, and even things that could hurt the team! Be proud of them and use them
    as talking points in an open environment. In a truly agile environment, we emphasize
    open and honest communication. Hiding behind a tool or burying a problem does
    not adhere to the principles of transparency. An information refrigerator is exactly
    that – it's the deep freeze where information goes to die. How many times have
    you had to request access or sign in to something to find the information you
    needed? How often has that information become stale or not been updated?
  prefs: []
  type: TYPE_NORMAL
- en: 'Besides the dashboards and sticky notes we like to have on display, a few other
    information radiators are good to have in your foundation kit bag:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Visualization of business process design**: The following figure shows an
    example of this that utilized a practice called event storming. We''ll be going
    into much more detail on this in the *Discover It* section but, as a teaser, you
    can see the amount of information being radiated – all of it was generated through
    collaboration and conversations.![](img/B16297_04_17.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 4.17: Event storming'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Visualizing what the team is working on now, what they''ve worked on previously,
    and what they might be working on in the future:** The following figure shows
    lots of boards of sticky notes providing the team with this information.![](img/B16297_04_18.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 4.18: Information radiators on every wall and every window'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Our tools** (which we will introduce in *Chapter 6, Open Technical Practices
    – Beginnings, Starting Right*) can radiate lots of real-time information about
    the status and health of the software products we''re building. Build status,
    test scores, and even animations showing the evolution of source code commits
    can provide helpful information to team members. The following figure shows some
    big monitors we use to radiate this information.![](img/B16297_04_19.1.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 4.19: Real-time information radiators focused on technology'
  prefs: []
  type: TYPE_NORMAL
- en: In the following section, we'll see how teams can practice this when working
    in distributed environments.
  prefs: []
  type: TYPE_NORMAL
- en: Radiating Everything When Distributed
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once again, it can be challenging to emulate this environment full of information
    radiators and artifacts when everyone in the team is in a different location.
    It is challenging but not impossible. Having some time and investment to set up
    workspaces well and equip them with the right tools and facilities will reap huge
    benefits and returns.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.20: Setting up information radiators at home'
  prefs: []
  type: TYPE_NORMAL
- en: Having a second (or even third) monitor can help have information radiators
    oozing warm information to you at all times. You can set windows up so you have
    different applications giving you real-time information and also have your digital
    whiteboard and video conferencing tools running. The benefit of using digital
    whiteboards is you will never run out of wall space!
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding example, you'll also see a portable speaker (great if you have
    a team social playlist running!), a small tablet that is being used to show a
    live build monitor, wall space, and sticky notes – still useful for ideating and
    planning your own work. There's even a plant helping oxygenate the space to generate
    creativity and clearer thinking!
  prefs: []
  type: TYPE_NORMAL
- en: Check out many more tips (and add your own) by visiting [https://openpracticelibrary.com/blog/guidelines-for-setting-up-a-home-working-space/](https://openpracticelibrary.com/blog/guidelines-for-setting-up-a-home-working-space/).
  prefs: []
  type: TYPE_NORMAL
- en: A further set of information radiators we use to visualize a team's health and
    mood are supported by team sentiment practices and are a key enabler of high-performing
    teams.
  prefs: []
  type: TYPE_NORMAL
- en: Team Sentiment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Team sentiment practices track the mood of a team and provide a mechanism for
    team members to rapidly feed back, either publicly or anonymously, when their
    mood has changed. Team sentiment practices enable problems to be identified, radiated,
    and addressed early. They enable the team to quickly discuss where one or more
    team members are suddenly troubled by the direction their work is going in and
    can also provide an information radiator to assess the overall team's health and
    feeling.
  prefs: []
  type: TYPE_NORMAL
- en: One popular approach to introduce a team sentiment information radiator is mood
    marbles. To use this, you will need a number of containers to hold enough marbles
    so there is one for each team member participating. When we say containers, it
    can be a simple transparent box (in Red Hat, we love containers and OpenShift
    is all about containers, so we've even found a way to get containers to track
    our feelings!) or even just a drawing of a container on large flip-chart paper.
    You'll also need two different colored marbles (can be sticky notes) to start
    with. Other colors can be introduced.
  prefs: []
  type: TYPE_NORMAL
- en: Mood marble containers are placed in a strategic place where all team members
    will see and walk past them regularly (for example, near the door or on the way
    to the bathroom).
  prefs: []
  type: TYPE_NORMAL
- en: Team members are encouraged to think about their current mood. Start with positive
    (often this is green) and negative (often this is red), and each team member adds
    a marble to the container that reflects their mood.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.21: Mood marble container radiating team sentiment information'
  prefs: []
  type: TYPE_NORMAL
- en: Team members are regularly reminded they can change their mood marble at any
    time by removing their previous marble and replacing it with a different color.
    With a container of all team members' mood marbles, the information radiated is
    on the team's overall mood.
  prefs: []
  type: TYPE_NORMAL
- en: Blending Team Sentiment with Other Practices
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Having a container of balls turn from green to red very quickly will cause more
    harm than good if we don't use other practices to recognize and address the change.
    The change could be explained by information on the real-time retrospective. Perhaps
    this is serious enough for Stop the World.
  prefs: []
  type: TYPE_NORMAL
- en: Either way, a retrospective is an excellent forum to surface, discuss, and address
    concerns that may be showing up in the team sentiment box. It can also be interesting
    to examine trends and see how team mood is changing over time. Team sentiment
    may also be impacted by other changes happening in the work environment or technology.
  prefs: []
  type: TYPE_NORMAL
- en: It can be interesting and very powerful to aggregate team sentiment data over
    time. We can use this to identify trends and patterns and draw conclusions as
    to how, for example, making some tweaks to technology practices, to other cultural
    practices, or to leadership behaviors can have an impact on team mood and performance.
    *Figure 4.22* illustrates mood distribution over time.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.22: Team sentiment analysis'
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at another real-world story of one of our authors, where he learned
    that sometimes these practices can achieve different outcomes but still very helpful
    ones!
  prefs: []
  type: TYPE_NORMAL
- en: Team Sentiment Achieving a Different Purpose – Banter!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Author_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: I have found that measuring team sentiment can be an extraordinarily tough thing
    to do in practice, especially when you are confronted with teams who are predominantly
    of one sex – for example, all male. I am a man and I can confidently say that
    men in particular generally do not want to share their *feelings*, especially
    in terms of the mood of the team.
  prefs: []
  type: TYPE_NORMAL
- en: On one particular engagement, we had a great female engagement lead who described
    the practice of mood marbles and was fully expecting the nearly all-male team
    to whole-heartedly participate. After several days of no activity on the mood
    marble board, the sticky note shown on the left appeared.
  prefs: []
  type: TYPE_NORMAL
- en: It took a bit of explaining that no, it really was not representative of the
    deeply held feelings of a frustrated teammate, it was just good old banter! In the
    days that followed, many different colors and funny drawings appeared in the mood
    marble container. So, the practice did (kind of) work!
  prefs: []
  type: TYPE_NORMAL
- en: Many people will have had to try team-forming with groups of people who have
    never met each other or are not in the same location. This is particularly true
    during the COVID-19 pandemic. Let's look at an example of how we used the same
    practice digitally.
  prefs: []
  type: TYPE_NORMAL
- en: Team Sentiment with Distributed People
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The same practice can be done using a digital tool and again emphasizes the
    importance of keeping such information radiators warm and regularly inspected.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.23: A digital mood marble container for distributed team sentiment
    capture'
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more and collaborate about Team Sentiment practices by going to
    the Open Practice Library page at [https://openpracticelibrary.com/practice/team-sentiment/](https://openpracticelibrary.com/practice/team-sentiment/).
  prefs: []
  type: TYPE_NORMAL
- en: Radiate Failures
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Having information radiators, dashboards, and mood marble containers show green
    can be satisfying and positive validation. But when they are red is when they
    are more powerful. When they radiate that something is wrong or failing, it presents
    a feedback loop to the people around to react and respond to.
  prefs: []
  type: TYPE_NORMAL
- en: Radiating Failure – as Useful (If Not More) as Radiating Success
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/Donal.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Not all information radiators need to be flashing green all the time or show
    positive things. Sometimes the negative can be a great way to start a conversation.
  prefs: []
  type: TYPE_NORMAL
- en: When working for a retailer some years ago, there were multiple suppliers contributing
    to the solution. Each one was responsible for a different tier of the architecture
    and my team was responsible for some of the middleware used to serve data in a
    mobile-friendly way from a broker.
  prefs: []
  type: TYPE_NORMAL
- en: We were repeatedly being challenged by the retailer for being late in deploying
    our production server – however, none of the other teams was ready either! When
    we did deploy our stack, the broker layer was not connected up either, so our
    server was talking to something that did not exist!
  prefs: []
  type: TYPE_NORMAL
- en: To try to bring the conversation back to the teams that were now causing the
    blockages, we created a simple dashboard of TrafficLight jobs. It was a simple
    piece of automation that just did a smoke test of each service, to check its connectivity.
    We labeled the dashboard Production Monitoring and got it up on a projector in
    our project room – so whenever someone entered, they would see a board with lots
    of red on it.
  prefs: []
  type: TYPE_NORMAL
- en: The lesson I took from it was simple – one way to get things moving is to have
    a dashboard with lots of red on it labeled Production Monitoring! This dashboard
    helped us steer the conversation toward the fact that our piece of the architecture
    being in place on its own was useless – and that we as multiple suppliers for
    the retailer needed to work together to get the end-to-end solution working and
    not just our small parts.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.24: Starting to make technical environmental information visible'
  prefs: []
  type: TYPE_NORMAL
- en: If you're looking for some great ideas for things you can visualize in a creative
    way, we cannot recommend this book enough – *96 Visualization Examples* by Jimmy
    Janlén![6](#footnote-008) It has some amazing ideas for displaying information
    that's critical for the team to be able to respond to. And it has a super bonus
    section on the correct way to peel a sticky note!!
  prefs: []
  type: TYPE_NORMAL
- en: You can learn more and collaborate about the visualization of work practice
    by going to the Open Practice Library page at [https://openpracticelibrary.com/practice/visualisation-of-work/](https://openpracticelibrary.com/practice/visualisation-of-work/).
  prefs: []
  type: TYPE_NORMAL
- en: '[6](#footnote-008-backlink) [https://visualizationexamples.com/](https://visualizationexamples.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Inspect and Adapt
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By now we've introduced lots of practices and techniques to help the team collaborate
    and get to know each other. But there is no point in doing them once and walking
    away without learning from them.
  prefs: []
  type: TYPE_NORMAL
- en: There is nothing to be gained from the data they provide if it's not responded
    to. It's very easy to slip into this pattern. We've seen it all before – the team
    does a retrospective and comes up with a really great discussion but then captures
    no actions to fix things. Even worse, they capture actions but they are not adhered
    to or given any time to solve.
  prefs: []
  type: TYPE_NORMAL
- en: What happens next? The same problems appear in the very next retrospective and
    the team morale will slowly slip as nothing gets fixed. Time to break the cycle!
    Respond to the information. Be a doer.
  prefs: []
  type: TYPE_NORMAL
- en: You've got all these tools in place, but they're completely useless if ignored.
    They may look pretty – but they are useless if not actioned. We need to respond
    to the change when the tool or practice tells us that is the right thing to do,
    and we need to be prepared to pivot and change direction if that's what the information
    is telling us to do.
  prefs: []
  type: TYPE_NORMAL
- en: To be able to inspect something (technical), you have to monitor and continuously
    collect metrics as a fundamental tenet built into every service and every tool.
  prefs: []
  type: TYPE_NORMAL
- en: Metrics are built into OpenShift and other products. Insightful dashboards allow
    you to find things before your customers do. They also allow you to radiate real
    information about the product, technology, and team in a way that cannot be ignored.
    The data doesn't lie, and having it displayed so publicly and transparently can
    help unblock and maintain team autonomy and mastery. Where the team is blocked
    and radiating the information to explain why, holding regular *walk the walls*
    sessions with stakeholders and management who can make decisions to unblock and
    change the information can really drive inspection and adaptation for the wider
    good. If there is a problem, if there is a snag, if there is a blocker, make sure
    it is clearly being radiated and have the people who can fix it see that information
    regularly. If it's not being seen, make it bigger, share it more, add some sound
    – this is your opportunity to make sure these things are seen and heard.
  prefs: []
  type: TYPE_NORMAL
- en: PetBattle — Establishing the Cultural Foundation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Aidan, Ciarán, Emma, and Jen, the four engineers who have committed to work
    on the next evolution of PetBattle, met with Dave (a UX designer), Susan (a quality
    assurance consultant), and Eoin, who is leading the upcoming engagement to take
    PetBattle to the next level. Eoin had brought coffee and donuts and set the meeting
    up as a *kick off for success* session. Some of the team had worked together before.
    Jen, Dave, and Susan were brand new.
  prefs: []
  type: TYPE_NORMAL
- en: Eoin had rented some cool downtown office space that was going to be PetBattle
    HQ for the next few months. In the room, there were lots of movable desks, portable
    whiteboards, and swivel chairs, as well as bean bags and comfy foam seats. There
    were also some huge foam boards (a couple of inches thick and 8ft by 4ft in size)
    stacked up at one end of the room. All the furniture was pushed over to the other
    side of the room and Eoin pointed out that the team could configure the space
    however they wanted. Everything was on wheels and portable. Even the plants were
    on wheels!
  prefs: []
  type: TYPE_NORMAL
- en: There were also several brand-new large monitors and other IT accessories and
    loads of unopened boxes from Amazon that Eoin said were full of every color and
    every size of sticky note imaginable. He'd also bought Sharpie pens, timers, colored
    card, painters' tape – you name it, he'd bought it. Eoin had been busy!
  prefs: []
  type: TYPE_NORMAL
- en: On one wall, Eoin had prepared a *Kick-Off Backlog*, and there were a number
    of sticky notes representing items he wanted to cover in the next few days. The
    team looked at items on the backlog and added a few things of their own that they
    hoped to cover.
  prefs: []
  type: TYPE_NORMAL
- en: After coffee and a bit of chat, they started a short ice breaker where everyone
    had to introduce themselves and tell three things about themselves – two of them
    truthful and one a lie. Over the course of the week, the team would have to work
    out what everyone's lie was.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next item was to form a social contract. Eoin explained how it worked and
    asked everyone to write at least one sticky note of something they would like
    to add. The social contract started with a discussion about the core working hours,
    which they agreed would be 10 AM to 4 PM – all collaborative activities would
    be scheduled inside this time box. Emma suggested a *Be on time* social contract
    item, which everyone agreed to. Dave suggested a *relaxed dress code*, which everyone
    was very happy with. During the next 30 minutes, the team got into some interesting
    conversations that resulted in the social contract comprising the following as
    well:'
  prefs: []
  type: TYPE_NORMAL
- en: Have fun!
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure everyone is heard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Show empathy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It's ok to be wrong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mob to learn and pair to build
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be open
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Have a social evening out every week
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Breakfast and lunch as a team three times a week
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be empowered
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eventually, the team agreed this was a good start but they would all continue
    to reflect and think about how to improve the social contract. They all signed
    it and Eoin hung it on the wall near the team.
  prefs: []
  type: TYPE_NORMAL
- en: Jen suggested the team try using a real-time retrospective – something she had
    seen at a recent conference and was keen to try. Everyone had done retrospectives
    before but they were not familiar with the real-time aspect. It seemed like a
    good idea and they agreed to give it a go.
  prefs: []
  type: TYPE_NORMAL
- en: The next items on the backlog were *introduction to the room*. Eoin had set
    up a mood marble container by the door and explained how the practice would work.
    The team looked a bit skeptical (Aidan made a comment that these were not the
    kind of containers he thought he'd be working with today) but, in the spirit of
    being open and experimental, would give it a go.
  prefs: []
  type: TYPE_NORMAL
- en: At the other end of the room was a big rope with an old bell at the top. There
    was a big sign next to it that said *STOP*. Susan offered to explain how this
    worked and how it could be used to *stop the world*. The team seemed very happy
    with this – it made a lot of sense. In fact, most of them were thinking of many
    scenarios that had happened to them in previous jobs where this would have been
    very useful!
  prefs: []
  type: TYPE_NORMAL
- en: The team was introduced to the rest of the room. There were lots of placeholder
    signs on different parts of the wall. One had now been filled with the social
    contract. There were headings for Impact Map, Event Storm, value slices, product
    backlog, and sprint 1\. Eoin explained that, while the room may feel empty now,
    in just a few days it will be filled with information.
  prefs: []
  type: TYPE_NORMAL
- en: The next item on the kick-off backlog was to configure the space. This was a
    great activity to do as a team and was really in the spirit of being empowered.
    The team wheeled in tables and discussed how they'd like to be set up with a mobbing
    corner and pairing stations. They set up every monitor Eoin had purchased. They
    even attached some Raspberry Pi mini-computers to each one. Aidan added a PetBattle
    digital sign to each one! The music was on, the space was configured, and it looked
    great. The volume of the team over lunch started to rise. There were more laughs
    and banter.
  prefs: []
  type: TYPE_NORMAL
- en: The team had started to form. The cultural foundation was in place and would
    only strengthen from there.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we introduced the foundation from a culture and collaboration
    perspective and the importance of building this foundation before we do any technology
    or try to do any discovery or delivery of product development. To achieve strong
    business outcomes when using DevOps and OpenShift, we need to have high-performing
    teams developing and operating software products.
  prefs: []
  type: TYPE_NORMAL
- en: The starting point to creating a high-performing team is enabling an open culture
    where the team members feel psychologically safe and can achieve a sense of autonomy,
    mastery, and purpose in everything they do.
  prefs: []
  type: TYPE_NORMAL
- en: To help us realize this and build the foundation, we explored several of our
    favorite practices that have enjoyed the most success in kicking off new teams
    – social contracts, a *Stop the World* system, gaining team identity, radiating
    as much information as possible, including team sentiment, and starting a cycle
    of regular inspection and adaptation.
  prefs: []
  type: TYPE_NORMAL
- en: We told a fair number of stories and shared some memories of applying these
    practices. And we returned to our newly forming PetBattle team to see how they
    went about starting their cultural foundation on their first day together.
  prefs: []
  type: TYPE_NORMAL
- en: Some of the practices in this chapter may work for you and your team. Some may
    not and you'll want to throw the tool back into the box and choose something else.
    There are many, many more you can explore at [https://openpracticelibrary.com/tags/foundation](https://openpracticelibrary.com/tags/foundation),
    or you can contribute your own. Remember, the precise practices and tools you
    use are not as important as the fact that you are investing time in establishing
    a cultural foundation.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_04_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4.25: Adding the foundation of open culture practices'
  prefs: []
  type: TYPE_NORMAL
- en: Of course, a foundation can be improved upon and strengthened. In the next chapter,
    we'll explore how leadership can help this from the outset and how open physical
    environments and spaces can strengthen it. In *Section 7, Improve It, Sustain
    It*, we'll explore further how the foundation can be strengthened to support scalability
    and sustainability for product teams adopting the open way of working.
  prefs: []
  type: TYPE_NORMAL
