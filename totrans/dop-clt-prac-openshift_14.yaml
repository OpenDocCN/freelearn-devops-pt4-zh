- en: 10\. Setting Outcomes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we used practices to help extract lots of detail to
    confirm what problems we're going to solve, who we're solving them for, and our
    approach to solving them in an experimental and incremental way.
  prefs: []
  type: TYPE_NORMAL
- en: By using practices such as Impact Mapping and human-centered design, we should
    now have a good understanding of the customer and business pain points. Before
    we dive into developing software solutions, we need to translate those problems
    into potential business and customer outcomes. And we need to use all the information
    captured from those artifacts and the information radiated from those practices
    to ensure we deliver outcomes that will really matter.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to explore all the learning done in the *Discovery*
    section of the Mobius Loop so far to clearly define and articulate the goals and
    outcomes the team is striving to deliver to happy stakeholders and end users.
    This includes:'
  prefs: []
  type: TYPE_NORMAL
- en: Explaining the difference between outputs and outcomes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why we should have Target Outcomes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to capture Target Outcomes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some examples of Target Outcomes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to visualize Target Outcomes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to optimize and chain Target Outcomes with other practices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting Target Outcomes can include end user (customer-)based outcomes as well
    as business- and capability-based outcomes. When using Mobius, outcomes should
    be measurable. We should always be able to assign a numerical value to the current
    state and the target state. By regularly inspecting these measures, we can establish
    whether we are moving toward the outcome, whether we've met it, or if we need
    to pivot and change our approach if we're not meeting them.
  prefs: []
  type: TYPE_NORMAL
- en: What Is an Outcome?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As described in *Section 1, Practices Make Perfect*, the Mobius Loop encourages
    an iterative, experimental approach to achieving outcomes through a continuous
    flow of innovation using continuous discovery and continuous delivery. An outcome
    is a result that occurs from doing something. In our case, the outcome is a change
    in human behavior that drives change in the culture, impacting long-term business
    results.
  prefs: []
  type: TYPE_NORMAL
- en: The Target Outcomes practice helps teams discover, write, align on, and share
    the desired behavioral change they would like to see achieved by application products.
    Sharing Target Outcomes helps the team deliver measurable results and align with
    stakeholders and team members. Referring to Target Outcomes can help prioritize
    and filter work so that we are always focused on delivering measurable impact.
  prefs: []
  type: TYPE_NORMAL
- en: The Target Outcomes practice involves creating a canvas that summarizes anticipated
    and hopeful measurable change captured by the team and stakeholders. This artifact
    serves as an information radiator, reinforcing Target Outcomes used during other
    practices, activities, and discussions from other parts of the Mobius Loop. The
    Measure and Learn element of the Delivery Loop focuses on evaluating the outcomes.
    We'll explore that in *Section 5, Deliver It*. This chapter is about setting the
    outcomes when in the Discovery Loop.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.1: The Discovery Loop'
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter, we introduced Impact Mapping and described the differences
    between Impacts, which are measurable changes we want to achieve on the Actors,
    and a Delivery, which comprises of implementable pieces of work. Let's dive deeper
    into the difference between outcomes and outputs because it is very important
    to get this understanding.
  prefs: []
  type: TYPE_NORMAL
- en: Outcomes versus Outputs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An output is a piece of work that has a defined scope that a team completes.
    For example, implementing a feature, executing an experiment or carrying out some
    research, a UI prototype, or a technical spike. Organizations sometimes push to
    increase outputs because they think more features mean an increase in value. But
    that is not always the case. In fact, more often than not, less is more, and not
    all outputs translate directly into value. For example, implementing a feature
    does not add value if customers do not ever use the feature or, for that matter,
    never requested it in the first place. Think of the systems you have used that
    are overloaded with features that are never used, but where one or two key features
    are used all the time. When a team emphasizes outcomes over outputs, the team
    can iterate to find the right features that deliver value.
  prefs: []
  type: TYPE_NORMAL
- en: Teams sometimes have difficulty identifying shared outcomes because the differences
    between outcomes and outputs are unclear or they are unable to see the linkage
    between outputs they are proposing to deliver and the outcomes the organization
    wants them to achieve.
  prefs: []
  type: TYPE_NORMAL
- en: '*Joshua Seiden* describes, in his book Outcomes Over Output,[1](#footnote-043)
    how **an outcome is a change in human behavior that drives business results**.
    We can show the subtle but very important differences between outputs, outcomes,
    and impacts in the figure below.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.2: Outputs, Outcomes, and Impacts'
  prefs: []
  type: TYPE_NORMAL
- en: '[1](#footnote-043-backlink) [https://www.senseandrespondpress.com/managing-outcomes](https://www.senseandrespondpress.com/managing-outcomes)'
  prefs: []
  type: TYPE_NORMAL
- en: By switching the conversation to be focused on outcomes, we are thinking about
    the impact we want to have on users and other stakeholders as demonstrated by
    the Impact Map through the connection between the Impacts and Actors. From our
    Impact Map, we have identified the different Actor groups we can actively engage
    with to test our hypothesis and learn by experimentation, delivery, and feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Why Have Target Outcomes?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Target Outcomes practice creates shared alignment and purpose with a team,
    their stakeholders, and their customers.
  prefs: []
  type: TYPE_NORMAL
- en: 'By constantly displaying Target Outcomes on a big visible information radiator,
    the team can be reminded of the success criteria for the project. These reminders
    guide the team toward project success in day-to-day activities, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: Evaluation and prioritization of work items
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discussions that occur in other Mobius Loop practices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emphasizing outcomes over outputs is a fundamental concept in the Open Practice
    Library. Identify Target Outcomes early on in new projects to ensure alignment
    from the beginning. Existing projects can run the Target Outcomes practice to
    assess the team's alignment and verify that the project has shared outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Any one of the following scenarios might indicate that a team will benefit
    from establishing Target Outcomes:'
  prefs: []
  type: TYPE_NORMAL
- en: Your team receives praise for successfully delivering a new product or feature
    within a given time frame and budget. However, after delivery, the team is surprised
    to learn that customers do not use the new product. Because the project is finished,
    the team cannot quickly adapt the product or feature in response to the feedback.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daily team interactions focus on completing the feature instead of completing
    a version of the feature that achieves desired results.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Over-engineering of a feature or solution such that it is gold plated and goes
    way beyond what was really needed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Your teams celebrate a successful delivery before customers interact with the
    product or provide product feedback.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The final product deliverable fails in the marketplace, despite a considerable
    investment of people and adhering to agile delivery methods. The use of iterations
    during delivery did not result in the delivery of a successful product.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The scope for a team deliverable changed unexpectedly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's look at how we run a short workshop to capture Target Outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: How to Capture Target Outcomes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We often run the Target Outcomes practice immediately after running Discovery
    â€“ Why and Who practices such as creating a North Star and/or an Impact Map. We
    often conclude these sessions with a confidence vote by everyone involved to establish
    a shared view on how aligned we, as a group, feel we are.
  prefs: []
  type: TYPE_NORMAL
- en: This should have resulted in a shared understanding of context across the team.
    If this hasn't worked, consider some of the other practices in this part of the
    Open Practice Library, such as Start at the End,[2](#footnote-042) News Headlines,[3](#footnote-041)
    or Start with Why,[4](#footnote-040) to establish a shared team purpose or context.
    Remember, the Open Practice Library is a toolbox, so if the tools you've tried
    have not quite worked, try another one!
  prefs: []
  type: TYPE_NORMAL
- en: Based on the group's learnings from these activities, use a silent collaboration
    technique, or another brainstorming technique, to create a collection of potential
    Target Outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: Use affinity mapping[5](#footnote-039) to identify patterns and groupings of
    potential outcomes. Use a group discussion, or another technique such as Dot Voting,
    to achieve consensus on a small set of potential outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: Review the potential outcomes and structure them to ensure they are measurable
    outcomes. Identify how to quantify and measure the outcomes. Identify a common
    structure to express the outcomes. Review the list of measurable outcomes. Discuss
    the outcomes with all the stakeholders to ensure that the outcomes are not too
    narrow in scope and are satisfactory to everyone. Ensure everyone in the meeting
    consents to the measurable outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: 'To help articulate valid outcomes and evaluate proposed outcomes, the Mobius
    QuickStart Guide[6](#footnote-038) by *Gabrielle Benefield* and *Ryan Shriver*
    suggests focusing on the following five attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Name** provides a simple description statement such as **Decrease Time-to-Checkout**.
    The verb is typically the direction of improvement (increase or decrease) and
    the noun is the subject of improvement.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**What to Measure (Scale)** provides a consistent unit of measurement. Examples
    could be seconds to complete checkout.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**How to Measure (Method)** indicates how and when to measure, such as with
    a daily web analytics report including who is responsible for gathering and publishing
    the data and how frequently this is done.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Baseline Measure** provides the current level and the starting point for
    comparing future measurements against. Examples could be 200 seconds to check
    out.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Target Measure** is the desired success level in absolute or relative terms.
    Examples could be checkout times of 60 seconds or 75% improvement checkout speed
    by Q4\. Target Measures can include a date clarifying by when the target is expected
    to be achieved.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[2](#footnote-042-backlink) [https://openpracticelibrary.com/practice/start-at-the-end/](https://openpracticelibrary.com/practice/start-at-the-end/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3](#footnote-041-backlink) [https://openpracticelibrary.com/practice/news-headlines-aka-cover-story/](https://openpracticelibrary.com/practice/news-headlines-aka-cover-story/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[4](#footnote-040-backlink) [https://openpracticelibrary.com/practice/start-with-why/](https://openpracticelibrary.com/practice/start-with-why/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[5](#footnote-039-backlink) [https://openpracticelibrary.com/practice/affinity-mapping/](https://openpracticelibrary.com/practice/affinity-mapping/)'
  prefs: []
  type: TYPE_NORMAL
- en: '[6](#footnote-038-backlink) [https://mobiusloop.com/kit/](https://mobiusloop.com/kit/)'
  prefs: []
  type: TYPE_NORMAL
- en: Representing these five attributes in an arrow diagram similar to *Figure 10.3*
    can help visualize the outcome.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.3: The arrow representation of an outcome'
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternative formats exist that can help define outcomes. Experiment with alternative
    formats to discover if the team creates outcomes more effectively using them.
    For example, the SMART criteria (introduced in the previous picture) and summarized
    again below define five characteristics for an outcome or goal: specific, measurable,
    achievable, realistic, and time-based.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.4: SMART outcomes'
  prefs: []
  type: TYPE_NORMAL
- en: A stronger outcome statement is one that is measurable or can be broken down
    into a number of measures. Our approach to delivery is centered around moving
    to an iterative approach with regular releases of incremental value. We want to
    measure the outcomes as of now and then be able to measure the outcomes as we
    start to run experiments with feature ideas.
  prefs: []
  type: TYPE_NORMAL
- en: When starting our delivery, we should be able to regularly pause and measure
    the impact of the experiment or initiative to ensure that we learn from it and
    what we are doing is either taking us toward our target-measurable outcome or
    triggering a pivot or re-think.
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at some examples.
  prefs: []
  type: TYPE_NORMAL
- en: Examples of Target Outcomes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To provide context for the Target Outcome examples in this section, consider
    the scenario of Issue Resolution Time.
  prefs: []
  type: TYPE_NORMAL
- en: During early Discovery Loop activities, a software product team uses affinity
    mapping to analyze customer feedback data. The analysis shows that many customers
    are unhappy with the time required to resolve issues with the software. The team
    believes that the dissatisfaction with response time is affecting customer retention.
  prefs: []
  type: TYPE_NORMAL
- en: The team uses the **Metrics-Based Process Mapping** (**MBPM**) practice, as
    introduced in the previous chapter, to identify significant bottlenecks that are
    negatively impacting response times. The exercise identifies several inefficient
    process components.
  prefs: []
  type: TYPE_NORMAL
- en: Other Discovery Loop activities reveal that operations stakeholders are nervous
    about more frequent product deployments. Frequent deployments cannot result in
    additional planned or unplanned work for operations personnel.
  prefs: []
  type: TYPE_NORMAL
- en: 'The team uses the Target Outcomes practice to:'
  prefs: []
  type: TYPE_NORMAL
- en: Discuss the results of the MBPM practice and other Discovery practice findings.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List potential goals of the team's project.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a result of the Target Outcomes practice, the team creates the information
    radiator visualizing three Target Outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: In this example, the service provider previously had a service level agreement
    to always resolve a complex provisioning issue (including, if necessary, site
    visits) within 30 days. As a result of the upcoming product development, the target
    is to move that to 20 days. In doing this, the organization hopes to improve customer
    satisfaction survey scores (out of 5) from 3.2 to 3.5\. They want to do this without
    creating any additional manual work performed by those who work on the operations.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.5: A Target Outcomes example'
  prefs: []
  type: TYPE_NORMAL
- en: 'The Target Outcomes artifact reminds the team to:'
  prefs: []
  type: TYPE_NORMAL
- en: Focus on finding and designing solutions that reduce the resolution time for
    customer issues. Successful solutions reduce the average resolution time by at
    least 10 days and do not increase the operations personnel's workload.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The team believes that a successful solution will also increase average customer
    satisfaction scores by at least 0.3.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the team can deliver a solution that achieves some (but not all) of the Target
    Outcomes, then the team uses practices in the Options Pivot to decide if a pivot
    is required. They may decide to do more delivery (another Delivery Loop) to try
    and move the measurement further toward the target. They may decide, following
    feedback, that the new measure is sufficient to move onto another Target Outcome.
    Or some reprioritization may take place. These options will be explored in detail
    in the next chapter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The team might decide to:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Revisit Discovery practices, and update the Target Outcomes for the next quarter
    based on what the team learned from the previous quarter of activity.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Pursue a different solution to achieve the same three Target Outcomes.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The best way to articulate and understand where a product is in relation to
    achieving target outcomes is to use visualization.
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing Target Outcomes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A single visual showing an outcome's key attributes helps everyone clearly understand
    the current state and desired future state. In Mobius, these are known as outcome
    trackers. As ideas are planned and implemented, these visuals are updated to show
    progress over time. Visualization in public spaces such as team rooms or community
    areas helps keep the outcomes omnipresent throughout planning and design activities.
    This gently reminds everyone of what success looks like in a way that is accessible
    and clear. Showing the progress achieved so far gives teams the satisfaction that
    they are moving forward in a positive way. Showing lack of progress or movement
    in the wrong direction can trigger a quicker reaction and could even be coupled
    with Realtime Retrospective updates or a Stop-the-World event â€“ practices we introduced
    in *SectionÂ 2, Establishing the Foundation*, when building our Open Culture foundation.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.6: Visualizing Target Outcomes'
  prefs: []
  type: TYPE_NORMAL
- en: Visualizing target outcomes creates alignment, shared understanding and conversation
    about how they can be improved and optimized.
  prefs: []
  type: TYPE_NORMAL
- en: Optimizing Target Outcomes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As with all of the artifacts we introduce from practices in this book, we are
    **never done** and can always improve as we learn more from subsequent delivery
    and (more) discovery activities. The Target Outcomes practice is intended to provide
    direction at the time of the practice. As we measure and learn from the outputs
    of our delivery cycles, we may well learn that some of the assumptions we made
    during the Discovery Loop are now invalid and we can rerun Discovery practices
    with this additional learning to produce an improved set of Target Outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: Teams can refer back to the agreed Target Outcomes throughout the loops to guide
    their decisions. Use the Target Outcomes to prioritize work and reject unplanned
    work that does not contribute to outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: Target Outcomes must have a time frame. Measure each Target Outcome regularly
    to assess progress, including at the end of the designated time period. When the
    time period for each outcome ends, the team evaluates the situation and decides
    to add new outcomes, with corresponding time periods, if needed.
  prefs: []
  type: TYPE_NORMAL
- en: As we gain more information from customers as they feed back on increments of
    the evolving product, it can lead to course direction changes and perhaps a need
    for new or revised Target Outcomes. We'll explore this in much more detail when
    we look at the Options Pivot coming out of Discovery (in the next chapter) and
    the Options Pivot coming out of Delivery in *Section 5, Deliver It*.
  prefs: []
  type: TYPE_NORMAL
- en: Target Outcomes is not a practice that can be done alone. It needs to be fed
    by several other practices and the result of it drives inputs to several new practices.
  prefs: []
  type: TYPE_NORMAL
- en: Chaining Target Outcomes with Other Practices
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Target Outcomes practice can be run as a standalone, but we strongly recommend
    running it after some of the other Discovery practices. Often stakeholders will
    say upfront that they categorically know what the Target Outcomes of a product
    or initiative should be. However, after articulating the North Star of the product
    or organization, running an Impact Mapping session, using a human-centered design
    practice such as Design Thinking, and considering a future state architecture
    using Event Storming or MBPM, their view may significantly change. Target outcomes
    that are backed by a deeper discovery of context and increased empathy with users
    and stakeholders allow for a far better view of what exactly is to be achieved
    and why.
  prefs: []
  type: TYPE_NORMAL
- en: So, we're starting to see the impact of chaining these practices together. Having
    all of the artifacts from the practices clearly visible to the practitioners means
    they can keep one eye on all of the fantastic learning achieved from their practices,
    for when they come to distill all the learning down into a set of target-measurable
    outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: Another great example of a practice that should not be forgotten about is Priority
    Sliders. During this, we gained alignment and consensus of many stakeholders to
    agree on the priorities of the product or project. So, we should constantly remind
    everyone of what we agreed here when articulating Target Outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: This is where great facilitation really takes place. A great facilitator will
    not be central to the conversations about context and detail but they will ask
    open questions about the information radiated during previous practices. They
    will also keep in mind what the group should be targeting and trying to achieve.
    They want to achieve target-measurable outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: Having a well-prepared space with plenty of sticky notes and pens can help facilitate
    a great Target Outcomes session. This can also be achieved in a virtual environment
    by using a template such as the one below, which can be downloaded from the book's
    GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.7: Target Outcomes canvas'
  prefs: []
  type: TYPE_NORMAL
- en: Let's get back to our PetBattle team and explore the Target Outcomes that resulted
    from their trip around the Discovery Loop.
  prefs: []
  type: TYPE_NORMAL
- en: PetBattle Target Outcomes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The PetBattle team aligned on the following Target Outcomes:'
  prefs: []
  type: TYPE_NORMAL
- en: PetBattle is generating revenue from an increased active user base.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PetBattle is always online.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An enthusiastic team that is excited to build and run PetBattle.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'There are three distinct categories represented here. #1 â€“ generate revenue
    â€“ is clearly a business goal that is directly linked to increased user activity
    (an assumption we can test). Target Outcome #2 refers to the stability and availability
    of the product PetBattle â€“ when the product went viral, which crashed the system,
    they had very poor user experience and no chance to potentially gain revenue as
    PetBattle was not online for users to access! Target Outcome #3 is a team culture-based
    outcome â€“ by having an engaged team who have a real sense of product ownership,
    they will be happier in their workplace and be more responsive and motivated to
    grow and improve the product in the future (another assumption we can test!).'
  prefs: []
  type: TYPE_NORMAL
- en: Let's take our first Target Outcome, which is that PetBattle is generating revenue
    from an increased active user base. This can easily be seen as a measurable outcome.
    We can quantify at any given time the number of users registered in our system,
    the number of visitors to our site, the number of engaged users, the amount of
    engaging activity users are doing, and, of course, revenue secured through advertisers.
  prefs: []
  type: TYPE_NORMAL
- en: We can nicely visualize the baseline metrics we have at this point and the target
    metrics we want to get to from near future increments of the product.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.8: Target outcome â€“ Increased active user base (in thousands)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at our second Target Outcome: that PetBattle is always online.
    From the early version of the app, there have been stability issues due to the
    huge popularity. We can collect a metric now on what we believe represents the
    uptime of the existing site and visualize how we want to improve this to the target-measurable
    outcome of always being online.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.9: Target outcome â€“ Always online'
  prefs: []
  type: TYPE_NORMAL
- en: Our third Target Outcome is that we have an enthusiastic team that is excited
    to build and run PetBattle is focused on employee engagement and satisfaction.
    This can also be measured and visualized through quantifying the level of happiness
    and engagement of the workforce.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.10: Target outcome â€“ Increased employee engagement and satisfaction'
  prefs: []
  type: TYPE_NORMAL
- en: Lots of conversation and collaboration contributes to reaching this point of
    consensus around Target Outcomes. When we eventually reach consensus across all
    stakeholder groups that these are the outcomes we will be trying to reach, we
    like to keep them highly visible and accessible. They should be a reference point
    for everything we do from this point onwards. As we start to deliver features
    and increments of our product, they should be taking us toward the Target Outcomes
    we've agreed. Capturing measurements from our products to give us real-time data
    out of our iterative delivery enables us to inspect, assess, adapt, and refine
    previous decisions made.
  prefs: []
  type: TYPE_NORMAL
- en: In the example above, we saw three very different focuses on outcomes. They
    were not just about the application or business but spread between the application,
    what the platform enables, and the performance and motivation of the team. This
    is a pattern we have observed with many customers.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Balance of Three: People/Process/Technology'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/author_face_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In our Open Innovation Labs residencies, we work in a time box of 4-12 weeks
    to immerse one of our customers' product teams into DevOps culture and practices
    using OpenShift.
  prefs: []
  type: TYPE_NORMAL
- en: We start out these engagements using practices such as Impact Mapping and human-centered
    design practices and aim to establish a set of Target Outcomes for the residency
    engagement.
  prefs: []
  type: TYPE_NORMAL
- en: We've noticed that where the outcomes are not just focused on technology or
    the application or the culture but a combination of all three of these, the eventual
    impact of the engagement is much stronger.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of our early engagements established these three outcomes:'
  prefs: []
  type: TYPE_NORMAL
- en: A new standard for working with DevOps has been set, including the skill set
    of the team.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A new application is running in production.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The team feels great, excited, and empowered when working with this product.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One of the outcomes here is related to the technology and platform (DevOps).
    One is related to a revenue-generating application that we were to build during
    the residency. The final one is about the culture and the team.
  prefs: []
  type: TYPE_NORMAL
- en: This is a great balance of Target Outcomes for a first team in an organization
    that might be moving toward DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: The outcomes above do lack measures and perhaps were not as SMART as they could
    have been.
  prefs: []
  type: TYPE_NORMAL
- en: 'A more recent set of outcomes with a customer in the United Arab Emirates was
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Customer] can seamlessly deploy workloads several times a day to prove self-service
    capabilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Application] is seamlessly deployed as an example to prove a repeatable pattern
    for deploying N other applications and to decrease the time to market for changes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development is a first-class citizen. Multifunctional teams are empowered using
    Site Reliability Engineering best practices as a Product Team.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These outcomes start to introduce the idea of something measurable. The magic
    word in the second outcome is decrease. There is a measurable outcome here around
    decreasing time to market for changes. This is something that could be measured
    before, during, and after the engagements.
  prefs: []
  type: TYPE_NORMAL
- en: 'The final example comes from a non-government organization focused on healthcare:'
  prefs: []
  type: TYPE_NORMAL
- en: Increased level of empowerment and skills such that the [application] can be
    confidently owned and managed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a more Open Data model for [application] for [users] to be increasingly
    attracted to our system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A clear development lifecycle on a scalable, secure, and stable platform as
    measured by increased security, automation, and monitoring (auditability)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Again, we see the balance of team, application, and platform in these three
    outcomes. All three outcomes can also be measured.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now look at a simple example of how we have measured an outcome.
  prefs: []
  type: TYPE_NORMAL
- en: Target Outcomes from a Telecoms Product â€“ Stopwatch at the Ready!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](img/author_face_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: One of my favorite examples of Target Outcomes that were user-centered comes
    from a telecommunications company we worked with in Ireland.
  prefs: []
  type: TYPE_NORMAL
- en: We were building a new enterprise portal for corporate customers to browse and
    buy their company mobile phones.
  prefs: []
  type: TYPE_NORMAL
- en: The team used design thinking practices to establish empathy with employees
    of the top three enterprise customers. Empathy mapping these users and visualizing
    their existing processes using a scenario mapping practice highlighted several
    pain points and opportunities for increased user experience in our new solution.
  prefs: []
  type: TYPE_NORMAL
- en: The Target Outcomes were written in a format that encompassed a Who, What, and
    Wow â€“ who was going to benefit from the outcomes, what was the outcome, and what
    was the Wow factor, or the measure.
  prefs: []
  type: TYPE_NORMAL
- en: 'The three outcomes that we distilled the learning of our Discovery practices
    were:'
  prefs: []
  type: TYPE_NORMAL
- en: An employee can search for, view, and select their desired phone in less than
    30 seconds.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An employee can place an order to upgrade their device and receive their new
    phone ready to use with their existing number in less than 48 hours.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An employee can login to the portal using their company credentials, so they
    don't need to set up or remember another username and password.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These outcomes are very micro-focused on a particular product. The first two
    are very measurable and you can imagine our team had the stopwatch out in user
    testing against the first of them!
  prefs: []
  type: TYPE_NORMAL
- en: I loved these outcomes because, written up on a big visible chart, it summarized
    for everyone walking by our team space what we were trying to achieve. We needed
    an app where time-constrained users could do what they needed to do quickly, they
    would receive their order quickly, and it would just work and they would not feel
    like they needed to engage with yet another company â€“ their experience would remain
    aligned to their company employment.
  prefs: []
  type: TYPE_NORMAL
- en: We've now seen a few different examples of Target Outcomes set during engagements
    with different customers. One thing you may have noticed is that Target Outcomes
    can range from being very end user-centric to being more about the technology,
    platform, and team being used to develop the application. This leads us to explore
    the idea of primary outcomes (more end user-centric) and enabling outcomes (delivered
    by the platform and team).
  prefs: []
  type: TYPE_NORMAL
- en: Differentiating between Primary Outcomes and EnablingÂ Outcomes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the previous two chapters, we used several different practices to discover
    the Target Outcomes. Some of them are more functional-, application product-,
    and business-focused (the Why and Who), and some are more non-functional-focused
    (the How).
  prefs: []
  type: TYPE_NORMAL
- en: As we discover these different types of outcomes, we can explore relationships
    between them and see whether a hierarchy exists or not.
  prefs: []
  type: TYPE_NORMAL
- en: '*Gabrielle* *Benefield* and *Ryan Shriver* explain[7](#footnote-037) that *Enabling
    Outcomes, such as decreasing time to onboard new developers, improving test automation
    and reducing the time to build and deploy code, will hopefully improve primary
    outcomes such as improve customer experience.*'
  prefs: []
  type: TYPE_NORMAL
- en: This may just be a hypothesis that needs validation through experimentation
    and delivery.
  prefs: []
  type: TYPE_NORMAL
- en: '[7](#footnote-037-backlink) [https://mobiusloop.com/kit/](https://mobiusloop.com/kit/)'
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at some common examples of outcomes that are a mix of primary and
    enabling outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: '**Increasing Speed and Quality with Customers**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improve Customer Satisfaction**: Measuring customer happiness using tools
    such as **Net Promoter Score** (**NPS**).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduce Lead Time**: Elapsed time from the initial customer request or contact
    to delivery triggering customer happiness.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Increasing Quality**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduce Outages**: Number of operational incidents leaving customers with
    no service.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduce Defects**: Number of defects in the product that impact customers.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sustainability**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improve Team Satisfaction**: A measurement of the happiness of a product
    team.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Increase Employee Retention**: Turnover rate of employees.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Working**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Increase Throughput**: Total work items completed per unit of time.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improve Predictability**: Percentage of time team delivers on their commitments.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Increase Agility**: Elapsed time to pivot to new priorities.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Efficiency**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduce Cycle Time**: The elapsed time to complete delivery activities such
    as build, test, and deployment of new features.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduce Work in Progress (WIP)**: Number of items a team is working on at
    any moment.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduce Technical Debt**: How much you''re spending on reworking your codebase.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The organization's specific context will drive whether they are more focused
    on one or two of these and set them as their primary Target Outcomes. If the motivation
    is more business-focused, their primary outcome is likely to be around the performance
    of their products with their customer, and their customer's satisfaction.
  prefs: []
  type: TYPE_NORMAL
- en: Nearly all of the examples above can also be enabling outcomes, and we can form
    hypotheses of how improving these can drive improvements in more business-focused
    outcomes. These examples also steer our focus toward exploring software delivery
    techniques (such as DevOps) and the platform (such as OpenShift).
  prefs: []
  type: TYPE_NORMAL
- en: Software Delivery Metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In 2018, the book *Accelerate: The Science of Lean Software and DevOps: Building
    and Scaling High Performing Technology Organizations*, written by *Jez Humble,
    Gene Kim, and Nicole Forsgren*, was first published. We cannot recommend this
    book highly enough to explain how to effectively measure software delivery team
    performance and the science and statistics behind their extensive research.'
  prefs: []
  type: TYPE_NORMAL
- en: The book addresses four metrics that can be used to assess the health of any
    DevOps organization. Two of them are more development-centric and measure market
    agility, and two are more Operations focused and measures of reliability.
  prefs: []
  type: TYPE_NORMAL
- en: '**Lead time for change**: This is the time from code being committed to a source
    code repository to it being deployed to production. Shorter lead times for change
    is better because it enables faster feedback cycles and makes organizations better
    able to adjust to the marketplace.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Deployment frequency**: This is how often an application is deployed to production
    and is an indicator of batch size. Smaller batch sizes mean deployments can be
    made more frequently, which also leads to more market agility.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Mean time to restore**: This is how long it takes for systems to recover
    from failures in production. We want to reduce this which is important because
    we need to ensure we aren''t speeding up delivery at the expense of poor customer
    experience from failures.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Change failure rate**: This is the percentage of deployments requiring a
    rollback and/or fixes for a problem in production, which, again, we want to reduce
    as this is a secondary indicator of stability.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When we consider all four of these as enabling outcomes for a software product,
    we can see the strong hypothesis on how optimizing these will have a positive
    impact on the product's performance in the marketplace and overall customer satisfaction.
    Being able to have short lead times for change and a high frequency of deployments,
    while maintaining a low mean time to restore and low change failure rate, would
    suggest an overall high-performing product. That will eventually translate to
    a higher NPS, increased conversion rates, and even increased market share as customers
    tend to really like using fast-moving yet reliable software.
  prefs: []
  type: TYPE_NORMAL
- en: As this book has started to demonstrate, teams that successfully adopt the practices
    being introduced will see a positive effect in these software delivery metrics.
    The cultural practices, along with other practices such as metrics-based process
    mapping, identify the bottlenecks and handovers that, when removed, can speed
    lead times to change. The continuous integration and continuous delivery practices
    being used when we build pipelines allow us to increase deployments. And, with
    increasing levels of automation and continuous learning from practices such as
    retrospectives, we can keep **Mean Time to Repair** (**MTTR**) and Change Failure
    Rates to a minimum.
  prefs: []
  type: TYPE_NORMAL
- en: Platforms such as OpenShift provide an even further level of enablement. Without
    these platforms, we wouldn't be able to achieve market agility and reliability
    for the software products being deployed on the platform.
  prefs: []
  type: TYPE_NORMAL
- en: So, if the platform is the lowest level of enablement, are there metrics we
    can baseline and regularly check to ensure this enablement is being passed up
    to software teams and eventually to the business? Let's look at a few platform
    adoption metrics.
  prefs: []
  type: TYPE_NORMAL
- en: Platform Adoption Metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some of the metrics you might want to capture about the platform include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Rate of Growth and Adoption:** How much change is happening in products provisioned
    on the platform? How many services are running?'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Lead Time to Onboard:** How long does it take to onboard a new developer
    or operator on the platform such that they have everything they need to do their
    job?'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Lead Time to Provision Projects:** How long does it take to provision a new
    project on the platform so it is running in production and usable?'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Platform Team Efficiency****:** What is the number of full-time employees
    needed compared to the number of applications supported? Given that there should
    be huge economies of scale from platform adoption, we expect this ratio to substantially
    increase as platform adoption increases.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Site Reliability Engineering metrics:** Given that the platform provides
    an enabler for the Site Reliability Engineering mindset, some of the metrics and
    associated practices can be radiated:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Service availability/service level objectives
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Remaining error budget
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Development time versus issue/support time
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Again, we start to see the impact these measures can have on software delivery
    and operations of applications running on the platform, which, in turn, can be
    measured by the four software delivery metrics. And these metrics can generate
    a lagging effect on the quality of the software, the organization's products,
    and the happiness of their customer and employees. So, the value of capturing,
    measuring, visualizing, and sharing these metrics cannot be underestimated.
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at our approach for growing this metric-centric mindset.
  prefs: []
  type: TYPE_NORMAL
- en: Continuous Metrics Inspection
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We start small and focus on just one application, one team, one product. We
    do not want to boil the ocean by getting hundreds of metrics across an IT estate.
    Instead, we want to have a team that is empowered, enabled, and enthused by these
    metrics.
  prefs: []
  type: TYPE_NORMAL
- en: First, we need to baseline what we can by running a Target Outcomes workshop.
    This should include capturing the key primary outcomes â€“ ideally two or three
    that the team are laser-focused on achieving.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we look at what other metrics we know or can find out about existing software
    delivery and the platform. If we can get this information, let's make it visible.
    If not, let's commit to starting to capture it.
  prefs: []
  type: TYPE_NORMAL
- en: We make these outcomes and known metrics about the product, software delivery,
    and platform very transparent and visible. The more transparent you can be about
    current performance, the easier it will be to demonstrate improvement. Using Big
    Visible Information Radiators, there's no end to improvement. Having the information
    continuously radiating will enable informed decision making that is data-driven.
    It's all part of an ongoing process. Once an organization has invested in collecting
    metrics, it's time to start continually improving on them. The key here is an
    experimentation model that could involve process changes and ways of working,
    new architecture, and changes to team composition or organization structure. We
    will be exploring this in the next chapter as we consider our options.
  prefs: []
  type: TYPE_NORMAL
- en: Before that, we're going to create one final information radiator on this iteration
    of the Discovery Loop to provide a single-page summary of everything we have learned
    on this trip around the Discovery Loop.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Discovery Map
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Discovery practices described in this section all revolve around facilitating
    great conversations across the many different roles and functions across the organization.
    If you've used the Discovery practices we described in *Chapter 8, Discovering
    the Why and Who*, and *Chapter 9, Discovering the How*, you'll already have a
    large number of information radiators â€“ a North Star, an Impact Map, human-centered
    design artifacts such as Empathy Maps, an Event Storm, Non-Functional Maps, MBPMs,
    Target Outcome canvases, and baseline metrics. And of course, there are many other
    Discovery practices in the Open Practice Library that you may have tried, and
    each tends to produce at least one information radiator canvas.
  prefs: []
  type: TYPE_NORMAL
- en: Within each of these artifacts is very powerful and valuable information, which
    is why we want to keep them all visible and accessible to anyone who is interested
    â€“ be it team members or stakeholders. There will no doubt be wrong information
    and incomplete artifacts â€“ that's kind of the point of this process. We only ever
    do just enough discovery to progress to the Options Pivot and start an iteration
    of delivery. By this, we mean there is a consensus across stakeholders, an alignment
    of shared understanding on product direction, and confidence in the delivery team
    that they have what they need to get started with delivery. As we learn more and
    more and get feedback and increase our number of measurements, we can improve
    and complete Discovery artifacts further (or maybe even try some new practices).
  prefs: []
  type: TYPE_NORMAL
- en: We do find it helpful to distill and harness all the information from the Discovery
    practices into a single summary that can be publicly displayed and used as an
    information radiator for those who may not have the time or interest to get into
    the detail. Having a single page that describes the product discovery and Target
    Outcomes provides a great opportunity for alignment and agreement of product direction.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many canvases openly available, including the Business Model canvas
    and the Lean canvas. The Mobius Loop has also open-sourced a Discovery Map, which
    is a simple graphic used to summarize:'
  prefs: []
  type: TYPE_NORMAL
- en: What have we just done a Discovery Loop on?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why are we doing this?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the current situation?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who are we doing this for?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the Target Outcomes and how will we measure them?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the barriers and biggest challenges?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/B16297_10_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.11: The Discovery Map by Mobius'
  prefs: []
  type: TYPE_NORMAL
- en: We've used this map to summarize all learning for PetBattle.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.12: The PetBattle Discovery Map'
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we focused on setting Target Outcomes for the business problems
    and opportunities we uncovered in the previous chapters.
  prefs: []
  type: TYPE_NORMAL
- en: We explained what an outcome is and how it is different from output, and how
    we capture them, write them, measure them, and visualize them.
  prefs: []
  type: TYPE_NORMAL
- en: We dived deeper into measurable outcomes and metrics and explored the difference
    between primary outcomes and enabling outcomes. Enabling outcomes in a DevOps
    world is heavily focused on software delivery metrics and platform metrics.
  prefs: []
  type: TYPE_NORMAL
- en: You can read more and chat about the practice of setting Target Outcomes in
    the Open Practice Library at [openpracticelibrary.com/practice/target-outcomes/](http://openpracticelibrary.com/practice/target-outcomes/).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.13: Adding a further practice to the Delivery Loop to set Target
    Outcomes'
  prefs: []
  type: TYPE_NORMAL
- en: We wrapped up this Discovery section by summarizing all learning on the Mobius
    Discovery Map.
  prefs: []
  type: TYPE_NORMAL
- en: So, now we have built a foundation of open culture and open technology practices
    and have done some product discovery with some baseline metrics of the product,
    software delivery, and platform; we now need to decide what we're going to deliver
    first.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B16297_10_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10.14: Practices used to complete a Discovery Loop on a foundation of
    open culture and technology'
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll move to the Options Pivot and look at practices to
    prioritize and plan what we can deliver incrementally. We'll look at the trade-offs
    between feature delivery and non-functional work to improve software delivery
    and platform. And, we'll explore some of the advanced deployment capabilities
    offered by OpenShift and other platforms that will help us further decide on how
    to deliver the best value and products to customers.
  prefs: []
  type: TYPE_NORMAL
