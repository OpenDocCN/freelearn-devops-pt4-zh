["```\n$ helm repo add petbattle \\\n```", "```\n     https://petbattle.github.io/helm-charts\n```", "```\n$ helm search repo pet-battle\n```", "```\n$ wget https://raw.githubusercontent.com/petbattle/pet-battle/master/chart/values.yaml/tmp/values.yaml\n```", "```\n# custom end point injected by config map\n```", "```\nconfig_map: '{\n```", "```\n  \"catsUrl\": \"https://pet-battle-api-petbattle.apps.cluster.com\",\n```", "```\n  \"tournamentsUrl\": \"https://pet-battle-tournament-petbattle.apps.cluster.com\",\n```", "```\n  \"matomoUrl\": \"https://matomo-labs-ci-cd.apps.cluster.com/\",\n```", "```\n  \"keycloak\": {\n```", "```\n    \"url\": \"https://keycloak-petbattle.apps.cluster.com/auth/\",\n```", "```\n    \"realm\": \"pbrealm\",\n```", "```\n    \"clientId\": \"pbclient\",\n```", "```\n    \"redirectUri\": \"https://pet-battle-petbattle.apps.cluster.com/*\",\n```", "```\n    \"enableLogging\": true\n```", "```\n   }\n```", "```\n}'\n```", "```\n# Login to OpenShift\n```", "```\n$ oc login -u <username> --server=<server api url>\n```", "```\n$ helm upgrade --install pet-battle-api \\\n```", "```\npetbattle/pet-battle-api --version=1.0.15 \\\n```", "```\n--namespace petbattle --create-namespace\n```", "```\n$ helm upgrade --install pet-battle \\\n```", "```\npetbattle/pet-battle --version=1.0.6 \\\n```", "```\n-f /tmp/values.yaml --namespace petbattle\n```", "```\n$ helm upgrade --install pet-battle-tournament \\\n```", "```\npetbattle/pet-battle-tournament --version=1.0.39 \\\n```", "```\n--set pet-battle-infra.install_cert_util=true \\\n```", "```\n--timeout=10m \\\n```", "```\n--namespace petbattle\n```", "```\n    NAME: pet-battle-api\n```", "```\n    LAST DEPLOYED: Thu Feb 25 19:37:38 2021\n```", "```\n    NAMESPACE: petbattle\n```", "```\n    STATUS: deployed\n```", "```\n    REVISION: 1\n```", "```\n    TEST SUITE: None\n```", "```\ncat <<EOF | oc apply -f -\n```", "```\napiVersion: helm.openshift.io/v1beta1\n```", "```\nkind: HelmChartRepository\n```", "```\nmetadata:\n```", "```\n  name: petbattle-charts\n```", "```\nspec:\n```", "```\n  name: petbattle\n```", "```\n  connectionConfig:\n```", "```\n    url: https://petbattle.github.io/helm-charts\n```", "```\nEOF\n```", "```\npet_battle_stage:\n```", "```\n    name: pet-battle-stage\n```", "```\n    enabled: true\n```", "```\n    source: *helm_repo\n```", "```\n    chart_name: pet-battle\n```", "```\n    sync_policy_automated: true\n```", "```\n    destination: labs-staging\n```", "```\n    source_ref: 1.0.6\n```", "```\n    values:\n```", "```\n      fullnameOverride: pet-battle\n```", "```\n      image_repository: quay.io\n```", "```\n      image_name: pet-battle\n```", "```\n      image_namespace: petbattle\n```", "```\n      config_map: '{ \"catsUrl\": \"https://pet-battle-api-labs-staging.apps.hivec.sandbox1405.opentlc.com\", \"tournamentsUrl\": \"https://pet-battle-tournament-labs-staging.apps.hivec.sandbox1405.opentlc.com\", \"matomoUrl\": \"https://matomo-labs-ci-cd.apps.hivec.sandbox1405.opentlc.com/\", \"keycloak\": { \"url\": \"https://keycloak-labs-staging.apps.hivec.sandbox1405.opentlc.com/auth/\", \"realm\": \"pbrealm\", \"clientId\": \"pbclient\", \"redirectUri\": \"https://pet-battle-labs-staging.apps.hivec.sandbox1405.opentlc.com/*\", \"enableLogging\": true } }'\n```", "```\n      image_version: \"master\"\n```", "```\n    project:\n```", "```\n      name: pet-battle-stage\n```", "```\n      enabled: true\n```", "```\nubiquitous-journey/applications\n```", "```\n├── README.md\n```", "```\n├── alerting\n```", "```\n│   └── ....\n```", "```\n├── build\n```", "```\n│   ├── ...\n```", "```\n└── deployment\n```", "```\n    ├── Chart.yaml\n```", "```\n    ├── argo-app-of-apps-stage.yaml\n```", "```\n    ├── argo-app-of-apps-test.yaml\n```", "```\n    ├── templates\n```", "```\n    │   ├── _helpers.tpl\n```", "```\n    │   ├── argoapplicationdeploy.yaml\n```", "```\n    │   └── argocd-project.yaml\n```", "```\n    ├── values-applications-stage.yaml\n```", "```\n    └── values-applications-test.yaml \n```", "```\n# from the root of ubiquitous-journey\n```", "```\n$ cd applications/deployment\n```", "```\n# install an app-of-apps for each test and staging\n```", "```\n$ helm upgrade --install pet-battle-suite-stage -f \\\n```", "```\nargo-app-of-apps-stage.yaml \\--namespace labs-ci-cd .\n```", "```\n$ helm upgrade --install pet-battle-suite-test -f \\\n```", "```\nargo-app-of-apps-test.yaml \\--namespace labs-ci-cd .\n```", "```\ncool_new_svc_stage:\n```", "```\n    name: cool-new-svc-stage\n```", "```\n    enabled: true\n```", "```\n    source: *helm_repo\n```", "```\n    chart_name: cool-new-svc\n```", "```\n    sync_policy_automated: true\n```", "```\n    destination: labs-staging\n```", "```\n    source_ref: 1.0.1 # version of the helm chart\n```", "```\n    values:\n```", "```\n      fullnameOverride: cool-new-svc\n```", "```\n      image_repository: quay.io\n```", "```\n      image_name: pet-battle\n```", "```\n      image_namespace: petbattle\n```", "```\n      image_version: \"2.1.3\" # version of the application image\n```", "```\n    project:\n```", "```\n      name: pet-battle-stage\n```", "```\n      enabled: true\n```", "```\n$ oc apply -n labs-ci-cd -f petbattle-jenkinspb-secret.yml\n```", "```\n$ cat <<EOF | oc apply -f- \n```", "```\napiVersion: v1\n```", "```\nstringData:\n```", "```\n  password: GITHUB_TOKEN\n```", "```\n  username: GITHUB_USERNAME\n```", "```\nkind: Secret\n```", "```\nmetadata:\n```", "```\n  labels:\n```", "```\n    credential.sync.jenkins.openshift.io: \"true\"\n```", "```\n  name: git-auth\n```", "```\n  namespace: labs-ci-cd\n```", "```\ntype: kubernetes.io/basic-auth\n```", "```\nEOF\n```", "```\nsealed-secrets:\n```", "```\n  # Disabled by default\n```", "```\n  enabled: true\n```", "```\n  nameOverride: sealed-secrets\n```", "```\n    # create secret file from step 3\n    $ cat << EOF > /tmp/super-dooper.yaml\n    ---\n    apiVersion: v1\n    kind: Secret\n    metadata:\n      name: super-dooper\n      labels:\n        credential.sync.jenkins.openshift.io: \"true\"\n    type: \"kubernetes.io/basic-auth\"\n    stringData:\n      password: \"myGitHubToken\"\n      username:  \"donal\"\n    EOF \n    # encrypt the secret $ kubeseal < /tmp/super-dooper.yaml > /tmp/sealed-super-dooper.yaml \\\n      -n labs-ci-cd \\\n      --controller-namespace labs-ci-cd \\\n      --controller-name sealed-secrets \\\n      -o yaml\n    ```", "```\n    # have a look at the sealed secret\n    $ cat /tmp/sealed-super-dooper.yaml \n    apiVersion: bitnami.com/v1alpha1\n    kind: SealedSecret\n    metadata:\n      creationTimestamp: null\n      name: super-dooper\n      namespace: labs-ci-cd\n    spec:\n      encryptedData:\n        password: AgC6NyZa2to2MtKbXYxJBCOfxmnSQ4PJgV8KGdDRawWstj24FIEm5YCyH6n/BXq9DEPIJL4IshLb2+/kONKHMhKy0CW5iGVadi13GcvO7lxZpVLeVr4T3nc/AqDwPrZ2KdzAI62h/7O4o2htRWrYnKqzmUqdESzMxWCK9dl7HZyArGadvwrH98iR48avsaNWJRvhMEDD6EMjS5yQ2vJYFMcMzOVyMtbD4f8e3jK7OO+vqoXsHtiuHk4HB63BZZqreiDcFgZMGaD6Bo6FyMSs/tbkBjttiRvP5zZJ5fqC8IEgbZeuwhJ1eVOeKs/2xGBUMoEiYo6cKaUOqV9k130K2wcdXgN8B25phkRK9DpO23LoF/7/uLwNn01pCcxAxm1/2kvX24uPLtirmg1rQ03E9qrnlvykyJ+9G3QBNtIlsiuoYmEYogZCSRZX29Cm0GWLolYPhlhMDDN6VQI6ktKCH6ubMcbh888Gn2KF8NzpQvV5wN9mQVFMR8+wNVkLGsaN+EEdgAc2CmiajIXur3zu4Menq3iWzJcWHdyTNlROpJeFH9qyfJLzbkWinPyzyBZEXeiZVKZ/ZAYEvXpyHAUngbnNnUO8HBwsLHb//uYEzWRufIJezCy9PYxUVSBNIdfPybuCSeb87Bgry/+5D5aUjrqLuKJUhsLWIL3waHyvQswUjCQlcgFA7OZ9lwMqkDUYy9SnYatIZ98kf1Z6DA==\n        username: AgDY4NgxKug07A+jZ63h0Rdisfm6o7kVaKaiaPek9ZOiHsox1A0P4klYaK/7cTEyOCpFVC/2nx00TX6F2KbA1GsRHkjnU/79nOkYWqsWWTU32c/0Re8sSEIPX7aVgR/sMXYeWyRediRogA23xFcFzIFSvw4fZ2XpeX0BZNPbMdwZv2b+j/cjW8Po75B5gqbjwhMyH36QUApnjmoWmutLONVgAnHVM2rBr1Kx4wgxyy+hdmj+6ZkgMBckd53lMVX0unRVW93Ij2eDcxTwN+HvVY7nBDmxVHuYAt6t31+DXpqBew10kNDxd8Xw2MpUFDb3JpMwIVtTntmgeoyCHmo7nCYzQkGhwdrEYzoLVQBq+jf0Wmu3YRpEzZbegdTU3QfS1J7XM+86pAF6gcgbmrhpguGkU+PwnzPMxGNkq445oEPpvRemftjyFf7A8C+bZ90lrvVzZsfOue8WdXKm66vZoYuMPqA2o2HQV0IraaNGYPt9FmiAuXqWhzKsSVsbURXUUOaZIPAyX1z5V1reRz+gs/cGHYKbmUua7XOFQr32siANI1IkRPi9cT+9iP9GGdq5RzZL75cJGFV8BorZ3CMADGC+skrFKOExFvSrvofBnODB/xnPuirzsnQPcxtdvIz+sCv4M8qG2j0ASH1DBLLF7vMP9rLBgA1sPtzqX0CBakjuOjYDqpbXaKqHrM6kdTuBvO7tTDpAYA==\n      template:\n        metadata:\n          creationTimestamp: null\n          labels:\n            credential.sync.jenkins.openshift.io: \"true\"\n          name: super-dooper\n          namespace: labs-ci-cd\n        type: kubernetes.io/basic-auth\n    # apply it to the cluster\n    $ cat /tmp/sealed-super-dooper.yaml | oc apply -f- -n labs-ci-cd sealedsecret.bitnami.com/super-dooper configured\n    ```", "```\n    - name: jenkins\n      enabled: true\n      source: https://github.com/redhat-cop/helm-charts.git\n      ...\n      values:\n        ...\n        sealed_secrets:\n          - name: super-dooper\n            password: AgAD+uOI5aCI9YKU2NYt2p7as.....\n            username: AgCmeFkNTa0tOvXdI+lEjdJmV5u7FVUcn86SFxiUAF6y.....\n    ```", "```\nstage(\"Build (Compile App)\") {\n```", "```\n  agent { label \"jenkins-agent-npm\" }\n```", "```\n  steps {\n```", "```\n    script {\n```", "```\n        env.VERSION = sh(returnStdout: true, script: \"npm run version --silent\").trim()\n```", "```\n        env.PACKAGE = \"${APP_NAME}-${VERSION}.tar.gz\"\n```", "```\n    }\n```", "```\n    sh 'printenv'\n```", "```\n    echo '### Install deps ###'\n```", "```\n    // sh 'npm install'\n```", "```\n    sh 'npm ci --registry http://sonatype-nexus-service:${SONATYPE_NEXUS_SERVICE_SERVICE_PORT}/repository/labs-npm'\n```", "```\n    echo '### Running linter ###'\n```", "```\n    sh 'npm run lint'\n```", "```\n    echo '### Running tests ###'\n```", "```\n    sh 'npm run test:ci'\n```", "```\n    echo '### Running build ###'\n```", "```\n    sh '''\n```", "```\n        npm run build\n```", "```\n    '''\n```", "```\n    echo '### Packaging App for Nexus ###'\n```", "```\n    sh '''\n```", "```\n        tar -zcvf ${PACKAGE} dist Dockerfile nginx.conf\n```", "```\n        curl -v -f -u ${NEXUS_CREDS} --upload-file ${PACKAGE} http://${SONATYPE_NEXUS_SERVICE_SERVICE_HOST}:${SONATYPE_NEXUS_SERVICE_SERVICE_PORT}/repository/${NEXUS_REPO_NAME}/${APP_NAME}/${PACKAGE}\n```", "```\n    '''\n```", "```\n  }\n```", "```\n  post {\n```", "```\n    always {\n```", "```\n      junit 'junit.xml'\n```", "```\n      publishHTML target: [\n```", "```\n        allowMissing: true,\n```", "```\n        alwaysLinkToLastBuild: false,\n```", "```\n        keepAll: false,\n```", "```\n        reportDir: 'reports/lcov-report',\n```", "```\n        reportFiles: 'index.html',\n```", "```\n        reportName: 'Code Coverage'\n```", "```\n      ]\n```", "```\n    }\n```", "```\n  }\n```", "```\n}\n```", "```\n- name: GITHUB_ACCOUNT\n```", "```\nvalue: 'petbattle'\n```", "```\n- name: GITHUB_ORG\n```", "```\nvalue: 'true'\n```", "```\n# maven pipeline \n```", "```\napiVersion: tekton.dev/v1beta1\n```", "```\nkind: Pipeline\n```", "```\nmetadata:\n```", "```\n  name: maven-pipeline\n```", "```\n  labels:\n```", "```\n    petbattle.app/uj: ubiquitous-journey\n```", "```\nspec:\n```", "```\n  workspaces:\n```", "```\n    - name: shared-workspace\n```", "```\n    - name: maven-settings\n```", "```\n    - name: argocd-env-secret\n```", "```\n    - name: maven-m2\n```", "```\n    - name: git-auth-secret \n```", "```\n# binding the workspace in the PipelineRun object\n```", "```\n  resourcetemplates:\n```", "```\n    - apiVersion: tekton.dev/v1beta1\n```", "```\n      kind: PipelineRun\n```", "```\n      metadata:\n```", "```\n      ...        workspaces:\n```", "```\n        - name: shared-workspace\n```", "```\n          persistentVolumeClaim:\n```", "```\n            claimName: build-images\n```", "```\n        - name: maven-settings\n```", "```\n          persistentVolumeClaim:\n```", "```\n            claimName: maven-source\n```", "```\n        - name: argocd-env-secret\n```", "```\n          secret:\n```", "```\n            secretName: argocd-token\n```", "```\n        - name: maven-m2\n```", "```\n          persistentVolumeClaim:\n```", "```\n            claimName: maven-m2\n```", "```\n        - name: git-auth-secret\n```", "```\n          secret:\n```", "```\n            secretName: git-auth\n```", "```\n    - name: quality-gate-check\n```", "```\n      retries: 1\n```", "```\n      taskRef:\n```", "```\n        name: sonarqube-quality-gate-check\n```", "```\n      workspaces:\n```", "```\n        - name: output\n```", "```\n          workspace: shared-workspace\n```", "```\n      params:\n```", "```\n      - name: WORK_DIRECTORY\n```", "```\n        value: \"$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)\"\n```", "```\n      runAfter:\n```", "```\n      - save-test-results\n```", "```\n- name: helm-install-apps-dev # branches only deploy to dev\n```", "```\n      when:\n```", "```\n        - Input: \"$(params.GIT_BRANCH)\"\n```", "```\n          Operator: notin\n```", "```\n          Values: [\"master\",\"trunk\",\"main\"]\n```", "```\n      taskRef:\n```", "```\n        name: helm-install-from-chartrepo\n```", "```\n$ tkn pr list -n labs-ci-cd\n```", "```\npet-battle-tournament-44vg5   1 days ago 27 minutes   Failed\n```", "```\npet-battle-9d9c7              2 days ago 19 minutes   Succeeded\n```", "```\npet-battle-api-jcgn2          2 days ago 21 minutes   Succeeded\n```", "```\npet-battle-kfch9              2 days ago 5 minutes    Failed\n```", "```\npet-battle-tournament-br5xd   2 days ago 24 minutes   Failed\n```", "```\npet-battle-api-5l4sd          2 days ago 23 minutes   Failed\n```", "```\napiVersion: triggers.tekton.dev/v1alpha1\n```", "```\nkind: EventListener\n```", "```\nmetadata:\n```", "```\n  name: github-webhook\n```", "```\n  labels:\n```", "```\n    app: github\n```", "```\nspec:\n```", "```\n  serviceAccountName: pipeline\n```", "```\n  triggers:\n```", "```\n    - name: pet-battle-api-webhook-all-branches ...\n```", "```\n    - name: pet-battle-api-webhook-pr ...\n```", "```\n    - name: pet-battle-tournament-webhook-all-branches ...\n```", "```\n    - name: pet-battle-tournament-webhook-pr ...\n```", "```\n    - name: pet-battle-webhook-all-branches ...\n```", "```\n    - name: pet-battle-webhook-pr ...\n```", "```\ntriggers:\n```", "```\n    - name: pet-battle-api-webhook-all-branches\n```", "```\n      interceptors: # fixme add secret.ref\n```", "```\n        - cel:\n```", "```\n            filter: >-\n```", "```\n              (header.match('X-GitHub-Event', 'push') &&\n```", "```\n                body.repository.full_name ==\n```", "```\n                                        'petbattle/pet-battle-api')\n```", "```\n            overlays:\n```", "```\n            - key: truncated_sha\n```", "```\n              expression: \"body.head_commit.id.truncate(7)\"\n```", "```\n            - key: branch_name\n```", "```\n              expression: \"body.ref.split('/')[2]\"\n```", "```\n            - key: app_of_apps_key\n```", "```\n              expression: \"body.repository.name.replace('-','_',-1)\"\n```", "```\n      bindings:\n```", "```\n      - kind: TriggerBinding\n```", "```\n        ref: github-trigger-binding\n```", "```\n      template:\n```", "```\n        ref: pet-battle-api-maven-trigger-template\n```", "```\n$ oc -n labs-ci-cd process pet-battle-api | oc -n labs-ci-cd create -f-\n```", "```\n$ oc -n labs-ci-cd process pet-battle | oc -n labs-ci-cd create -f-\n```", "```\n$ oc -n labs-ci-cd process pet-battle-tournament | oc -n labs-ci-cd create -f-\n```", "```\n$ oc -n labs-ci-cd get route webhook \\     -o custom-columns=ROUTE:.spec.host --no-headers\n```", "```\n# PetBattle Tekton objects\n```", "```\n  - name: tekton-pipelines\n```", "```\n    destination: labs-ci-cd\n```", "```\n    enabled: true\n```", "```\n    source: https://github.com/petbattle/ubiquitous-journey.git\n```", "```\n    source_path: tekton\n```", "```\n    source_ref: main\n```", "```\n    sync_policy: *sync_policy_true\n```", "```\n    no_helm: true\n```"]