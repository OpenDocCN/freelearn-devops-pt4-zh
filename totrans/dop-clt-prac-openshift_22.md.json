["```\n# Login to ArgoCD\n```", "```\n$ argocd login $(oc get route argocd-server --template='{{ .spec.host }}' \\\n```", "```\n-n labs-ci-cd):443 --sso --insecure\n```", "```\n# Add our repository\n```", "```\n$ argocd repo add \\\n```", "```\n  https://github.com/rht-labs/refactored-adventure.git\n```", "```\n# Create the Knative Operator - this may have already been created for you but here is how to do it on the command line.\n```", "```\n# Create the Knative Operator\n```", "```\n$ argocd app create knative\\\n```", "```\n  --repo https://github.com/rht-labs/refactored-adventure.git \\\n```", "```\n  --path knative/base \\\n```", "```\n  --dest-server https://kubernetes.default.svc \\\n```", "```\n  --dest-namespace openshift-serverless \\\n```", "```\n  --revision master \\\n```", "```\n  --sync-policy automated\n```", "```\n# Knative stanza in values-tooling.yaml\n```", "```\n- name: knative\n```", "```\n    enabled: true\n```", "```\n    destination: openshift-serverless\n```", "```\n    source: https://github.com/rht-labs/refactored-adventure\n```", "```\n    source_path: knative/base\n```", "```\n    source_ref: master\n```", "```\n    sync_policy: *sync_policy_true\n```", "```\n    no_helm: true\n```", "```\n$ helm upgrade --install pet-battle-nsff \\\n```", "```\npetbattle/pet-battle-nsff \\\n```", "```\n--version=0.0.2 \\\n```", "```\n--namespace petbattle\n```", "```\n$ oc get pods --namespace petbattle NAME                                   READY   STATUS   RESTARTS AGE\n```", "```\nMinio-pet-battle-nsff-594fc7759-j7lwv  1/1     Running     0     88s\n```", "```\nminio-pet-battle-nsff-dataload-7x8jg   0/1     Completed   2     88s\n```", "```\nminio-pet-battle-nsff-gfjhz            0/1     Completed   3     88s\n```", "```\ntensorflowserving-pet...-7f79956d9qfp  2/2     Running     2     85s\n```", "```\n$ kn service create tensorflowserving-pb-nsff --namespace petbattle \\\n```", "```\n  --image=docker.io/tensorflow/serving:latest \\\n```", "```\n  --cmd \"tensorflow_model_server\" \\\n```", "```\n  --arg \"--model_config_file=s3://models/models.config\" \\\n```", "```\n  --arg \"--monitoring_config_file=s3://models/prometheus_config.config\" \\\n```", "```\n  --arg \"--rest_api_port=8501\" \\\n```", "```\n  --env S3_LOCATION=minio-pet-battle-nsff:9000 \\\n```", "```\n  --env AWS_ACCESS_KEY_ID=minio \\\n```", "```\n  --env AWS_SECRET_ACCESS_KEY=minio123 \\\n```", "```\n  --env AWS_REGION=us-east-1 \\\n```", "```\n  --env S3_REGION=us-east-1 \\\n```", "```\n  --env S3_ENDPOINT=minio-pet-battle-nsff:9000 \\\n```", "```\n  --env S3_USE_HTTPS=\"0\" \\\n```", "```\n  --env S3_VERIFY_SSL=\"0\" \\\n```", "```\n  --env AWS_LOG_LEVEL=\"3\" \\\n```", "```\n  --port 8501 \\\n```", "```\n  --autoscale-window \"120s\"\n```", "```\n$ kn route list\n```", "```\n$ curl <url from kn route list>/v1/models/test_model\n```", "```\n# For example\n```", "```\n$ curl http://tensorflowserving-pet-battle-nsff-labs-dev.apps.hivec.sandbox882.opentlc.com/v1/models/test_model\n```", "```\n{\n```", "```\n \"model_version_status\": [\n```", "```\n  {\n```", "```\n   \"version\": \"1\",\n```", "```\n   \"state\": \"AVAILABLE\",\n```", "```\n   \"status\": {\n```", "```\n    \"error_code\": \"OK\",\n```", "```\n    \"error_message\": \"\"\n```", "```\n   }\n```", "```\n  }\n```", "```\n ]\n```", "```\n}\n```", "```\n$ oc get pods \\\n```", "```\n-l serving.knative.dev/configuration=tensorflowserving-pet-battle-nsff \\\n```", "```\n--namespace petbattle\n```", "```\nNAME                          READY   STATUS    RESTARTS   AGE\n```", "```\ntensorflowserving-pet‚Ä¶         2/2     Running   0          21s\n```", "```\n$ wget https://raw.githubusercontent.com/petbattle/pet-battle-nsff/main/requests/tfserving/nsff-negative.json\n```", "```\n$ wget https://raw.githubusercontent.com/petbattle/pet-battle-nsff/main/requests/tfserving/nsff-positive.json\n```", "```\n$ HOST=$(kn service describe tensorflowserving-pb-nsff -o url)/v1/models/test_model:predict # Daisy Cat - Safe for Families\n```", "```\ncurl -s -k -H 'Content-Type: application/json \\\n```", "```\n  -H 'cache-control: no-cache' \\\n```", "```\n  -H 'Accept: application/json' \\\n```", "```\n  -X POST --data-binary '@nsff-negative.json' $HOST\n```", "```\n{ \"predictions\": [[0.992712617, 0.00728740077]] }\n```", "```\n# Not Safe For Families - Boxing\n```", "```\ncurl -s -k -H 'Content-Type: application/json' \\\n```", "```\n  -H 'cache-control: no-cache' \\\n```", "```\n  -H 'Accept: application/json' \\\n```", "```\n  -X POST --data-binary '@nsff-positive.json' $HOST\n```", "```\n{ \"predictions\": [[0.30739361, 0.69260639]] }\n```", "```\n$ HOST=$(kn service describe tensorflowserving-pet-battle-nsff -o url)\n```", "```\n$ helm upgrade --install pet-battle-api petbattle/pet-battle-api \\\n```", "```\n--version=1.0.8 \\\n```", "```\n--set nsff.enabled=true \\\n```", "```\n--set nsff.apiHost=${HOST##http://} \\\n```", "```\n--set nsff.apiPort=80 --namespace petbattle\n```", "```\n@GET\n```", "```\n@Operation(operationId = \"list\",\n```", "```\n           summary = \"get all cats\",\n```", "```\n           description = \"This operation retrieves all cats from the\n```", "```\n                          database that are safe for work\",\n```", "```\n           deprecated = false, hidden = false)\n```", "```\npublic Uni<List<Cat>> list() {\n```", "```\n  return Cat.find(ISSFF, true).list();\n```", "```\n}\n```", "```\n@QuarkusTest\n```", "```\nclass CatResourceTest {\n```", "```\n  private static final Logger LOGGER = LoggerFactory\n```", "```\n                                      .getLogger(\"CatResourceTest\");\n```", "```\n  @Test\n```", "```\n  void testCat() {\n```", "```\n    PanacheMock.mock(Cat.class);\n```", "```\n    Mockito.when(Cat.count())\n```", "```\n      .thenReturn(Uni.createFrom().item(23l));\n```", "```\n    Assertions.assertEquals(23, Cat.count().await().indefinitely());\n```", "```\ndescribe('HomeComponent', () => {\n```", "```\n  let component: HomeComponent;\n```", "```\n  let fixture: ComponentFixture<HomeComponent>;\n```", "```\n  beforeEach(async () => {...\n```", "```\n  });\n```", "```\n  beforeEach(() => {...\n```", "```\n  });\n```", "```\n  it('should create', () => {\n```", "```\n    expect(component).toBeTruthy();\n```", "```\n  });\n```", "```\n});\n```", "```\n@Test\n```", "```\n@Story(\"Test pet create\")\n```", "```\nvoid testCatCreate() {\n```", "```\n    CatInstance catInstance = new CatInstance();\n```", "```\n    RestAssured.given()\n```", "```\n            .contentType(ContentType.JSON)\n```", "```\n            .body(catInstance.cat)\n```", "```\n            .log().all()\n```", "```\n            .when().post(\"/cats\")\n```", "```\n            .then()\n```", "```\n            .log().all()\n```", "```\n            .statusCode(201)\n```", "```\n            .body(is(notNullValue()));\n```", "```\n}\n```", "```\n@QuarkusTest\n```", "```\n@QuarkusTestResource(MongoTestResource.class)\n```", "```\n@Epic(\"PetBattle\")\n```", "```\n@Feature(\"PetEndpointTest\")\n```", "```\nclass CatEndpointTest {\n```", "```\n$ ls src/test/java/com/petbattle/containers/\n```", "```\nInfinispanTestContainer.java KeycloakTestContainer.java   MongoTestContainer.java\n```", "```\n$ head src/test/java/com/petbattle/integration/ITPetBattleAPITest.java\n```", "```\npackage com.petbattle.integration;\n```", "```\n...\n```", "```\n@QuarkusTest\n```", "```\n@DisplayName(\"API Test Cases\")\n```", "```\n@QuarkusTestResource(MongoTestContainer.class)\n```", "```\n@QuarkusTestResource(InfinispanTestContainer.class)\n```", "```\n@QuarkusTestResource(KeycloakTestContainer.class)\n```", "```\npublic class ITPetBattleAPITest {\n```", "```\nFeature: Tournament features\n```", "```\n  Scenario: Should only be prompted to login on navigating to the\n```", "```\n            tournament\n```", "```\n    Given I am on the home page\n```", "```\n    When  I move to the tournament page\n```", "```\n    Then  I should be redirected to keycloak\n```", "```\n$ git commit --allow-empty -m \"üçå kickoff jenkins ü¶Ü\" && git push\n```", "```\n  # Sonarqube\n```", "```\n  - name: sonarqube\n```", "```\n    enabled: true\n```", "```\n    source: https://github.com/redhat-cop/helm-charts.git\n```", "```\n    source_path: \"charts/sonarqube\"\n```", "```\n    source_ref: \"sonarqube-0.0.14\"\n```", "```\n    sync_policy: *sync_policy_true\n```", "```\n    destination: *ci_cd_ns\n```", "```\n    values:\n```", "```\n      initContainers: true\n```", "```\n      plugins:\n```", "```\n        install:\n```", "```\n          - https://github.com/checkstyle/sonar-checkstyle/releases/download/8.35/checkstyle-sonar-plugin-8.38.jar\n```", "```\n          - https://github.com/dependency-check/dependency-check-sonar-plugin/releases/download/2.0.7/sonar-dependency-check-plugin-2.0.7.jar\n```", "```\n# code analysis step maven pipeline     - name: code-analysis\n```", "```\n      taskRef:\n```", "```\n        name: maven\n```", "```\n      params:\n```", "```\n        - name: MAVEN_MIRROR_URL\n```", "```\n          value: \"$(params.MAVEN_MIRROR_URL)\"\n```", "```\n        - name: MAVEN_OPTS\n```", "```\n          value: \"$(params.MAVEN_OPTS)\"\n```", "```\n        - name: WORK_DIRECTORY\n```", "```\n          value: \"$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)\"\n```", "```\n        - name: GOALS\n```", "```\n          value:\n```", "```\n            - install\n```", "```\n            - org.owasp:dependency-check-maven:check\n```", "```\n            - sonar:sonar\n```", "```\n        - name: MAVEN_BUILD_OPTS\n```", "```\n          value:\n```", "```\n            - '-Dsonar.host.url=http://sonarqube-sonarqube:9000'\n```", "```\n            - '-Dsonar.userHome=/tmp/sonar'\n```", "```\n# code analysis step nodejs pipeline     - name: code-analysis\n```", "```\n      taskRef:\n```", "```\n        name: nodejs\n```", "```\n      params:\n```", "```\n        - name: NPM_MIRROR_URL\n```", "```\n          value: \"$(params.NPM_MIRROR_URL)\"\n```", "```\n        - name: GOALS\n```", "```\n          value:\n```", "```\n            - \"run\"\n```", "```\n            - \"sonar\"\n```", "```\napiVersion: autoscaling/v2beta2\n```", "```\nkind: HorizontalPodAutoscaler\n```", "```\nmetadata:\n```", "```\n  name: {{ include \"pet-battle-api.fullname\" . }}\n```", "```\n  labels:\n```", "```\n    {{- include \"pet-battle-api.labels\" . | nindent 4 }}\n```", "```\nspec:\n```", "```\n  scaleTargetRef:\n```", "```\n    {{- if .Values.deploymentConfig }}\n```", "```\n    apiVersion: v1\n```", "```\n    kind: DeploymentConfig\n```", "```\n    {{- else }}\n```", "```\n    apiVersion: apps/v1\n```", "```\n    kind: Deployment\n```", "```\n    {{- end }}\n```", "```\n    name: {{ include \"pet-battle-api.fullname\" . }}\n```", "```\n  minReplicas: {{ .Values.replicas.min }}\n```", "```\n  maxReplicas: {{ .Values.replicas.max }}\n```", "```\n  metrics:\n```", "```\n    - type: Resource\n```", "```\n      resource:\n```", "```\n        name: cpu\n```", "```\n        target:\n```", "```\n          type: AverageValue\n```", "```\n          averageValue: {{ .Values.hpa.cpuTarget }}\n```", "```\n    - type: Resource\n```", "```\n      resource:\n```", "```\n        name: memory\n```", "```\n        target:\n```", "```\n          type: AverageValue\n```", "```\n          averageValue: {{ .Values.hpa.memTarget }}\n```", "```\n$ oc get pdb \n```", "```\nNAME       MIN AVAILABLE MAX UNAVAILABLE  ALLOWED DISRUPTIONS   AGE\n```", "```\npet-battle-api   1           N/A                  1             46h\n```", "```\ndeny[msg] {\n```", "```\n  label := \"app.kubernetes.io/instance\"\n```", "```\n  not input.metadata.labels[label]\n```", "```\n  msg := sprintf(\"\\n%s: does not contain all the expected k8s labels\n```", "```\n                 in 'metadata.labels'.\\n Missing '%s'. \\nSee: https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels\", [input.kind, label])\n```", "```\n}\n```", "```\n# from the pet battle front end repository (https://github.com/petbattle/pet-battle.git)\n```", "```\n$ for file in $(ls policy/helm-output/pet-battle/templates/); do conftest test policy/helm-output/pet-battle/templates/$file; done\n```", "```\n6 tests, 6 passed, 0 warnings, 0 failures, 0 exceptions\n```", "```\nFAIL - policy/helm-output/pet-battle/templates/deploymentconfig.yaml - \n```", "```\nDeploymentConfig: does not contain all the expected k8s labels in 'metadata.labels'.\n```", "```\n Missing 'app.kubernetes.io/name'. \n```", "```\nSee: https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels\n```", "```\n6 tests, 5 passed, 0 warnings, 1 failure,  0 exceptions\n```", "```\n6 tests, 6 passed, 0 warnings, 0 failures, 0 exceptions\n```", "```\n6 tests, 6 passed, 0 warnings, 0 failures, 0 exceptions\n```", "```\nstage('ü§ñ OWASP Scan') {\n```", "```\n  agent { label \"jenkins-agent-zap\" }\n```", "```\n  steps {\n```", "```\n    sh '''\n```", "```\n      /zap/zap-baseline.py -r index.html -t http://<some website url> || return_code=$?\n```", "```\n      echo \"exit value was  - \" $return_code\n```", "```\n    '''\n```", "```\n  }\n```", "```\n  post {\n```", "```\n    always {\n```", "```\n      // publish html\n```", "```\n      publishHTML target: [\n```", "```\n          allowMissing: false,\n```", "```\n          alwaysLinkToLastBuild: false,\n```", "```\n          keepAll: true,\n```", "```\n          reportDir: '/zap/wrk',\n```", "```\n          reportFiles: 'index.html',\n```", "```\n          reportName: 'OWASP Zed Attack Proxy'\n```", "```\n        ]\n```", "```\n    }\n```", "```\n  }\n```", "```\n}\n```", "```\n# Matamo\n```", "```\n  - name: matomo\n```", "```\n    enabled: true\n```", "```\n    source: https://github.com/petbattle/pet-battle-analytics.git\n```", "```\n    source_path: charts/matomo\n```", "```\n    sync_policy: *sync_policy_true\n```", "```\n    destination: labs-ci-cd\n```", "```\n    source_ref: main\n```", "```\n    ignore_differences:\n```", "```\n    - group: apps\n```", "```\n      kind: Deployment\n```", "```\n      jsonPointers:\n```", "```\n        - /spec/replicas\n```", "```\n        - /spec/template/spec/containers/0/image\n```", "```\n$ oc login ...\n```", "```\n$ git clone https://github.com/petbattle/pet-battle-analytics.git \\\n```", "```\n&& cd pet-battle-analytics\n```", "```\n$ helm install pba charts/matomo\n```", "```\nthis.matomoTracker.trackEvent('A/B Tests', 'Voting', voting)\n```", "```\n$ git clone git@github.com:petbattle/pet-battle.git && cd pet-battle \n```", "```\n$ helm install nodownvote --set image_version=no-down-vote \\\n```", "```\n--set route=false chart --namespace petbattle\n```", "```\n$ oc get pods\n```", "```\nnodownvote-pet-battle-1-deploy  0/1     Completed   0          2m47s\n```", "```\nnodownvote-pet-battle-1-jxzhf   1/1     Running     0          2m43s\n```", "```\n# install prod version\n```", "```\n$ helm install prod --set image_version=latest chart \\\n```", "```\n--set a_b_deploy.svc_name=no-down-vote-pet-battle --namespace petbattle\n```", "```\n# list pods\n```", "```\n$ oc get pods\n```", "```\nNAME                            READY  STATUS              RESTARTS  AGE\n```", "```\nnodownvote-pet-battle-1-deploy  0/1    Completed           0         4m53s\n```", "```\nnodownvote-pet-battle-1-jxzhf   1/1    Running             0         4m49s\n```", "```\nprod-pet-battle-1-6bbv8         0/1    ContainerCreating   0         12s\n```", "```\nprod-pet-battle-1-deploy        1/1    Running             0         16s\n```", "```\n# display the routes\n```", "```\n$ oc get routes\n```", "```\nNAME       HOST/PORT     PATH   SERVICES  PORT  TERMINATION  WILDCARD\n```", "```\nprod-pet-battle      prod-pet-battle-labs-dev.apps‚Ä¶\n```", "```\n      prod-pet-battle(50%),no-down-vote-pet-battle(50%)\n```", "```\n             8080-tcp   edge/Redirect   None\n```", "```\n# update route weights\n```", "```\n$ helm upgrade prod --set image_version=latest chart \\ \n```", "```\n    --set a_b_deploy.svc_name=no-down-vote-pet-battle \\\n```", "```\n    --set a_b_deploy.weight=10 --namespace petbattle\n```", "```\n# install the blue app stack $ helm upgrade --install pet-battle-api-blue \\\n```", "```\n    petbattle/pet-battle-api --version=1.0.15 \\\n```", "```\n    --namespace petbattle --create-namespace\n```", "```\n# install the green app stack\n```", "```\n$ helm upgrade --install pet-battle-api-green \\\n```", "```\n  petbattle/pet-battle-api --version=1.0.15 \\\n```", "```\n    --set image_version=green \\\n```", "```\n    --namespace petbattle\n```", "```\n# create the production route\n```", "```\n$ oc expose service pet-battle-api-blue --name=bluegreen \\\n```", "```\n--namespace petbattle\n```", "```\n# switch service to green\n```", "```\n$ oc patch route/bluegreen --namespace petbattle -p \\\n```", "```\n    '{\"spec\":{\"to\":{\"name\":\"pet-battle-api-green\"}}}'\n```", "```\n# switch back to blue again\n```", "```\n$ oc patch route/bluegreen --namespace petbattle -p \\\n```", "```\n    '{\"spec\":{\"to\":{\"name\":\"pet-battle-api-blue\"}}}'\n```"]