["```\n        ...\n```", "```\n        livenessProbe:\n```", "```\n          failureThreshold: 3\n```", "```\n          httpGet:\n```", "```\n            path: /health/live\n```", "```\n            port: 8080\n```", "```\n            scheme: HTTP\n```", "```\n          initialDelaySeconds: 0\n```", "```\n          periodSeconds: 30\n```", "```\n          successThreshold: 1\n```", "```\n          timeoutSeconds: 10\n```", "```\n        readinessProbe:\n```", "```\n          failureThreshold: 3\n```", "```\n          httpGet:\n```", "```\n            path: /health/ready\n```", "```\n            port: 8080\n```", "```\n            scheme: HTTP\n```", "```\n          initialDelaySeconds: 0\n```", "```\n          periodSeconds: 30\n```", "```\n          successThreshold: 1\n```", "```\n          timeoutSeconds: 10\n```", "```\n<dependency>\n```", "```\n   <groupId>io.quarkus</groupId>\n```", "```\n   <artifactId>quarkus-micrometer</artifactId>\n```", "```\n</dependency>\n```", "```\n<dependency>\n```", "```\n   <groupId>io.micrometer</groupId>\n```", "```\n   <artifactId>micrometer-registry-prometheus</artifactId>\n```", "```\n</dependency>\n```", "```\n# Metrics\n```", "```\nquarkus.micrometer.enabled=true\n```", "```\nquarkus.micrometer.registry-enabled-default=true\n```", "```\nquarkus.micrometer.binder-enabled-default=true\n```", "```\nquarkus.micrometer.binder.jvm=true\n```", "```\nquarkus.micrometer.binder.system=true\n```", "```\nquarkus.micrometer.export.prometheus.path=/metrics\n```", "```\n# grab the pod name for the running tournament service\n```", "```\n$ oc get pod -n petbattle | grep tournament \n```", "```\n$ oc exec YOUR_TOURNAMENT_PODNAME -- curl localhost:8080/metrics\n```", "```\n...\n```", "```\n# HELP mongodb_driver_pool_size the current size of the connection pool, including idle and and in-use members\n```", "```\n# TYPE mongodb_driver_pool_size gauge\n```", "```\nmongodb_driver_pool_size{cluster_id=\"5fce8815a685d63c216022d5\",server_address=\"my-mongodb:27017\",} 0.0\n```", "```\n# TYPE http_server_requests_seconds summary\n```", "```\nhttp_server_requests_seconds_count{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/openapi\",} 1.0\n```", "```\nhttp_server_requests_seconds_sum{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/openapi\",} 0.176731581\n```", "```\nhttp_server_requests_seconds_count{method=\"GET\",outcome=\"CLIENT_ERROR\",status=\"404\",uri=\"NOT_FOUND\",} 3.0\n```", "```\nhttp_server_requests_seconds_sum{method=\"GET\",outcome=\"CLIENT_ERROR\",status=\"404\",uri=\"NOT_FOUND\",} 0.089066563\n```", "```\nhttp_server_requests_seconds_count{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/metrics\",} 100.0\n```", "```\n# HELP http_server_requests_seconds_max\n```", "```\n# TYPE http_server_requests_seconds_max gauge\n```", "```\nhttp_server_requests_seconds_max{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/openapi\",} 0.176731581\n```", "```\nhttp_server_requests_seconds_max{method=\"GET\",outcome=\"CLIENT_ERROR\",status=\"404\",uri=\"NOT_FOUND\",} 0.0 ...\n```", "```\napiVersion: monitoring.coreos.com/v1\n```", "```\nkind: ServiceMonitor\n```", "```\nmetadata:\n```", "```\n labels:\n```", "```\n   app.kubernetes.io/component: pet-battle-tournament\n```", "```\n   k8s-app: pet-battle-tournament\n```", "```\n name: pet-battle-tournament-monitor\n```", "```\nspec:\n```", "```\n endpoints:\n```", "```\n - interval: 30s\n```", "```\n   port: tcp-8080\n```", "```\n   scheme: http\n```", "```\n selector:\n```", "```\n   matchLabels:\n```", "```\n     app.kubernetes.io/component: pet-battle-tournament\n```", "```\n$ oc describe svc my-pet-battle-tournament\n```", "```\nName:              my-pet-battle-tournament\n```", "```\nNamespace:         pet-battle-tournament\n```", "```\nLabels:            app.kubernetes.io/component=pet-battle-tournament\n```", "```\n                   app.kubernetes.io/instance=my\n```", "```\n                   app.kubernetes.io/managed-by=Helm\n```", "```\n                   app.kubernetes.io/name=pet-battle-tournament\n```", "```\n                   app.kubernetes.io/version=1.0.0\n```", "```\n                   deploymentconfig=my-pet-battle-tournament\n```", "```\n                   helm.sh/chart=pet-battle-tournament-1.0.0\n```", "```\nAnnotations:       Selector:  app.kubernetes.io/component=pet-battle-tournament,app.kubernetes.io/instance=my,app.kubernetes.io/name=pet-battle-tournament,deploymentconfig=my-pet-battle-tournament\n```", "```\nType:              ClusterIP\n```", "```\nIP:                172.30.228.67\n```", "```\nPort:              tcp-8080  8080/TCP\n```", "```\nTargetPort:        8080/TCP\n```", "```\nEndpoints:         10.131.0.28:8080\n```", "```\nPort:              tcp-8443  8443/TCP\n```", "```\nTargetPort:        8443/TCP\n```", "```\nEndpoints:         10.131.0.28:8443\n```", "```\nSession Affinity:  None\n```", "```\nEvents:            <none>\n```", "```\nselector:\n```", "```\n   matchLabels:\n```", "```\n     app.kubernetes.io/component: pet-battle-tournament\n```", "```\n$ oc get routes\n```", "```\n...                                                                \n```", "```\ngrafana-route     grafana-route-pb-noc.apps.someinstance.com     \n```", "```\n$ oc get pods --show-labels=true\n```", "```\nNAME                                   READY   STATUS      RESTARTS   AGE     LABELS\n```", "```\ninfinispan-0                           1/1     Running     0          2m25s   app=infinispan-pod,clusterName=infinispan,controller-revision-hash=infinispan-66785c8f,infinispan_cr=infinispan,statefulset.kubernetes.io/pod-name=infinispan-0\n```", "```\ninfinispan-1                           1/1     Running     0          5m51s   app=infinispan-pod,clusterName=infinispan,controller-revision-hash=infinispan-66785c8f,infinispan_cr=infinispan,statefulset.kubernetes.io/pod-name=infinispan-1\n```", "```\ninfinispan-2                           1/1     Running     0          4m12s   app=infinispan-pod,clusterName=infinispan,controller-revision-hash=infinispan-66785c8f,infinispan_cr=infinispan,statefulset.kubernetes.io/pod-name=infinispan-2\n```", "```\n $ oc get svc\n```", "```\nNAME         TYPE        CLUSTER-IP  EXTERNAL-IP   PORT(S)     AGE\n```", "```\ninfinispan   ClusterIP   172.30.154.122   <none>   11222/TCP   5d20h\n```", "```\n$ oc describe service infinispan\n```", "```\nName: infinispan\n```", "```\nNamespace: pet-battle-tournament\n```", "```\nLabels: app=infinispan-service\n```", "```\n        clusterName=infinispan\n```", "```\n        infinispan_cr=infinispan\n```", "```\nAnnotations: service.alpha.openshift.io/serving-cert-signed-by:               openshift-service-serving-signer@1607294893\n```", "```\n             service.beta.openshift.io/serving-cert-secret-name:\n```", "```\n               infinispan-cert-secret\n```", "```\n             service.beta.openshift.io/serving-cert-signed-by:\n```", "```\n               openshift-service-serving-signer@1607294893\n```", "```\nSelector:          app=infinispan-pod,clusterName=infinispan\n```", "```\nType:              ClusterIP\n```", "```\nIP:                172.30.154.122\n```", "```\nPort:              infinispan  11222/TCP\n```", "```\nTargetPort:        11222/TCP\n```", "```\nEndpoints: 10.128.2.158:11222,10.129.3.145:11222,10.131.0.25:11222\n```", "```\nSession Affinity:  None\n```", "```\nEvents:            <none>\n```", "```\n$ oc get all -l app.kubernetes.io/part-of=petbattleworld \\\n```", "```\n    --server-print=false\n```", "```\nNAME                                                            AGE\n```", "```\nreplicationcontroller/dabook-mongodb-1                          2d18h\n```", "```\nreplicationcontroller/dabook-pet-battle-tournament-1            26m\n```", "```\nNAME                                                            AGE\n```", "```\nservice/dabook-mongodb                                          2d18h\n```", "```\nservice/dabook-pet-battle-tournament                            2d18h\n```", "```\nNAME                                                            AGE\n```", "```\ndeploymentconfig.apps.openshift.io/dabook-mongodb                2d18h\n```", "```\ndeploymentconfig.apps.openshift.io/dabook-pet-battle-tournament  26m\n```", "```\nimagestream.image.openshift.io/dabook-pet-battle-tournament     26m\n```", "```\nroute.route.openshift.io/dabook-pet-battle-tournament           2d18h\n```", "```\napiVersion: v1\n```", "```\nkind: Service\n```", "```\nmetadata:\n```", "```\n  annotations:\n```", "```\n    app.openshift.io/vcs-url:      https://github.com/petbattle/tournamentservice.git\n```", "```\n    app.quarkus.io/commit-id:a01a310aadd46911bc4c66b3a063ddb090a3feba\n```", "```\n    app.quarkus.io/vcs-url:      https://github.com/petbattle/tournamentservice.git\n```", "```\n    app.quarkus.io/build-timestamp: 2020-12-23 - 16:43:07 +0000\n```", "```\n    prometheus.io/scrape: \"true\"\n```", "```\n    prometheus.io/path: /metrics\n```", "```\n    prometheus.io/port: \"8080\"\n```", "```\n$ java -jar tournament-1.0.0-SNAPSHOT-runner.jar\n```", "```\nGITINFO -> git.tags:\n```", "```\nGITINFO -> git.build.version:1.0.0-SNAPSHOT\n```", "```\nGITINFO -> git.commit.id.full:b5d6bfabeea6251b9c17ea52f0e87e2c8e967efd\n```", "```\nGITINFO -> git.commit.id.abbrev:b5d6bfa\n```", "```\nGITINFO -> git.branch:noc-git-info\n```", "```\nGITINFO -> git.build.time:2020-12-24T13:26:25+0000\n```", "```\nGITINFO -> git.commit.message.full:Moved gitinfo output to Main class\n```", "```\nGITINFO -> git.remote.origin.url:git@github.com:petbattle/tournamentservice.git\n```", "```\n  # User Workload Monitoring\n```", "```\n  - name: user-workload-monitoring\n```", "```\n    enabled: true\n```", "```\n    destination: openshift-monitoring\n```", "```\n    source: https://github.com/rht-labs/refactored-adventure.git\n```", "```\n    source_path: user-workload-monitoring/base\n```", "```\n    source_ref: master\n```", "```\n    sync_policy: *sync_policy_true\n```", "```\n    no_helm: true\n```", "```\n$ oc get route thanos-querier -n openshift-monitoring\n```", "```\nspec:\n```", "```\n  groups:\n```", "```\n  - name: petbattle.rules\n```", "```\n    rules:\n```", "```\n    - alert: PetBattleApiNotAvailable\n```", "```\n      annotations:\n```", "```\n        message: 'Pet Battle Api in namespace {{ .Release.Namespace }} is not available for the last 1 minutes.'\n```", "```\n      expr: (1 - absent(kube_pod_status_ready{condition=\"true\" ... for: 1m\n```", "```\n      labels:\n```", "```\n        severity: {{ .Values.petbattle.rules.severity }}\n```", "```\n# Let’s patch the deployment for our pet battle apps \n```", "```\n# running in petbattle ns and istioify it\n```", "```\n$ helm upgrade \\\n```", "```\n--install pet-battle-tournament \\\n```", "```\n--version=1.0.39 \\\n```", "```\n--set pet-battle-infra.install_cert_util=true \\\n```", "```\n--set istio.enabled=true \\\n```", "```\n--timeout=10m \\\n```", "```\n--namespace petbattle\n```", "```\npetbattle/pet-battle-tournament\n```", "```\n$ oc get deployment pet-battle-tournament -o yaml \\\n```", "```\n--namespace petbattle\n```", "```\n...  \n```", "```\ntemplate:\n```", "```\n    metadata:\n```", "```\n      annotations:\n```", "```\n...\n```", "```\n        sidecar.istio.io/inject: \"true\"\n```", "```\n      labels:\n```", "```\n        app.kubernetes.io/component: pet-battle-tournament\n```", "```\n        app.kubernetes.io/instance: pet-battle-tournament\n```", "```\n        app.kubernetes.io/name: pet-battle-tournament\n```", "```\n$ oc get pods \n```", "```\nNAME                            READY   STATUS      RESTARTS   AGE\n```", "```\ninfinispan-0                    1/1     Running     0          4h13m\n```", "```\nPet-battle-3-68fm5              2/2     Running     0          167m\n```", "```\npet-battle-api-574f77ddc5-l5qx8 2/2     Running     0          163m\n```", "```\npet-battle-api-mongodb-1-7pgfd  1/1     Running     0          3h50m\n```", "```\npet-battle-tournament-3-wjr6r   2/2     Running     0          167m\n```", "```\npet-battle-tou.-mongodb-1-x7t9h 1/1     Running     0          4h9m\n```", "```\napiVersion: networking.istio.io/v1alpha3\n```", "```\nkind: Gateway\n```", "```\nmetadata:\n```", "```\n  name: petbattle-gateway-tls\n```", "```\nspec:\n```", "```\n  selector:\n```", "```\n    istio: ingressgateway \n```", "```\n  servers:\n```", "```\n  - port:\n```", "```\n      number: 443\n```", "```\n      name: https\n```", "```\n      protocol: HTTPS\n```", "```\n    tls:\n```", "```\n      mode: SIMPLE\n```", "```\n      credentialName: \"pb-ingressgateway-certs\"\n```", "```\n    hosts:     \n```", "```\n    - \"*\"\n```", "```\napiVersion: networking.istio.io/v1alpha3\n```", "```\nkind: VirtualService\n```", "```\nmetadata:\n```", "```\n  name: pet-battle-cats-tls\n```", "```\nspec:\n```", "```\n  hosts:\n```", "```\n  - \"*\"\n```", "```\n  gateways:\n```", "```\n  - petbattle-gateway-tls\n```", "```\n  http:\n```", "```\n  - match:\n```", "```\n    - uri:\n```", "```\n        prefix: /cats\n```", "```\n      ignoreUriCase: true\n```", "```\n    route:\n```", "```\n    - destination:\n```", "```\n        host: pet-battle-api\n```", "```\n        port:\n```", "```\n          number: 8080\n```", "```\n    retries:\n```", "```\n      attempts: 3\n```", "```\n      perTryTimeout: 2s\n```", "```\n      retryOn: gateway-error,connect-failure,refused-stream\n```", "```\napiVersion: networking.istio.io/v1alpha3\n```", "```\nkind: DestinationRule\n```", "```\nmetadata:\n```", "```\n  name: pet-battle-api-port\n```", "```\nspec:\n```", "```\n  host: pet-battle-api.prod.svc.cluster.local\n```", "```\n  trafficPolicy: # Apply to all ports\n```", "```\n    portLevelSettings:\n```", "```\n    - port:\n```", "```\n        number: 8080\n```", "```\n      loadBalancer:\n```", "```\n        simple: LEAST_CONN\n```", "```\napiVersion: operators.coreos.com/v1alpha1\n```", "```\nkind: Subscription\n```", "```\nmetadata:\n```", "```\n name: grafana-operator\n```", "```\nspec:\n```", "```\n channel: alpha\n```", "```\n installPlanApproval: Automatic\n```", "```\n name: grafana-operator\n```", "```\n source: community-operators\n```", "```\n sourceNamespace: openshift-marketplace\n```", "```\n startingCSV: grafana-operator.v3.7.0\n```", "```\n$ oc get subscriptions\n```", "```\nNAME                PACKAGE             SOURCE                CHANNEL\n```", "```\ncert-utils-operator cert-utils-operator community-operators   alpha\n```", "```\ngrafana-operator    grafana-operator    community-operators   alpha\n```", "```\ninfinispan          infinispan          community-operators   2.1.x\n```", "```\nkeycloak-operator   keycloak-operator   community-operators   alpha\n```", "```\napiVersion: v1\n```", "```\nkind: ConfigMap\n```", "```\nmetadata:\n```", "```\n  annotations:\n```", "```\n    service.beta.openshift.io/inject-cabundle : \"true\"\n```", "```\n    cert-utils-operator.redhat-cop.io/generate-java-truststore: \"true\"\n```", "```\n    cert-utils-operator.redhat-cop.io/source-ca-key: \"service-ca.crt\"\n```", "```\n    cert-utils-operator.redhat-cop.io/java-keystore-password: \"jkspassword\"\n```", "```\n  name: java-truststore\n```", "```\n# Mount the configmap into the application pod in the /tmp/config/ directory\n```", "```\nquarkus.kubernetes-config.enabled=true\n```", "```\nquarkus.openshift.config-map-volumes.javatruststore.config-map-name=java-truststore\n```", "```\nquarkus.openshift.mounts.javatruststore.path=/tmp/config/\n```", "```\n# Instruct the JVM to use the Truststore\n```", "```\nquarkus.openshift.env-vars.JAVA_OPTS.value=-Djavax.net.ssl.trustStore=/tmp/config/truststore.jks -Djavax.net.ssl.trustStorePassword=jkspassword\n```", "```\n# Tell Infinispan client to use the Truststore when connecting\n```", "```\nquarkus.infinispan-client.trust-store=/tmp/config/truststore.jks\n```", "```\nquarkus.infinispan-client.trust-store-password=jkspassword\n```", "```\nservice.beta.openshift.io/serving-cert-secret-name=<NameOfMysecret>\n```", "```\n$ oc get svc keycloak -o yaml\n```", "```\napiVersion: v1\n```", "```\nkind: Service\n```", "```\nmetadata:\n```", "```\n  annotations:\n```", "```\n    description: The web server's https port.\n```", "```\n    service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret\n```", "```\n    service.alpha.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1615684126\n```", "```\n    service.beta.openshift.io/serving-cert-signed-by: openshift-service-serving-signer@1615684126\n```", "```\n$ oc get secret sso-x509-https-secret -o yaml\n```", "```\napiVersion: v1\n```", "```\ndata:\n```", "```\n  tls.crt: …...\n```", "```\n  tls.key: …..\n```", "```\nkind: Secret\n```", "```\nmetadata:\n```", "```\n  annotations:\n```", "```\n$ oc get secret sso-x509-https-secret -o json \\\n```", "```\n    | jq -r '.data.\"tls.crt\"' | base64 --decode \\\n```", "```\n    |openssl x509  -text -noout\n```", "```\nCertificate:\n```", "```\n    Data:\n```", "```\n        Version: 3 (0x2)\n```", "```\n        Serial Number: 1283774295358672234 (0x11d0e1eb7ea18d6a)\n```", "```\n        Signature Algorithm: sha256WithRSAEncryption\n```", "```\n        Issuer: CN = openshift-service-serving-signer@1615684126\n```", "```\n        Validity\n```", "```\n            Not Before: Mar 15 08:34:54 2021 GMT\n```", "```\n            Not After : Mar 15 08:34:55 2023 GMT\n```", "```\n        Subject: CN = keycloak.labs-staging.svc\n```", "```\n        Subject Public Key Info:\n```", "```\n            Public Key Algorithm: rsaEncryption\n```"]