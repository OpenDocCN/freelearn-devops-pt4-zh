- en: Appendix A – OpenShift Sizing Requirements for Exercises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/image001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'OpenShift clusters support many types of footprints – cloud, datacenter, and
    local. You can discover the best way to install OpenShift in these different environments
    by browsing to this link: [https://cloud.redhat.com/openshift/create/](https://cloud.redhat.com/openshift/create/).'
  prefs: []
  type: TYPE_NORMAL
- en: There is a distinction between *Red Hat supported* and *community* versions
    of OpenShift. You may wish to get full enterprise support for the Red Hat versions
    from Red Hat! Especially if you are doing anything work related, this is highly
    recommended. The community versions are supported by the open source community,
    you can read about them here [https://www.okd.io/](https://www.okd.io/).
  prefs: []
  type: TYPE_NORMAL
- en: 'We have detailed using **CodeReady Containers** (**CRC**) on your local machine
    as the way to get started with OpenShift. There is both a supported version of
    CRC, [https://cloud.redhat.com/openshift/create/local](https://cloud.redhat.com/openshift/create/local),
    and a community version, [https://www.okd.io/crc.html](https://www.okd.io/crc.html),
    available. To run CRC with the default settings, execute the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In an effort to constrain the system resources used, CRC does not contain all
    of OpenShift’s features. Running CRC locally will take a lot longer if executing
    the techie bits of this book. You may find frequent timeouts and have to *try
    some commands twice*. So, either be patient or perhaps use a Cloud hosted OpenShift
    which has fewer resource constraints. If you have real money to spend on cloud
    hosting or you have a virtualized infrastructure available to you, you can install
    an OpenShift 4 cluster using the binary installer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This will give you a running cluster with multiple master and worker nodes
    and you can configure different options prior to installing. Read the docs here:
    [https://docs.openshift.com/container-platform/4.7/installing/index.html](https://docs.openshift.com/container-platform/4.7/installing/index.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'CRC can be started with various options. Importantly, you can set the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-c, --cpus int`: The number of CPU cores to allocate to the OpenShift cluster
    (the default is 4)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-m, --memory int`: The amount of memory (in MiB) to allocate to the OpenShift
    cluster (the default is 9216)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-d, --disk-size uint`: The total size (in GiB) of the disk used by the OpenShift
    cluster (the default is 31)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can also configure the IP address – check out `crc start --help` for details.
  prefs: []
  type: TYPE_NORMAL
- en: We have tested the following scenarios from the book using CRC and recommend
    the following minimum sizing. If you have more resources available locally, we
    recommend you use them! This will improve the performance and usability when running
    through the code.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Table_Appendix_A_1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Table Appendix A.1: Minimum sizing for various book scenarios'
  prefs: []
  type: TYPE_NORMAL
- en: 'CRC is optimized to run on a single machine and so has metrics and monitoring
    disabled by default. This can be enabled by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Be aware that you will require more memory than listed above to be able to run
    the monitoring stack, CI/CD, and PetBattle. For the full documentation, options,
    and troubleshooting for CRC, please see [https://code-ready.github.io/crc/](https://code-ready.github.io/crc/).
  prefs: []
  type: TYPE_NORMAL
- en: How To Resize Storage in Your CRC Virtual Machine
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To grow the image disk size, you need to stop and restart CRC to properly resize
    the image disk. This seems to be a bug/issue with CRC.[[1](#footnote-191)][[2](#footnote-190)]
  prefs: []
  type: TYPE_NORMAL
- en: 'On Linux, perform the following to resize the disk:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Tekton Persistent Storage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Depending on your environment, the type of storage class available to your OpenShift
    cluster will vary.
  prefs: []
  type: TYPE_NORMAL
- en: CRC specifics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Currently, there are two Kustomize overlays for `PersistentVolumeClaims` used
    in OpenShift. This is because there are different storage classes available in
    each environment. In *Chapter 7*, *Open Technical Practices – The Midpoint*, we
    bootstrap the tooling using ArgoCD. The Ubiquitous Journey file `tekton/kustomization.yaml`
    needs to be set accordingly by changing the following commented line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: '[1](#footnote-191-backlink) [https://access.redhat.com/solutions/4969811](https://access.redhat.com/solutions/4969811)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2](#footnote-190-backlink) [https://github.com/code-ready/crc/issues/127](https://github.com/code-ready/crc/issues/127)'
  prefs: []
  type: TYPE_NORMAL
- en: Cloud specifics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In AWS, we make use of `aws-efs` ([https://docs.openshift.com/container-platform/4.4/storage/persistent_storage/persistent-storage-efs.html](https://docs.openshift.com/container-platform/4.4/storage/persistent_storage/persistent-storage-efs.html))
    for RWX storage. An updated EFS driver is in the works. If this is not available
    in your environment, you will still be able to run the examples but not all pipeline
    jobs will function currently if they are run in parallel.
  prefs: []
  type: TYPE_NORMAL
- en: 'Edit the `tekton/persistent-volume-claims` files to use a storage class available
    in your cluster (for example, gp2 is the default in AWS). You can find the storage
    class name by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
