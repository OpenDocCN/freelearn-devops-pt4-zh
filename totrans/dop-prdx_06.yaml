- en: Introducing Damien Duportal
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍达米安·杜波塔尔
- en: According to Damien, being a DevOps engineer is all about the people, culture,
    and tools. Alongside his work at Træfik, Damien is a training engineer at CloudBees,
    where he focuses on the CloudBees Jenkins Platform and Jenkins OSS. You can follow
    him on Twitter at `@DamienDuportal`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 根据达米安的说法，成为一名 DevOps 工程师，关键在于人、文化和工具。除了在 Træfik 的工作外，达米安还是 CloudBees 的培训工程师，专注于
    CloudBees Jenkins 平台和 Jenkins OSS。你可以在 Twitter 上关注他，账号是`@DamienDuportal`。
- en: '**Viktor Farcic**: I''m going to ask you a question that I want to use as a
    springboard into our discussion of DevOps. Simply put, what is the Duportal definition
    of DevOps?'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我有个问题想问你，我打算以这个问题为切入点来展开我们的 DevOps 讨论。简单来说，杜波塔尔对 DevOps 的定义是什么？'
- en: The Duportal definition of DevOps
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 杜波塔尔对 DevOps 的定义
- en: '**Damien Duportal**: Today, DevOps is a trendy buzzword that is used to try
    to achieve focus on value, and not only for the technical or cost concerns. At
    its core, DevOps is really about how we should work together in the IT industry.
    I''m not just talking about the process, but also about the culture, tools, and
    the people involved in it. This is why I said it''s a trendy buzzword because
    there is no strict definition as you could have for IT service management.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**达米安·杜波塔尔**：今天，DevOps 成为了一种时髦的流行词，试图聚焦于价值，而不仅仅是技术或成本问题。从本质上讲，DevOps 关乎我们在
    IT 行业中应该如何合作。我不仅仅是在谈论流程，还包括文化、工具和相关人员。这也是我说它是一个流行词的原因，因为它没有像 IT 服务管理那样严格的定义。'
- en: '"DevOps was focused not on the tools themselves but on the way these tools
    could achieve either a new way of working or a breaking down of the barriers between
    teams and departments, which means working and talking to each other, in order
    to generate cross-team awareness."'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps 并不专注于工具本身，而是专注于这些工具如何实现一种新的工作方式，或是打破团队和部门之间的壁垒，这意味着需要互相协作和沟通，从而促进跨团队的意识。”
- en: —Damien Duportal
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: —达米安·杜波塔尔
- en: More recently, DevOps has been taken over by a different sphere of influence,
    but initially, for me, it was a movement that started around the idea of tooling.
    DevOps was focused not on the tools themselves but on the way these tools could
    achieve either a new way of working or a breaking down of the barriers between
    teams and departments, which means working and talking to each other, in order
    to generate cross-team awareness.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，DevOps 被另一种影响力所接管，但最初，对我来说，它是一个围绕工具概念开始的运动。DevOps 并不专注于工具本身，而是专注于这些工具如何实现一种新的工作方式，或是打破团队和部门之间的壁垒，这意味着需要互相协作和沟通，从而促进跨团队的意识。
- en: I define DevOps as empathy, which I think is the main key here. DevOps is a
    way of bringing empathy back into our work, and the tools—Docker being the most
    famous, but by no means the only one—that can help you to do that. But it's important
    to understand that when I say empathy, I mean empathy with your other colleagues,
    not just between the two sides of DevOps—development and operations—but also between
    engineers and salespeople, executives and employees, and all of the local departments
    of an organization that should focus on the *global* optimum and not on their
    *local* optimum. You need to be aware of the issues that your other colleagues
    could be facing and not just those issues affecting you or your local departments.
    The tools are just one way of achieving that, which appeals a lot to engineers
    because engineers love their tools.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我将 DevOps 定义为同理心，我认为这才是关键所在。DevOps 是一种将同理心带回工作中的方式，Docker 是其中最著名的工具，但绝不是唯一的工具，能够帮助你做到这一点。但重要的是要理解，当我说同理心时，我指的是与其他同事的同理心，不仅仅是
    DevOps 两方——开发和运维之间的同理心，也包括工程师与销售人员、高管与员工之间的同理心，甚至是组织内所有部门之间的同理心。这些部门应该关注*全局*的最优解，而不是各自的*局部*最优解。你需要意识到其他同事可能面临的问题，而不仅仅是那些影响你或你所在部门的问题。工具只是实现这一目标的一种方式，这也深受工程师的喜爱，因为工程师喜欢他们的工具。
- en: '**Viktor Farcic**: So, DevOps is really using tools to help bring empathy back?'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：那么，DevOps 真的是用工具来帮助带回同理心的吗？'
- en: Can DevOps bring empathy back?
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps 能否带回同理心？
- en: '**Damien Duportal**: Yes! If you have a tool that helps you to share empathy,
    then you have a great foundation for starting the conversation. Even if this seems
    boring to engineers, at least they''ll start talking and listening to each other.
    I mean, once they''ve stopped debating sterile tabs versus spaces or JavaScript
    versus Java—or whatever sterile debate it is—they''ll have to focus on the value
    they''re going to provide. So, this is really how I would sum up DevOps, which
    again is about how you bring empathy back and focus on the value creation and
    interaction side of IT.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：没错！如果你有一个能帮助你建立共情的工具，那么你就有了开始对话的良好基础。即使对工程师来说这似乎很无聊，至少他们会开始交流和倾听彼此。我的意思是，一旦他们停止无休止地争论空格与制表符或JavaScript与Java之类的无聊问题，他们就必须专注于他们将提供的价值。所以，这确实是我如何总结DevOps的方式，再次强调的是如何恢复共情，并专注于IT的价值创造和互动方面。'
- en: '"I would sum up DevOps as how you bring empathy back and focus on the value
    creation and interaction side of IT."'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '"我将DevOps总结为如何恢复共情，并专注于IT的价值创造和互动方面。"'
- en: —Damien Duportal
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: —Damien Duportal
- en: '**Viktor Farcic**: But why is that particularly important?'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但为什么这特别重要呢？'
- en: '**Damien Duportal**: Because of the different human behaviors. But more than
    that, empathy is one of the most advanced bricks you can have for building human
    interaction. If we are able to achieve so many different things—with different
    people, different opinions, and different cultures—it''s because we, as humans,
    are capable of having high levels of empathy. As soon as you have empathy, you
    can understand why you provide value. If you don''t, then what''s the point of
    trying to create value? It will only be from your point of view, and there are
    over seven billion other people in the world. So, ultimately, we need empathy
    to understand what we are going to do with our tools.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：由于不同的人类行为。但更重要的是，共情是你用来建立人际互动的最先进的砖块之一。如果我们能够与不同的人、不同的观点和不同的文化做出如此多不同的事情，那是因为我们作为人类能够具备高水平的共情能力。一旦你有了共情能力，你就能理解为什么你要提供价值。如果没有，那么试图创造价值又有什么意义呢？那只会是从你的角度出发，而世界上还有70多亿其他人。因此，最终，我们需要共情来理解我们将如何运用我们的工具。'
- en: '**Viktor Farcic**: That''s a good one. You mentioned that Docker is one of
    those tools; could you expand on that?'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这个说法不错。你提到Docker是其中之一的工具；你能详细展开吗？'
- en: '**Damien Duportal**: Before I went freelance, I worked as a developer, but
    because there were only a few of us, I was quite close to those working in operations.
    Despite taking Java development courses as an engineering graduate, I was always
    interested in how we could start coding the infrastructure from very early on.
    I can''t remember who said this, but I believe it was someone at Netflix—*If you
    build it, you run it*. I love that mindset and it''s what brought me to provisioning
    tools such as Docker, SaltStack, Chef, Puppet, and Ansible.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：在我成为自由职业者之前，我曾担任开发人员，但因为我们只有少数几个人，我与操作团队的联系非常紧密。尽管我作为工程毕业生参加了Java开发课程，但我一直对从早期开始编写基础设施的方法感兴趣。我记不清是谁说的，但我相信是Netflix的某人说过——*如果你构建它，你就要运行它*。我喜欢那种思维方式，这也是我接触Docker、SaltStack、Chef、Puppet和Ansible等配置工具的原因。'
- en: Overcoming the fear of change
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 克服变革恐惧
- en: We used a lot of these tools to help to bring operations teams' concerns to
    developers. Bear in mind that a lot of developers didn't want to learn these tools,
    and what I quickly discovered was that this was because of fear. Developers were
    driven by fear because they didn't understand these new tools and, because they
    lacked a lot of knowledge, they were closed off. They were terrified by the idea
    of operations knowledge and failed to actually see that these tools presented
    a lot of new things for them to learn and try. But what the developers didn't
    realize was that that fear was also present in the operations people on our teams,
    and that was just locally.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们大量使用这些工具来帮助将操作团队的关切引入开发中。请记住，许多开发人员不愿意学习这些工具，我很快发现这是因为恐惧。开发人员因为不理解这些新工具，因为缺乏知识，而关闭自己。他们害怕操作知识的概念，并未真正意识到这些工具为他们提供了许多新东西来学习和尝试。但开发人员没有意识到的是，这种恐惧也存在于我们团队的运维人员中，而且这只是局部现象。
- en: '**Viktor Farcic**: That fear of change is a really great perspective, but did
    you ever manage to remove that fear from both the development and operations teams?'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：对变革的恐惧确实是一个很好的视角，但你是否曾设法从开发和运维团队中消除这种恐惧？'
- en: '**Damien Duportal**: I should add that I can''t generalize to other contexts,
    but that''s how I understood things and behaviors from our end. In response to
    your question, it took me three to four years of trying to build a bridge between
    both parties and convincing them not to be scared. That bridge was me saying that
    we can work together and choose pair programming, even something as simple as
    sharing a beer after work or a coffee before, or doing sports together outside
    of work. Was it successful? Well, it was helping, but not completely solving the
    problem because at the time I lacked the ability to bring empathy to the team.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**达米安·杜波塔尔**：我应该补充一下，我不能把这种经验推广到其他情境，但这就是我从我们这边理解到的事情和行为。针对你的问题，我花了三到四年的时间，尝试在双方之间架起一座桥梁，并说服他们不要害怕。这座桥梁就是我说的：我们可以一起工作，选择结对编程，甚至像下班后一起喝杯啤酒或上班前一起喝咖啡，或者在工作之外一起做些运动。成功了吗？嗯，确实有帮助，但并没有完全解决问题，因为当时我缺乏把同理心带入团队的能力。'
- en: When Docker landed, it was as if I had seen the light at the end of the tunnel
    because, finally, I had a development tool produced by a person who shared the
    same concerns of those in operations at the heart of the development. That's really
    the reason why I used it. The good thing is that whenever a person started with
    Docker, they had the same learning curve. Why was this important? Because it made
    it visible for everyone that we all had a lot to learn.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当Docker出现时，就像我看到了隧道尽头的光明，因为最终，我拥有了一个由一个与运营人员共享相同关切的开发者所生产的开发工具。这就是我使用它的真正原因。好的一点是，无论何时一个人开始使用Docker，他们都有相同的学习曲线。为什么这很重要？因为这让每个人都看到了我们都有很多需要学习的东西。
- en: 'Docker managed to be the bridge because it successfully broke down the barrier
    of fear because operations not only saw what they had to learn, but it turned
    out that they really liked learning the new tools. The only thing missing now
    was the time to learn. But the time issue was also seen as a potential investment
    opportunity, with those in operations thinking that if they spend time learning
    Docker, then gradually, the developers would follow us or our recommendation.
    At the same time, on the other side of the bridge, the developers were starting
    to think along the lines of: "Hey! That tool Docker sounds good! It could help
    us. It''s easy to use, and it works very fast." Docker was just a way to turn
    a lot of this scary-sounding technology into a fancy tool. So, with that thinking,
    even marketing got on board and helped spread awareness of it everywhere.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Docker成功地成为了桥梁，因为它成功地打破了恐惧的屏障，因为运营人员不仅看到了他们需要学习的内容，结果发现他们真的很喜欢学习新工具。现在唯一缺少的就是学习的时间。但时间问题也被视为一个潜在的投资机会，运营人员认为如果他们花时间学习Docker，那么逐渐地，开发人员会跟随我们或我们的建议。同时，在桥梁的另一端，开发人员也开始有了这样的想法：“嘿！那个Docker工具听起来不错！它可能对我们有帮助。它容易使用，而且运行速度很快。”Docker只是将许多听起来可怕的技术变成了一款花哨的工具。于是，带着这样的想法，甚至连营销团队也加入进来，帮助到处宣传它。
- en: '"Docker managed to be the bridge because it successfully broke down the barrier
    of fear because operations not only saw what they had to learn, but it turned
    out they really liked learning the new tools. The only thing missing now was the
    time to learn."'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: “Docker成功地成为了桥梁，因为它成功地打破了恐惧的屏障，因为运营人员不仅看到了他们需要学习的内容，结果发现他们真的很喜欢学习新工具。现在唯一缺少的就是学习的时间。”
- en: —Damien Duportal
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: —达米安·杜波塔尔
- en: '**Viktor Farcic**: But apart from building a bridge between the two teams,
    how was Docker able to create a feeling of empathy between them?'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克多·法尔奇奇**：但是，除了在两支团队之间架起桥梁，Docker是如何在他们之间创造同理心的感觉呢？'
- en: '**Damien Duportal**: What Docker did was make the learning curve linear. You
    were able to start with just a few lines of code and get something done very easily.
    Through this, you could then see that if the coding worked, then it''s already
    gained value. The teams were able to choose the moment when they would learn and
    add more quality or more completeness to what they wanted to achieve with Docker.
    This method was quite linear when compared to whatever tools you could have used
    before for finding the gaps. But back then, you had to learn Linux and Linux configuration,
    and possibly even Unity or systemd—all of the distributions—which were all learned
    in big steps. This was how I discovered and was subsequently convinced, in a very
    short time, that these tools brought empathy.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：Docker 做的是让学习曲线变得线性。你只需要几行代码，就能轻松完成任务。通过这个，你可以看到，如果代码运行正常，那它已经创造了价值。团队可以选择自己什么时候学习，并在想要通过
    Docker 实现的目标上增加更多的质量或完整性。与以前你可能使用的任何工具相比，这种方法是相当线性的。可是那时候，你必须学习 Linux 和 Linux
    配置，甚至可能还需要学习 Unity 或 systemd —— 所有的发行版，都是以大步伐的方式来学习的。这就是我发现并迅速确信，这些工具带来了同理心的原因。'
- en: 'It reminds me of situations we, as an industry, have been completely locked
    on for years, such as an operations person coming to the development team and
    saying: "Hey! Nice application. Do you know where the application is expected
    to write files on the filesystem?" Because, by saying that, it implied the intention
    was because we have an issue in production right now, a performance and/or security
    issue or an audit, and we needed that information because it''s valuable. But
    in that case, the communication was just: "We need this, and it''s mandatory."
    But all the developers heard was: "Oh, yeah. We want information that''s really
    boring, and we don''t want to search by ourselves."'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这让我想起了我们这个行业多年来一直面临的情况，例如一个运维人员来到开发团队说：“嘿！不错的应用。你知道应用程序预计会在文件系统上写入文件的地方吗？”因为他说这句话，实际上暗示着背后的意图是：我们现在在生产环境中有一个问题，可能是性能问题和/或安全问题，或者是审计问题，我们需要这些信息，因为它非常重要。但在这种情况下，沟通的方式只是：“我们需要这个，而且这是强制性的。”但所有开发者听到的只是：“哦，是的，我们需要一些非常无聊的信息，我们不想自己去查找。”
- en: '**Viktor Farcic**: So, did Docker remove that barrier?'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，Docker 是否消除了那个障碍？'
- en: Docker, containers, and the rate of adoption
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Docker、容器及其采用速度
- en: '**Damien Duportal**: The message was totally transformed. By using Docker as
    a support for the base communication, we just removed that barrier. In Docker,
    you can just say: "OK. Let''s use the read-only flag," and by default, everything
    will be forbidden in writing except when you have an exhaustive list of the data
    volume. This is technical stuff, but once you''ve tackled the technical problems,
    you remove the stress, and then you can start talking. We were in need of Docker
    because we needed to remove that stress. You just removed the engineering part
    and focused on the discussion of needs in advance, and that''s why Docker was
    a big game changer here, but it stands on the shoulders of giants.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：信息完全被转变了。通过使用 Docker 作为基础通信的支持，我们就消除了这一障碍。在 Docker 中，你可以简单地说：“好吧，让我们使用只读标志”，默认情况下，除非你有一个详尽的数据卷列表，否则一切写入都会被禁止。这些是技术性的内容，但一旦你解决了技术问题，就消除了压力，然后你就可以开始讨论了。我们需要
    Docker，因为我们需要去除那个压力。你只需要去除工程部分，专注于提前讨论需求，这就是为什么 Docker 在这里成为了一个重大的变革者，但它是建立在巨人的肩膀上的。'
- en: In earlier years, this work was being done by the likes of Puppet and Chef,
    who were already bringing the development mindset back to operations. Operations
    people are just developers for the system. For example, all kernel developers
    are developers, and their operations people help. So, *there is no such thing
    as operations or development because, at the end of the day, we are all doing
    the same job*. It's just that the amount of knowledge required for each area is
    much more than one person can handle on their own, so we have to partition that
    knowledge. But still, the daily job is editing text files, planning, and testing
    that that change locally, and then globally, is the same for everyone. We just
    have to be reminded of this, and Docker was a great aid for that.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在早些年，这项工作由像 Puppet 和 Chef 这样的工具完成，它们已经开始将开发思维带回到运维中。运维人员其实就是系统的开发者。例如，所有的内核开发者都是开发者，而他们的运维人员只是提供帮助。因此，*没有所谓的运维或开发之分，因为归根结底，我们都在做同一份工作*。只是每个领域所需的知识量远超一个人能独立掌握的程度，所以我们必须将这些知识进行划分。但实际上，日常工作还是在编辑文本文件、规划和测试，确保这个修改在本地和全球范围内对每个人都一样。我们只需要时常提醒自己这一点，Docker
    对此起到了很大的帮助作用。
- en: '**Viktor Farcic**: That''s interesting because, if I understand you correctly,
    what you said is that Docker made it possible to implement DevOps without companies
    having to plan the change. Basically, Docker made it happen naturally without
    any enforcement of the idea that you need to talk to this guy. Otherwise, the
    consequences are going to happen.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这很有意思，因为如果我理解正确的话，你的意思是 Docker 使得 DevOps 的实现变得可能，而公司不必规划这种变化。基本上，Docker
    自然而然地促成了这一切，而不需要强制要求你与某个人沟通。否则，后果会发生。'
- en: '**Damien Duportal**: I used to say that Docker was just uncovering the dust
    that you hide for a year under the carpet, and suddenly, you put Docker somewhere,
    and you can use it as a maturity indicator. If you put Docker somewhere and everything
    explodes, then you don''t know how to monitor Docker, or even how to build an
    image. If that''s the case, the real question then is what were you doing before
    Docker? Were you just covering your eyes and throwing code into production without
    thinking about it?'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：我曾经说过，Docker 就像是揭开你藏在地毯下藏了一年的灰尘，突然之间，你把 Docker 放到某个地方，然后你可以把它当作成熟度的指标。如果你把
    Docker 放到某个地方，结果一切都爆炸了，那么说明你不知道如何监控 Docker，甚至不知道如何构建一个镜像。如果真是这样，那么真正的问题是，在 Docker
    之前你到底在做什么？你是不是在闭着眼睛，把代码丢进生产环境而不思考？'
- en: '"I used to say that Docker was just uncovering the dust that you hide for a
    year under the carpet, and suddenly, you put Docker somewhere, and you can use
    it as a maturity indicator."'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '"我曾经说过，Docker 就像是揭开你藏在地毯下藏了一年的灰尘，突然之间，你把 Docker 放到某个地方，然后你可以把它当作成熟度的指标。"'
- en: —Damien Duportal
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: —Damien Duportal
- en: 'Generally speaking, the issue was that the knowledge was partitioned across
    all of the different departments and no one was sharing. Docker is just there
    to underline that point. It would say: "OK. If you''re having issues, it''s because
    you are not able to communicate with each other efficiently. You already have
    the knowledge, you already have the skills, but you need to bring awareness and
    empathy," and that was a much better indicator for me.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，问题在于知识被分散在各个部门之间，没有人愿意共享。Docker 的出现恰恰是为了强调这一点。它会说：“好吧，如果你遇到问题，那是因为你们之间没有有效沟通。你们已经有了知识，已经具备了技能，但你们需要提高意识和同理心。”对我来说，这才是一个更好的指标。
- en: '**Viktor Farcic**: So, how big do you think the adoption of containers is these
    days? Is everybody already using it, or is the full acceptance of it still pending?'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，你认为现在容器的采用程度如何？大家已经都在使用它了吗？还是它的完全接受还在等待中？'
- en: '**Damien Duportal**: I would say it''s still pending.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：我会说这个问题仍然悬而未决。'
- en: '**Viktor Farcic**: What''s stopping everybody from adopting it?'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：是什么阻碍了大家的普遍采用？'
- en: '**Damien Duportal**: I don''t have enough experience to give a definitive answer
    as I haven''t seen that many cases, but what I have seen over at least the last
    two years is a failure to take the time to embrace the change. In layman''s terms,
    this means DevOps teams are saying: "We''re scared of doing that. We are always
    on edge in terms of timing. Stop focusing on what is our value, what we could
    bring, and what we should remove on our path, and instead tell us what we should
    focus on." So, then, you could say that we might use a container, and this could
    help us. It''s an investment; we can spend some time now so that we don''t have
    to spend time later on. That issue is more about being totally on edge, and not
    being able to stop, focus, and breathe. This can, of course, be caused by a number
    of things such as a large number of people leaving the company, culture issues,
    or a big increase in the workload, but they''re all things that shouldn''t last
    for any significant amount of time.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：我没有足够的经验给出一个明确的答案，因为我没有看到那么多的案例，但至少在过去的两年里，我看到的一个问题是没有花时间去接受变化。通俗来说，这意味着DevOps团队在说：“我们害怕这么做。我们总是处于时间压力之下。不要再关注我们的价值，我们能带来什么，或者我们应该去除什么，而是告诉我们应该关注什么。”
    所以，你可以说我们可能会使用容器，这对我们有帮助。这是一项投资；我们现在花点时间，这样以后就不需要再花时间了。这个问题更多的是关于处于高度紧张的状态，无法停下来，集中精力，喘口气。当然，这可能是由于一些原因引起的，比如大量员工离职、文化问题或工作负荷大幅增加，但这些问题都不应该持续太久。'
- en: 'The other thing I saw, mainly with smaller companies, or where they have people
    that are already efficient in empathy, is that, by sharing and being empathic,
    they don''t see the container as bringing them value. Let''s say you have three
    big metal machines: what''s the point of installing Kubernetes or Docker Swarm
    if you already have a load balancer and a few applications? I would be interested
    to ask the same question in two years'' time because there are things in motion
    that cannot be stopped. I wouldn''t say container is the de facto standard; it''s
    just that things that were in one direction three years ago have totally changed.
    But I''m not scared by this because that would mean you have the mindset of saying,
    "should we do that?" Yes, because of blah, blah, blah, or no, because of blah,
    blah, blah. If that''s going to happen, expect to spend the next six months, or
    even years, evaluating your options based on your current context.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我看到的另一件事，主要是在一些小公司，或者那些已经在同理心方面高效的团队里，就是通过共享和表现同理心，他们并没有看到容器带来的价值。假设你有三台大型金属机器：如果你已经有了负载均衡器和一些应用程序，那么安装Kubernetes或Docker
    Swarm有什么意义呢？我想在两年后再问同样的问题，因为有些事情正在发生，无法停止。我不会说容器是事实上的标准；只是三年前朝着一个方向发展的一些事情现在已经完全改变了。但我并不害怕这一点，因为这意味着你有一种心态在说：“我们应该这么做吗？”
    是的，因为……或者不，因为……。如果这种情况发生，预计你需要在接下来的六个月，甚至几年里，根据你当前的情况评估你的选择。
- en: '**Viktor Farcic**: But the idea is that containers will become the de facto
    standard, so do we just need more time, or is something else coming down the line?'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但问题是，容器会成为事实上的标准，那么我们只是需要更多时间，还是会有其他新的变化？'
- en: '**Damien Duportal**: One thing that containers don''t bring to the table is
    resource management as we used to have it. I have an example from the CI/CD world
    with Jenkins, where it has been a challenge to use Docker in the same way over
    the past few years, and it''s still because what you want is to allocate resources
    when you need them, and deallocate resources when you don''t need them anymore.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：容器带来的一件事就是它不像我们以前那样提供资源管理。我有一个来自CI/CD世界的例子，关于Jenkins，在过去几年里，使用Docker遇到了挑战，原因是你想要的是在需要时分配资源，在不需要时回收资源。'
- en: Back then, containers were thought to be the golden solution, providing you
    with an immutable environment that you could easily start and stop within a few
    seconds, and then use the implied infrastructure for running the container, which
    could bring you these facilities of scaling horizontally or vertically. Right
    now, we have a cloud solution, and this is how they make money in the cloud by
    providing a platform on which to run these containers. So, I think this will be
    the big kick in the backside, in the sense that now that everyone is selling platforms
    for running containers on all of the big guns in the market, the rest will just
    follow. It's exactly like where virtual machines were a decade ago.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当时，人们认为容器是黄金解决方案，它为你提供了一个不可变的环境，你可以在几秒钟内轻松启动和停止它，然后使用隐含的基础设施来运行容器，这能给你带来水平或垂直扩展的便利。目前，我们有了云解决方案，而云中赚钱的方式就是提供一个平台来运行这些容器。所以，我认为这将是一个巨大的推动力，意味着现在市场上所有的大公司都在销售用于运行容器的平台，其余的公司也将会跟进。这正如十年前虚拟机的情况。
- en: '**Viktor Farcic**: Out of interest, what system did you grow up with?'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇克**：出于兴趣，你是用什么系统长大的？'
- en: '**Damien Duportal**: I''m too young to have known the transition to virtual
    machines. I just know my history. I started with a PowerPC Mac, and everyone told
    me that I was running a virtual PC, and because of that, I was wasting resources.
    But two years later, when I started engineering IT boards, everyone was like:
    "Oh, look; this metal provides a virtual machine, so it''s easier as I can change
    it during a run." History is a repetition. Virtualization concepts have existed
    for 40 years, so a container is just one way of reusing this concept, and this
    technology is just improving the usage.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**达米恩·杜波塔尔**：我还太年轻，没经历过向虚拟机的过渡。我只知道我的历史。我从PowerPC Mac开始，大家都告诉我，我运行的是虚拟PC，正因为如此，我在浪费资源。但两年后，当我开始做IT板卡工程时，大家都说：“哦，看啊；这台机器提供虚拟机，这样我可以在运行时更容易地更改它。”历史总是会重演。虚拟化概念已经存在了40年，所以容器只是一种重复这一概念的方式，这项技术只是提高了其使用效果。'
- en: '"What''s missing in order to have containers as the de facto standard? Just
    a bit of time for everyone to be convinced that the system is good for them."'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: “要让容器成为事实上的标准，还缺少什么？只需要一点时间让每个人都相信这个系统对他们有益。”
- en: —Damien Duportal
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: —达米恩·杜波塔尔
- en: What's missing in order to have containers as the de facto standard? Just a
    bit of time for everyone to be convinced that the system is good for them. But
    there are also other factors, for example, the recruitment and subsequent hiring
    crisis, which is resulting in it being difficult to find good engineers. So, that's
    not the person with the diploma who solves problems in the IT area—say, someone
    like an IT engineer or software engineer because we already have a lot of them—but
    it's not enough. What we require is people with different backgrounds, because
    as the container becomes the de facto standard platform, it will create the required
    blueprint for everyone to build something, whatever language, culture, or way
    of working you come from. I think it's more a matter of time than anything else.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要让容器成为事实上的标准，还缺少什么？只需要一点时间让每个人都相信这个系统对他们有益。但也有其他因素，例如，招聘和随后的雇用危机，这使得很难找到优秀的工程师。所以，这并不是那些拥有文凭、能在IT领域解决问题的人——比如像IT工程师或软件工程师，因为我们已经有很多这样的人了——但还不够。我们需要的是拥有不同背景的人，因为随着容器成为事实上的标准平台，它将为每个人创建所需的蓝图，让每个人都能基于任何语言、文化或工作方式来构建东西。我认为这更多的是时间问题，而非其他。
- en: Software companies, vendors, and conferences
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件公司、供应商和会议
- en: '**Viktor Farcic**: You''ve mentioned companies. I know that you go to conferences
    every once in a while, so I''m wondering what do you think about software vendors
    nowadays? Whenever I go to a conference, I always see every product being labeled
    as DevOps, and I''m getting a bit confused by that because it''s got me thinking,
    what do they actually mean?'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇克**：你提到过公司。我知道你时不时会去参加一些会议，所以我在想你怎么看待现在的软件供应商？每当我去参加一个会议时，我总是看到每个产品都被贴上了“DevOps”的标签，我有点困惑，因为这让我在思考，他们到底是什么意思？'
- en: '**Damien Duportal**: It''s just a way for those vendors to find a business
    model in a fast-changing sector. There are the debates about the open source or
    closed source business models. As you said, everyone at conferences today is selling
    DevOps because everyone understands that selling just a single piece of software
    is not sustainable. It might have been in the 1980s or 1990s, but not today. As
    a developer, you need to grow the value of what you are providing, or someone
    else will build the same software and will just totally roast you in their wake.
    When I grew up as an engineer, the pace of new development was years, but now
    it''s months.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：这只是那些供应商在快速变化的行业中找到商业模式的一种方式。关于开源或闭源商业模式的辩论一直存在。正如你所说，今天会议上的每个人都在销售DevOps，因为每个人都明白，单纯销售一款软件是不可持续的。也许在1980年代或1990年代是可以的，但今天不行。作为一名开发者，你需要提升自己所提供的价值，否则别人会构建相同的软件，并且会在你身后把你彻底超越。当我作为工程师成长时，新开发的步伐是以年的尺度来计算的，但现在是几个月。'
- en: You can start with whatever legendary product you want, but in a few months'
    time, someone else will be able to duplicate it even more successfully, or at
    least for a cheaper price. So, DevOps is a way of not closing yourself off on
    the business marketing side.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从任何一个传奇产品开始，但几个月后，别人将能够更成功地复制它，或者至少能以更便宜的价格做到。所以，DevOps是一种避免在商业营销方面封闭自己的方式。
- en: It's a loose coupling between the marketing people and engineers because they're
    not totally sure, so they shove the DevOps between those two. Maintaining the
    lines of communication between these two departments should bring cross-departmental
    awareness because the engineers have the ideas, some of which have sales potential
    while others do not, but they are valuable internal assets, and marketing need
    to sell things.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这是市场营销人员和工程师之间的松耦合，因为他们并不完全确定，所以他们把DevOps放在两者之间。保持这两个部门之间的沟通渠道应该带来跨部门的意识，因为工程师有一些创意，其中一些具有销售潜力，而其他的则没有，但它们是有价值的内部资产，市场营销需要销售东西。
- en: 'I''m not a marketing person, but at the point where you need to market the
    product to someone that doesn''t have the engineering background, you need to
    have some synchronization between teams. It''s much like databases. If you do
    synchronization or meetings all of the time, you are locked in, and you can''t
    go fast. But if you go too fast, you''ll have desynchronization between both the
    organization and the local optimum that are not the global optimization of the
    organization. So, by using DevOps in marketing as a tight coupling, you say: "OK, let''s
    put in that blocking keyword, and then we''ll see."'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我不是做市场营销的，但在你需要向没有工程背景的人推销产品时，团队之间必须有一些同步。这就像数据库一样。如果你一直在做同步或开会，你就被锁定了，无法快速前进。但如果你走得太快，组织之间和局部最优之间会产生不同步的情况，这并不是组织的全局最优化。所以，通过将DevOps与市场营销紧密结合，你可以说：“好吧，让我们加入这个阻塞关键词，然后再看看。”
- en: '**Viktor Farcic**: You''ve spent a lot of time teaching. It''s got me wondering:
    what challenges do you face when you try to teach people something?'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你花了很多时间在教学上。这让我在想：当你试图教别人一些东西时，你遇到了什么挑战？'
- en: '**Damien Duportal**: It''s all about the diversity block word. I said "block
    word" because it can have a lot of meanings based on your intention, but the main
    barrier here is that we are in desperate need of skilled engineers, and right
    now, we have a few ways to teach people how to be engineers and problem-solving
    people. What we need are developers, not those that aren''t at that engineer-grade
    level, but those who are able to build stuff.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：这全都与“多样性阻塞词”有关。我说“阻塞词”，因为根据你的意图，它可以有很多不同的含义，但这里的主要障碍是我们迫切需要有技能的工程师，而现在我们有几种方式来教人如何成为工程师和解决问题的人。我们需要的是开发者，而不是那些还未达到工程师级别的人，而是那些能够构建东西的人。'
- en: I've lived through the very cool change that saw people coming from web development
    who then started to work next to Java developers, who used to be the backend of
    the organization. You had just enough cases where they were fighting each other.
    Those frontend developers with their just-enough typed language—JavaScript—where
    you can do whatever you want in JavaScript, and that's catastrophic. Everyone
    was focusing on that, but there were a lot of situations where people were starting
    to learn from each other.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我经历了一个非常有趣的变化，那时一些来自网页开发的人员开始与曾是组织后台的 Java 开发者并肩工作。你会看到一些案例，他们互相竞争。那些前端开发者使用的只是足够简单的类型语言——JavaScript——在
    JavaScript 中，你几乎可以做任何事情，而这就是灾难的开始。每个人都把注意力集中在这一点上，但也有很多场景，大家开始从彼此那里学习。
- en: '"JavaScript went untyped and took the good things from the other world, and
    this is exactly what we need: more people coming from different backgrounds and
    different work cultures."'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: “JavaScript 放弃了类型系统，并吸收了其他语言的优点，这正是我们所需要的：更多来自不同背景和不同工作文化的人。”
- en: —Damien Duportal
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: —Damien Duportal
- en: 'JavaScript went untyped and took the good things from the other world, and
    this is exactly what we need: more people coming from different backgrounds and
    different work cultures. Just to be able to say: "OK, well, you used to do things
    that way, but I would have done it this way." We could learn a lot from each other,
    because it''s not only about the person that knows and the person that doesn''t
    know, it''s also about the person who thinks differently; and that can help you
    to focus again on the value, because our brains are all different, and the bigger
    barrier in education is teaching to different profiles.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 放弃了类型系统，并吸收了其他语言的优点，这正是我们所需要的：更多来自不同背景和不同工作文化的人。这样我们就能说：“好，你以前是那样做的，但我会这样做。”我们可以互相学习，因为这不仅仅是关于知道与不知道的人的问题，还涉及到那些思维方式不同的人；而这能帮助你重新聚焦于价值，因为我们的思维方式各不相同，而教育中的最大障碍就是要教会不同背景的人。
- en: The education system
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 教育体系
- en: '**Viktor Farcic**: So then, what''s your view of the education system? How
    do we get it to teach to so many different profiles?'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，你怎么看待教育体系呢？我们该如何让它能够应对这么多不同的学习背景？'
- en: '**Damien Duportal**: Some people prefer hands-on practice over reading. For
    instance, if someone says that they don''t understand your slides about the network
    OSI model, that''s actually OK. What you should do then is give them a Raspberry
    Pi and a keyboard and make them learn by configuring a TCP/IP, and then they''ll
    go back to learn the OSI model. We know it''s a requirement to have that foundational
    knowledge and, for now, it''s OK. But do you need it after working in IT or networks
    for a few years, or do you need it upfront before doing anything else? It depends,
    and if we say we should teach all people like this, we are already in the wrong.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：有些人更喜欢动手实践而不是阅读。例如，如果有人说他们不理解你关于网络 OSI 模型的幻灯片，这其实没关系。你应该做的是给他们一个
    Raspberry Pi 和一个键盘，让他们通过配置 TCP/IP 来学习，之后他们会回去重新学习 OSI 模型。我们知道，掌握基础知识是必须的，目前来说，这样做是可以的。但是，在
    IT 或网络工作几年后，你还需要它吗？还是在做任何事情之前你就需要它？这取决于情况。如果我们说应该用这种方式来教育所有人，那我们就已经走错方向了。'
- en: 'The main challenge is finding teachers who are adaptable, and are able to talk
    to the people in front of them and say: "OK, you don''t understand what I''m saying?
    I need to find something else, or I need to ask for help from someone else, someone
    in the group maybe." It''s not only about being a teacher or a student. It''s
    about sharing knowledge and learning from each other. I think I learn as much
    as my students do each time, which is fine, and I think we need people that are
    not scared of that fact.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的挑战是找到那些适应性强的老师，他们能够和眼前的人交流并说：“好，你不理解我在说什么？那我需要找其他的方式，或者需要向别人求助，也许是小组中的某个人。”这不仅仅是关于做老师或做学生的问题，而是关于知识的共享和彼此的学习。我认为每次我从学生那里学到的东西和他们从我这里学到的差不多，这是没问题的，我认为我们需要那些不害怕这个事实的人。
- en: 'You just have to look at what''s currently happening where I grew up and where
    I live—in Western Europe: the educational system creates that fear. You are the
    teacher; the students must address you as a grown-up adult, which I am not at
    all and will never be. But that''s the case for a lot of people. I feel the best
    place for people to learn and share knowledge is in a less formal environment,
    but we have some work to do in order to safeguard that. Only time and experimentation
    will help to solve this issue. Because again, almost all teachers have the skills
    and the knowledge. But their ability to share this knowledge is blocked by their
    fear of not knowing everything, of not always having the right answer, of feeling
    ashamed to say when they don''t know something or that they need help from someone
    else. Sometimes we just need to figure out a solution together. There''s absolutely
    no shame in that.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需要看看我生长的地方和我现在住的地方——西欧：教育系统培养了那种恐惧感。你是老师，学生必须称呼你为成年人，而我根本不是，也永远都不会是。但这对很多人来说都是这样的。我认为最好的学习和分享知识的地方是一个不那么正式的环境，但我们仍然有一些工作要做，以确保这一点。只有时间和实验才能帮助解决这个问题。因为再说一次，几乎所有老师都具备技能和知识，但他们分享这些知识的能力却受到限制，因为他们害怕自己不知道一切，害怕自己不总是有正确的答案，害怕说出自己不知道某些东西，或者需要别人帮助。有时候我们只是需要一起找到解决方案，这完全不需要感到羞耻。
- en: '**Viktor Farcic**: Because what you''re now describing in education to me sounds
    very similar to what you described initially with the empathy problems faced in
    companies.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：因为你现在在教育中描述的内容，听起来与最初你描述的公司中存在的同情问题非常相似。'
- en: '**Damien Duportal**: Well yes, it does, and that''s because, once you are adaptable
    to unlearning what you''ve learned, you can start solving problems by saying:
    "OK, let''s take a deep breath and focus on what the problem is that I need to
    solve." You might try different ways until you solve it, or equally, maybe you
    don''t solve it. But whatever you do, you at least learned something and maybe,
    along the way, you solved the issue. I mean, that''s the natural cognitive pattern
    for humans, and because of that, we need to have it in both education and work,
    and not only in the IT sector.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：是的，确实如此，原因在于，一旦你能够适应“忘记已学”的过程，你就能开始通过以下方式解决问题：“好吧，让我们深呼吸一下，集中精力思考我需要解决的问题是什么。”你可能会尝试不同的方法直到解决问题，或者也可能没有解决。但无论你做什么，至少你学到了些什么，或许在这个过程中，你解决了问题。我的意思是，这是人类自然的认知模式，正因为如此，我们在教育和工作中都需要这种模式，而不仅仅是在IT行业。'
- en: I mean, we know how farmers are doing things. For instance, you cannot be a
    farmer for 40 years and always have the exact same routine because the climate
    is constantly changing. You don't know whether you'll have ice next year, whether
    it will be too sunny, or whether you'll have enough water, and so, you have to
    adapt; that's the natural way.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是，我们知道农民是怎么做事情的。例如，你不能当40年的农民，每天都有完全相同的工作流程，因为气候在不断变化。你不知道明年是否会有冰雹，是否会太阳光明媚，或者是否会有足够的水源，因此，你必须适应；这是自然的方式。
- en: '**Viktor Farcic**: Do you ever get requests from people asking you to teach
    them how to become DevOps engineers?'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你有没有接到过别人请求你教他们如何成为DevOps工程师的要求？'
- en: '**Damien Duportal**: No, never. I mean, how should I answer that question?
    Talk to each other, and say: "Hey, you''re almost a DevOps engineer"?'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：不，从来没有。我的意思是，我该怎么回答这个问题呢？互相交流，然后说：“嘿，你差不多是个DevOps工程师了”？'
- en: '**Viktor Farcic**: The only reason I''m asking this is that I don''t truly
    understand what a DevOps engineer is. I see the word everywhere, and in fact,
    I get DevOps engineer job offers all of the time. But at the heart of it, I still
    don''t understand what it is they would be expecting me to do.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我问这个问题的唯一原因是，我不太理解DevOps工程师到底是什么。我到处都能看到这个词，实际上，我时常收到DevOps工程师的工作邀请。但归根结底，我仍然不明白他们希望我做些什么。'
- en: '**Damien Duportal**: In my first company, I was a DevOps engineer for one year,
    and I still don''t know what my role was. So, I agree with you in that there is
    no such thing as a DevOps engineer, or even a DevOps team. The main purpose of
    DevOps is to focus on value, and by that I mean finding the optimum for the organization
    and the value it will bring.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damien Duportal**：在我第一家公司时，我做了整整一年的DevOps工程师，但我依然不知道我的角色是什么。所以，我同意你的看法，确实没有所谓的DevOps工程师，甚至没有DevOps团队。DevOps的主要目的是专注于价值，我指的是为组织找到最佳的方式，以及它将带来的价值。'
- en: '"In my first company, I was a DevOps engineer for one year, and I still don''t
    know what my role was. So, I agree with you in that there is no such thing as
    a DevOps engineer, or even a DevOps team."'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: “在我的第一家公司，我做了整整一年的DevOps工程师，但我至今都不知道我的角色到底是什么。所以，我同意你的看法，根本没有所谓的DevOps工程师，甚至没有所谓的DevOps团队。”
- en: —Damien Duportal
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: —达米恩·杜波塔尔
- en: So, if you build an organization that only has the support of the organization
    focusing on the value, then what's the job of the other? What are they doing?
    You just put the keywords in, but in fact, what you need is someone who has the
    speaking skills and empathy. So, maybe a good place to start would be with an
    empathy engineer?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你建立一个仅仅支持专注于价值的组织，那么其他人的工作是什么？他们在做什么？你只是输入了关键词，但实际上你需要的是一个有口才和同理心的人。所以，也许一个不错的起点就是同理心工程师？
- en: '**Viktor Farcic**: Whenever something new comes along and becomes popular,
    there is always a hype around it. And then, even before that hype has diminished,
    there''s a new product or a new tool right behind it that''s generating even more
    hype. But right now, I don''t know what''s next. What''s the next big thing? Is
    there anything coming after DevOps?'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：每当有什么新东西出现并变得流行时，总会有一股炒作。然后，即使那股炒作还没有消退，后面就会有一个新产品或新工具紧随其后，产生更大的炒作。但现在，我不知道接下来会有什么。DevOps之后会有什么呢？'
- en: What's next after DevOps?
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps之后是什么？
- en: '**Damien Duportal**: Not yet, but to be honest, I still haven''t gained enough
    experience in my professional life to be able to make that kind of prediction.
    I would not have been able to predict Red Hat being bought by someone else. When
    Sacha Labourey did that, I was like: *that guy is completely crazy*, though in
    fact, he just has way more experience than I have.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**达米恩·杜波塔尔**：还没有，但老实说，我在职业生涯中还没有积累足够的经验来做出那种预测。我当时完全没法预测到红帽会被别人收购。当萨莎·拉博雷做出这个决定时，我心想：*那个人完全疯狂*，但事实上，他的经验比我丰富得多。'
- en: Right now, in the technology sector, we have the Internet of Things stuff, and
    so maybe a security engineer will be the next big thing, because when the smart
    fridge that everyone owns gets hacked, all of the milk and beers you had in it
    will be ruined. So, maybe this could be the new trend? It's like the Ghostbusters;
    it would be the security engineer coming out because your fridge has been hacked.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在技术行业中，我们有了物联网相关的东西，所以也许安全工程师会成为下一个大趋势，因为当每个人都拥有的智能冰箱被黑客攻击时，里面的牛奶和啤酒都会被毁掉。所以，也许这会成为一种新趋势？就像《捉鬼敢死队》一样，安全工程师会因为你的冰箱被黑客攻击而出场。
- en: '**Viktor Farcic**: I mean, when IoT, and I''m not saying even if, but when
    IoT is all around us, we might see the same pattern. A long time ago, we had people
    coming to our house to fix our computers, but now we don''t do that anymore because
    we have laptops that we throw away when they don''t work. But maybe that will
    come back, kind of like a person that fixes your house, in a retro way, bringing
    back the old school stuff of someone fixing your home.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：我的意思是，当物联网到处都是，我不是在说如果，而是当物联网遍布我们周围时，我们可能会看到同样的模式。很久以前，我们曾经请人来修理我们的电脑，但现在我们不再这么做了，因为我们有笔记本电脑，当它们坏了，我们就直接丢掉。但也许这种做法会回归，有点像修理房子的那个人，以一种复古的方式，把修理家居的老派做法带回来。'
- en: '**Damien Duportal**: People that were thrown by force outside the IT world—for
    example, people building a house—might be able to come back into the hype because
    you, Viktor, might need someone to break down the wall of your house because no
    one can unhack your door. So, you''ll need someone with a hammer to deconstruct
    the wall.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**达米恩·杜波塔尔**：那些被迫离开IT世界的人——例如，建房子的人——或许能够回归这个热潮，因为你，维克托，可能需要找人砸开你家墙壁，因为没人能破解你的门。所以，你需要一个拿着锤子的人来拆除墙壁。'
- en: '**Viktor Farcic**: Let me out! I cannot go through the door!'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：放我出去！我不能通过门！'
- en: '**Damien Duportal**: Ha! I think we''re all going to have a lot of fun with
    the new trend.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**达米恩·杜波塔尔**：哈哈！我觉得我们都会在新的趋势中玩得很开心。'
- en: On Amazon, Microsoft, and Google
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在亚马逊、微软和谷歌
- en: '**Viktor Farcic**: There''s one last question before we go, which is based
    on the way companies such as Amazon, Microsoft, and Google are working. Are they
    eating away the need for skilled people? I mean, we''re in 2019, and you don''t
    need to develop your own machine learning now as Google gives it to you. Likewise,
    you don''t need to transcribe as Google does it for you, and that''s just two
    of multiple possible examples. So, what is the relation between the services and
    what we''re doing?'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：在我们结束之前，还有一个问题，关于像亚马逊、微软和谷歌这样的公司运作方式。它们是不是正在蚕食对有技能人才的需求？我是说，现在是2019年，你不再需要自己开发机器学习了，因为谷歌已经提供了相关服务。同样，你也不需要做转录，因为谷歌可以为你完成，这仅仅是多个可能的例子中的两个。那么，服务与我们所做的事情之间的关系是什么呢？'
- en: '**Damien Duportal**: For me, it''s like drying a river. Those companies need
    skilled people, and the few that they''ve currently hired are being paid a lot.
    But right now, the question is: why are these people skilled? It''s because they
    gained experience and knowledge over the years. But how did they do that? Because
    the companies that hired them gave them opportunities.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**达米安·杜波特尔**：对我来说，这就像是在干涸一条河流。这些公司需要有技能的人，而他们目前雇佣的少数人薪水很高。但现在的问题是：这些人为什么有技能？是因为他们多年积累了经验和知识。但他们是怎么做到的呢？因为雇佣他们的公司给了他们机会。'
- en: It's like the COBOL time. At this moment in time, a skilled person—unless they
    build the new Terminator or supercomputer—will want to focus on something else
    in their life before they retire. But when they stop, what are we going to do
    at that moment? Because if we dry the river, we don't have water anymore. I think
    that's exactly what is happening.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像是COBOL的时代。现在的一个有技能的人——除非他们建造新的终结者或超级计算机——在退休之前会想专注于生活中的其他事情。但当他们停下来时，我们该怎么办呢？因为如果我们让河流干涸了，就没有水了。我认为这正是现在发生的事情。
- en: But since things are changing a lot, I think there will be an ever-growing number
    of Red Hat-type companies or new companies that will emerge because, on the other
    hand, we have increased capabilities to build whatever we want. So, a lot of new,
    differently skilled engineers will emerge and will build alternatives. I really
    trust human nature to do that.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 但由于事物的变化，我认为会有越来越多像Red Hat这样的公司或新公司涌现出来，因为从另一个角度看，我们有了更强的能力来构建我们想要的任何东西。所以，很多拥有不同技能的工程师将会涌现出来，并且会构建替代方案。我真的相信人性可以做到这一点。
- en: '"But since things are changing a lot, I think there will be an ever-growing
    number of Red Hat-type companies or new companies that will emerge because…we
    have increased capabilities to build whatever we want."'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: “但由于事物的变化，我认为会有越来越多像Red Hat这样的公司或新公司涌现出来，因为……我们有了更强的能力来构建我们想要的任何东西。”
- en: —Damien Duportal
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: —达米安·杜波特尔
- en: But the last thing I'll say is that you always have resistance. We were talking
    earlier about the transcript for this interview. In my case, I'm willing to pay
    you a few bucks to have it done because I don't want to spend my time doing it.
    But at the same time, I know a bunch of people that would say, "Oh no, I'm going
    to use AWS! I'm going to buy a Raspberry Pi and do it with no network at all."
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 但我要说的最后一件事是，你总会遇到阻力。我们之前讨论过这次采访的转录。在我看来，我愿意花几美元让你做这件事，因为我不想浪费时间去做。但与此同时，我也认识一些人，他们会说：“哦不，我要用AWS！我要买一台Raspberry
    Pi，完全不联网自己做。”
- en: I'm sure if you go to DevOps functions all across the world, you will find people
    that will build things themselves, and one of these people will be the next Alphabet
    executive. The issue is that, right now, they are drying out, but it's short term,
    and we have enough resilience for solving that problem.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我敢肯定，如果你走遍世界各地的DevOps领域，你会发现有些人会自己动手做事情，其中一个人可能会成为下一个Alphabet的高管。问题是，现在这些人正在枯竭，但这是短期现象，我们有足够的韧性来解决这个问题。
- en: '**Viktor Farcic**: Let''s end it there. It''s been great talking to you.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：我们就到这里吧。和你交谈非常愉快。'
