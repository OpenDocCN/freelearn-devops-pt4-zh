- en: Introducing Julian Simpson
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍朱利安·辛普森
- en: Julian Simpson worked at Neo4j until August 2018, where he helped deliver projects
    across both DevOps and continuous delivery. In August 2018, Julian moved to Fuel50,
    where he's now a Global Security and Platforms manager with a focus on building
    out the company's platform. Julian is also an organizer at DevOpsDaysNZ. You can
    follow him on Twitter at `@builddoctor`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 朱利安·辛普森曾在 Neo4j 工作直到 2018 年 8 月，在那里他帮助交付了涉及 DevOps 和持续交付的项目。2018 年 8 月，朱利安转到
    Fuel50，成为全球安全与平台经理，专注于构建公司的平台。朱利安还是 DevOpsDaysNZ 的组织者。你可以在 Twitter 上关注他，用户名是 `@builddoctor`。
- en: Defining DevOps
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义 DevOps
- en: '**Viktor Farcic**: I want to start by asking you a two-fold question. First,
    how would you define DevOps, and then how has that definition played out in your
    career?'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我想从一个双重问题开始问你。首先，你如何定义 DevOps？然后，这一定义在你的职业生涯中是如何体现的？'
- en: '**Julian Simpson**: I used to be a Unix systems administrator. In that role,
    I spent a lot of time during the dot-com boom building Solaris servers and arguing
    with developers. This conflict between system administrators and developers carried
    on for the next three to four years of my career.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我曾是一个 Unix 系统管理员。在那个角色中，我花了很多时间在互联网泡沫时期构建 Solaris 服务器，并与开发人员争论。这种系统管理员和开发人员之间的冲突持续了我职业生涯的接下来的三到四年。'
- en: During this time, two things became obvious to me. Firstly, the approach of
    building systems by hand seemed wrong, and secondly, it really seemed counterproductive
    to handle this conflict. While I can be sucked into a good fight, it didn't seem
    like a positive way to go about things. Eventually, in 2002, I discovered the
    CFEngine project and started building all my systems with CFEngine, in order to
    rebuild those builds.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段时间里，有两件事对我来说变得显而易见。首先，手动构建系统的方式似乎是错误的，其次，处理这种冲突似乎确实适得其反。虽然我可以陷入一场好的争斗，但这似乎不是一种积极的方式。最终，在
    2002 年，我发现了 CFEngine 项目，并开始使用 CFEngine 来构建我的所有系统，以便重建这些构建。
- en: This was combined with Solaris Jumpstart, which was an awesome technology to
    have at the time, because from the hardware point of view, I could just build
    a machine anytime I wanted to. I could also iterate over builds and store that
    source in version control, practices that evolved into DevOps. An important thing
    to add is that I discovered the Agile movement in 2004; I consider the DevOps
    movement to have evolved as a natural progression of the Agile movement.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这与 Solaris Jumpstart 相结合，这在当时是一个非常棒的技术，因为从硬件角度来看，我可以随时构建一台机器。我还可以对构建进行迭代，并将源代码存储在版本控制中，这些做法最终发展为
    DevOps。一个重要的补充是，我在 2004 年发现了敏捷运动；我认为 DevOps 运动作为敏捷运动的自然延伸发展而来。
- en: '"I consider the DevOps movement to have evolved as a natural progression of
    the Agile movement."'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “我认为 DevOps 运动作为一种自然的发展，源自于敏捷运动。”
- en: —Julian Simpson
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: —朱利安·辛普森
- en: '**Viktor Farcic**: That''s how I typically describe it too. While I agree that
    DevOps is an evolution of Agile, the conflicts you described are something that
    I see today between developers, QA, security and everybody else involved. What
    do you think are the causes of those conflicts?'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：这也是我通常的描述方式。虽然我同意 DevOps 是敏捷的演变，但你所描述的冲突是我今天在开发人员、QA、安全人员和其他所有相关人员之间看到的现象。你认为这些冲突的原因是什么？'
- en: '**Julian Simpson**: I think it''s all about structural conflict within organizations.
    To me, it seems insane that, as an industry, we set up teams that have conflicting
    goals and then expect them to resolve the conflict as if it''s something about
    them rather than the game they''ve been asked to play. You''re keeping the system
    secure, up, and available, and your job is to deliver it as fast as you possibly
    can.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我认为这完全是组织内结构性冲突的问题。对我来说，作为一个行业，组织设置有冲突目标的团队，然后期望他们像解决个人问题一样解决这些冲突，简直令人难以置信。你负责确保系统的安全、正常运行并保持可用，而你的工作就是尽可能快地交付它。'
- en: I don't know if it's just folk wisdom or whether there's actual research we
    can rely on, but it seems that there are a lot of teams out there that go out
    of their way to deliver the wrong thing very quickly, but at the cost of security
    or availability. If all those things are causing you to sweat, then actually working
    together on the details of what features to deliver in a project and giving the
    entire team the incentive to deliver it securely and in such a way that you can
    keep it available, to me, seems like an obvious way to go about things.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道这是不是仅仅是民间智慧，还是我们可以依赖的实际研究，但似乎有很多团队专门以非常快的速度交付错误的东西，而这往往是以牺牲安全性或可用性为代价的。如果这些因素让你感到焦虑，那么实际上，团队一起讨论项目中需要交付的功能，并激励整个团队确保安全地交付并确保可用性，对我来说，似乎是理所当然的做法。
- en: The difference between DevOps and Agile
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps与敏捷的区别
- en: '**Viktor Farcic**: Let''s talk more about the evolution from Agile to DevOps.
    What exactly did you mean by that?'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：让我们多聊聊从敏捷到DevOps的演变。你具体是怎么理解的？'
- en: '**Julian Simpson**: I came to the Agile movement reasonably late in its development.
    I wasn''t around to see some of the earlier Agile projects, but my understanding
    is that we solved some of the problems of how we know what to build and how we
    should go about planning and delivering the build in an iterative fashion. Once
    you''ve solved that problem, there are engineering challenges, such as integration.
    There''s no excuse for having a huge merge phase at the end of your project now
    because continuous integration has been a thing since at least the late 1990s.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我在敏捷运动发展得比较晚的时候才加入。我没能亲眼见证一些早期的敏捷项目，但我理解的是，我们解决了如何知道该构建什么，以及我们应该如何以迭代方式规划和交付构建的问题。一旦你解决了这个问题，接下来就会面临工程挑战，比如集成。现在项目末尾出现巨大的合并阶段已经没有借口了，因为持续集成至少自1990年代末期以来就已经存在了。'
- en: '"DevOps is the response to solving problems that you have when you''re successful
    in the earlier stages of your project''s evolution."'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '"DevOps是应对在项目早期阶段成功时所遇到的那些问题的回应。"'
- en: —Julian Simpson
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: —朱利安·辛普森
- en: You'll find other problems that you didn't have originally because you probably
    weren't succeeding anyway. I've only just tried to phrase this now, but maybe
    DevOps is the response to solving problems that you have when you're successful
    in the earlier stages of your project's evolution?
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现一些原本没有的问题，因为你可能反正没能成功过。我现在才试着表述这个问题，但也许DevOps是应对在项目早期成功阶段时你遇到的那些问题的一种回应？
- en: If you're getting better at writing both the correct and the most appropriate
    software at the time and deploying it, suddenly you have all these other operational
    considerations to think of. To me, if you have a deployment problem, it's probably
    a good problem to have.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你变得更擅长编写既正确又最适合当下的软件下载并进行部署，你突然需要考虑所有这些其他的操作性问题。对我来说，如果你有部署问题，可能反而是个好问题。
- en: '**Viktor Farcic**: Exactly, and it changes if part of your pipeline suddenly
    becomes much faster. Then, as you said, you encounter the problem on the next
    page.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：没错，如果你的流水线的某一部分突然变得更快了，那么，正如你所说，你会遇到下一页的问题。'
- en: '**Julian Simpson**: I''m a big fan of the theory of constraints, so that absolutely
    rings true. I believe that you need to optimize across the entire value chain
    rather than optimizing based on cost, which is what a lot of projects do.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我是约束理论的忠实粉丝，所以这绝对是符合实际的。我相信你需要在整个价值链上进行优化，而不是仅仅基于成本进行优化，这是很多项目所做的事情。'
- en: '**Viktor Farcic**: Cost per department, to make it even more complicated.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：按部门的成本，事情变得更复杂了。'
- en: '**Julian Simpson**: Exactly. I''ve worked on several projects for consultancies
    where the departmental politics didn''t come into it so much as just the day rates
    of all these developers, which were obvious to the project managers. So, they
    would optimize for developer utilization rather than anything else.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：完全正确。我曾在多个咨询项目中工作，在这些项目中，部门政治不像是影响因素，反而是所有这些开发者的日费，这是项目经理能直接看到的。所以，他们会优化开发者的利用率，而不是其他方面。'
- en: '**Viktor Farcic**: Something like an optimization Excel sheet, when you change
    two numbers and then suddenly, you''re more optimized.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：就像是一个优化的Excel表格，当你改变了两个数字，突然之间，你就变得更加优化了。'
- en: '**Julian Simpson**: I saw that on projects where it was entirely feasible for
    the developers to run all the acceptance tests on their development systems. I
    think they should have been doing it at the time because we had a huge Continuous
    Integration (CI) and QA bottleneck, so the sensible thing to do would be for each
    pair to run those tests before they pushed, thereby easing up on the bottleneck
    later. This was a very hard message to get across to project managers.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我发现，在一些项目中，开发人员完全有可能在他们的开发系统上运行所有的验收测试。我认为他们当时应该做这个，因为我们有一个巨大的持续集成（CI）和
    QA 瓶颈，所以最合理的做法是每对开发人员在提交代码之前先运行这些测试，从而缓解瓶颈。这个信息对于项目经理来说是非常难传达的。'
- en: '**Viktor Farcic**: I recently discovered that you go by the name of The Build
    Doctor? How did you get that name?'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我最近发现你被称为 The Build Doctor？你是怎么得到这个名字的？'
- en: '**Julian Simpson**: I had a little niche between 2004 and 2008 where I would
    fix people''s Ant builds. At the time, I was very proficient with Apache Ant,
    to the point that I''d written an article in a book about refactoring Ant build
    files. The tool isn''t so popular now, but back then I was wondering if I was
    going to move on from consultancy, or if I would just build my own personal brand.
    I thought, okay, build doctor – I already fix this stuff for a living, so I''ll
    build a brand based on that. But right now, it''s kind of on hold.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：在 2004 到 2008 年之间，我有一个小的专业领域，专门为别人修复 Ant 构建。在那个时候，我对 Apache
    Ant 非常熟练，甚至在一本书里写了一篇关于重构 Ant 构建文件的文章。现在这个工具不再那么流行了，但在那时，我曾想过自己是否会从咨询工作转型，或者是否只是建立我自己的个人品牌。我想，好吧，Build
    Doctor——我已经靠修复这些东西为生了，所以我就基于这个建立品牌。但现在，这个品牌的事情暂时搁置了。'
- en: '**Viktor Farcic**: What are you up to now?'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你现在在做什么？'
- en: '**Julian Simpson**: I''ve been working for Neo4j, formerly known as Neo Technology,
    since 2012\. Within the company, I''ve worked in the engineering, marketing, and
    IT departments. I''ve found myself doing everything from working on the product
    to deploying our full-stack website on Amazon.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：自 2012 年起，我一直在为 Neo4j（前身为 Neo Technology）工作。在公司内部，我曾在工程、市场和
    IT 部门工作过。我发现自己做过从产品开发到在 Amazon 上部署我们全栈网站的一切工作。'
- en: Right now, I'm working on internal IT projects and writing internal apps. In
    fact, this morning I've been writing scripts to delete Dropbox accounts.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我在做内部 IT 项目并编写内部应用程序。实际上，今天早上我一直在编写删除 Dropbox 账户的脚本。
- en: '**Viktor Farcic**: So, what makes Neo4j such a great company?'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，是什么让 Neo4j 成为一家伟大的公司？'
- en: '**Julian Simpson**: Simply put, the people.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：简而言之，就是人。'
- en: '**Viktor Farcic**: Could you elaborate on that? Because, relating this back
    to your field of work and the concept of DevOps, in your opinion, is there such
    a thing as a DevOps team?'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你能详细说明一下吗？因为如果把这个和你的工作领域以及 DevOps 的概念联系起来，你认为真有 DevOps 团队这种东西吗？'
- en: '**Julian Simpson**: When I started at Neo4j, I worked with the Swedish team.
    As a company, we tended to optimize for good people and good attitudes, and we''ve
    had an almost unconsciously very good selection of people in that way.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：当我加入 Neo4j 时，我与瑞典团队合作。作为一家公司，我们倾向于优化优秀的人才和良好的态度，我们几乎不知不觉地在这方面有了一批非常优秀的成员。'
- en: DevOps teams, DevOps problems, and configuration management teams
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps 团队、DevOps 问题和配置管理团队
- en: But can we have something called a DevOps team? I don't believe so. You might
    spin up a team to solve a DevOps problem, but then I wouldn't even say we specifically
    have a DevOps problem. I'd say you just have a problem. My original thinking about
    the movement from 2009 onward, when the name was coined, was that it would be
    about collaboration and perhaps the tools would sort of come out of that collaboration.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，我们能不能有一个叫做 DevOps 团队的东西呢？我不这么认为。你可能会成立一个团队来解决 DevOps 问题，但我甚至不认为我们特别有一个 DevOps
    问题。我会说你只是有一个问题。从 2009 年起，那个名字被创造出来时，我对这一运动的最初想法是，它应该是关于协作的，也许工具会在这种协作中自然产生。
- en: '"Can we have something called a DevOps team? I don''t believe so."'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们能不能有一个叫做 DevOps 团队的东西呢？我不这么认为。"'
- en: —Julian Simpson
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: —Julian Simpson
- en: I expected that a configuration management tool would be adopted by developers,
    so it was possible for a systems person and a developer to collaborate, but I
    didn't expect that a bunch of classic systems administration teams would just
    rebrand to DevOps because there were similarities with some of the tools. I didn't
    expect to have what I'd traditionally think of as a configuration management team
    become a DevOps team. To a certain extent, I think the only difference is with
    outsourced platforms now because we've always had someone running what you would
    call a platform.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我原本期待开发者会采用配置管理工具，这样系统人员和开发人员可以进行合作，但我没想到一堆传统的系统管理团队会因为某些工具的相似性而将自己重新品牌化为 DevOps。我没想到传统意义上的配置管理团队会变成
    DevOps 团队。在某种程度上，我认为唯一的区别现在是在外包平台上，因为我们一直都有一个人在管理你所说的平台。
- en: '**Viktor Farcic**: That''s what confuses me. On the one hand, hardly anybody
    disagrees that DevOps is mostly about collaboration. But then you have a huge
    number of DevOps teams, which to me sounds completely contradictory. If you create
    another team, you''re creating another silo that will probably not actually help
    in collaboration at all.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：这让我感到困惑。一方面，几乎没有人反对 DevOps 主要是关于协作的观点。但另一方面，你有大量的 DevOps 团队，这对我来说完全是矛盾的。如果你创建了另一个团队，你实际上是在创建另一个孤岛，这可能根本不会帮助协作。'
- en: '**Julian Simpson**: I don''t see much difference between what you call a DevOps
    team now and what a configuration management team used to be. The only difference
    is that the DevOps team today takes on what a systems or a Unix administration
    team might have done back in the day: the same basic structure with a new name
    for the team in the middle.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我看不出你现在所称的 DevOps 团队和过去的配置管理团队有什么区别。唯一的区别是，今天的 DevOps 团队承担了过去系统或
    Unix 管理团队可能做的事情：相同的基本结构，只是团队中间换了个新名字。'
- en: If you're going to have that DevOps team, I would expect that you'd be able
    to take the developers and operations teams from the outside and rotate them through
    with the goal of downsizing or disbanding that team or just replacing it with
    one or two people who are responsible for running the infrastructure that your
    pipelines run on.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你要有那个 DevOps 团队，我希望你能把外部的开发和运维团队带进来，并进行轮换，目标是缩小规模或解散该团队，或者只用一两个人来负责管理你的管道运行所依赖的基础设施。
- en: '**Viktor Farcic**: My theory, judging from the companies I''ve visited, is
    that the DevOps team is the team who was the fastest to change the title.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：根据我访问过的公司，我的理论是，DevOps 团队是那些最快改动职位名称的团队。'
- en: '**Julian Simpson**: It becomes a branding or a status thing rather than a useful
    exercise in collaboration.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：这变成了一种品牌或地位的象征，而不是一种有用的协作练习。'
- en: '**Viktor Farcic**: I''ve worked for a software company, and they don''t help
    either. If you go to a conference, every single tool from 10 years ago is now
    a DevOps tool. They''re all saying that if you buy this tool, you''re going to
    become DevOps-certified.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我曾在一家软件公司工作，他们也没有提供帮助。如果你去参加一个会议，十年前的每一个工具现在都变成了 DevOps 工具。他们都在说，如果你购买这个工具，你就会获得
    DevOps 认证。'
- en: '**Julian Simpson**: Absolutely, and the incentive to do so is too strong. I
    even suggested that CITCON rebrand and at least talk about DevOps more, because
    I see them as one of these sorts of prototypical conferences.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：完全正确，而且这样做的激励机制太强了。我甚至建议 CITCON 重新品牌化，至少更多地讨论 DevOps，因为我认为他们是这种典型会议的一种。'
- en: One of the inspirations for Jez Humble and Dave Farley's book, *Continuous Delivery*,
    was that we had a DevOps team effectively via eight people, including myself,
    Chris Read, Dan North, Tim Harding, and several others. Our job was just to bridge
    the gap between a bunch of contractors on day rates, consultants, and the operations
    team, who were probably too overloaded to take much of that on. We're either paying
    back technical debt or working on how to get the code from CI/CD back into production,
    while passing all of the risk management and internal controls that they needed.
    That did disband; it scaled up to solve a problem, and then once most of those
    problems were solved, it became just me for a while, before even I left.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**Jez Humble**和**Dave Farley**的书《*持续交付*》的灵感之一，来源于我们有一个由八人组成的DevOps团队，包括我自己、Chris
    Read、Dan North、Tim Harding和其他几位。我们的工作就是在一群按日计费的承包商、顾问和可能因为工作负载过重而无法承担太多的运维团队之间架起桥梁。我们的任务是清偿技术债务，或是处理如何将代码从CI/CD重新部署到生产环境中，同时通过他们所需的所有风险管理和内部控制。这一团队最终解散了，它是为了应对一个问题而扩展的，一旦大部分问题解决后，最终变成了我一个人处理，直到我离开。'
- en: '"It [DevOps] becomes a branding or a status thing rather than a useful exercise
    in collaboration."'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: “它[DevOps]变成了一种品牌或地位的象征，而不是一种有用的协作练习。”
- en: —Julian Simpson
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: —Julian Simpson
- en: '**Viktor Farcic**: Almost everybody gives me a different explanation, though
    I must say that I liked yours the most. I read in one of your blog posts that
    the full definition of DevOps is common sense. So, if DevOps is a theory and had
    existed, say, since the dawn of time, and we know there''s a need for operations
    and development to collaborate in one way or another, why do you think DevOps
    became a thing so relatively recently?'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：几乎每个人都给我不同的解释，尽管我必须说，我最喜欢你的解释。我在你的一篇博客中读到，DevOps的完整定义就是常识。那么，如果DevOps是一个理论，且早在古代就存在，我们知道开发和运维以某种方式需要协作，为什么你认为DevOps在最近才成为一件事呢？'
- en: '**Julian Simpson**: I think that DevOps has always been a thing. I found it
    interesting that when I used to work at ThoughtWorks, Martin Fowler and Rebecca
    Parsons, their CTO, had both worked as system administrators at universities.
    I think DevOps used to be just a thing that someone on the team did. The developers
    that I used to work with were super competent at whatever Unix system you''d be
    deploying.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我认为DevOps一直都是存在的。我发现有趣的是，当我曾在ThoughtWorks工作时，**Martin Fowler**和他们的CTO
    **Rebecca Parsons** 都曾在大学做过系统管理员。我认为DevOps以前只是团队中的某个人在做的事。我以前合作过的开发人员在任何Unix系统上部署时都非常有能力。'
- en: A lot of my experience is very geared toward Unix. I did a talk the other day
    at a company that was mostly .NET, and while I'm not sure my message really got
    across because their problems are slightly different, I think someone will always
    solve those problems. But then I think with the dot-com and the Y2K boom, we literally
    forgot because, remember, Linux on the desktop wasn't really a thing.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我的很多经验都非常偏向于Unix。前几天我在一个以.NET为主的公司做了一个演讲，虽然我不确定我的信息是否真的传达到了，因为他们的问题略有不同，但我认为总会有人解决这些问题。但我认为，随着互联网泡沫和千年虫问题的兴起，我们真的忘记了，因为记得吗，Linux桌面版当时并不算是一个热门的事物。
- en: You still had a lot of people deploying on to Unix, and I don't think macOS
    was very popular in development shops at all, so there was barely any command
    line being done. My experience, at least, is that everyone wanted to be given
    a Windows machine and an IDE and be told to get some code delivered, and they
    didn't even have the tools to work on the problem in a different OS. I believe
    a lot of my conflict with developers stemmed from the fact that they pretty much
    just needed Java. I think the marketing of the "compile once and run everywhere"
    mantra contributed to the problem as well. Microsoft's "visual everything" mantra
    also contributed to a lack of understanding of what was going on.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你仍然有很多人部署到Unix上，我认为macOS在开发领域并不流行，所以几乎没有人在使用命令行。至少我的经验是，每个人都希望获得一台Windows机器和一个IDE，并被告知交付一些代码，他们甚至没有工具来在不同的操作系统上解决问题。我认为，我与开发人员之间的冲突很大程度上源于他们几乎只需要Java。我认为“编译一次，到处运行”的口号的营销也加剧了这个问题。微软的“视觉化一切”的口号也让人们对正在发生的事情缺乏理解。
- en: You had this incredible demand for developers to be solving important problems
    such as, "Will airliners fall out of the sky on the turn of the millennium?" or
    less important problems like Pets.com. Lots of inexperienced developers joined
    the industry and simply didn't have the skills to work on those problems, so they
    tended to be thrown over the fence even more frequently to an operations team.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到开发者有着解决重要问题的巨大需求，比如“千年虫问题是否会让客机从天上掉下来？”或者像Pets.com这样的不太重要的问题。很多没有经验的开发者进入了这个行业，根本没有能力解决这些问题，因此他们更频繁地被推给运维团队处理。
- en: Conveniently, the Y2K and dot-com boom era ended after I started working on
    software projects. I used to work tech support, so I may be totally ignorant of
    a couple of decades before that, but my feeling is that we made it very bad in
    the early noughties.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 恰好在我开始从事软件项目工作后，Y2K和互联网泡沫时期结束了。我曾做过技术支持，所以对之前的几十年可能一无所知，但我的感觉是，我们在21世纪初搞砸了很多事。
- en: '**Viktor Farcic**: Back when everybody became a programmer.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：那个时候每个人都成了程序员。'
- en: '**Julian Simpson**: Exactly! We always joked about those people who would go
    back to selling life insurance once the dot-com boom was over. For them, it was
    possible to cram in some certificates and then start contracting for a daily rate
    that wasn''t huge but was a huge advantage over a lot of normal jobs, such as
    selling life insurance.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：没错！我们总是开玩笑说，那些在互联网泡沫破灭后会回去卖人寿保险的人。对他们来说，获得一些证书后，就可以开始做短期合同工作，虽然日薪不高，但比很多普通工作（比如卖人寿保险）要有很大优势。'
- en: '**Viktor Farcic**: Wasn''t that also the era when software vendors started
    being aggressive with the UI approach to things? I mean, you''ve got Adobe Dreamweaver,
    where you can drag and drop things and suddenly you''ve created a web page. You
    also have VSB, and Oracle ESB where you can also drag, drop, and create all the
    iterations. I hear that it''s part of the "anybody can do this" marketing idea.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：那不也是软件供应商开始对UI方式进行激进推进的时代吗？我的意思是，你有Adobe Dreamweaver，可以拖放东西，突然间就创建了一个网页。你还有VSB和Oracle
    ESB，你也可以拖放并创建所有迭代。我听说这也是“任何人都能做”的营销理念的一部分。'
- en: '**Julian Simpson**: That was the point I was making about Microsoft''s marketing
    around branding everything visually. I worked at one company where there were
    a lot of dominant developers, and we were using Perforce. It was quite complicated
    to roll back and commit in Perforce, and in the end, the best thing to do would
    have been to write a script. I would then put the script together for you, which
    you could just run and revert that commit.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：这是我关于微软在品牌营销方面视觉化一切的观点。我曾在一个公司工作，那里的开发者很强势，我们使用Perforce。回滚和提交在Perforce中相当复杂，最终，最好的做法是写一个脚本。我会为你编写这个脚本，你只需运行它，就可以还原那个提交。'
- en: The person I was working for said no because he believed everything should be
    visual. This was a firm belief. If he couldn't click on a button and drop down
    a bit of text then it was too much and went against their beliefs. Microsoft wanted
    to encourage that; they wanted to differentiate against Unix. This all took place
    during the GPL-is-viral days, so I believe that selling products with GUIs didn't
    help one bit.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我为之工作的那个人不同意，因为他认为一切都应该是可视化的。这是他的坚定信念。如果他不能点击一个按钮，拉出一段文本，那么对他们来说就太过复杂，违背了他们的信念。微软希望鼓励这种方式，他们想要和Unix区分开来。这一切发生在GPL病毒式传播的时代，所以我认为销售带有GUI的产品并没有任何帮助。
- en: I have found that's the litmus test for somebody if you're trying to work out
    where their skills lie. If they don't have a GUI to nudge them in the right place,
    it's very interesting to see how they solve a problem.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现这是判断一个人技能的试金石。如果他们没有GUI来引导他们到正确的地方，那么观察他们如何解决问题就非常有趣。
- en: '"I think there is a realization that the GUI phase was a bit wrong, and I think
    that encourages developers to explore the command line more."'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: “我认为现在已经意识到GUI阶段有些错了，这也鼓励开发者更多地探索命令行。”
- en: —Julian Simpson
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: —朱利安·辛普森
- en: '**Viktor Farcic**: Do you think that''s still a thing? I have the impression
    that the industry, especially from 2017, is moving away from all UI-based things.
    If you look at Docker and Kubernetes, it''s completely command line. Everything
    is moving back toward Unix basics.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：你认为这还成立吗？我有一种印象，尤其是从2017年起，整个行业都在远离所有基于UI的东西。如果你看看Docker和Kubernetes，它们完全是命令行操作。一切都在回归Unix的基础。'
- en: '**Julian Simpson**: I haven''t spent any time playing with the new version
    of Windows, but the fact that they have Windows PowerShell Core shows they''ve
    changed. I was really, really surprised when I saw Scott Hanselman deploy to Azure
    with a `git push` a few years ago. I think there is a realization that the GUI
    phase was a bit wrong, and I think that encourages developers to explore the command
    line more, which has changed my job. My job used to be understanding how build
    scripts worked and how the Unix or Linux production environment worked, which
    I think a lot of people are just getting now.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我没有花时间去玩新版的Windows，但他们有Windows PowerShell Core这一事实表明他们发生了变化。几年前，当我看到Scott
    Hanselman通过`git push`将应用部署到Azure时，我真的非常惊讶。我认为人们已经意识到图形界面阶段有些错误，这也鼓励开发者更多地探索命令行，这改变了我的工作。以前我的工作是理解构建脚本是如何工作的，以及Unix或Linux生产环境是如何运作的，我认为很多人现在才开始明白这些。'
- en: '**Viktor Farcic**: When you mentioned Unix and Linux environments, do you think
    that we''re finally seeing some changes there? It''s one of the areas that hasn''t
    changed in a while, for better or worse.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：当你提到Unix和Linux环境时，你认为我们终于看到了那里的一些变化吗？这是一个一段时间以来没有变化的领域，无论好坏。'
- en: The evolution of containers
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 容器的演变
- en: '**Julian Simpson**: I think containers have changed a lot because you have
    this constant migration of value up the stack.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我认为容器已经发生了很大的变化，因为你有了这个不断向上迁移的价值堆栈。'
- en: '**Viktor Farcic**: What do you mean by that?'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你是什么意思？'
- en: '**Julian Simpson**: We used to keep this business logic and store procedures
    in the database, but it moved into code running above the database. I think we''re
    a long way from seeing where the container thing is going to end up, but it seems
    like that''s the biggest change. No one''s interested in the host OS anymore.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我们曾经把业务逻辑和存储过程保存在数据库中，但它已经转移到数据库上方的代码中。我认为我们距离看到容器最终走向哪里还有很长的路要走，但看起来这是最大的变化。现在没有人再关心主机操作系统了。'
- en: '**Viktor Farcic**: You mean as if it''s not the lowest denominator anymore?'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你的意思是，它不再是最低要求了吗？'
- en: '**Julian Simpson**: Yeah, I think in some ways it''s incredibly helpful that
    whether you''re looking at containers or platform as a service, people can deliver
    code using them. I haven''t been that interested in the gory details of container
    runtimes; I''m just happy that if I want to roll out something, I can deploy it on
    ECS, or whatever container runtime as a service exists.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：是的，我认为在某些方面，它非常有帮助，无论你是在看容器还是平台即服务，人们都可以通过它们来交付代码。我对容器运行时的具体细节不是很感兴趣；我只是很高兴，如果我想推出某些东西，我可以将其部署到ECS，或者任何现有的容器运行时作为服务。'
- en: '**Viktor Farcic**: I think CloudBees have one, don''t they?'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我认为CloudBees有一个，不是吗？'
- en: '**Julian Simpson**: Yes, at CloudBees, it''s mostly Jenkins-related, but we
    are now kind of going 100% Kubernetes.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：是的，在CloudBees，我们主要是与Jenkins相关的，但我们现在基本上是100%转向Kubernetes。'
- en: 'I think in a way, containers are fulfilling the promise Java gave a long time
    ago: run anywhere. Microsoft Windows is still shaky in this regard, but it''s
    getting there as well.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为在某种程度上，容器正在实现Java很久以前就承诺的目标：随处运行。微软Windows在这方面仍然有些不稳定，但它也在逐步改善。
- en: I also think it helps that no container vendor told anybody that they would
    be able to run containers on silicon in the way they promised in the 1990s. As
    you said, they didn't come through with those. I think you're right that my job
    used not just to be running Jenkins or whatever other CI server the project had
    chosen to use, but also configuring the environments for that. Now you can say
    that every build runs in a container. Well, yes, a lot of those problems have
    just vanished. If you can build a container to represent a production runtime
    with a blank wall, well, perfect.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我也认为，容器供应商没有告诉任何人他们能够像1990年代承诺的那样在硅芯片上运行容器，这一点有所帮助。正如你所说，他们没有兑现这些承诺。我认为你是对的，以前我的工作不仅仅是运行Jenkins或项目选择的其他CI服务器，还要为它们配置环境。现在你可以说每次构建都在一个容器中运行。是的，很多问题已经消失了。如果你能够构建一个容器来代表一个生产运行时环境，并且是一个空白墙，那就完美了。
- en: Looking into the future
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展望未来
- en: '**Viktor Farcic**: Exactly. I hate this next question because I get asked it
    all the time, but I''m going to ask you anyway: where do you see the future?'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：没错。我讨厌下一个问题，因为我一直被问到这个问题，但我还是要问你：你怎么看未来的发展？'
- en: '**Julian Simpson**: I honestly don''t have an answer for that. I think the
    public cloud is one area to keep an eye on. The benefit of such a massive arms
    race taking place between Amazon, Microsoft, Ali Cloud, IBM, and Google Cloud,
    is that for us developers who just want to deliver stuff, our choices are going
    to be amazing.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：老实说，我没有答案。我认为公共云是一个值得关注的领域。亚马逊、微软、阿里云、IBM 和谷歌云之间进行如此大规模的军备竞赛，对于我们这些只想交付内容的开发者来说，选择将变得非常丰富。'
- en: '"We all know people who show up to their IT job and do what they''re asked
    to do and then go home again. I think there is a huge risk to their careers when
    the inevitable automation takes place."'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: “我们都认识一些人，他们每天上班做自己被要求做的事情，然后又回家。我认为当不可避免的自动化发生时，这些人将面临巨大的职业风险。”
- en: —Julian Simpson
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: —Julian Simpson
- en: I think the way that Amazon, in particular, is doing a lot around networking,
    so that I can extend an Amazon VPC bridge with my local network if I need to,
    will be interesting. I should probably be able to outsource an awful lot of IT
    stuff to Amazon and just focus on writing things that matter, and then obviously
    competing with Amazon when they write it too.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为，尤其是亚马逊在网络方面做的很多工作是很有趣的，这样我就能在需要时把我的本地网络与 Amazon VPC 桥接。我可能可以把大量的 IT 工作外包给亚马逊，专注于编写有意义的内容，当然，当亚马逊也写这些内容时，我也要和它竞争。
- en: '**Viktor Farcic**: When I asked a friend of mine a similar question, he also
    started with the cloud. His theory is that having incompetent people that do the
    same thing every single day will mean that they''ll eventually lose their jobs
    because of Amazon and Azure. It will be kind of a great filter of people who do
    valuable jobs and people who just do "something."'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：当我问我的一个朋友类似的问题时，他也从云计算开始了。他的理论是，让不称职的人做每天重复的工作，最终他们会因为亚马逊和Azure而失业。这将成为一个筛选机制，区分出那些做有价值工作的和只是做“某些事情”的人。'
- en: '**Julian Simpson**: I can see that quite easily. We all know people who show
    up to their IT job and do what they''re asked to do and then go home again. I
    think there is a huge risk to their careers when the inevitable automation takes
    place. Some people will literally have their careers automated away. The adage
    "go away, or we''ll replace you with a very small shell script" will never be
    truer.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我能很容易理解这一点。我们都认识一些人，他们每天上班做自己被要求做的事情，然后又回家。我认为当不可避免的自动化发生时，这些人将面临巨大的职业风险。有些人的职业生涯将会被自动化“替代”。那句“走开，否则我们用一个很小的
    Shell 脚本替代你”将再也不会更贴切了。'
- en: '**Viktor Farcic**: Exactly. The other thing that confuses me is that I heard
    the same theory about how people will be replaced with shell script 15 years ago,
    and it''s still somehow not happening.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：没错。另一个让我困惑的事情是，我15年前就听到过类似的理论，认为人们会被 Shell 脚本取代，但至今似乎还没有发生。'
- en: '**Julian Simpson**: I think what''s different now is that the shell script
    will just be calling the AWS CLI.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我认为现在不同之处在于，Shell 脚本将只是调用 AWS CLI。'
- en: Addressing vendor lock-in
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决供应商锁定问题
- en: '**Viktor Farcic**: Are you concerned at all with vendor lock-in? The idea that
    companies can basically take over and lock you in forever and ever?'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你是否担心供应商锁定问题？即公司基本上能够接管并把你永远锁定在它们的平台上？'
- en: '**Julian Simpson**: I think I''m concerned. I guess as these companies try
    to differentiate all their services, there will be an inevitable kind of lock-in
    effect from that. It''s obviously in everybody''s interest to keep you locked
    into their platforms. But if they try to sell the same vanilla product, then it''s
    a race to the bottom.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我觉得我有些担忧。我猜随着这些公司试图区分它们的所有服务，必然会产生某种程度的锁定效应。显然，保持你被锁定在它们的平台上符合所有人的利益。但如果它们试图销售相同的基础产品，那就成了你追我赶的竞争，最终会陷入恶性循环。'
- en: As a result, these companies will try to differentiate things. I mean, if I
    were a CTO of a company that relied heavily on one cloud platform, I'd be looking
    to mitigate against that risk; for example, possibly by just running a percentage
    of my workload elsewhere so that I have the skills to manage a different platform.
    I think the problem with being able to outsource everything is that you also outsource
    your skills atrophy, as a person and as an organization.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，这些公司会尽力区分他们的产品。我是说，如果我是一家严重依赖某一云平台的公司的 CTO，我会考虑减轻这种风险；例如，可能将部分工作负载转移到其他地方，这样我就能具备管理不同平台的技能。我认为，能够外包一切的一个问题是，你也在外包你的技能萎缩，无论是作为个人还是作为一个组织。
- en: '**Viktor Farcic**: That shouldn''t be much different than the problems we''ve
    had with mainframes or the problems we had when everybody was outsourcing everything.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：这应该与我们在大型主机上遇到的问题，或者每个人都将所有事情外包时遇到的问题没有太大区别吧。'
- en: But as I was saying, on the one hand, I hear a lot of concerns about vendor
    lock-in, but on the other hand, I'm not sure that it's any different than when
    companies were outsourcing everything before, or when they were running mainframes,
    which were all vendor lock-ins. Somehow we, or at least some of us, still managed
    to get through those issues.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 但正如我所说，一方面，我听到了很多关于厂商锁定的担忧，但另一方面，我不确定这与公司以前外包所有事情时，或者运行大型主机时没有什么不同，那些也是厂商锁定。以某种方式，我们，或者至少我们中的一些人，仍然设法克服了那些问题。
- en: '**Julian Simpson**: I don''t think it''s going to be as bad as one of the historical
    vendor lock-ins of the past, such as the Bell Telephone Company, something that
    had to be broken up as a monopoly. I think it''s going to be the price you pay
    for taking the convenience of a vendor''s offerings.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我认为它不会像过去历史上的一些厂商锁定那样糟糕，比如贝尔电话公司，这样的公司曾因垄断被拆分。我认为这将是你接受厂商便利所付出的代价。'
- en: '**Viktor Farcic**: That''s very interesting.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：这非常有趣。'
- en: '**Julian Simpson**: If you just say that it''s most convenient to run on Azure
    and then you only develop those skills in-house, then yes, I think it''ll be very
    easy to just default to lock-in, and that could lead to an expensive exit. I think
    it''s probably a net positive that you don''t have to build platforms anymore.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：如果你只是说在Azure上运行最方便，然后你只在公司内部培养这些技能，那么是的，我认为很容易就会陷入厂商锁定，而这可能导致昂贵的退出。我认为，不再需要自己构建平台，可能是一个净正面因素。'
- en: '"If I were a CTO of a company that relied heavily on one cloud platform, I''d
    be looking to mitigate against that risk."'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: “如果我是一个依赖单一云平台的公司的CTO，我会考虑采取措施来减轻这种风险。”
- en: —Julian Simpson
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: —朱利安·辛普森
- en: I've worked in several jobs where I had to install SPARC systems in offices,
    and it's annoying. I think for anyone who wants to deliver software or services,
    it's probably better that they don't have to employ someone to move servers around
    the office, rack them, then install them and try to make them work. That was the
    thing I did in the 1990s, and I think that what we have now is certainly much
    better. I think there's incredible value in being able to rent your IT services
    by the minute.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾在几个工作中需要在办公室安装SPARC系统，这非常麻烦。我认为，对于任何希望提供软件或服务的人来说，最好是他们不需要雇佣人手来在办公室里搬动服务器、将其架设起来，然后安装并试图让它们工作。那是我在1990年代做的事情，我认为我们现在拥有的技术显然要好得多。我认为，按分钟租用IT服务具有不可思议的价值。
- en: '**Viktor Farcic**: If you exclude the big companies such as Netflix, Google,
    and Apple, what do you think about building a private cloud? Does it make sense
    and is it a viable option?'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：如果你排除Netflix、Google和Apple这些大公司，你怎么看构建私有云？它是否有意义，且是可行的选择？'
- en: '**Julian Simpson**: I would probably bet against my own ability to deliver
    a private cloud. I''m sure I could do that, but trying to keep that secure in
    this kind of security threat environment is probably a much harder challenge than
    it ever was. I am amazed at some of the security issues we''ve seen over the last
    few years.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我可能会对自己是否能交付一个私有云持怀疑态度。我确信我可以做到，但在这种安全威胁环境下，试图保持私有云的安全，可能比以往任何时候都更具挑战性。过去几年我们看到的一些安全问题让我感到惊讶。'
- en: '**Viktor Farcic**: Do you think we have more security problems or are those
    problems just more visible now?'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：你认为我们现在有更多的安全问题，还是这些问题只是变得更明显了？'
- en: '**Julian Simpson**: I think they''re more visible today, and I think that security
    research seems to follow the trends as well. Once someone discovers one vulnerability,
    then there are more eyeballs looking for similar vulnerabilities. They seem to
    come out in waves. But I think as things become more connected, then security
    is a concern that wasn''t as visible as before. The idea that your corporate network
    isn''t a safe place wasn''t an assumption we had 15 years ago.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**朱利安·辛普森**：我认为它们今天变得更加显眼了，我也认为安全研究似乎也跟随这些趋势。一旦有人发现一个漏洞，便会有更多的目光去寻找类似的漏洞。它们似乎是成波出现的。但我认为随着事物变得更加互联，安全问题变得不再像以前那样不显眼。十五年前我们并没有假设企业网络不是一个安全的地方。'
- en: Culture and collaboration
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文化与协作
- en: '**Viktor Farcic**: That''s a valid point. In closing, do you have any parting
    ideas and words, or is there anything that comes to mind that I forgot to ask?'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这是一个有效的观点。最后，你有没有什么想说的想法或者是我遗漏的什么问题？'
- en: '**Julian Simpson**: No, I think we''ve covered what I think is most important,
    which is the culture. I''m super pleased that we haven''t really discussed automation
    or any of the tools, except as examples of something else. To me, DevOps is all
    about culture and collaboration.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：不，我认为我们已经讨论了我认为最重要的内容，那就是文化。我非常高兴我们并没有真正讨论自动化或任何工具，除了作为其他事物的例子。对我来说，DevOps
    完全是关于文化和协作的。'
- en: '**Viktor Farcic**: Does that mean the culture shapes the tools or do tools
    shape the culture, or both? I mean, can you adopt one without the other?'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那是否意味着文化塑造了工具，还是工具塑造了文化，或者两者都有？我的意思是，你能单独采用其中之一吗？'
- en: '**Julian Simpson**: My guess is no, because people''s expectations must change.
    I think the tools they use and the culture in which those tools are used are tightly
    linked. If you could change the culture, then the tools might change consequently,
    or vice versa. But I think it''s more than that.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：我猜不是，因为人们的期望必须发生变化。我认为他们使用的工具和工具使用的文化是紧密相连的。如果你能改变文化，那么工具可能会随之改变，反之亦然。但我认为事情不仅仅是这样。'
- en: Lindsay Holmwood did a talk at DevOpsDays 2016 in Wellington, New Zealand, where
    he pointed out that culture is kind of invisible and what you really have are
    artifacts that kind of tell you about culture. Archaeologists would dig something
    up and then make some assumption, and it's the same here. I think we see things
    every day that tell us what our company culture is, and maybe the tool is just
    an artifact of the culture.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Lindsay Holmwood 在 2016 年新西兰惠灵顿的 DevOpsDays 上做过一个演讲，他指出文化是有些隐形的，实际上你看到的都是一些物件，它们能告诉你文化的状况。考古学家会挖掘出某些东西，然后做出假设，实际上这里也是一样。我认为我们每天都能看到一些东西，它们能告诉我们公司的文化，或许工具仅仅是文化的一个物件。
- en: '"To me, DevOps is all about culture and collaboration."'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: “对我来说，DevOps 完全是关于文化和协作的。”
- en: —Julian Simpson
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: —Julian Simpson
- en: '**Viktor Farcic**: I haven''t heard that one before, but I love it.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我以前没听过这个，但我喜欢这个说法。'
- en: '**Julian Simpson**: Yeah. This is entirely stolen from Lindsay, so it''ll be
    great if you talk to him. If your company has a need for massive amounts of control,
    then you''re probably not going to go with distributed version control systems,
    or you probably want to use some rational product for capturing requirements.
    Even the phrase "capturing requirements" probably has some kind of cultural impact.
    I guess my parting words would be that I think tools possibly tell you what your
    culture is.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**Julian Simpson**：是的。这完全是从 Lindsay 那里借来的，如果你和他聊一聊会很棒。如果你的公司需要大量的控制，那么你可能不会选择分布式版本控制系统，或者你可能想使用一些合理的产品来捕捉需求。甚至“捕捉需求”这个词可能也有某种文化影响。我想我最后想说的是，我认为工具可能会告诉你你的文化是什么。'
- en: '**Viktor Farcic**: I love it. I really love it.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我喜欢这个。我真的很喜欢这个。'
