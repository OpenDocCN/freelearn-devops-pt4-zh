- en: Introducing Damon Edwards
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍达蒙·爱德华兹
- en: When Damon Edwards founded Rundeck, Inc., he helped create a platform that transformed
    thousands of global IT operations by enabling them to run more efficiently and
    scale much faster, all while maintaining security. These are hallmarks of the
    DevOps journey. You can follow Damon on Twitter at `@damonedwards`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当达蒙·爱德华兹创办Rundeck公司时，他帮助创建了一个平台，改变了全球成千上万的IT运维，使其能够更加高效地运行并快速扩展，同时保持安全性。这些都是DevOps之旅的标志。你可以通过Twitter关注达蒙，账号是`@damonedwards`。
- en: The journey to DevOps
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps之旅
- en: '**Viktor Farcic**: I''d like to start with a quick introduction. Can you tell
    us a little about yourself and how you got into DevOps?'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：我想先做个简短的介绍。你能告诉我们一些关于你自己以及你是如何进入DevOps领域的吗？'
- en: '**Damon Edwards**: Between 2005 and 2007, I was a part of a boutique consulting
    organization that focused on what are now called deployment pipelines. Back then,
    web-scale services were still a fairly new idea, but we were experts in configuring
    and deploying applications at scale.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：在2005年到2007年间，我是一个专注于现在称为部署流水线的精品咨询组织的一员。那时候，网络规模的服务仍然是一个相对较新的概念，但我们是配置和部署大规模应用的专家。'
- en: When the industry started to become more cloud-oriented, whether it was virtualized
    in VMware or the nascent AWS EC2, everything became part of the software stack.
    We found that this actually suited us as we mostly came from an operations-heavy
    background. Between 2007 and 2009, it became obvious that scale was no longer
    the issue; the technical aspect of deployment was becoming a solved problem.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当行业开始转向云计算时，无论是在VMware中虚拟化，还是在初期的AWS EC2中，一切都成为了软件栈的一部分。我们发现这实际上非常适合我们，因为我们大多来自于操作密集型背景。在2007年到2009年之间，显然规模已经不再是问题；部署的技术方面已经成为一个被解决的问题。
- en: The challenge, as we were being told by our customers, was they wanted to be
    able to get things done more quickly, moving at a pace where they can learn and
    outpace their competitors. This led us to become accidental Lean consultants,
    with clients saying, "This automation works great, but we've noticed that we're
    not as fast as those other people who have the same automation. Why aren't we
    getting any better while they are?"
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 挑战在于，正如我们的客户所说，他们希望能够更快速地完成任务，以一个能够学习并超越竞争对手的速度前进。这使我们意外地成为了精益咨询顾问，客户说：“这个自动化非常有效，但我们注意到我们没有像那些拥有相同自动化工具的其他人那样快。为什么我们没有变得更好，而他们却变得更快？”
- en: That's what got us into the whole Lean movement. We were looking back, past
    Agile, at things like the Toyota Production System, Deming, Goldratt, and more,
    decoding why one organization gets stuff done, goes faster, and produces things
    of higher quality when other organizations can't. We were self-taught and learned
    a lot through the trial-and-error method as there wasn't much of a body of knowledge
    around applying these techniques across the full development and operations life
    cycle.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们进入精益运动的原因。我们回顾过去，超越了敏捷，研究了丰田生产系统、德明、戈德拉特等内容，解码为什么有些组织能够更高效地完成任务，走得更快，生产出更高质量的东西，而其他组织却做不到。我们是自学成才，通过试错法学到了很多，因为当时并没有太多关于将这些技术应用于整个开发和运维生命周期的知识体系。
- en: '**Viktor Farcic**: From the timeline that you''re talking about, it seems that
    was right at the same time the DevOps movement took off. You must have been at
    ground zero when this whole concept first kicked off.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：从你谈到的时间线来看，这似乎正是DevOps运动起飞的时刻。你们一定是在这个概念刚开始时的最前沿。'
- en: '**Damon Edwards**: I was, along with people like Patrick Debois, John Willis,
    Andrew Shafer, and John Allspaw, right as Patrick lit the DevOps spark by organizing
    the first DevOps Days. In fact, I was the one that sent the email to get Gene
    Kim, known then primarily as the author of *Visible Ops*, to come to the first
    DevOps Days, a conference he had never heard of before.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：我和像帕特里克·德博瓦、约翰·威利斯、安德鲁·谢弗、约翰·奥斯波等人一起，正是在帕特里克组织了第一次DevOps Days时点燃了DevOps的火花。事实上，我是那个发邮件邀请基恩·金（当时主要是《可视化运维》一书的作者）来参加第一次DevOps
    Days会议的人，那时他还没听说过这个会议。'
- en: '"We were especially interested in DevOps in the enterprise because that is
    where DevOps problems—the ones that are really sticky and problematic—really live."'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: “我们尤其对企业中的DevOps感兴趣，因为这是DevOps问题——那些真正棘手且有问题的——真正存在的地方。”
- en: —Damon Edwards
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: —达蒙·爱德华兹
- en: What my colleague Alex Honor and I brought to the conversation was an enterprise-centric,
    operations-first perspective. A lot of people were interested in extending Agile
    all the way through deployment, but instead, we were more interested in operations
    reaching back toward development. We were especially interested in DevOps in the
    enterprise because that is where DevOps problems—the ones that are really sticky
    and problematic—really live.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我和我的同事Alex Honor在对话中提出的是一种以企业为中心、以运营为优先的视角。很多人都对将敏捷方法扩展到整个部署流程感兴趣，但我们更关心的是运营如何向开发方向延伸。我们特别关注企业中的DevOps，因为真正棘手且问题复杂的DevOps问题通常就在这里。
- en: If you're a small organization or even a high-scale, single-purpose-built web
    organization, your DevOps problems all have simple answers. Yes, it takes effort
    and thoughtfulness, but the path forward is clear. All you need to do is get everyone
    into the same room, tell them to stop doing it the old way, and instead do it
    the new way, and your problems will generally go away with straightforward effort.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个小型组织，或者是一个单一用途的大规模网站组织，你的DevOps问题都有简单的解决方案。是的，这需要付出努力和深思熟虑，但前进的道路是明确的。你需要做的就是把每个人召集到同一个房间里，告诉他们停止以旧方式做事，而是采用新方式，你的问题通常会通过直接的努力得到解决。
- en: Now, try that in a large, complex enterprise where you have multiple business
    lines usually gathered—some by acquisition and some by organic growth—over decades.
    You have one of everything of every kind of technology, in addition to having
    a huge spread of people, skills, mindsets, and processes, and it's this large,
    distributed organization with thousands of people across dozens of political structures
    all over the globe where it's difficult to implement system changes. That's a
    whole different animal that's very hard to deal with; those are the big nasty
    DevOps problems.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，试想一下在一个大型、复杂的企业中，你有多个业务线，通常这些业务线是通过收购或有机增长在几十年中聚集起来的。你拥有各种类型技术的一切，并且你有着庞大的人群、技能、思维方式和流程，而这个庞大、分布式的组织遍布全球，跨越数十种政治结构，要在这种环境下实施系统变更是非常困难的。这是一个完全不同的挑战，非常难以应对；这些就是那些棘手的DevOps问题。
- en: '**Viktor Farcic**: You''re now based at Rundeck. Can you talk a bit about your
    work there?'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你现在在Rundeck工作。你能谈一谈你在那里做的工作吗？'
- en: Rundeck, Inc. and DevOps
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Rundeck公司与DevOps
- en: '**Damon Edwards**: Rundeck was born as an open source project in 2010\. It
    filled a gap in the automation toolchain and had what we thought was a modest
    and helpful community, so we kept it going. Around 2014, we discovered there was
    something special going on. The first indicator was that we had all of these large,
    household-name companies calling us for help with Rundeck, and not our consulting
    services. They would say, "We know that you''re consultants, and maybe we''ll
    get to that later, but we''re using Rundeck, and we need help here and there."'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：Rundeck诞生于2010年，最初是作为一个开源项目。它填补了自动化工具链中的空白，并且拥有一个我们认为是谦虚且有益的社区，所以我们一直在推动它的发展。大约在2014年，我们发现有些事情变得特别起来。第一个迹象就是，许多大型的知名企业开始向我们求助，寻求Rundeck的帮助，而不是我们的咨询服务。他们会说：“我们知道你们是咨询公司，也许以后我们会考虑，但我们现在在用Rundeck，我们需要在这里和那里得到帮助。”'
- en: Eventually, we figured out that Rundeck was being used by companies to fix the
    operations end of their DevOps problems. After enough people told us that Rundeck
    changed their lives, Alex Honor, Greg Schuler, and myself, the three founders
    of Rundeck Inc, decided to shut down the consulting company and focus on Rundeck.
    The deciding factor was that we could help a lot more people at scale with a product
    company than we ever could as consultants.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们发现Rundeck被公司用来解决他们DevOps中的运营问题。在足够多的人告诉我们Rundeck改变了他们的工作方式之后，Alex Honor、Greg
    Schuler和我——Rundeck公司的三位创始人——决定关闭咨询公司，专注于Rundeck。决定性因素是，我们通过一家产品公司能在更大规模上帮助更多的人，而作为咨询公司时我们无法做到这一点。
- en: '**Viktor Farcic**: I have a very rudimentary understanding about Rundeck. Correct
    me if I''m wrong, but from my understanding, it''s kind of like a task executor.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我对Rundeck的了解非常基础。如果我理解得没错的话，它有点像一个任务执行器。'
- en: '**Damon Edwards**: Technically, that''s correct but it''s not the exciting
    use case. Self-service operations are the big value of Rundeck. Operations teams
    will use Rundeck within their team to create standard operating procedures out
    of all of the various scripts, tools, commands, and APIs they already have. That
    delivers a lot of efficiency gains within a team, but things really get interesting
    when they use the access control feature to give people outside of operations
    access to those procedures, because that''s when they can really rethink how their
    organization works.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：从技术角度来看，这是正确的，但这不是令人兴奋的使用案例。自助服务操作是 Rundeck 的大价值所在。操作团队将在团队内部使用
    Rundeck，将他们现有的各种脚本、工具、命令和 API 创建成标准操作程序。这为团队内部带来了大量效率提升，但真正有趣的地方在于，当他们利用访问控制功能将这些操作程序提供给运营以外的人时，因为这时候他们可以真正重新思考组织的运作方式。'
- en: '**Viktor Farcic**: So, teams use it, but self-service is the main goal?'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：所以，团队使用它，但自助服务才是主要目标？'
- en: '**Damon Edwards**: Yes, but teams see a lot of benefits from standardizing
    how they work. The standardization encourages ongoing improvement and experimentation;
    this is a known Lean technique. Instead of me having a bunch of scripts, you having
    a bunch of scripts, and someone else having a bunch of scripts, let''s put them
    all into Rundeck. Let''s collaborate and say, "Hey, let''s just come up with a
    good way to do these things." So, plug in whatever you have now—scripts, tools,
    commands, APIs—and Rundeck provides the workflow, notifications, error-handling,
    user input management, the UI, the API, the logging, and much more.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：是的，但团队通过标准化工作方式看到了很多好处。标准化鼓励持续的改进和实验；这是已知的精益技术。与其我有一堆脚本，你有一堆脚本，别人也有一堆脚本，不如把它们都放进
    Rundeck 中。我们一起合作，想：“嘿，我们一起找到一个好的方式来做这些事情。” 所以，将你现有的脚本、工具、命令、API 插入 Rundeck，Rundeck
    提供了工作流、通知、错误处理、用户输入管理、UI、API、日志记录等等。'
- en: Rundeck's access control features are really what got people excited because
    now they're saying, "Well, hey, let's enable teams to do operations activities
    that traditionally don't do operations activities." A simple example is the classic
    DevOps idea of letting developers do restarts in production environments. It's
    a pretty shocking concept in most enterprises. How are you going to do that? You
    can't give them logins to production environments and say, "Here are your SSH
    keys, sudo access, and some scripts... good luck!" because that doesn't cut it
    in the enterprise. It's a complicated enough problem and involves so many groups
    that most people give up.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Rundeck 的访问控制功能正是让人们兴奋的原因，因为现在他们说：“嘿，让我们让那些传统上不做运营活动的团队也能进行运营活动。” 一个简单的例子就是经典的
    DevOps 思想——让开发者在生产环境中执行重启。这在大多数企业中是一个相当令人震惊的概念。你怎么做到的呢？你不能给他们生产环境的登录权限，然后说：“这里是你的
    SSH 密钥、sudo 权限和一些脚本... 祝你好运！” 因为这种方式在企业环境中行不通。这个问题足够复杂，涉及到许多团队，大多数人最终都会放弃。
- en: But now, with Rundeck, developers can just say, "Well, let's use Rundeck. Plug
    in the restart script, run the health checks to make sure it worked, and run the
    commands to quit the monitoring and manipulate the load balancers. Then, put some
    extra guardrails around it like constraining user input options, notifications,
    and error handling." Then they would use Rundeck's access control to safely give
    the development team the ability to do restarts in production. Likewise, you could
    just give them the permissions to watch the trusted SRE do restarts in production.
    Either way, they have better control and visibility, which enables them to distribute
    the ability to perform operations tasks throughout the broader organization.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 但是现在，借助 Rundeck，开发者可以直接说：“好吧，让我们使用 Rundeck。插入重启脚本，运行健康检查确保它有效，然后运行命令停止监控并操作负载均衡器。然后，围绕它设置一些额外的保护措施，比如限制用户输入选项、通知和错误处理。”
    接着，他们会使用 Rundeck 的访问控制功能，安全地授予开发团队在生产环境中进行重启的权限。同样，你也可以只给他们权限，观看可信的 SRE 在生产环境中执行重启。无论哪种方式，他们都能获得更好的控制和可视性，这使他们能够将执行操作任务的能力分发到更广泛的组织中。
- en: This self-service capability unlocks all these DevOps organizational changes
    that you see being driven in forward-thinking enterprises. They want to decouple
    and push control closer to these delivery teams so they can move faster, and operations
    just stay out of their way.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这种自助服务能力解锁了许多你在前瞻性企业中看到的 DevOps 组织变革。他们希望将控制权解耦并推向更接近交付团队的地方，以便能够更快地行动，而运营团队则保持在一旁，不干扰他们。
- en: '**Viktor Farcic**: It''s like centralized management with a strong focus on
    the empowerment of the rest of the organization.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这就像是集中管理，同时强调赋能其他组织成员的能力。'
- en: '**Damon Edwards**: That''s an interesting way to put it. We recognize that
    the expertise and capability of operations are not going anywhere, but the idea
    that there is a central operations organization that does all of the "operations
    work" can''t keep up with today''s demands. You need a mechanism where control
    is distributed, but there are operations experts who maintain oversight.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：这是个有趣的说法。我们认识到运营领域的专业知识和能力不会消失，但认为有一个集中式的运营组织，负责所有的“运营工作”，是无法跟上今天需求的步伐的。你需要一个机制，能够分散控制，但又有运营专家来维持监督。'
- en: That's something that shows up in the Rundeck design philosophy as well. We
    don't want to be another thing that moves the bits around because you've already
    got plenty of things out there that do that well, whether it's Chef, Puppet, Ansible,
    or container orchestrators. We let people use what they want to use and then create
    the logical procedures out of it that need to span all of those different tools.
    I think we have all lived under this delusion that one automation tool is going
    to rule them all, but what we did was embrace the idea that heterogeneity is the
    preferred reality. Let people do what they need to do to get their job done and
    focus on helping them to coordinate that work and make it safe.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是Rundeck设计理念中的一部分。我们不想成为又一个仅仅负责移动数据的工具，因为市场上已经有很多工具能够很好地完成这项工作，无论是Chef、Puppet、Ansible，还是容器编排工具。我们让人们使用他们想用的工具，然后再根据这些工具创建出需要跨越不同工具的逻辑流程。我认为我们曾经都活在一个幻想中，认为有一个自动化工具能够统治一切，但我们所做的其实是接受异构性是首选现实的观点。让人们做他们需要做的事情，帮助他们协调这些工作，并确保其安全。
- en: '"Let people do what they need to do to get their job done and focus on helping
    them to coordinate that work and make it safe."'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: “让人们做他们需要做的事情，帮助他们协调这些工作，并确保其安全。”
- en: —Damon Edwards
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: —Damon Edwards
- en: '**Viktor Farcic**: What are your thoughts on the commercialization of DevOps
    and the wider idea of DevOps tools?'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你怎么看待DevOps的商业化以及DevOps工具这一更广泛的概念？'
- en: The commercialization of DevOps
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps的商业化
- en: '**Damon Edwards**: It is definitely an interesting topic, because people love
    to throw their hope into tools. First, it was Puppet. Then, it was Chef. More
    recently, it was Ansible, but now it''s cloud-native and serverless. Each new
    automation tool is going to take over the world, but then the special project
    team working on it moves on and it becomes legacy. Now we have one of everything.
    Meanwhile, someone is saying that if they can bring in another new tool, then
    that will solve all their problems. It''s a cycle that has always been there.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：这确实是一个有趣的话题，因为人们总喜欢寄希望于工具。首先是Puppet，然后是Chef，最近是Ansible，而现在是云原生和无服务器架构。每一个新的自动化工具都宣称会主宰世界，但当专门负责这个工具的项目团队离开后，它就变成了遗留工具。现在，我们几乎有了各种工具。与此同时，有人会说，如果再引入一个新工具，就能解决所有问题。这是一个一直存在的循环。'
- en: Nowadays, there are a lot of companies with DevOps initiatives, and their people
    are following the pattern that they've always followed and are looking for a DevOps
    tool to help them. I don't blame the vendors for offering their tools up as DevOps
    tools, because most of them are perfectly fine tools that solve specific problems.
    But don't be surprised when your DevOps problems don't go away, and you have yet
    another tool to support.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，许多公司都在推行DevOps，而他们的人依然在遵循他们一直以来的模式，寻找一个DevOps工具来帮助他们。我并不怪罪厂商将他们的工具作为DevOps工具推广，因为大多数工具本身都很优秀，能够解决特定的问题。但当你的DevOps问题并没有消失，而且你又多了一个工具需要维护时，请不要感到惊讶。
- en: '"If anything, there''s a Lean lesson in this; you''re going to need to let
    teams make the choices for the tools that they feel like they need to use."'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: “如果有什么值得学习的，那就是精益（Lean）的一课；你需要让团队自行选择他们认为需要使用的工具。”
- en: —Damon Edwards
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: —Damon Edwards
- en: If anything, there's a Lean lesson in this; you're going to need to let teams
    make the choices for the tools that they feel like they need to use. They need
    to worry about how they integrate, worry about the toolchain architecture, or
    worry about how you let others plug their tools into other people's tools. This
    has been a major design point for Rundeck since we first recognized the heterogeneous
    nature of the enterprise as something to be embraced.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果说有任何东西是 Lean 方法的教训，那就是你需要让团队自主选择他们认为需要使用的工具。他们需要关心如何进行整合，关心工具链架构，或关心如何让其他人将他们的工具与别人的工具连接在一起。自从我们首次意识到企业的异质性是需要被接受的这一点以来，这一直是
    Rundeck 的一个主要设计理念。
- en: Premature optimization or tool standardization is actually bad for the organization.
    If you're forcing a team to do something they don't want to do, and they have
    a good reason for not wanting to do it, then you're just putting an unnecessary
    burden or friction on top of that team. Heterogeneity is not only a fact of life;
    we think it's actually a feature. Let the teams do what they need to do in order
    to be successful, and just worry about how they integrate it with the rest of
    the organization, making sure the right security and compliance controls are in
    place.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 过早的优化或工具标准化实际上对组织是不利的。如果你强迫一个团队做他们不愿意做的事情，而他们有充分的理由不想做，那么你只是在给这个团队增加不必要的负担或摩擦。异质性不仅是生活的事实，我们认为它实际上是一个特性。让团队做他们需要做的事情以确保成功，只需要关心如何将其与其他团队整合，确保适当的安全性和合规控制到位。
- en: '**Viktor Farcic**: I completely agree. From my own experience, I''m still having
    trouble finding a big enterprise that is actually bent that way. I''ve always
    had the impression that that''s what it''s like with DevOps. Everybody talks about
    DevOps, and every single company in the world has a DevOps initiative—yet nobody''s
    doing it.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：我完全同意。从我自己的经验来看，我至今还难以找到真正朝这个方向努力的大型企业。我一直有这样的印象，那就是 DevOps 就是这样的情况。每个人都在谈论
    DevOps，世界上每一家公司都有 DevOps 项目，但实际上没有人在真正做。'
- en: '**Damon Edwards**: Changing how you work is very difficult in itself. For those
    who are owning the change, it can feel risky and scary. That''s not just from
    an organization point of view; I''m talking from the personal perspective as well.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：改变工作方式本身就非常困难。对于那些推动变化的人来说，这可能会感觉很有风险且令人害怕。这不仅仅是从组织角度来看；我也在从个人角度谈论这个问题。'
- en: Here's an example. You tell people, "Okay, we are going to distribute operational
    capabilities to delivery teams, so we should make these delivery teams cross-functional.
    That means we take the headcount out of operations and convert it into more of
    an SRE skillset. We'll leave some SREs taking care of both the platforms and the
    specialties that we can't distribute for practical reasons in central teams."
    That's the idea of cross-functional teams, and it sounds logical, but what are
    you doing on a human and political level? You're taking away headcount from one
    group and giving it to another.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个例子。你告诉大家：“好吧，我们要把运营能力分配给交付团队，所以我们应该让这些交付团队具有跨职能性。这意味着我们从运营中拿走人员，将其转化为更多的
    SRE 技能。我们会留下一些 SRE 负责平台和我们因实际原因无法分配给中央团队的专业领域。”这就是跨职能团队的理念，听起来合乎逻辑，但在人际和政治层面上你在做什么呢？你是在从一个团队中剥夺人手，然后将其分配给另一个团队。
- en: 'A secret that few will admit in large enterprises is that it''s really difficult
    to know what anybody else is doing. Executives in large organizations need indirect
    measures to identify performance at different levels of management. Say you''re
    at the director level of a theoretical company—you''re four to five levels down
    from the C level, and you''re three to four levels up from the people with their
    hands on the keyboards, and the senior executives want to know if you are any
    good: "Is Viktor any good? Is he going places or has his career topped out?"'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在大型企业中，很少有人会承认的一个秘密是：真的很难知道别人都在做什么。大型组织的高层管理者需要间接的方式来识别不同管理层级的绩效。假设你是一个理论公司中的总监级别——你处于
    C 级的四到五个层级下面，距离实际操作的人群有三到四个层级，而高级管理人员想知道你是否做得不错：“维克托做得怎么样？他会有发展吗，还是他的职业已经达到瓶颈？”
- en: '**Viktor Farcic**: It''s great that we''re getting into the day-to-day discussion
    of DevOps, but one thing I would love to know is how it would work in this theoretical
    company.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：我们现在进入 DevOps 的日常讨论，这很好，但我很想知道这在理论公司中是如何运作的。'
- en: '**Damon Edwards**: By traditional corporate measures, they might say, "Oh,
    Viktor seems pretty good. He keeps getting more headcount and more budget. Viktor
    must be doing something right; we should keep an eye on that Victor, he''s going
    places."'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：按照传统的企业标准，他们可能会说，“哦，Viktor 看起来挺不错的。他不断增加团队人数和预算。Viktor 一定做对了什么事情；我们应该关注一下那个
    Viktor，他有前途。”'
- en: You're a rational human being. You care about your career and your family depends
    on your career. What's the last thing you're going to want to do? Give up a budget
    or people! You've been conditioned throughout your career to know these are signals
    that you're either a weak or bad manager. Suddenly, you are a lot warier of an
    idea to move people out from under you and into other teams. Organizational change
    is difficult because people have personal and political motivations that often
    don't align with those of the organization, which is what I find to be the number-one
    problem.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你是一个理性的人。你关心你的职业生涯，而你的家庭也依赖于你的职业生涯。你最不想做的是什么？放弃预算或人员！你在职业生涯中已经被条件化，知道这些都是你是不是一个弱者或不称职经理的信号。突然之间，你对把团队成员从你手下转移到其他团队的想法变得更加谨慎了。组织变革之所以困难，是因为人们有个人和政治上的动机，这些动机往往和组织的利益不一致，这是我认为的首要问题。
- en: '**Viktor Farcic**: Then, what''s the second problem?'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，第二个问题是什么？'
- en: '**Damon Edwards**: The second problem is that much of the rewards in corporate
    culture are designed around delivery. For instance, you landed a huge sale, or
    you cemented a key partnership—here''s your bonus. You delivered a major IT project,
    took us to the cloud, or you delivered the new Foo service we promised Wall Street,
    so here''s your raise. News of delivery makes it all the way to the boardroom,
    and so delivery on business-oriented projects is another way to get yourself on
    that up-and-comer list.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：第二个问题是，企业文化中的许多奖励机制是围绕交付设计的。例如，你完成了一笔巨大的销售，或者你稳固了一项关键合作——这就是你的奖金。你交付了一个重要的
    IT 项目，带领公司上云，或者你交付了我们向华尔街承诺的新 Foo 服务——于是你获得了加薪。交付成果的消息传到董事会，这样在商业导向项目上的交付也成了让你进入快速晋升名单的方式。'
- en: So, now imagine that you're a development leader incentivized to deliver. You
    want that glory and the spoils, right? The last thing you want to do is anything
    that's not delivering! Taking on a bunch of SREs and a shared responsibility for
    production services means that you're being judged on and committing resources
    to something other than delivery.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设你是一个被激励着交付成果的开发领导者。你想要荣耀和奖赏，对吧？你最不希望做的事情就是做任何不涉及交付的事！承担一堆 SRE（站点可靠性工程师）和共同承担生产服务的责任意味着你在承诺资源并被评判的事物是与交付无关的。
- en: The right thing for the company to do is to stick with the stuff you've built,
    keep it running, and evolve it to meet the customer's future needs. But, personally,
    you're compelled to say, "Forget it, it's done, let someone else worry about that
    and get me on to a whole new project," because then you'll be Viktor who delivered
    customer value X last year and then delivered customer value Y this year, which
    is a fast track to promotion.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对公司来说，正确的做法是坚持你已经构建的东西，保持其运行，并发展它以满足客户未来的需求。但从个人角度出发，你可能会说，“算了，已经完成了，让别人去操心这个，给我安排一个全新的项目”，因为那样你就会成为上年交付了客户价值
    X，今年又交付了客户价值 Y 的 Viktor，这就是快速晋升的捷径。
- en: '"The reality of all of this is that it''s very hard to change how people work,
    which means it''s very hard to change large enterprises."'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: “所有这些的现实是，人们的工作方式很难改变，这意味着大型企业也很难改变。”
- en: —Damon Edwards
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: —Damon Edwards
- en: The reality of all of this is that it's very hard to change how people work,
    which means it's very hard to change large enterprises. You'll have a much easier
    time if you can just bring in that DevOps thing by just painting some existing
    boxes on the organization chart with some DevOps freshness.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些的现实是，人们的工作方式很难改变，这意味着大型企业也很难改变。如果你能通过在组织图上为一些现有的框架加上些 DevOps 的新鲜感，情况会简单得多。
- en: This is how DevOps has been pigeonholed as a new name for release and systems
    engineering in so many enterprises. They're not actually doing what makes the
    DevOps high performers very successful, which is changing how they fundamentally
    operate. There are a lot of vendors out there who will gladly reinforce this behavior.
    Why complicate the sale? Just let them do a "DevOps" paint job and declare victory.
    At the end of the day, this really isn't a technology organizational culture problem;
    this is a business culture problem.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么在如此多的企业中，DevOps被局限为发布和系统工程的新名词。他们实际上并没有做到让DevOps高绩效者非常成功的那些事情，即改变他们的基本运作方式。市场上有很多供应商乐意加强这种行为。为什么要复杂化销售？让他们只是做个“DevOps”外观改装，宣告胜利就好了。归根结底，这真的不是技术组织文化的问题；这是一个业务文化的问题。
- en: Netflix works the way it does because of the technology organization; that's
    how they run their entire business. Amazon works the way it does because that's
    how Amazon runs their entire business. The same is true of Google. Unless your
    business wants to change how it operates and what it incentivizes, don't expect
    the technology organization to act much differently. We can still make a lot of
    improvements within the walls of the technology organization; just don't expect
    the business head to be wagged by the technology tail. They still have to figure
    it out on their own.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Netflix的运作方式正是由于技术组织的存在；这是他们运营整个业务的方式。亚马逊之所以运作方式如此，正是因为这是亚马逊运营整个业务的方式。Google也是如此。除非你的业务想要改变运营方式和激励措施，否则不要指望技术组织会有太大不同。在技术组织的内部，我们仍然可以做出很多改进；只是不要指望业务部门会被技术尾巴摇着。他们还得自己弄明白。
- en: '**Viktor Farcic**: At least from what I''ve seen, the business side that makes
    the decision is still used to making that same decision for software development
    as they are for making any other decision.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇克**：至少从我看到的情况来看，做决策的业务方仍然习惯于像对待软件开发一样对待任何其他决策。'
- en: '**Damon Edwards**: A valid point, because they just see the world from what
    they do and they''re working to their incentives. Because of that, they''ll be
    running things according to their current beliefs. Too many times, you''ll see
    a technology organization telling the business how they should be run and that
    they need to do things in what is described as the right way, and when the business
    doesn''t do it, there are generally some grumblings about "idiots." Well, the
    thing is that the business sees it their way too. They know what they need, and
    they think their way is the rational way to do it, and if the technology side
    disagrees, then they are being whiney or just don''t get it.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：这是个有道理的观点，因为他们只看到自己眼前的工作，并按照自己的激励机制行事。因此，他们会按照当前的信念来运行事务。太多时候，你会看到技术组织告诉业务部门他们应该如何运作，应该以描述的“正确方式”去做事情，而当业务部门不这么做时，通常会对“白痴”有些抱怨。事实上，业务部门也有他们自己的看法。他们知道自己需要什么，认为他们的方式是理性的方式去做事情，如果技术方面不同意，那么他们就是在抱怨或者根本不懂。'
- en: Of course, conflict ensues. Everyone thinks they're the rational ones and that
    what they're doing is best for the company, which is something that we really
    have to keep in mind. Very few people anywhere in the world show up to their job
    saying, "How can I screw things up and what stupid thing can I do today?"
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，冲突随之而来。每个人都认为自己是理性的，认为自己所做的对公司最有利，这是我们必须牢记的事情。全世界很少有人上班时会说，“我今天怎么能把事情搞砸，我能做什么愚蠢的事情呢？”
- en: '**Viktor Farcic**: But in big companies, are people really trying to do the
    best for their company? I say this because, the way I see it, big companies are
    actually a collection of smaller companies, whether you call them silos, departments,
    companies—whatever you want. Do you have the impression that actually doing right
    for your department is not necessarily right for your company?'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇克**：但在大公司中，人们真的在尽力为公司做最好的事情吗？我这么说是因为，我看到的情况是，大公司实际上是一群小公司的集合，无论你把它们称为独立部门、部门还是公司，不管你怎么称呼。你是否觉得，为部门做正确的事情未必就是为公司做正确的事情？'
- en: '**Damon Edwards**: Most people think they''re doing the right thing, but I
    think you bring up a good point. Perspective and context really matter from a
    business viewpoint. You can look at a big company as more of a portfolio of companies,
    because the parts can often live somewhat in business isolation, and that isolation
    encourages siloed behavior. In that situation, you wind up with people who only
    see a small piece of the larger puzzle, and with that limited view, they do their
    best for that piece of the puzzle, but not their best for the overall business.
    To the people in the other pieces of the puzzle, they might think those others
    aren''t acting in the best interest of the company, but those people only have
    their own limited view. This same silo problem repeats itself all the way down
    to the classic development and operations divide we see today.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：大多数人认为他们在做正确的事，但我认为你提了一个好观点。从商业角度来看，视角和背景真的很重要。你可以把一家大公司看作是多个公司的组合，因为这些部分往往可以在一定程度上独立运营，而这种隔离鼓励了孤岛行为。在这种情况下，最终会有一些人只看到大拼图的一小块，他们会尽力做好这一部分，但并不是为了整体业务的最大利益。而对于拼图中其他部分的人来说，他们可能会认为那些人并没有以公司的最佳利益为出发点，但这些人只能看到他们自己有限的视角。这个孤岛问题从开发和运维的传统分隔一直延续到今天。'
- en: '**Viktor Farcic**: That''s very true, because if you go even deeper, everybody
    has their own objectives. What is the objective of operations? Never to go down.
    How do you never go down? Well, by never deploying a new release. I mean, developers
    want to release every second because they don''t care if we go down.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这非常正确，因为如果你更深入地思考，每个人都有自己的目标。运维的目标是什么？就是永不宕机。如何做到永不宕机？那就是永远不部署新的版本。我的意思是，开发人员希望每秒发布一次，因为他们并不在乎我们是否会宕机。'
- en: '**Damon Edwards**: Exactly. It''s easy to think about the thing you are being
    paid to do and not strive to see the end-to-end system; or equally, it''s easy
    to be accidentally disincentivized to not act in the best interests of the end-to-end
    system.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：没错。人们很容易只关注自己正在做的工作，而忽视从端到端的系统来看问题；同样，也很容易在无意中失去动机，无法为端到端系统的最佳利益而行动。'
- en: The most striking way to illustrate this is to ask how the customer sees your
    organization. They see a point of transaction and perhaps a horizontal line of
    everything that has to happen to make that transaction happen. They don't care
    about your functional silos or who does what. Does it satisfy them? Is it giving
    them the functionality that they wanted at the right price? Are the right features
    at the right price at the right time for them? That's what they care about; it's
    a very horizontal view.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 说明这一点最直观的方式是询问客户如何看待你的组织。客户看到的是一个交易点，或许还会看到一条横向的线，表示为了完成这个交易需要发生的一切事情。他们不关心你的职能孤岛，也不关心谁做什么。重要的是，它是否让他们满意？它是否以合适的价格提供了他们想要的功能？在合适的时间，合适的功能和合适的价格是否都能满足他们的需求？这才是他们关心的；这是一种非常横向的视角。
- en: But how do we think about work internally? We think about it by job function
    and whatever is printed on our business cards, which is usually a vertical, functionally
    aligned view. It's generally human nature to group like with like. Let's put developers
    with developers, operators with operators, testers with testers, and security
    with security. Then from there, let's manage those people for their own efficiency
    inside those groups. What happens is that as soon as you do that, people lose
    sight of what the customer cares about, which is the end-to-end capability. That's
    what happens when people optimize, not realizing that they are doing a localized
    optimization and actually deoptimizing the whole end-to-end system. The problems
    just fall from there.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们如何看待内部的工作呢？我们通过工作职能来思考，或者是我们名片上写的职称，通常这是一个垂直的、按职能对齐的视角。人类本能地倾向于将相似的事物归在一起。让我们把开发人员与开发人员放在一起，把运维人员与运维人员放在一起，把测试人员与测试人员放在一起，把安全人员与安全人员放在一起。然后，从这个基础上，我们为这些群体内的效率管理这些人。结果是，一旦这样做，人们就会失去对客户关心的事情的关注——那就是端到端的能力。当人们进行优化时，往往没有意识到自己在做的是局部优化，实际上是在破坏整个端到端系统的优化。问题就从这里开始。
- en: Perceptions of quality and its impact on work
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 质量的感知及其对工作的影响
- en: '**Viktor Farcic**: Do you think, then, that those people get incentivized based
    on the customer''s perception of quality?'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你认为这些人会根据客户对质量的感知来获得激励吗？'
- en: '**Damon Edwards**: Ideally. But do they know what that is? Do they know how
    their work actually fits in the whole system, and how that impacts this quality?
    Let''s use an example of a siloed firewall team.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：理想情况下是这样。但他们知道那是什么吗？他们知道自己的工作如何真正融入整个系统，并且如何影响质量吗？我们以一个孤立的防火墙团队为例。'
- en: This firewall team might just offer the best firewall rule changes in the Western
    Hemisphere. Their job is to make sure they make only the best and safest rule
    changes. They do this by offering limited change windows. If you give them your
    firewall rule change by Tuesday at 2:00 p.m., then by Thursday at 4:00 p.m., your
    change will be complete.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这个防火墙团队可能提供西半球最好的防火墙规则变更。他们的工作是确保只做出最好的和最安全的规则更改。他们通过提供有限的变更窗口来做到这一点。如果你在周二下午2点之前给他们提交防火墙规则更改，那么到周四下午4点，你的变更就会完成。
- en: Now, imagine I'm a developer and I need a change. I may well be thinking that
    while I'm not a firewall expert, I'm going to try to figure out what to write
    on this support ticket. I submit the ticket on Monday, but then it gets kicked
    back to me on Wednesday because of some problem with my request. I do a few go-arounds
    with a network admin to figure out how to request what I want, but then it turns
    out that I've missed the window and have to wait until next Thursday.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设我是一个开发人员，我需要一个更改。我可能会想，虽然我不是防火墙专家，但我会尽力弄明白在这个支持票上该写些什么。我在周一提交了票务请求，但周三因为请求的问题被退回给我。我和网络管理员来回沟通，弄清楚该如何请求我想要的东西，但后来发现我错过了变更窗口，只能等到下个星期四。
- en: The support team won't do it sooner as it isn't a production service yet, so
    now I have to wait until the change takes place. The problem there is that you've
    now got everybody waiting on this firewall rule change because they're working
    in this disconnected, isolated manner. The optimization for the firewall change
    rules was made from the firewall team's siloed perspective, not the perspective
    of the end-to-end system.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 支持团队不会提前处理，因为它还不是生产服务，所以现在我只能等到更改发生。问题在于，现在每个人都在等待这个防火墙规则更改，因为他们以这种断开、孤立的方式在工作。防火墙规则的优化是从防火墙团队的孤岛视角做出的，而不是从端到端系统的视角。
- en: '**Viktor Farcic**: Definitely. It''s like that quote: if you want to really
    understand a society, you need to understand its prison system. To me, this translates
    to the ticketing systems you just mentioned. If you want to see how Agile or Lean
    a company is, just go to their ticketing system.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：确实如此。这就像那句名言：如果你想真正了解一个社会，你需要了解它的监狱系统。对我来说，这可以翻译成你刚才提到的票务系统。如果你想看看一家公司有多敏捷或精益，只需看看他们的票务系统。'
- en: '**Damon Edwards**: Ha! I''ve never likened the ticket systems to a prison,
    but I can see where you are going with that. The destructive tendencies of silos
    and ticket queues really play an important part in the Rundeck view of the world.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：哈哈！我从没把票务系统比作监狱，但我明白你的意思。孤岛效应和票务队列的破坏性倾向确实在 Rundeck 的世界观中占据了重要地位。'
- en: We noticed back in our consulting days that ticket queues accelerate silo effects,
    where people lose shared context, start to focus inward, and optimize for their
    siloed view. In the end, the company suffers, even though everybody looks really
    busy and their individual areas are highly efficient.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在咨询时曾注意到，票务队列加剧了孤岛效应，让人们失去共享的上下文，开始向内聚焦，并为自己的孤岛视角进行优化。最终，公司会受到影响，尽管每个人看起来都非常忙碌，且各自的领域非常高效。
- en: '**Viktor Farcic**: All of those request queues just add all kinds of economic
    cost to the company because you''re injecting delays; you''re adding breaks in
    context.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：所有这些请求队列都会给公司带来各种经济成本，因为你在引入延迟；你在中断上下文。'
- en: '**Damon Edwards**: Exactly. We know from other fields that work queues cause
    delays, quality problems, increased overhead, demoralization, decreased learning,
    and greater risks. For some reason, IT operations ignore this and act as if ticket-driven
    request queues are expensive or cause destructive behaviors.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：没错。从其他领域我们知道，工作队列会导致延迟、质量问题、增加的开销、士气低落、学习减少和更大的风险。不知道为什么，IT运营总是忽视这一点，假装基于票务的请求队列很昂贵或会导致破坏性的行为。'
- en: '**Viktor Farcic**: Yet the ticket system has become the way that we run our
    lives, especially in operations.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：然而，票务系统已经成为我们生活的方式，特别是在运营方面。'
- en: '**Damon Edwards**: Exactly. I mean, the ticket system was originally called
    the trouble ticket, because it was supposed to be for when something went wrong.
    It was there to handle the exceptions. But along the way, it has become the way
    that we govern work and grant permission for operations to do their work.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：没错。我的意思是，票务系统最初被称为故障单，因为它是用来处理出错时的情况。它本来是为了处理例外情况而设立的。但在这个过程中，它变成了我们管理工作的方式，并且为运营团队提供执行工作的权限。'
- en: What we've ended up doing is taking organizations who want to be high-velocity
    learning organizations and dropping ticket-driven request queues all across that
    value stream. We're taking the queues that are at the epicenter of our existing
    bottlenecks, delays, bad hand-offs, and knowledge loss and we're spreading them
    everywhere. It feels like a real industry blind spot.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终做的事情是，带领那些希望成为高效学习型组织的公司，向整个价值流中撒下基于票务的请求队列。我们将那些处于现有瓶颈、延迟、不良交接和知识丧失的队列，扩展到每个角落。这感觉像是一个真正的行业盲点。
- en: A big theme of ours has always been that you've got to design your organization
    and the underlying work in a way that limits the number of handoffs. You must
    get rid of the need to hand off work to other teams as much as possible, and doing
    that often means driving more toward cross-functional teams. However, the cross-functional
    team idea has its limits, and there are situations where you just can't get rid
    of those handoffs.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直强调的一个大主题是，必须设计你的组织和基础工作的方式，尽量减少交接的次数。你必须尽量消除将工作交给其他团队的需求，而做到这一点通常意味着更多地推动跨职能团队的方式。然而，跨职能团队的理念也有其局限性，在某些情况下，你就是无法消除那些交接。
- en: This is especially true in operations. We're not going to be able to have enough
    of those people from that great firewall rule-changing team to put one on every
    team, we're not going to have enough security people, and we're not going to have
    enough systems engineers, database administrators (DBAs), or storage experts.
    If that's the case, then we're going to have to take what they do and turn them
    into pull-based, self-service interfaces. This means that other teams, when they
    need those operational activities, will have a self-service interface, whether
    it be a GUI, API, or command line, to do what they need to do, get fast feedback
    from the system, and move on.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这在运营中尤其明显。我们不可能有足够多来自那个大防火墙规则更改团队的人去为每个团队配备一个，我们不会有足够的安全人员，也不会有足够的系统工程师、数据库管理员（DBA）或存储专家。如果是这种情况，我们就必须将他们的工作转化为基于拉取的自助服务接口。这意味着其他团队在需要这些操作时，将通过自助服务接口来完成，无论是图形界面（GUI）、API
    还是命令行，都能做他们需要做的事情，快速从系统中获得反馈，然后继续进行。
- en: '**Viktor Farcic**: You mean, for example, getting a virtual machine when you
    need one?'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你的意思是，比如在需要时获得虚拟机？'
- en: '**Damon Edwards**: Yes, that would be a low-level example. I shouldn''t need
    to open a ticket for somebody to go do it for me, because I have an API or a web
    button and I can get what I want, and it builds from there. How do you let environment
    teams do schema updates without a DBA ticket? How do you let developers do their
    own restarts or health checks in production? How do you let business analysts
    run their own catalog update procedures?'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：是的，那是一个低级别的例子。我不应该需要开一个单子让别人帮我做，因为我有 API 或一个网页按钮，我可以得到我想要的东西，从那里开始。你怎么让环境团队在没有
    DBA 单的情况下做模式更新？你怎么让开发者在生产环境中自己重启或进行健康检查？你怎么让业务分析师自己运行目录更新程序？'
- en: The key idea is that self-service operations can't only be the ability to push
    the button to run something. The people who would want to push the button are
    going to need the ability to define their own buttons, just like in Amazon EC2
    where you can define your own Amazon Machine Images. EC2 would've been useless
    if they told you the five types of instances that you can spin up and that was
    it. Let people define their own procedures, and they can still have security and
    operations do code reviews on those buttons.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 关键的想法是，自助操作不仅仅是按下按钮来执行某个操作。那些想要按按钮的人，还需要有定义自己按钮的能力，就像在 Amazon EC2 中，你可以定义自己的
    Amazon Machine Images（AMI）。如果 EC2 只告诉你可以启动五种类型的实例，那它就没什么用了。让人们定义自己的程序，他们仍然可以让安全和运营人员对这些按钮进行代码审查。
- en: In the EC2 example, they make it useful because they give you the framework
    and guardrails that allow you to take charge and be useful. The self-service model
    is not just the ability to push the button, but is also the ability of those teams
    to define the button; it's a strong design pattern.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在EC2的例子中，它们之所以有用，是因为它们提供了框架和护栏，让你能够掌控并发挥作用。自助服务模式不仅仅是按下按钮的能力，还包括团队定义按钮的能力；这是一个强大的设计模式。
- en: The best definition of DevOps
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps的最佳定义
- en: '**Viktor Farcic**: This question is going to sound silly, but I like it because
    everybody gives me a different answer. We''ve already mentioned it countless times
    throughout our discussion, but what is DevOps?'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这个问题听起来有点傻，但我喜欢它，因为每个人给我的答案都不同。我们在讨论中已经提到过无数次了，但DevOps究竟是什么？'
- en: '**Damon Edwards**: The best definition that I''ve heard is from Adam Jacob.
    He says that DevOps is a cultural and professional movement, focused on how we
    build and operate high-velocity organizations, born from the experience of its
    practitioners.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：我听过的最好的定义来自于Adam Jacob。他说，DevOps是一种文化和职业运动，专注于如何构建和运营高效能的组织，这种方法源于实践者的经验。'
- en: '"DevOps is a cultural and professional movement, focused on how we build and
    operate high-velocity organizations, born from the experience of its practitioners."'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps是一种文化和职业运动，专注于如何构建和运营高效能的组织，这种方法源于实践者的经验。”
- en: —Adam Jacob (quoted by Damon Edwards)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: ——Adam Jacob（由Damon Edwards引用）
- en: I think that's as good as any description because I think it captures the essence
    of the DevOps movement. DevOps really is an umbrella over a bunch of evolving
    problems and solutions, all based on the idea of creating higher-velocity and
    higher-quality organizations. Trying to make it a more detailed description than
    that loses the point because DevOps is a movement, not a static thing.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这是任何描述中最好的，因为我认为它抓住了DevOps运动的本质。DevOps确实是一个包含多个不断发展的问题和解决方案的伞形概念，所有这些都基于创造更高效能和更高质量组织的理念。试图做出比这更详细的描述会失去重点，因为DevOps是一个运动，而不是静止不变的事物。
- en: I think people who try to make it more specific than that are inventing something
    that was never really there. That's fine, they can try to do that, and perhaps
    they'll bring something new to the movement, and everyone will benefit. But they
    shouldn't complain if the movement ignores them. I think it was Charity Majors
    who I first heard describe DevOps as an open source movement; the community goes
    where the community goes.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为那些试图将其定义得更具体的人是在发明一些从未真正存在的东西。那也没关系，他们可以尝试这么做，也许他们会为这个运动带来一些新东西，大家都会受益。但如果这个运动忽略了他们，他们也不应该抱怨。我记得第一次听到Charity
    Majors把DevOps描述为开源运动的就是她；社区走到哪里，社区就跟到哪里。
- en: '**Viktor Farcic**: That''s a great definition.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这是一个很好的定义。'
- en: '**Damon Edwards**: It works for a lot of people and keeps them focused on what
    matters: improving how technology organizations work and the lives of the people
    inside those organizations. Definition battles in DevOps are useless.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：它对很多人有效，并让他们专注于重要的事情：改善技术组织的运作以及组织内部人员的生活。DevOps中的定义争论是没有意义的。'
- en: '**Viktor Farcic**: What do you think about the commercialization of DevOps?
    When I go to conferences, there''s no software anymore that doesn''t have a DevOps
    sticker attached to it.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：你怎么看待DevOps的商业化？当我参加会议时，几乎没有任何软件不贴上DevOps的标签。'
- en: '**Damon Edwards**: I have mixed feelings about it, because at first, I was
    more of a purist and declared that it just doesn''t make sense to label everything
    as DevOps. It''s like saying a person is Agile or that a robot was going to make
    a factory Lean. But over time, I''ve softened my stance—partially because I''ve
    realized that the market eventually decides that those tools are just slapping
    the DevOps label on the box, only to get found out. I''ve also realized that it
    at least signifies at the macro level that the industry needs to change how it
    works because if even the tools vendors are talking about it, then a lot more
    executives will listen.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**Damon Edwards**：我对此有一些复杂的感受，因为起初，我更倾向于纯粹主义，并宣称将所有事情都贴上DevOps标签是没有意义的。这就像说一个人是敏捷的，或者说一个机器人将会使工厂变得精益。但随着时间的推移，我的立场有所软化——部分原因是我意识到市场最终决定了那些工具只是把DevOps标签贴在盒子上，然后很快被揭露出来。我还意识到，至少在宏观层面上，这表明了行业需要改变它的工作方式，因为即便是工具供应商也在谈论它，那么更多的高管会倾听。'
- en: '**Viktor Farcic**: Aren''t most of these vendors making the claim that DevOps
    is all about deployment?'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：难道大多数这些供应商不是在声称DevOps完全是部署吗？'
- en: '**Damon Edwards**: A lot of vendors are pushing that narrative because that
    is what they sell. It''s not all of them, but there are many that do. That''s
    probably the one negative of the tools-vendors jumping into DevOps; it plays into
    the urge for enterprises to just apply a fresh coat of DevOps paint to their old
    processes. If DevOps is just deployment, then we can just make it an engineering
    project and not worry about dealing with those messy things called people.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：很多供应商推动这一叙述，因为这正是他们卖的东西。并不是所有人都如此，但确实有很多这样做的供应商。这可能是工具供应商跳进DevOps的唯一负面影响；它迎合了企业只是想给他们的旧流程涂上一层新的DevOps油漆的冲动。如果DevOps只是部署，那我们可以把它当作一个工程项目来做，不用担心那些叫做‘人’的乱七八糟的事情。'
- en: '"If DevOps is just deployment, then we can just make it an engineering project
    and not worry about dealing with those messy things called people."'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: “如果DevOps只是部署，那我们可以把它当作一个工程项目来做，不用担心那些叫做‘人’的乱七八糟的事情。”
- en: —Damon Edwards
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: —达蒙·爱德华兹
- en: This also plays into how large companies like to solve problems. The higher
    you get in the food chain, especially in large companies, the more transactional
    management becomes. They'll say, "Tell me the problem. Tell me what check I need
    to sign and tell me what I get out of it. I'll weigh that against the other checks
    and sign the ones I think are the right ones." Tools fit into that model well,
    and the vendors know that. To be fair, I'm a software vendor, and I know that.
    However, we think that the tools-vendors who last are the ones who actually solve
    problems and are clear about what problems they can and can't solve. "Buy my tool,
    and I'll solve your DevOps problems" isn't possible unless you frame DevOps into
    very narrow and largely unhelpful terms. We didn't all get dressed up to just
    move some software bits around faster.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这也反映了大公司如何喜欢解决问题。当你在食品链中爬得越高，尤其是在大公司里，管理就越变得事务化。他们会说：“告诉我问题是什么。告诉我需要签什么检查，告诉我我能得到什么。我会把它与其他检查进行权衡，然后签署我认为正确的检查。”工具非常符合这种模式，供应商们知道这一点。公平地说，我是一个软件供应商，我知道这一点。然而，我们认为那些能够持续下去的工具供应商，是那些真正解决问题并清楚自己能解决和不能解决的问题的供应商。“买我的工具，我就能解决你的DevOps问题”这是不可能的，除非你把DevOps框定为非常狭窄且大体上无益的范畴。我们可不是为了让软件运行得更快而穿上这些行头的。
- en: '**Viktor Farcic**: To me, that sounds like the reverse of Scrum. People jumped
    into the Scrum way thinking that changing people''s human processes will solve
    the problem, and now we have the reverse of that: buy this tool, and it''s going
    to solve your human problem.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：对我来说，这听起来像是Scrum的反面。人们跳进Scrum方式，认为改变人类的工作流程就能解决问题，而现在我们遇到的是它的反面：买这个工具，它就能解决你的人力问题。'
- en: '**Damon Edwards**: That''s a really interesting way to look at it. I think
    the parallels go even deeper. How many companies "went Scrum" without really changing
    how they worked? They bought the tools, did some minor training, and then just
    Scrum-washed their existing Waterfall processes and mindset. Those who did that
    eventually joined the "Scrum didn''t work; it must not be working" backlash. We
    are going to undoubtedly see the same thing with DevOps, with SRE, and any other
    movements that come along. It''s just how it is.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：这真的是一个很有趣的角度。我认为这种相似性还更深。多少公司“采用Scrum”，却并没有真正改变他们的工作方式？他们买了工具，做了一些小规模的培训，然后就用Scrum涂抹现有的瀑布式流程和思维方式。那些这么做的公司最终加入了“Scrum没用，一定不行”的反弹潮。我们无疑会看到相同的事情发生在DevOps、SRE和未来出现的任何其他运动中。事情就是这样。'
- en: '**Viktor Farcic**: That''s kind of normal, but perhaps your expectations are
    too high. Let''s say you accomplish 15 percent of something. That''s still 15
    percent of something.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：这有点正常，但也许你的期望太高了。假设你完成了某个任务的15%。那仍然是某个任务的15%。'
- en: '**Damon Edwards**: That''s a fair point. We can lose sight of the net positive.
    At least people are recognizing that they have problems and they''re trying something.
    My concern is when they use those efforts to declare a premature victory. Actually,
    nothing has changed, that or they use it as fake proof that it didn''t work.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：这是一个很有道理的观点。我们可能会忽视它的净正面效果。至少人们已经意识到他们有问题，并且正在尝试一些方法。我的担忧是，当他们用这些努力来宣布过早的胜利时。实际上，什么都没有改变，或者他们把它当作虚假的证据来证明它没有效果。'
- en: '**Viktor Farcic**: There are always people like that, which reminds me that
    a long time ago when one of the QA managers came to me, and I was pushing for
    automation, they said, "I''ve found the test case that is not automatable. This
    is all kind of worthless." But to me I''m like, "You''ve found one, so what?"'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：总是有这样的人，这让我想起很久以前，当其中一位质量保证经理找我时，我在推动自动化，他们说：“我找到了一种无法自动化的测试用例。这一切都毫无价值。”但对我来说，我想，“你找到一个，那又怎样？”'
- en: '**Damon** **Edwards**: Humans are tricky, and changing how humans work is downright
    hard.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：人类是复杂的，改变人类的工作方式是相当困难的。'
- en: The industry today
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 当前行业
- en: '**Viktor Farcic**: I heard a theory that a big part of our problem in the industry
    is that we are carried today by people not appreciating operations. Kind of like,
    with Agile, suddenly we now have rockstars. The industry is saying, "It''s a rockstar
    developer, that''s a rockstar tester, that''s a rockstar product owner," but nobody
    ever mentions operators in any context of a positive prize.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我听到过一个理论，说我们行业中的一个大问题是，我们今天的成功是因为大家不重视运维工作。就像敏捷方法一样，突然间我们有了“明星人物”。行业说，“这是个明星开发者，这是个明星测试员，这是个明星产品负责人”，但是从来没有在任何积极的奖项上下文中提到运维人员。'
- en: '**Damon Edwards**: There might be something to that. I''m not sure if it''s
    that certain people get rockstar status, but I''m more concerned with the mistreatment
    of so many IT workers than I am with the cushy lives of a few.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：这可能有点道理。我不确定是不是某些人获得了明星地位，但我更关心的是很多IT工作者的待遇不公，而不是少数人的舒适生活。'
- en: '"I''m more concerned with the mistreatment of so many IT workers than I am
    with the cushy lives of a few."'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: “我更关心的是很多IT工作者的待遇不公，而不是少数人的舒适生活。”
- en: —Damon Edwards
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: — 达蒙·爱德华兹
- en: You can go to the far-flung corporate technology centers all over the world,
    really, and there are a lot of people in this business only because it pays better
    than selling insurance. I mean, that's it. They just want to get through their
    day, provide for their families, and get to their kids' sporting events on the
    weekends, and here they are in organizations that are highly dysfunctional doing
    what is often demoralizing, repetitive work. They're burning out left and right
    because of all the pressure and the conflict that's hoisted upon them.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以去到世界各地那些遥远的公司技术中心，实际上，很多人在这个行业里只因为它比卖保险赚得多。我的意思是，仅此而已。他们只是想度过一天，养家糊口，周末带孩子去参加体育活动，而他们却身处那些高度功能失调的组织，做着通常令人气馁的重复性工作。他们因为所承受的压力和冲突而左冲右突，疲惫不堪。
- en: That's a lot of human potential that could be put to better use. If we can tap
    into better ways of working, then that will be good for the individual and great
    for the company's bottom line. This is why I am so bullish on topics like Lean,
    DevOps, and SRE; the focus is on how people work and how to make it better.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这浪费了大量本可以更好利用的人力资源。如果我们能找到更好的工作方式，那么对个人有好处，对公司的业绩也有巨大好处。这就是为什么我对精益、DevOps 和
    SRE 等话题如此看好；重点是人们如何工作以及如何改进这种方式。
- en: '**Viktor Farcic**: I think this is a great place to leave our conversation.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我觉得现在是结束我们对话的好时机。'
- en: '**Damon Edwards**: We''ve certainly covered a lot of ground. I''ve really enjoyed
    this.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**达蒙·爱德华兹**：我们确实谈到了很多内容，我非常享受这个过程。'
- en: '**Viktor Farcic**: Me too. Cheers, thanks.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇**：我也是。谢谢，干杯。'
