- en: Introducing Gregory Bledsoe
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍格雷戈里·布莱德索
- en: Having recently joined MThree Consulting, much of Greg's focus is in helping
    businesses achieve delivery of agility transform. Previously, he's worked as an
    Agile, Lean, and DevOps consultant at SolutionsIQ. Greg has also written extensively
    about DevSecOps, kernels, and virtualization. You can find him on Twitter at `@geek_king`.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 最近加入 MThree Consulting 后，格雷戈的工作重点之一是帮助企业实现敏捷交付转型。此前，他曾在 SolutionsIQ 担任敏捷、精益和
    DevOps 咨询师。格雷戈还广泛撰写关于 DevSecOps、内核和虚拟化的文章。你可以在 Twitter 上找到他，账号是 `@geek_king`。
- en: '**Viktor Farcic**: Hi, Greg! Before we delve into the world of DevOps, tell
    us a little about yourself.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：嗨，格雷戈！在我们深入探讨 DevOps 的世界之前，先告诉我们一些关于你自己的事吧。'
- en: '**Gregory Bledsoe**: My career up to this point is entirely down to the fact
    that I was a very successful engineer, and because of this, people promoted me
    to management positions. That being said, however, I don''t think it''s the best
    approach because good engineers don''t always make good managers. Nobody ever
    gives us engineers any training on how to manage, nor do they take the time to
    explain what we''re actually supposed to be doing as managers. Because of this,
    I had to reinvent myself into this manager role, where I''ve actually applied
    the engineering principles of fail fast, experiment, and measure the outcome to
    see what happens. This all took place in a time before DevOps was even a word;
    but, looking back, I see that I was already incorporating the principles of DevOps
    as a core part of my way of doing anything in the industry. Through that process,
    I learned that you couldn''t do the engineering and the management role at the
    same time.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷戈里·布莱德索**：到目前为止，我的职业生涯完全归功于我曾是一名非常成功的工程师，正因为如此，人们将我提拔到了管理岗位。然而，我认为这并不是最佳的方式，因为优秀的工程师并不一定能成为优秀的管理者。没人给我们这些工程师提供任何关于如何管理的培训，也没有人花时间向我们解释作为管理者究竟该做些什么。因此，我不得不重新塑造自己进入这个管理角色，实际上，我已经将工程学原则，如快速失败、实验和衡量结果来观察发生了什么，应用到了管理中。所有这一切发生在
    DevOps 这个词还不存在的时代；但是，回顾过去，我发现自己已经将 DevOps 的原则作为我在行业中做事的核心部分。在这个过程中，我意识到，你不能同时扮演工程师和管理者的角色。'
- en: '"What the word DevOps means is probably the most fundamentally misunderstood
    question out there."'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps 这个词的意思可能是外界最根本被误解的问题。”
- en: —Gregory Bledsoe
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: —格雷戈里·布莱德索
- en: Over time, I continued to work at various companies, and gradually, I got invited
    to speak at more and more conferences. Fast-forward to today. My latest ventures
    have been with Accenture/Solutions IQ, the management consulting and professional
    services firm, and MThree Consulting, where I'm concentrating on training and
    providing emerging talent to the Fortune 100\. But bringing it back to the idea
    of DevOps, I find myself perfecting the DevOps+ methodology in my new job. It's
    worth adding, and I'm sure we'll come back to this, that I included the "+" because
    the methodology includes DevOps, in addition to both Agile and Lean.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，我继续在不同的公司工作，逐渐地，我被邀请参加越来越多的会议。快进到今天，我最新的工作是在埃森哲/Solutions IQ 这家管理咨询和专业服务公司，以及
    MThree Consulting，我专注于培训并为《财富》100强企业提供新兴人才。但回到 DevOps 的话题，我发现在我的新工作中，我正在完善 DevOps+
    方法论。值得一提的是，我加入了“+”符号，因为该方法论不仅包括 DevOps，还包括敏捷和精益。
- en: DevOps and Deming's ninth principle
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DevOps 与戴明的第九原则
- en: '**Viktor Farcic**: That nicely brings me to the first question I have for you,
    which is: what does the word DevOps actually mean? I''ve spoken to a number of
    people, many of whom are featured in this book, and when I come to this question,
    I don''t think I''ve ever received the same answer. What''s your take on it?'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：这正好引出了我第一个问题，那就是：DevOps 这个词究竟是什么意思？我曾与许多人交谈，其中许多人的名字也出现在这本书中，当我问到这个问题时，我发现我从未收到过相同的答案。你是怎么看的？'
- en: '**Gregory Bledsoe**: The whole idea of defining what the word DevOps means
    is probably the most fundamentally misunderstood question out there. That''s not
    to say that the question itself is wrong because, while there are many valid answers,
    there are infinitely more invalid answers, and that''s fundamentally the problem
    we have. Even when people are giving valid answers, they''re only partial answers,
    and those giving the answers don''t fully understand the overall scope of the
    question. As an industry, we''re constantly learning new lessons and incorporating
    new things, and DevOps is a way to collect the best practices of everyone. Because
    of that, I''ve stopped trying to define it simply because the definition changes
    every day.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：定义 DevOps 这个词的整个想法可能是最基本上被误解的问题。这并不是说问题本身是错误的，因为虽然有许多有效的答案，但有无数个无效的答案，这基本上是我们面临的问题。即使人们给出了有效的答案，它们也只是部分答案，给出答案的人并没有完全理解问题的整体范围。作为一个行业，我们不断地学习新的经验，并吸收新的东西，而
    DevOps 是收集每个人最佳实践的一种方式。因此，我已经停止尝试简单地定义它，因为定义每天都在变化。'
- en: Did you know that, at its core, the word DevOps comes from the 14-Point Philosophy
    of William Deming, an American engineer and statistician? In that list, the 9th
    principle is, *Breaking down barriers between departments*. That's literally where
    the names Dev and Ops come from. Thus, you can't define DevOps without including
    Deming's concept in said definition. When we started with DevOps, we didn't know
    if we were specifically implementing DevOps or Deming's 14 points, but at some
    point, we figured it out. Let's say you're applying a Lean methodology; in 2018,
    it grew so far beyond what it was originally. We realized that what we're really
    doing is progressively implementing Deming's 14 points into software development.
    And once we've done that, we've then got to move on and drive out the fear, while
    continuously improving and getting everybody on board. Then, we've got to make
    everybody agents of transformation. If you don't understand that all of those
    things are implicitly included in defining what DevOps is, and they're not included
    in your DevOps definition, then your DevOps definition is probably wrong, or at
    the very least, incomplete.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道吗，从美国工程师和统计学家 William Deming 的 14 点哲学中，核心概念 DevOps 这个词的意思就产生了？在那个列表中，第九条原则是，“打破部门之间的障碍”。这就是
    DevOps 和 Ops 的名字的来源。因此，你无法定义 DevOps 而不包括 Deming 的概念在内。当我们开始 DevOps 时，我们不知道我们是否在专门实施
    DevOps 或 Deming 的 14 点，但在某个时刻，我们弄清楚了。让我们说你正在应用精益方法；在 2018 年，它远远超出了最初的范围。我们意识到我们真正在做的是逐步将
    Deming 的 14 点引入到软件开发中。一旦我们做到了这一点，我们就必须继续消除恐惧，同时不断改进并让每个人都参与进来。然后，我们必须让每个人成为变革的推动者。如果你不理解所有这些事情都隐含在定义
    DevOps 的过程中，并且它们没有包含在你的 DevOps 定义中，那么你的 DevOps 定义可能是错误的，或者至少是不完整的。
- en: '**Viktor Farcic**: I actually think that''s a great view. What you''ve managed
    to do is show a lot of thinking behind the meaning of the word, which is often
    omitted. But in the Gregory Bledsoe dictionary, what''s the definition next to
    the word DevOps?'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我实际上认为这是一个很好的观点。你所做的是展示了在这个词背后的许多思考，这通常被省略了。但在 Gregory Bledsoe
    的词典中，DevOps 这个词的下一个定义是什么？'
- en: '**Gregory Bledsoe**: As we discussed, before I give you my answer, I need to
    come up with a definition of DevOps that won''t change. Because it''s the overarching
    umbrella that all of DevOps falls into, my definition of DevOps is "reorganizing
    IT around business value." Within this definition, we''ve included Lean by reference,
    and likewise, we''ve also got all the canonical DevOps elements that we''ve already
    incorporated, but we haven''t excluded any other future best practices. I think
    that''s the one that should propagate now, and that gives us great freedom not
    to exclude new innovations. Because, when that happens, and something, such as
    DevOps, becomes so defined, it ends up squeezing out the new innovations.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：正如我们所讨论的，在我给出答案之前，我需要提出一个不会改变的 DevOps 定义。因为它是所有 DevOps
    都属于的总体概念，我的 DevOps 定义是“围绕业务价值重新组织 IT”。在这个定义中，我们通过引用包含了精益方法，同样地，我们也包含了所有经典的 DevOps
    元素，我们已经整合了，但并没有排除任何未来的最佳实践。我认为现在应该推广这一定义，这使得我们不会排除新的创新。因为，当这种情况发生时，比如说 DevOps，变得如此明确，它最终会排斥新的创新。'
- en: '"My definition of DevOps is ''reorganizing IT around business value''"'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: “我的 DevOps 定义是‘围绕业务价值重新组织 IT’”
- en: —Gregory Bledsoe
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: —Gregory Bledsoe
- en: I'm not a big fan of prescriptive frameworks that purport to solve every possible
    problem, because the problem set that we as an industry face changes too rapidly
    for that to be true. Whereas really, everything has to be open to interpretation
    and to change as the context itself changes. What we all want out of a definition
    of DevOps is something that tells us fundamentally what it is but doesn't exclude
    all the new innovations that we haven't even thought of yet that are coming our
    way. We've already got this pipeline of possibilities out there, with the likes
    of serverless and unikernels beginning to make their way into more and more places.
    But the way that we interface with the technology is going to change so unpredictably
    over the next two years that all of that might get thrown out the window for something
    else.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不特别喜欢那些声称能够解决所有问题的规定性框架，因为我们这个行业面临的问题变化得太快，无法做到这一点。事实上，一切都必须对解释和变化保持开放态度，因为上下文本身也在不断变化。我们所期望的DevOps定义，应该是能从根本上告诉我们它是什么，但又不排除那些我们还没有想到的新创新，它们正朝我们走来。我们已经拥有了一个可能性的管道，像无服务器架构和unikernel（微内核）这样的技术，开始进入越来越多的领域。但是，随着我们与技术的交互方式将在未来两年内发生不可预测的变化，所有这一切可能会被完全推翻，换成其他的东西。
- en: A great example is the direct neural interfaces that are starting to come along.
    We've already got artificial reality in the form of virtual reality, as well as
    artificial intelligence. If we feed artificial intelligence feedback directly
    into, say, an artificial reality or a virtual reality environment, then we're
    using a direct neural interface. The issue we have is that we have absolutely
    no idea what the world's going to look like in two years, and we have no idea
    how to adapt our processes to that upcoming change. The fact is, what we all need
    to do is abandon the idea that we can build a five-year roadmap for DevOps because,
    as we've just talked about, we can't even predict two years into the future. Instead,
    what we can do is begin implementing the best practices now, trying to mature
    it as best we can, but to ultimately be ready to reinterpret, unlearn, and relearn
    as quickly as possible.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的例子是直接神经接口的出现。我们已经拥有了虚拟现实形式的人工现实，以及人工智能。如果我们将人工智能的反馈直接输入到，例如，人工现实或虚拟现实环境中，那么我们就是在使用直接神经接口。我们面临的问题是，我们根本不知道两年后的世界会是什么样子，也不知道如何调整我们的流程以适应即将到来的变化。事实上，我们需要做的，是放弃认为我们可以为DevOps制定五年规划的想法，因为，正如我们刚才讨论的，我们甚至无法预测两年后的未来。相反，我们可以做的是，现在开始实施最佳实践，尽力使其成熟，但最终要做好准备，快速地重新解读、忘记并重新学习。
- en: '**Viktor Farcic**: That was a great answer. It''s really good to get behind
    the thinking of the question. The only problem I see, which is similar to when
    you mentioned how we don''t know what''s going to happen in two years, is that
    I get the impression that a large number of companies, especially the bigger ones,
    don''t even know what''s happening today.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：这是一个很棒的答案。从问题背后的思维方式来理解真的是非常好。我看到的唯一问题，类似于你提到的我们无法预测两年后会发生什么的情况，是我有一种印象，许多公司，尤其是大公司，甚至不知道今天发生了什么。'
- en: Passing the baton between generations
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代际之间的接力
- en: '**Gregory Bledsoe**: Do you want to know a secret? The truth is that many of
    the big companies out there don''t actually have an idea what their actual environment
    is today. There are elements of those environments that have become a black box,
    and the people who originally built those elements of that big company''s environment
    have left. The issue is that, now, no one at the company actually knows how that
    element works. The scripts and the deployments are all scriptures that were handed
    down from past generations that in the current generation, nobody really wants
    to dig into and try to change.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷戈里·布莱德索**：你想知道一个秘密吗？事实上，许多大公司实际上并不知道他们现在的环境是什么样的。那些环境的元素已经变成了一个黑箱，而最初构建这些大公司环境元素的人已经离开了。问题是，现在公司里没有人真正知道这些元素是如何运作的。那些脚本和部署，都是从前代人手中传下来的经典，但在当前的这一代中，几乎没人愿意深入挖掘并试图改变它们。'
- en: The holy writs are beyond question. You don't even really know how it works
    after a certain amount of time. So, I think you're exactly right. Even the bigger
    companies don't know what's happening in their own environment today.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 神圣的经典不容置疑。经过一段时间后，你甚至不知道它是如何运作的。所以，我认为你完全正确。即使是大公司，也不知道他们自己环境中今天发生了什么。
- en: '**Viktor Farcic**: That being said, I don''t personally think that''s a bad
    thing. The worst case is that some companies are convinced that they know what''s
    going on today.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：话虽如此，我个人并不认为那是坏事。最糟糕的情况是，有些公司确信他们知道今天发生了什么。'
- en: '**Gregory Bledsoe**: This is one of my big points. I always paint it in a way
    that says the executive management in these companies is sitting at the end of
    a game of Chinese whispers. In the game, you have a long line of people where
    one person whispers something to another person, then the next person whispers
    it to the next person, and so on. The idea is that they''re all trying to whisper
    exactly what they heard, but by the time it comes out the other end—in this case,
    to the executive management—you end up with something radically different, and
    everybody laughs when he or she compares what came out of the two ends.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：这是我其中一个重要的观点。我总是以一种方式表达，说这些公司的高层管理就像在玩“传话游戏”。在这个游戏中，有一长串人，一个人把信息悄悄传给下一个人，然后下一个人再传给下一个人，以此类推。这个游戏的思路是每个人都尽力传达他们听到的内容，但当信息最终传到另一端——在这个情况下是传到高层管理——你会发现信息发生了彻底的变化，当他或她比较两端传出的信息时，大家都会笑。'
- en: 'All of their information is filtered through so many layers, and the incentives
    for filtering are not to be transparent and not to give accurate information.
    So, the best case is that they can''t have the best and most accurate picture
    of what''s happening. Meanwhile, the worst case is that everything has been filtered
    through the lens of: *what does my boss want to hear?* It''s inevitable that,
    at the top of the chain, you have no idea what''s really happening on the ground,
    and the more you think you do, the more you find yourself being wrong. Unless
    you actually measure it—which is one of the components of DevOps—and you''re doing
    culture and satisfaction surveys, you''ll find yourself having to really put some
    deep thought into the metrics that matter.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的信息都经过了如此多层的过滤，而过滤的动机并非是透明的，或者提供准确的信息。所以，最好的情况是，他们无法获得最好的和最准确的关于发生事情的图景。与此同时，最糟糕的情况是，一切信息都被过滤成了：*我的老板想听什么？*
    在链条的顶端，你根本不知道真正发生了什么，而你越是认为自己知道，越会发现自己错了。除非你真的去衡量——这正是DevOps的一部分——并且进行文化和满意度调查，否则你会发现自己不得不深思哪些指标才是重要的。
- en: Furthermore, unless you know that you're validly gathering them and unless you
    know what they mean, and what action you're going to take if measurements go up
    or down, then you really can't have any idea what's happening. We can pretend
    we do, but it's totally impossible. To me, the whole advance of IT in the last
    15 years is starting with extreme programming. And then, with Agile and both the
    formal Agile Manifesto and the Agile principles, it means we're progressively
    learning to stop pretending we know what we don't know.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，除非你知道你在有效地收集信息，且除非你知道这些信息意味着什么，以及如果数据上升或下降你将采取什么行动，否则你根本无法了解发生了什么。我们可以假装知道，但这完全不可能。对我来说，过去15年IT领域的进步始于极限编程。然后，随着敏捷方法和正式的《敏捷宣言》以及敏捷原则，意味着我们在逐步学习停止假装知道我们不知道的事情。
- en: '**Viktor Farcic**: I like that idea of effectively learning to admit when we
    don''t know something.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：我喜欢这种有效地承认我们不知道某些事情的想法。'
- en: '**Gregory Bledsoe**: Right! We''re crushing the hubris of these few people—this
    aristocracy—that are better enabled by education, breeding, birthright, or whatever
    the factor is, that somehow gives them a better ability to make all of the decisions
    and filter all of this information.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：没错！我们正在摧毁这些人的傲慢——这些贵族——他们通过教育、出身、血统或其他某些因素，更容易做出所有的决策并过滤所有这些信息。'
- en: We have to make every decision at the highest point possible because the ones
    at the top are the only ones that actually know what's going on. What we need
    to do is stop pretending that that's true because, in actuality, that's the complete
    opposite of what's true. The real truth is that we need to make every decision
    at the lowest point possible because that's where the accurate information can
    be found.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须在可能的最高点做出每个决策，因为只有在最高层的人才真正知道发生了什么。我们需要做的是停止假装那是真的，因为实际上，那恰恰与真实情况相反。真正的真相是，我们需要在可能的最低点做出每个决策，因为在那里可以找到准确的信息。
- en: Our organizations have to develop an autonomic nervous system, where most of
    the decisions are being made below the level of attention to strategy. If they
    find that the executives have to get involved in day-to-day operations, then there's
    something desperately wrong. Your executives should be doing a meta-analysis,
    setting a strategy and asking the right questions. Then, the alignments to our
    predictive autonomics are all wrong, and that's one of the things where DevOps,
    Agile, and Lean are fundamentally correct.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的组织必须发展出一种自主神经系统，在这个系统中，大部分决策是在低于战略关注层次的地方做出的。如果他们发现高管不得不参与日常运营，那么一定是出了非常严重的问题。你的高管应该做的是进行元分析，制定战略并提出正确的问题。然后，我们的预测性自主神经系统的对齐就会完全错乱，这正是DevOps、敏捷和精益方法从根本上正确的地方。
- en: 'We''re trying to collapse those silos and remove the cover-your-butt culture
    of finger-pointing, credit-taking, and blame-shifting to create these empowered
    cultures where people actually feel like they own a piece of the outcome, and
    not just this tiny little slice of the process. If people are able to solve their
    own problem—and they have to destroy the entire rest of the process—fundamentally,
    they will, because then you get the response of: "It''s not my job; somebody else
    is supposed to worry about that." This is what these cross-functional collaborative
    teams fundamentally solve, by making everyone an owner of the outcome.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在尝试打破这些孤岛，消除那种“保住自己”的文化——指责别人、争功劳、推卸责任——以创造一种赋权文化，让人们真正感到自己拥有成果的一部分，而不仅仅是过程中的一小块。如果人们能够解决自己的问题——并且他们必须摧毁整个其余的过程——从根本上来说，他们会这样做，因为那时你会听到这样的话：“这不是我的工作，应该由别人来担心。”这正是这些跨职能协作团队从根本上解决的问题，它通过让每个人都成为结果的主人来实现。
- en: Nokia – the fall of a giant
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 诺基亚——巨人的陨落
- en: '**Viktor Farcic**: A while ago, I spoke with a friend who worked at Nokia.
    I asked him, is it really possible that Nokia didn''t see the smartphone coming?
    Because you''ll remember that, back in the day, Nokia was at the top of its game.
    Their Nokia 1100 series of phones have, to this day, sold over half a billion
    units and remains—combining the 2003 and 2005 model—one the two most popular handsets
    in the word. In fact, seven out of ten of the best-selling handsets of all time are
    Nokia devices. Yet, in Q4 of 2017, the company only grabbed one percent of the
    market share, shipping only 4.4 million units.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：不久前，我和一位在诺基亚工作的朋友聊过。我问他，诺基亚真的没看到智能手机的到来吗？因为你会记得，曾经诺基亚处于行业顶尖的位置。它的诺基亚1100系列手机，至今已经售出了超过五亿部，依然是——结合2003年和2005年的型号——全球最畅销的两款手机之一。事实上，所有历史上十大畅销手机中，有七款是诺基亚设备。然而，在2017年第四季度，这家公司仅占据了1%的市场份额，仅售出440万部手机。'
- en: 'I asked my friend if it was really possible that Nokia didn''t see the coming
    smartphone wave and the impact smartphones would have on the industry. He answered
    by saying that everyone at Nokia knew what was coming and, more importantly, what
    needed to be done, but nobody dared tell that to management. That''s the crux
    of the problem we have. It''s what I refer to as a cultural artifact because everybody
    knows what the people above them want to hear. They know what they''ll be rewarded
    for, but equally, they also know what they''ll be punished for, and telling upper-management
    the truth and having the hard conversations is something they know they''ll probably
    be punished for. But then, to me, the question is: in such an organization, who
    can actually initiate that change?'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我问我的朋友，诺基亚真的没看到智能手机的浪潮以及智能手机对行业的影响吗？他回答说，诺基亚的每个人都知道即将到来的一切，更重要的是，他们知道该做什么，但没有人敢把这些告诉管理层。这就是我们面临问题的核心。我称之为文化产物，因为每个人都知道上面的人想听什么。他们知道自己会因为什么得到奖励，但同样也知道自己会因为什么受到惩罚，而告诉高层管理真相并进行艰难的对话，是他们知道可能会因此受到惩罚的事。但对我来说，问题是：在这样的组织中，谁能真正发起变革？
- en: Initiating change/taking responsibility
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发起变革/承担责任
- en: '**Gregory Bledsoe**: Everyone and anyone can initiate that change because,
    at the end of the day, it''s all our responsibility. If you''re dancing with your
    dance partner, and you want to change the dance, you can''t force your dance partner
    to change their steps but you can change yours, and when you change yours, your
    partner has to adapt.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：每个人都可以发起变革，因为归根结底，这都是我们的责任。如果你和你的舞伴跳舞，想改变舞蹈，你不能强迫舞伴改变他们的舞步，但你可以改变自己的舞步，而当你改变了自己的舞步，舞伴就必须适应。'
- en: I remember the very first conference I keynoted was themed on overcoming obstacles
    to DevOps. One of the things I pointed out is that anyone can initiate change,
    and there's a ripple of that. If you understand this ripple effect, you can take
    advantage of it. You can identify your allies; you can influence the influencers
    and manage your managers and spread this good change. This is something you can
    do from anywhere in the organization. You're able to inspire people; you can articulate
    the argument in economic and mathematical terms and through measurement. You can
    always start doing that. You can nudge the bar, and that's the only way to do
    it from anywhere in the organization.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我记得我第一次担任主题演讲的是关于克服DevOps障碍的会议。我提到的一点是，任何人都可以发起变化，这种变化会产生涟漪效应。如果你理解这种涟漪效应，你就可以利用它。你可以识别你的盟友；你可以影响有影响力的人，管理你的上司，并传播这种良好的变化。这是你可以在组织的任何地方做的事情。你能够激励他人；你可以用经济和数学术语以及通过测量来阐明论点。你随时可以开始这样做。你可以推动变革的进程，这也是在组织中任何位置上唯一能做到的。
- en: '"Everyone and anyone can initiate that change because, at the end of the day,
    it''s all our responsibility."'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: “每个人都可以发起这种变化，因为最终，这一切都是我们的责任。”
- en: —Gregory Bledsoe
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: —格雷戈里·布莱索
- en: Now, obviously, you can do this more effectively if you already have the positional
    power within the organization. But even from the bottom of the organization—and
    this is one of the things that I feel made me such a good engineer—I was able
    to get people on board with what I wanted to do. I could get people who had no
    personal incentive to help me to accomplish something. Now, why was this? It was
    because we could then both go and sell that to our managers as a part of the value
    that we produced. But I had to sell them on the value; I had to make the economic
    argument.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，显然，如果你已经在组织中拥有职位上的权力，你可以更有效地做这件事。但即便是在组织的底层——这是我觉得让我成为一名优秀工程师的原因之一——我也能让人们认同我想做的事情。我能够让那些没有个人动机帮助我完成某事的人提供支持。那么，为什么会这样呢？因为我们可以把这个共同的目标推销给我们的经理，作为我们所创造的价值的一部分。但我必须让他们认同这个价值，我必须做出经济上的论证。
- en: If you're at the bottom of the organization, making this economic argument and
    starting to change your dance steps by beginning to pull in more collaborators
    and starting to nudge the bar by setting yourself up is designed not to win *today's*
    argument, but to win *tomorrow's* argument by playing the long game. Change is
    incremental, so people don't actually know that things are changing until they
    hit a critical mass of people who want this change. Then, the change becomes inevitable,
    no matter what the executives want.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你处在组织的底层，做出经济论证并开始改变你的舞步，通过引入更多的合作者并开始推动变革的进程，设定自己的位置，目的是不是为了赢得*今天*的争论，而是为了赢得*明天*的争论，通过玩长远的游戏。变革是渐进的，因此人们在真正感受到变化之前，并不会意识到事情已经发生变化，直到有足够多的人希望这种变化。然后，变革就变得不可避免，无论高层管理者希望与否。
- en: 'People who don''t have positional power underestimate the power they do have.
    At the same time, executives underestimate their power as well because they''re
    used to going into a meeting and saying: "Tell me the problem and tell me all
    your potential solutions," then simply asking people to do a given solution. It''s
    a fundamentally backward way of managing, but it''s the customary way we do it.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 没有职位权力的人低估了他们拥有的力量。同时，管理层也低估了他们的权力，因为他们习惯了进入会议后说：“告诉我问题是什么，告诉我所有可能的解决方案，”然后只是让别人执行某个解决方案。这是一种根本上倒退的管理方式，但它却是我们通常采用的方式。
- en: It's the artifact of Taylorism, the idea that, after the Industrial Revolution,
    Frederick Taylor was the only management game in town, and we all absorbed that.
    But it's time to move on. I know I've said it before, but in a large corporation,
    you've got to identify your allies, you have to influence the influencers, and
    you have to manage your manager. If you manage to do all of that, then you can
    start the transformation, and you can lead it at any point in the organization.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是泰勒主义的产物，工业革命后，弗雷德里克·泰勒是唯一的管理思想，大家都接受了这种理念。但现在是时候改变了。我知道我之前说过，但在一个大公司里，你必须识别你的盟友，你必须影响那些有影响力的人，而且你必须管理你的上司。如果你能做到这些，那么你就可以开始转型，并且在组织的任何位置上引领这一变革。
- en: '**Viktor Farcic**: But then, there is the problem of time. When I speak with
    people, and then I start giving them stories, I often get the answer: "Yes, but
    I don''t know what to do. I don''t know where to start, and for 20 years I''ve
    been continuously working on a project that was supposed to be done yesterday."'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：但随之而来的是时间的问题。当我与人交谈，并开始给他们讲故事时，我经常会得到这样的回答：“是的，但我不知道该做什么。我不知道从哪里开始，已经有20年我在持续进行一个原本应该昨天就完成的项目。”'
- en: '**Gregory Bledsoe**: So, that''s another point where you have to make the economic
    argument. This is the Agile principle of sustainable pace. A lot of people who
    are implementing Agile into their projects want to do a flexible scope but fixed
    date, which is actually the opposite of what you want to do. What you want are
    a fixed scope and flexible date. When you do a flexible scope and fixed date,
    you just keep pouring things on people, and those people become overburdened.
    Now, no one has the time to even think about how to make things better, much less
    actually work to make things better. This is another one of the Lean principles,
    where, again, you can make this as an economic argument. You have to sell it to
    your manager, and you have to help your manager sell it to *their* manager.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷戈里·布莱德索**：所以，这是另一个你必须提出经济论点的地方。这是敏捷原则中的可持续步伐。许多实施敏捷的人希望做到灵活范围，但固定日期，这实际上是你不想做的事情。你想要的是固定范围和灵活日期。当你做灵活范围和固定日期时，你只是在不断加重人员的负担，最终这些人变得超负荷工作。现在，没有人有时间去思考如何改进，更别提实际去做改进了。这是精益原则中的另一个方面，在这里，你同样可以把它当作经济论点提出。你必须把它卖给你的经理，并且你必须帮助你的经理把它卖给*他们*的经理。'
- en: '"You have to sell it to your manager, and you have to help your manager sell
    it to their manager."'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: “你必须把它卖给你的经理，并且你必须帮助你的经理把它卖给他们的经理。”
- en: —Gregory Bledsoe
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: — 格雷戈里·布莱德索
- en: What we have to do nowadays is carve out time for improvement. Again, this is
    purely economics. You can make the graph showing that your technical debt grows
    because you're only ever building things and never fixing them. Eventually, that'll
    make the system grind to a halt, where you can't touch anything without breaking
    everything. Over time, the system becomes more fragile. These are economic arguments
    that you can make because they're mathematical and certain; there's not even any
    doubt about this.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们必须做的就是为改进腾出时间。再一次，这完全是经济学问题。你可以绘制一张图表，显示你的技术债务在不断增长，因为你只是一直在构建东西，却从未修复它们。最终，这会导致系统停滞不前，任何你想触及的东西都会把一切弄坏。随着时间的推移，系统变得越来越脆弱。这些都是你可以提出的经济论点，因为它们是数学上的确定性问题，甚至毫无疑问。
- en: '**Viktor Farcic**: So, to change the environment in which they work, people
    need to make the economic argument to their boss?'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇奇**：那么，要改变他们所处的工作环境，人们需要向他们的老板提出经济论点吗？'
- en: '**Gregory Bledsoe**: Exactly. If you want to start changing the environment
    in which you''re working, then you must carve out time for improvement. You have
    to educate yourself on the mathematics and the economics behind the changes that
    need to be made. This is something that you may have to do in your own time because,
    again, you''re underwater with delivery demands.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷戈里·布莱德索**：没错。如果你想开始改变你所处的工作环境，那么你必须为改进腾出时间。你需要了解实施变革背后的数学和经济学原理。这是你可能需要在自己的时间里做的事情，因为再一次，你的交付需求已经让你不堪重负。'
- en: 'Once you start doing that and once you begin making and eventually start winning
    the economic argument, which will happen if you make the argument consistently
    enough because it''s a mathematical certainty, then that''s when you can really
    start to roll out the change. Here''s another fundamental thing about people:
    we copy what works. Even when we don''t know why it works, we''ll still try to
    copy it, and if over time, enough people get it right, we''ll be able to articulate
    why it works. Only then does it start to really be adopted, and the uptake really
    picks up.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你开始这样做，并且当你开始提出并最终赢得经济论点时，这会发生的，因为如果你足够一致地提出这个论点，它是数学上的必然性，那么你就可以真正开始推动变革。关于人们的另一个基本点是：我们会模仿有效的做法。即使我们不知道为什么它有效，我们仍然会尝试模仿，如果随着时间的推移，足够多的人做对了，我们就能够阐明它为什么有效。只有这样，它才会真正开始被采纳，并且采用率会显著提升。
- en: You only have to look at how Edward Deming's theory was rejected in the US because
    they thought they already knew what to do. Edward went to Japan, and suddenly
    Japan started kicking the US manufacturers' butts in the market. Only then did
    the Americans take notice and start trying to copy what Japan was doing, but it
    took them a really long time to adopt that. It wasn't until 30 years later that
    they worked it out because they didn't bother to try to understand why it worked
    fundamentally, they just tried to copy process examples. But the difference was
    far deeper than that.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需要看看爱德华·戴明的理论是如何在美国被拒绝的，因为他们认为自己已经知道该做什么。爱德华去了日本，突然间，日本开始在市场上击败美国制造商。只有那时，美国人才注意到，并开始尝试模仿日本的做法，但他们花了很长时间才采纳这个方法。直到30年后，他们才弄明白，因为他们没有去真正理解为什么它根本有效，他们只是试图模仿过程中的例子。但差别远远不止这些。
- en: What makes the difference between somebody who comes into work and cares about
    the outcome of their work versus somebody who comes in, punches the clock, does
    what they're told, and then leaves, not caring? Drucker and Deming pointed out
    that, if you can take a clock puncher and put him in another environment where
    he becomes invested in the outcome, his performance is totally different. The
    same person in two different cultures will produce vastly different results.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 区分那些在工作中关心结果的人和那些只是在打卡、按指令行事然后离开、毫不在意的人之间的差别是什么？德鲁克和戴明指出，如果你能把一个打卡人放在一个不同的环境中，让他对结果产生投入，他的表现会完全不同。相同的人在两种不同的文化中会产生截然不同的结果。
- en: That's the secret the Japanese learned from Deming really early on, that when
    you take these ideas, and you root them in your cultural soil, it allows you to
    empower people to improve the process. You reward them for pointing out problems,
    instead of punishing them because we don't care about the perception of failure.
    We care about the reality of success.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是日本人从戴明那里早早学到的秘密，当你将这些理念根植于你的文化土壤时，它能让你赋能于人，改进过程。你奖励他们指出问题，而不是惩罚他们，因为我们不在乎失败的感知，我们在乎成功的现实。
- en: '**Viktor Farcic**: But in your view, what prevents us from understanding, instead
    of just blindly copying, things? Is it vanity or a lack of capacity?'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔奇克**：但在你看来，是什么阻碍了我们去理解，而不是盲目模仿事物？是虚荣还是缺乏能力？'
- en: '**Gregory Bledsoe**: It''s a mixture of pride, hubris, vanity, laziness, and
    greed. Nobody wants to say to themselves that the way they''ve run their career
    for the past 15 to 30 years has been wrong and that they''ve managed to succeed
    in a pathological system by adapting to it. But, in today''s world, that''s not
    going to work, so we fundamentally have to change the way we do this. It''s an
    extremely difficult thing to come to grips with. People always want to make the
    economic determination that they want to do the easiest thing. But we''re wired
    that way. We want to do the easiest thing to get the results we want, and if we
    don''t take the time to really try to figure out what is the easiest thing to
    get the results we want, then we do the thing that looks the easiest to us.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷戈里·布莱德索**：这是一种自豪、傲慢、虚荣、懒惰和贪婪的混合体。没有人愿意对自己说，过去15到30年里，他们所经营的事业方式是错误的，而且他们通过适应病态的系统成功了。但在今天的世界里，这样是行不通的，因此我们必须从根本上改变我们的做法。这是一个极其困难的事实。人们总是想做出经济上的决定，选择最容易的做法。但我们天生就是这样。我们想做最容易的事来获得我们想要的结果，如果我们没有花时间真正去弄明白什么是最容易的方式来达成目标，那么我们就会做看起来最简单的事。'
- en: '"Collaboration only ever happens when the incentives are aligned. Misaligned
    incentives are an artifact of corporate culture and the incentive structure produced
    by the silos."'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: “只有当激励机制一致时，合作才会发生。激励不一致是企业文化和由部门壁垒产生的激励结构的产物。”
- en: —Gregory Bledsoe
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: —格雷戈里·布莱德索
- en: 'For example, as a company, we''ll just install Jenkins. We''ll start with tools
    that are trying to copy these process examples. But if that doesn''t work, we''ll
    get a pilot team, give them everything they need for success, and put all of this
    focus on them. We''ve put a lot of attention behind it. We clear out all of the
    obstacles and then, it''s a smashing success and you build this pipeline of continuous
    delivery. But then, you try to replicate those results outside the pilot, and
    you can''t because the pilot had all of the intention and all of the focus on
    clearing the obstacles, and all of the rest of the teams don''t. When the pilot
    team no longer has that, all of the integrations they build in the pipeline break,
    and then it''s like: whose job is it to fix them? Well, it''s nobody''s job because
    integration is a function of collaboration.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，作为一家公司，我们就会安装Jenkins。我们会从尝试复制这些流程示例的工具开始。但如果这不奏效，我们就会组建一个试点团队，给他们成功所需的一切，并把所有的注意力集中在他们身上。我们为此付出了很多努力。我们清除了所有障碍，然后，这就成了一个轰动成功的案例，并且我们建立了一个持续交付的流水线。但接着，你尝试在试点之外复制这些成果时却失败了，因为试点拥有所有的意图和清除障碍的关注，而其他团队并没有。当试点团队不再拥有这些支持时，他们在流水线中构建的所有集成都会中断，这时就变成了：谁负责修复它们？好吧，没人负责，因为集成是协作的功能。
- en: Collaboration only ever happens when the incentives are aligned. Misaligned
    incentives are an artifact of corporate culture and the incentive structure produced
    by the silos. In a nutshell, in order to reorganize your culture, you have to
    attack the incentive structure. But again, it's fundamentally different and not
    at all compatible with how we've always done things, and that's hard to come to
    grips with.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 只有当激励机制一致时，合作才会发生。激励机制不匹配是企业文化和由“信息孤岛”产生的激励结构的产物。简而言之，为了重塑文化，你必须攻击激励结构。但这与我们一直以来的做事方式根本不同，完全不兼容，这让人很难接受。
- en: Fixing the digital transformation
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复数字化转型
- en: '**Viktor Farcic**: Part of what you''re saying reminds me of the digital transformation.
    Every company has been doing the digital transformation potentially for years,
    and they''ve all made a new department but with the same people. They''ve brought
    in Jenkins, Kubernetes, and whatnot, but I''m yet to find any improvement to come
    from those digital transformations. Maybe I''m paranoid, and I''m exaggerating,
    but I just don''t see any improvement.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**维克托·法尔西奇**：你说的部分内容让我想到了数字化转型。每家公司可能已经进行了数字化转型多年，并且都成立了新的部门，但成员依旧是同样的人。他们引入了Jenkins、Kubernetes等工具，但我至今没有看到这些数字化转型带来任何改进。也许我是偏执的，夸大了问题，但我实在看不到任何进展。'
- en: '**Gregory Bledsoe**: Firstly, you''re not paranoid or exaggerating. In a Fortune
    500 company, what you''ve described is normal. These companies have been trying
    to make these changes for years, but they''re in exactly the same position that
    American manufacturing was in, where it''s just not working, and they have no
    idea why, because they fundamentally don''t understand it. Remember Deming? It
    was he who specifically was asked: "Well, if Japan can, why can''t we (America)?"
    He responded by saying that Americans simply expect miracles. They want to copy
    the process examples and expect to get the same results, but the issue here is
    that these companies don''t know what to copy.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷戈里·布莱德索**：首先，你并不是偏执或夸大其词。在一家财富500强公司里，你所描述的情况是正常的。这些公司多年来一直在尝试进行这些变化，但它们的处境和美国制造业当时一样，无法成功，他们也不知道为什么，因为他们从根本上没有理解。还记得德明吗？正是他曾被问到：“如果日本能做到，为什么我们（美国）不能？”他的回答是，美国人只是期待奇迹。他们想复制这些流程示例，并期望得到相同的结果，但问题在于，这些公司不知道该复制什么。'
- en: '"Corporate America is not giving people incentives to collaborate."'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '"美国企业没有给予员工合作的激励。"'
- en: —Gregory Bledsoe
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: —格雷戈里·布莱德索
- en: This is the story of the new digital transformation that's going on right now
    in most of corporate America. There's been no deep thinking or sharing of a vision
    across the organization to build consensus or incentives to collaborate. People
    are putting a lot of work into building this sophisticated automation framework,
    but they're not building a sophisticated collaboration framework that incorporates
    the sharing part of DevOps. Corporate America is not giving people incentives
    to collaborate.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是现在美国大多数企业正在经历的数字化转型故事。整个组织没有进行深入思考或共享愿景以建立共识，也没有激励机制来促进合作。人们在建立复杂的自动化框架上投入了大量工作，但却没有建立一个将DevOps共享部分纳入其中的复杂协作框架。美国企业没有给予员工合作的激励。
- en: But at the same time, the people that you want to give incentives to in order
    to collaborate don't necessarily understand the secret sauce either. You can make
    them sit in a feature refinement meeting, but you can't make them start thinking
    about what they actually need to do together until the work arrives on somebody's
    desk as a work item. That's what they're used to doing. We wait for it to be thrown
    over the wall to us, and then we start thinking about what we actually need to
    do with it. But the whole purpose of feature refinement, story refinement, and
    Agile is that we want to start unearthing as early as possible what we don't know
    that we need to know.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 但与此同时，你希望激励合作的人并不一定理解其中的关键因素。你可以让他们参加功能细化会议，但直到工作被分配到某人的桌面作为工作项，他们才会开始思考实际上需要一起做什么。这是他们习惯的做法。我们等着工作被“抛过墙”给我们，然后才开始思考我们到底需要怎么做。但功能细化、故事细化和敏捷的整体目的是，我们希望尽早发现我们不知道但需要知道的内容。
- en: '**Viktor Farcic**: So, how do we go about fixing this? Because, to me, it sounds
    like this would solve a lot of the issues we''ve been talking about.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，我们该如何解决这个问题呢？对我来说，这听起来像是能解决我们所谈论的许多问题。'
- en: '**Greg Bledsoe**: We need to start using a shift-left mentality. I''ve sat
    in story feature refinement meetings where nobody asks any questions, and nobody
    has anything to say. The first meeting has just burned. It''s useless because
    people are used to just waiting for work. For instance, the developer will open
    up the IDE, start a big `if` loop, and then start thinking about how he actually
    needs to do the work to accomplish this. But by this point, it''s way too late.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**Greg Bledsoe**：我们需要开始采用左移思维。我曾参加过故事功能细化会议，在会议中没有人提问，也没有人发表意见。第一次会议完全浪费了。它没有意义，因为人们习惯于只是等待工作。例如，开发者打开
    IDE，开始写一个大的`if`循环，然后才开始思考自己到底需要怎么做才能完成这项工作。但此时已经太晚了。'
- en: You're still going to run into the same problems that you would in a Waterfall
    culture, where you don't understand that you didn't have everything you needed.
    But now, at the last second, everybody's going to be scrambling to try to make
    things work and make fundamental changes to the other components. The whole point
    is to develop as early as possible.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你仍然会遇到在瀑布文化中一样的问题，就是你没有意识到你没有所需的一切。但现在，在最后一刻，每个人都会开始拼命地尝试让事情运作，做出根本性的改变来适应其他组件。关键是要尽早开始开发。
- en: Changing that mindset from the top down is not an easy move, but it's the first
    thing you must do in order to understand how it has to change. We haven't even
    cleared this hurdle most of the time, but what does an empowered, collaborative
    culture mean? People are trying to do these digital transformations, but they
    don't even understand what it should look like from the ground level. You can't
    make changes on the ground that are all going in the same direction without a
    grand vision. But a grand vision without understanding how that also affects people
    on the ground is useless. It has to come from both directions, and this where
    your collaborative framework has to come into play.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 从上到下改变这种思维方式并不是一件容易的事情，但它是你必须做的第一件事，才能理解如何改变。我们大多数时候甚至还没有跨过这个障碍，但什么是赋能的协作文化呢？人们正在尝试做这些数字化转型，但他们甚至不理解从基层来看它应该是什么样子。没有一个宏大的愿景，你无法在基层进行一致的变革。但是没有理解这些变革如何影响基层人的宏大愿景是没有用的。它必须来自两个方向，这就是你的协作框架必须发挥作用的地方。
- en: '**Viktor Farcic**: But then, we have a third influence, which I see as an external
    one. Let''s say I brought in this tool that''s supposed to make me DevOps certified.
    Or likewise I brought in this consultant, and we''re doing daily stand-ups. I
    get the impression that you go to conferences a lot, where everybody''s trying
    to sell the nirvana these days.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但是，接下来我们面临第三个影响，我认为这是外部的影响。假设我引入了一个工具，目的是让自己获得 DevOps 认证。或者我引入了这个顾问，我们开始做每日站立会议。我有一种感觉，就是你经常参加各种会议，大家都在试图推销这些“天堂”。'
- en: '**Gregory Bledsoe**: Of course, there''s truth in that. There''s a big market
    in telling people what they want to hear. The easiest way to sell something is
    tell them that you have a magic bullet that''s going to solve all of their problems,
    and they''ll eat it up saying: "Oh, yay! We''re going to buy into this!" But that
    doesn''t work because the person who''s buying it didn''t know what questions
    they needed to ask, and the person who''s selling it, at that point, has already
    made the sale. But by then they''ve already got their foot in the door, and the
    more it fails, the more they get to charge. This incentive structure is fundamentally
    misaligned.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷戈里·布莱德索**：当然，这其中有一定的道理。向人们说他们想听的话的市场确实很大。卖东西最简单的方式，就是告诉他们你有一个灵丹妙药，能解决他们所有的问题，他们就会欣然接受，甚至说：“哦，太好了！我们要买这个！”但这种方式行不通，因为购买者并不知道他们需要问什么问题，而销售者此时已经达成了交易。但到了那时，他们已经把脚插进了门里，而随着更多的失败，他们就能收取更多费用。这种激励结构从根本上是错误的。'
- en: 'The market for telling people what they want to hear is too big, and there
    are too many people willing to sell into that market. We''ve got to change this
    from both ends. As consultants, if we want to really change the way this works
    and, as a result, maximize our value to the client, then we have to sell in a
    fundamentally different way. We have to go into the account and give them the
    hard truths right up front and get them used to hearing that from us rather than
    thinking: we''ll just tell them what they want to hear. We''ll promise them we
    can do anything, and then once we''re in the door, we''ll start trying to have
    the hard conversations with them. That simply doesn''t work because, now, you''ll
    just get subsumed into their culture, and you can''t change their culture. You''ll
    just get into the *yes* culture because they don''t want to hear anything at that
    point. All they want to hear is yes, and you can''t change it. You got off on
    the wrong foot, and that''s really hard to change. As consultants, we have to
    approach these client relationships differently. We have to be willing to tell
    them the hard truths right up front, and get them used to the fact that that''s
    what they''re going to get from us. But the thing is, after the initial shock,
    people really appreciate that honesty, and they understand that, now, they''re
    attacking the right problems.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 向人们说他们想听的话的市场太大了，有太多人愿意进入这个市场。我们必须从两个方面来改变这一点。作为顾问，如果我们真的想改变这种工作方式，从而最大化我们为客户创造的价值，那么我们必须以根本不同的方式进行销售。我们必须进入客户账户，直接告诉他们艰难的事实，让他们习惯听我们说真话，而不是想着：我们只会告诉他们他们想听的话。我们会答应他们能做任何事，然后一旦我们进入了，他们开始试图与客户进行艰难的对话。但这种方式行不通，因为现在，你会被他们的文化吞噬，而你无法改变他们的文化。你最终只能融入到*是的*的文化里，因为此时他们什么也不想听了。他们只想听到“是的”，你是无法改变这一点的。你一开始就搞错了方向，而这很难改变。作为顾问，我们必须以不同的方式处理这些客户关系。我们必须愿意直接告诉他们真相，让他们习惯接受我们会直言不讳。但事实是，初始的震惊过后，人们会非常感激这种诚实，他们明白，自己现在正在解决正确的问题。
- en: 'In DevOps, we work with three things: people, process, and tools—in that order.
    There''s a reason for this order, because people drive the process. Once you understand
    what your process should be, you then have to find the tools that fill the gaps
    in your process and help you to both eliminate waste and reduce the wait time
    and friction. But the real problem is that it''s too easy to buy a tool and then
    try to build a process around it and even force people to use it.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 中，我们处理三件事：人、流程和工具——顺序是有原因的，因为人推动着流程。一旦你理解了流程应该是什么样的，你就需要找到填补流程空白的工具，帮助你消除浪费、减少等待时间和摩擦。但是，真正的问题是，买个工具后，往往太容易围绕它去构建流程，甚至强迫人们使用它。
- en: '"The market for telling people what they want to hear is too big, and there
    are too many people willing to sell into that market. We''ve got to change this
    from both ends."'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '"向人们说他们想听的话的市场太大了，有太多人愿意进入这个市场。我们必须从两个方面来改变这一点。"'
- en: —Gregory Bledsoe
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: —格雷戈里·布莱德索
- en: '**Viktor Farcic**: But that''s the thing. In my view, almost every tool is
    a result of somebody''s process and culture, Kubernetes being a prime example.
    It''s about different organizations that end up in a platform. One thing I don''t
    understand is how people assume that something made in a completely different
    culture will work in their culture.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: You''ve just hit the nail on the head. The simple answer
    is that it won''t. The first thing you have to understand is: What''s the idea
    in the context of your culture, in the context of your organization''s values,
    and in the context of your organization''s specific business context? What''s
    the process that you need? What''s the idea for you to deliver value with the
    least wait time? Only when you''ve answered those questions do you go looking
    for the tools you need. You''ve got to ask the fundamental existential questions
    first: Why do we exist? What is the reason people are going to give us money?
    How do we pay off on that value as efficiently as possible? If you don''t start
    with those questions, you can''t get to the right answers.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Agile versus DevOps – is there any difference?
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Viktor Farcic**: But then if you ignore the implementation on conceptual
    grounds, is there any real difference between Agile and DevOps?'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: Yes, there is. Accenture has recently bought SolutionsIQ,
    a consulting organization that specializes in building business agility. SolutionsIQ
    is really good at developing those deep and trusted relationships, where they''re
    telling people the hard truths and helping them to incrementally move toward a
    less pathological and more empirical structure and delivery chain.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'SolutionsIQ views DevOps as a delivery method for your Agile infrastructure
    and process, which is not wrong. But I view DevOps as encompassing Agile and extending
    it because DevOps took a lot of stuff from Agile in the first place. For example,
    the cross-functional collaborative team: we''ve extended that. We collapsed additional
    silos because we wanted the development in the business to work really well together
    in Agile. Then, with DevOps, at first, we wanted the development and the operations
    guys to work really well together. But then we said: "Well, why should we stop
    there?" By this point, you''re now realizing that you''ve also got to bring in
    the monitoring and security guys, and before long, you realize you''ve also got
    to bring in the testers, and then pretty much everybody else. You''ve just got
    to extend the width of that collaboration and get everybody shifting left to solve
    all the problems as early as possible because, if it doesn''t work that well,
    trying to bolt security on at the end doesn''t work either. You''ve got to change
    that and shift it all left. That''s the DevOps mentality, which embraces an extended Agile.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Agile and DevOps are the peanut butter and jelly in a Lean sandwich. They really
    go well together, and you can't be super-successful with one without the other,
    though this allusion may not work everywhere. In Germany, you could say, for example,
    it's like bratwurst and sauerkraut. The point is, Agile and DevOps complement
    and extend each other really well.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷和DevOps就像精益三明治中的花生酱和果酱。它们真的非常契合，不能单独依赖其中之一而取得巨大的成功，尽管这个比喻可能并不适用于所有地方。在德国，你可以说，这就像是香肠和酸菜。关键是，敏捷和DevOps相辅相成，能够很好地扩展彼此的优势。
- en: Interestingly, another problem I've noticed is that people who buy into a prescriptive
    Agile framework really get married to the cadence, the pace, and the experience.
    But with DevOps, you'll get to a point where you don't have to wait on the sprint
    to be able to deliver; you're able to deliver everything as soon as it's ready.
    When it's ready for production, it goes to production, and then you want to shorten
    the time it takes to get something ready for production. In my view, as you mature
    with DevOps and Agile, the sprint cycle can dissolve into continuous delivery.
    But you'll hit a wall if you're married to that prescriptive framework, and this
    is why I don't like them. You can use them as a guideline, but they're not scripture,
    and they're not holy. There's nothing that they teach you. All of the elements
    of Scrum and Kanban were made to teach principles, not to be the end-all and be-all
    mechanism.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，我注意到的另一个问题是，那些完全接受规定性敏捷框架的人，真的会对节奏、步伐和体验产生依赖。但是在DevOps中，你会到达一个阶段，你不必等到冲刺才能交付；你可以在一切准备好时立即交付。当它准备好进入生产环境时，就进入生产环境，之后你要做的就是缩短准备生产所需的时间。在我看来，随着你在DevOps和敏捷方面的成熟，冲刺周期可以融入持续交付。但如果你死死依赖那个规定性的框架，你就会碰壁，这也是我不喜欢它们的原因。你可以把它们当作指导方针，但它们不是经典，也不是神圣的。它们没有教给你任何东西。Scrum和看板中的所有元素都是为了教你原则，而不是成为终极的机制。
- en: '**Viktor Farcic**: But they might be made to teach principles. I''ve not seen
    that in practice. I mean, people often say, "Oh, I''ll do Agile." Well no, because
    out of those principles, we''re not practicing this one.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但它们可能是为了教你原则而设的。我在实践中没见过这样的情况。我的意思是，人们常常说：“哦，我会做敏捷。” 但事实上没有，因为从那些原则中，我们并没有在实践这个。'
- en: '"In my view, as you mature with DevOps and Agile, the sprint cycle can dissolve
    into continuous delivery. But you''ll hit a wall if you''re married to that prescriptive
    framework, and this is why I don''t like them."'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '"在我看来，随着你在DevOps和敏捷方面的成熟，冲刺周期可以融入持续交付。但如果你死死依赖那个规定性的框架，你就会碰壁，这也是我不喜欢它们的原因。"'
- en: —Gregory Bledsoe
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: —Gregory Bledsoe
- en: '**Gregory Bledsoe**: That''s right, and it''s why when you''re trying to do
    something new, a prescriptive framework can be helpful for a period of time. But
    it''s also important to know when its value has declined to the point where the
    amount of waste and overhead it introduces has now outweighed the benefits. The
    issue is that it''s a calculation that is difficult and different for every organization.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：没错，这也是为什么当你尝试做一些新事物时，一个规定性的框架在一段时间内可能是有帮助的。但同样重要的是要知道，什么时候它的价值已经下降到一个地步，所引入的浪费和开销已经超过了它带来的好处。问题在于，这是一个对每个组织都不同且难以计算的难题。'
- en: A prescriptive framework could get you away from the Waterfall culture, and
    to completely remove yourself mentally from Waterfall can be good, but you have
    to go beyond just those basic prescriptive elements. You have to adapt it to your
    organization, just like DevOps. But as we've said before, there's no one true
    way of DevOps. You have to adapt it to your organization. And that's the other
    big problem with DevOps implementations. People want to be told exactly what to
    do all of the time. They want to be in a world where someone else has to do all
    the thinking for them, but the answer is no. You have to get everybody in your
    organization thinking about these, and that's how you're going to get the best
    possible answers.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一个规定性的框架可以帮助你摆脱瀑布模型的文化，完全从心理上脱离瀑布是有益的，但你必须超越这些基本的规定性元素。你需要根据你的组织进行调整，就像DevOps一样。但正如我们之前所说，没有一种适用于所有的DevOps方式。你必须根据你的组织来适应它。这也是DevOps实施中另一个大的问题。人们总是希望有人告诉他们具体该做什么。它们希望生活在一个别人为他们思考的世界中，但答案是否定的。你需要让组织中的每个人都去思考这些问题，只有这样你才能得到最佳的答案。
- en: '**Viktor Farcic**: But isn''t that a vicious circle? You have a minority of
    people trying to change a majority of people that are entrenched into that old
    way of working. Then, in the case of the minority managing to change something,
    they''ve started doing the same thing because now, nobody moves from this new
    position.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：但这不就是一个恶性循环吗？少数人试图改变大多数固守旧有工作方式的人。然后，如果少数人成功改变了一些东西，他们又开始做同样的事，因为现在没有人会从这个新的位置上移动。'
- en: '**Gregory Bledsoe**: It can become a vicious circle. There are very important
    anthropological and sociological reasons why beliefs and habits stick, and we
    have what you can call the sameness or the consistency bias. The idea is that
    we want today and tomorrow to be the same as yesterday because we already understand
    the threats and opportunities of yesterday, and to have to continually refactor
    our own cognitive mechanisms to deal with new threats and new opportunities is
    hard. We''re entering the age of exponential change, where every day will look
    more different than the day before, and until we can develop that systematic way
    of empirically validating your change—when you do that, then it''s much less scary.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：这可能会变成一个恶性循环。有一些非常重要的人类学和社会学原因，解释了为什么信仰和习惯会固守，而且我们有一个可以称之为相同性或一致性偏见的东西。这个观点是，我们希望今天和明天与昨天相同，因为我们已经理解了昨天的威胁和机遇，而不断重新调整我们的认知机制以应对新的威胁和机遇是非常困难的。我们正进入指数变化的时代，在这个时代，每一天都将比前一天更不同，直到我们能够发展出一种系统化的方式来经验性验证你的变化——当你做到这一点时，改变就不再那么可怕了。'
- en: Take the cycle of innovation, and the original amount of time it took for innovation
    to spread and be built upon was a millennium. But then, it went to centuries and
    then decades, years, and now it's just months. Before long it'll be weeks, and
    then days before finally, innovation will be instantaneous and without pause.
    Why? Because we're entering an age of exponential change. We have to understand
    why it's hard for us to adapt, to change, and we have to understand that change
    can't be unanchored from our superstructures because we have these kinds of cultural
    and ideological superstructures that give us things such as values and ethics.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以创新的周期为例，最初创新传播和被构建所需的时间是千年。然而，后来它变成了几个世纪，接着是几十年、几年，现在已经缩短到了几个月。不久之后，它会变成几周，接着是几天，最终创新将会是瞬时的、没有暂停的。为什么？因为我们正在进入一个指数变化的时代。我们必须理解为什么我们很难适应、改变，我们必须明白，变革不能脱离我们的超结构，因为我们有这种文化和意识形态的超结构，它们赋予我们像价值观和伦理这样的东西。
- en: In the 20th century, we learned that when you try to change everything all at
    once, and when you try to detach from all of those superstructures, the results
    you get may not be that good. You just have to look at how, in the 20th century,
    200 million people were killed by their own governments, who tried to detach from
    all of the superstructures of society. So, the key for us is that we have to not
    only learn how to manage this change but also how to embrace it.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在20世纪，我们学到，当你试图一口气改变所有东西，且尝试脱离所有这些超结构时，得到的结果可能并不好。只需看看20世纪，200 million人被他们自己的政府杀害，而这些政府试图脱离社会的所有超结构。因此，对我们来说，关键是我们不仅要学会如何管理这种变化，还要学会如何拥抱它。
- en: '**Viktor Farcic**: Is that something we can even stop?'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这难道不是我们无法停止的事情吗？'
- en: '**Greg Bledsoe**: The thing is we can''t stop it. It''s going to happen. What
    we need to do is to anchor it to something, and that anchor has to be our values.
    But the issue with this is that we have to understand what that looks like, and,
    for a lot of people, that means going all the way back to an Enlightenment philosophy.
    It''s the reason why these conference talks, books, and podcasts are akin to a
    dark intellectual web tied together into forming new superstructures. These new
    superstructures that are going to guide us into the age of unprecedented exponential
    change are anchored to modernity and Enlightenment values, and we''re returning
    to that, and we see that it really works. I feel like we''re now entering the
    post-post-modernist age, and that the counter-counter-revolution is, as a result,
    beginning. But the key here is that DevOps is the tip of the spear of all of that.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**Greg Bledsoe**：关键是我们无法阻止它，它必然会发生。我们需要做的，就是把它锚定到某个东西上，而这个锚必须是我们的价值观。但问题在于，我们必须理解这个价值观是什么，对于很多人来说，这意味着要回到启蒙时代的哲学。这也是为什么这些会议演讲、书籍和播客类似于一个黑暗的知识网络，互相联系形成新的超级结构。这些将引导我们进入前所未有的指数级变化时代的新超级结构，锚定于现代性和启蒙时代的价值观，我们正在回归这些价值观，发现它们确实有效。我觉得我们现在进入了后后现代主义时代，反反革命因此也开始了。但关键是，DevOps是这一切的尖端。'
- en: I know that's kind of grandiose, but when you really start to get why all of
    this works, you'll see it works for the same reason that Western liberal democracy
    works. Empowering the individual and tying the success of the society to the success
    and freedom of the individual, their empowerment, and their sense of ownership
    over their own life is super-powerful. The standard of living in the world today
    is ridiculous, compared to what it was just a hundred years ago, and we're not
    really even celebrating that because we're too busy worrying about all of the
    things that are still bad. But if we can embrace this change and this new kind
    of post-post-modernism, then we can even accelerate that good change. If that's
    the case, then who knows where it can go?
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道这听起来有些宏大，但当你真正理解这一切如何运作时，你会发现它与西方自由民主的运作原理是一样的。赋能个人，并将社会的成功与个人的成功和自由联系起来，让个人感到被赋权，并对自己生活的掌控感，是非常强大的。与一百年前相比，今天世界上的生活水平简直难以置信，而我们几乎没有庆祝这一点，因为我们太忙于担忧那些仍然糟糕的事情。但如果我们能够接受这种变化和这种新的后后现代主义，那么我们甚至可以加速这种积极的变化。如果是这样，那谁知道它会走到哪里呢？
- en: DevOps in 2019 – success or failure?
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2019年的DevOps——成功还是失败？
- en: '**Viktor Farcic**: But would you say that DevOps in 2019 is a success story?
    Can I go to a company, and say: "Look, a lot of people are on board, and they
    saw success, and as a result, they''re doing great. It''s only you who''s missing
    the train." Or, have we just seen the start of the transformation, and we''re
    yet to see real adoption?'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么你会说2019年的DevOps是一个成功的故事吗？我可以去一家公司，然后说：“看，很多人都参与了，他们取得了成功，因此他们做得很棒。只有你没有跟上潮流。”还是说，我们只是看到了转型的开始，真正的普及还未到来？'
- en: '**Gregory Bledsoe**: In most cases, the adoption is superficial. It''s trying
    to slap a process example on top of a pathological culture because cultures are
    built accidentally. Almost no one intentionally builds the culture they want,
    with a goal in mind. It''s an accretion of reactions to events. That''s how cultures
    normally accrue. To consciously deconstruct and reconstruct that is hard, which
    is a big part of what a true transformation is. There''s a tiny minority of people
    who are intentionally trying to do that. That''s got to be the next way that will
    unlock the winners from the losers because the market advantage you get from doing
    that is tremendous. You''ll outpace your competitors. You have to because you''re
    applying the maximum amount of brain power to every problem. That''s one of the
    real secrets.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：在大多数情况下，采纳是表面的。它试图将一个过程示例强加于一个病态文化上，因为文化是偶然形成的。几乎没有人是有意去构建他们想要的文化的，通常都没有目标。这是对事件的反应的积累。文化的形成通常是这样的。要有意识地解构并重建它是困难的，这也是真正转型的一个重要部分。只有少数人有意识地去做这一点。那一定是解锁赢家与输家的下一步，因为这样做所带来的市场优势是巨大的。你将超过你的竞争对手。你必须这么做，因为你正在将最强大的脑力投入到每一个问题中。这是其中的一个真正的秘诀。'
- en: It may be that your executives are the smartest people in the room, or maybe
    not, but the smartest person in the room is not smarter than all of the other
    people in the room put together. When nobody wants to speak up because he or she
    knows that the smartest person in the room doesn't want to hear something, then
    you're locking out all of this problem-solving power. This is why markets work
    better than central planning because the smartest central planner in the world
    can't be smarter than every other person navigating the market.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你的高管是房间里最聪明的人，或者也许不是，但房间里最聪明的人不可能比所有其他人加起来更聪明。当没人敢发声，因为他们知道房间里最聪明的人不愿意听某些话时，你就会锁死所有这些解决问题的能力。这就是为什么市场比中央计划更有效的原因，因为世界上最聪明的中央计划者也不能比市场上其他所有人加起来更聪明。
- en: Their collective intelligence is an emergent property. In many ways, it's like
    an ant colony. An ant colony is an emergent property, from every individual just
    doing very simple things based on his own instinct and their designated duties.
    He's following pheromone trails, and he's carrying food. But the ant colony as
    a whole is extremely efficient and intelligent in a similar way to how markets
    are. What we need to do is have our organizations turn into that. Because organizations
    that can successfully transform into that have to be more successful, it's a mathematical
    certainty.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的集体智慧是一种涌现特性。从很多方面来说，这就像是蚂蚁群体。蚂蚁群体是一个涌现特性，每只蚂蚁都在根据自身的本能和指定的职责做非常简单的事情。它在跟随信息素的踪迹，携带食物。但整个蚂蚁群体在整体上是极其高效和聪明的，类似于市场的运作方式。我们需要做的是让我们的组织转变成这样的形态。因为那些能够成功转型为这种形态的组织一定会更成功，这是一个数学上的必然。
- en: '**Viktor Farcic**: Does that mean the future lies in moving from pyramidal
    structures towards something flatter?'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：这是不是意味着未来的趋势是从金字塔型结构向更扁平化的结构转变？'
- en: '**Gregory Bledsoe**: Yes, because I believe we''re going to move away from
    hierarchy to meritocracy in our organizations. The concept of holacracy is out
    there, and I do think people are experimenting with it. I don''t know if holacracy
    is exactly what we''re going to end up with, but we''re going to end up with some
    kind of empowered constitutional organization where everyone is empowered to be
    the boss of his or her job. I think this is the ultimate expression, and that
    any organization can move toward this. I don''t know if it''s going to be official
    holacracy, something similar, or something very different. But the thing is, any
    leader within an organization can voluntarily stop using coercion and start using
    inspiration.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：是的，因为我相信我们将从等级制度转向基于能力的制度。Holacracy（全员自治）这一概念已经被提出，我确实认为人们正在进行相关实验。我不确定
    Holacracy 是否就是我们最终会采用的模式，但我们最终会形成某种赋能的宪法型组织，在这种组织中，每个人都有权成为自己工作的老板。我认为这是一种极致的表达，任何组织都可以朝这个方向发展。我不知道这是不是会成为正式的
    Holacracy，或者是类似的东西，或是完全不同的东西。但问题是，任何组织中的领导者都可以自愿停止使用强制力，开始使用激励与启发。'
- en: That's true leadership instead of management, and when you start doing that,
    you automatically start flattening out the hierarchy, and you automatically start
    building more meritocracy. So, it's possible that, when we start selecting leaders
    differently for different qualities, then this could happen without something
    official like holacracy. But it is going to be the difference between the organizations
    that live and the organizations that die.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这才是真正的领导力，而不是管理。当你开始这样做时，你自然会开始扁平化层级结构，并且你也会自然开始构建更多的基于能力的机制。所以，可能当我们开始根据不同的素质来选拔领导者时，这种情况就会在没有像
    Holacracy 这样正式的框架下发生。但这将是生存下来的组织与死掉的组织之间的区别。
- en: '**Viktor Farcic**: Exactly. Speaking of the future, what do you think is waiting
    for us? I''m not going to ask you to project ten years into the future because,
    as we talked about earlier, we don''t even know what''s going to happen in two
    years.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：没错。说到未来，你觉得未来会给我们带来什么？我不会让你预测十年后的事情，因为正如我们之前讨论的，我们甚至不知道两年后会发生什么。'
- en: Predicting the future of DevOps
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测 DevOps 的未来
- en: '**Gregory Bledsoe**: Who knows? There are a few short and longer-term things
    that I really do think we can predict. I think the DevSecOps term is going to
    go away. People are going to realize that DevSecOps is really about maturing DevOps,
    where you didn''t forget that security was a thing, and where you''re shifting
    that left and including them in the design discussion. People will be able to ask
    questions like: "Well, this looks like an opportunity for a SQL injection. Have
    you thought about that?"'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：谁知道呢？有一些短期和长期的事情，我确实认为我们可以预测。我认为“DevSecOps”这个术语将会消失。人们会意识到，DevSecOps实际上是对DevOps的成熟过程，在这个过程中，你没有忘记安全性是一个问题，并且你在将其提前并纳入设计讨论中。人们将能够提出这样的问题：“嗯，这看起来像是一个SQL注入的机会。你有考虑过这个吗？”'
- en: A pet peeve of mine is that SQL injection still exists because that question
    isn't asked in development. Developers are not incentivized to worry about security,
    and they're too far underwater to think about that in addition to just getting
    the feature out the door. That has to change, and that will radically alter security.
    DevSecOps is a good maturing DevOps, where you're shifting left. I think that
    term is going to be subsumed into DevOps. Right now, it's a term because people
    are discovering that we have to include security, we have to include compliance,
    and we have to include an audit because it's the only way we can adapt at scale.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个个人痛点，就是SQL注入仍然存在，因为在开发过程中没有问过这个问题。开发人员没有动力去关心安全问题，他们也深陷其中，无法在完成功能发布的同时去考虑安全问题。这必须改变，这将彻底改变安全性。DevSecOps是对DevOps的良好成熟，它是在将安全性提前。我认为这个术语将被并入到DevOps中。现在，它之所以成为一个术语，是因为人们正在发现我们必须将安全性、合规性和审计纳入其中，因为这是我们能够在大规模上适应的唯一方式。
- en: '**Viktor Farcic**: But what about the term DevOps? Do you think that the word
    will still have the same meaning in the future?'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**Viktor Farcic**：那么，DevOps这个术语呢？你认为将来这个词的含义还会保持不变吗？'
- en: '**Gregory Bledsoe**: I think the term DevOps will become synonymous with IT
    because everyone will at least understand that this is the way you do it now,
    and if you don''t do it this way, you''re doing it wrong. I think this is going
    to become understood, and that''s still going to leave a stratification of results.
    Some people are going to do it much better than others, and those who can unlearn
    and relearn the fastest will gain a sustained competitive advantage. They''ll
    be out in front of the pack, and that reason is why it''s imperative that people
    embrace and adopt this now. The longer you wait, the worse your odds. It doesn''t
    matter how deep the moat around your business is.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gregory Bledsoe**：我认为“DevOps”这个术语将成为IT的同义词，因为每个人都会至少明白，现在就是这样做的，如果你不这样做，那就是做错了。我认为这将被普遍理解，而这仍然会导致结果的分化。有些人会做得比其他人好得多，那些能够最快忘记旧的做法并重新学习的人将获得持续的竞争优势。他们将站在前列，这也是为什么人们现在必须拥抱并采纳这一做法的原因。你等得越久，成功的几率就越低。这并不取决于你业务周围护城河有多深。'
- en: '"DevOps will become synonymous with IT because everyone will at least understand
    that this is the way you do it now, and if you don''t do it this way, you''re
    doing it wrong."'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps将成为IT的同义词，因为每个人都会至少明白，现在就是这样做的，如果你不这样做，那就是做错了。”
- en: —Gregory Bledsoe
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: —Gregory Bledsoe
- en: Look at the big banks. They've got huge regulatory moats around their businesses,
    but it's not saving them. They're still getting chipped away, and the banks that
    can adapt are the ones that are going to be able to fend off the FinTechs. Look
    at the transportation or the hotel industry across the board. They thought having
    bought all of these properties was their hedge against the market, but their real
    competitor now doesn't even own any property, it's Airbnb. The cost to enter markets
    is lower than it's ever been, and it's only going to get lower.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 看看那些大银行。它们的业务周围有巨大的监管护城河，但这并没有拯救它们。它们仍然在被一点一点蚕食，能够适应的银行才是能够抵御金融科技（FinTech）挑战的银行。看看交通行业或酒店行业的整体情况。它们曾认为收购了所有这些物业就是对抗市场的对冲，但现在它们真正的竞争对手甚至没有拥有任何物业，而是Airbnb。进入市场的成本比以往任何时候都低，而且只会变得更低。
- en: For communication, it doesn't matter if you own the right of way to run cables
    through neighborhoods and nobody else has that and you think that's your moat
    because 5G is coming. 5G will change the game, and those services that you offer
    over physical wires and physical fiber optics are going to mean less than ever,
    and the barrier to entry will be lower than ever. Everyone is going to be disrupted,
    and it's just a matter of whether you're going to disrupt yourself, or whether
    an external competitor's going to disrupt you. The people who figure that out
    and understand they have to adapt to this exponential change will survive, and
    everyone else will die. That's the long-term prediction.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '**Viktor Farcic**: But after you get disrupted, is there still time to survive?'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: Yes, there is that window but it''s shortening, and we
    don''t actually know how short a window it is, which is why everyone has to get
    started now. The ones who are going to really put themselves in a position to
    be future-proof are the ones who are asking those existential questions, the ones
    who are bothering to think deeply about this. They''re the ones who are going
    to be positioned to succeed.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: You can't just start by saying "OK, we can't survive without DevOps, so let's
    put Jenkins everywhere; but then let's create a silo to manage." You've just exacerbated
    your fundamental problem. The people who know that's not the way you do this and
    that it's really Deming's 14 points, the most important of which is to turn everyone
    into an agent of transformation, are the ones who are going to succeed and be
    able to best navigate the age of exponential change.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '**Viktor Farcic**: Absolutely true and especially when you mention Jenkins.
    I continuously visit companies, and no developers can ever touch it.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: It has to be that if you build it, you run it.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '**Viktor Farcic**: Exactly. But it''s difficult because it''s a revolution.
    If there is a power struggle, you can''t tell me if I build the entire vanity
    factory that would mean that I was running it yesterday.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: It''s true. The power struggle is not just organizational,
    but ideological. It''s scientific management or Taylorism versus Lean, that''s
    what it is. The ones who embrace Lean and succeed at changing the minds of everybody
    in the organization, that''s the trick right there.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '**Viktor Farcic**: But how much more time do we need, because it''s been a
    while since software started and we still think that it''s a factory.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: Let me put it to you like this. Back in 2014, somebody
    figured out that 75 years ago, the average lifespan of a company on the Fortune
    500 list was 75 years. Fast-forward to 2014, and it was down to 10 years. These
    companies were being replaced by new and more agile companies that were still
    trying to expand their markets.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: That's another secret that I think people don't really understand, that the
    moment you stop trying to expand your markets and start trying to protect them,
    you're optimizing for protecting markets over expanding markets, and you've already
    started to die. There are smaller, nimbler companies with much less overhead and
    infrastructure waiting to feast upon your corpse before you're even done dying.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: You're putting your leg in the piranha pool, and the piranhas are hungry. It's
    not the big fish that eat the little fish; it's the fast fish that eat the slow
    fish. We're going to see that the turnover among the Fortune 100 and the Fortune
    500 companies is going to be huge. I think the average lifespan is going to go
    down to 5 years, to 3 years, and then you're going to see a huge turnover on these
    lists. So, how much time do we have? Well, the rest of your life. How long do
    you have to pull the emergency chute if your primary chute fails? The rest of
    your life.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '**Viktor Farcic**: Exactly. I''m going to use that one; I love it. I really
    think your definition of the thinking behind DevOps is brilliant.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: Thank you! You can probably tell that I could talk about
    this literally all day, every day. The fascinating thing is that there''s really
    no end to the discussion.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '**Viktor Farcic**: Thank you again.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '**Gregory Bledsoe**: Thank you.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
