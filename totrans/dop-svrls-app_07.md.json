["```\n$ minikube start\nStarting local Kubernetes v1.9.0 cluster...\nStarting VM...\nGetting VM IP address...\nMoving files into cluster...\nSetting up certs...\nConnecting to cluster...\nSetting up kubeconfig...\nStarting cluster components...\nKubectl is now configured to use the cluster.\nLoading cached images from config file.\n```", "```\n$ minikube dashboard\n```", "```\n$ export RELEASE=$(curl -sk https://api.github.com/repos/kubeless/kubeless/releases/latest | grep tag_name | cut -d '\"' -f 4)\n$ kubectl create ns kubeless\n$ echo $RELEASE\n$ kubectl create -f https://github.com/kubeless/kubeless/releases/download/v1.0.0-alpha.8/kubeless-non-rbac-v1.0.0-alpha.8.yaml\nserviceaccount \"controller-acct\" created\ncustomresourcedefinition \"functions.kubeless.io\" created\ncustomresourcedefinition \"httptriggers.kubeless.io\" created\ncustomresourcedefinition \"cronjobtriggers.kubeless.io\" created\nconfigmap \"kubeless-config\" created\ndeployment \"kubeless-controller-manager\" created\n```", "```\n$ kubectl get pods -n kubeless\nNAME READY STATUS RESTARTS AGE\nkubeless-controller-manager-c6b69df76-65gsh 1/1 Running 0 2m\n$ kubectl get deployment -n kubeless\nNAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE\nkubeless-controller-manager 1 1 1 1 3m\n$ kubectl get customresourcedefinition\nNAME AGE\ncronjobtriggers.kubeless.io 3m\nfunctions.kubeless.io 3m\nhttptriggers.kubeless.io 3m\n```", "```\n$ export OS=$(uname -s| tr '[:upper:]' '[:lower:]') \n$ curl -OL https://github.com/kubeless/kubeless/releases/download/$RELEASE/kubeless_$OS-amd64.zip\n$ unzip kubeless_$OS-amd64.zip \n$ sudo mv bundles/kubeless_$OS-amd64/kubeless /usr/local/bin/\n```", "```\ndef hello(event, context):\n print event\n return event['data']\n```", "```\n$ kubeless function deploy hello --runtime python2.7 --from-file test.py --handler test.hello --namespace kubeless\nINFO[0000] Deploying function...\nINFO[0000] Function hello submitted for deployment\nINFO[0000] Check the deployment status executing 'kubeless function ls hello'\n```", "```\n$ kubectl get functions\nNAME AGE\nhello 2m\n\n$ kubeless function ls --namespace kubeless\nNAME NAMESPACE HANDLER RUNTIME DEPENDENCIES STATUS\nhello kubeless test.hello python2.7 1/1 READY\n```", "```\n$ kubeless function call hello --data 'Hello Serverless!' --namespace kubeless\nHello Serverless!\n```", "```\n$ kubeless function delete hello --namespace kubeless\n$ kubeless function ls --namespace kubeless\nNAME NAMESPACE HANDLER RUNTIME DEPENDENCIES STATUS\n```", "```\n$ serverless create --template kubeless-python --path myKubelessFunc\n```", "```\n#handler.py\nimport urllib2 \nimport json \ndef find(event, context):     \n    term = event['data']['term']     \n    url = \"https://feeds.capitalbikeshare.com/stations/stations.json\"     response = urllib2.urlopen(url)     \n    stations = json.loads(response.read())     \n    hits = []     \n    for station in stations[\"stationBeanList\"]:         \n        if station[\"stAddress1\"].find(term) > -1:             hits.append(station)     \n\n    return json.dumps(hits)\n```", "```\n# serverless.yml \nservice: bikesearch \nprovider:  \n    name: kubeless  \n    runtime: python2.7 \nplugins:  \n    - serverless-kubeless \nfunctions:  \n    bikesearch:  \n        handler: handler.find\n```", "```\n$ npm install\n$ serverless deploy -v\nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Deploying function bikesearch...\nServerless: Pods status: {\"waiting\":{\"reason\":\"PodInitializing\"}}\nServerless: Function bikesearch successfully deployed\nServerless: Skipping ingress rule generation\n```", "```\n$ kubectl create -f https://raw.githubusercontent.com/kubeless/kubeless-ui/master/k8s.yaml\nserviceaccount \"ui-acct\" created\nclusterrole \"kubeless-ui\" created\nclusterrolebinding \"kubeless-ui\" created\ndeployment \"ui\" created\nservice \"ui\" created\n$ minikube service ui -n kubeless\n```", "```\n$ serverless invoke --function bikesearch --data '{\"term\":\"Albemarle\"}' -l\nServerless: Calling function: bikesearch...\n--------------------------------------------------------------------\n[ { availableDocks: 12,\n totalDocks: 15,\n city: '',\n altitude: '',\n stAddress2: '',\n longitude: -77.079382,\n lastCommunicationTime: '2018-08-15 04:16:15 PM',\n postalCode: '',\n statusValue: 'In Service',\n testStation: false,\n stAddress1: 'Tenleytown / Wisconsin Ave & Albemarle St NW',\n stationName: 'Tenleytown / Wisconsin Ave & Albemarle St NW',\n landMark: '',\n latitude: 38.947607,\n statusKey: 1,\n availableBikes: 1,\n id: 80,\n location: '' } ]\n```", "```\n$serverless invoke --function bikesearch --data '{\"trm\":\"Albemarle\"}' -l\nServerless: Calling function: bikesearch...\n\n  Error --------------------------------------------------\n\n  Internal Server Error\n\n     For debugging logs, run again after setting the \"SLS_DEBUG=*\" environment variable.\n\n  Get Support --------------------------------------------\n     Docs: docs.serverless.com\n     Bugs: github.com/serverless/serverless/issues\n     Forums: forum.serverless.com\n     Chat: gitter.im/serverless/serverless\n\n  Your Environment Information -----------------------------\n     OS: darwin\n     Node Version: 6.10.3\n     Serverless Version: 1.26.1\n```", "```\n$ serverless logs -f bikesearch\nHit Ctrl-C to quit.\n172.17.0.1 - - [15/Aug/2018:20:17:18 +0000] \"POST / HTTP/1.1\" 200 460 \"\" \"\" 0/934928\n172.17.0.1 - - [15/Aug/2018:20:17:18 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/133\n172.17.0.1 - - [15/Aug/2018:20:17:48 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/72\n172.17.0.1 - - [15/Aug/2018:20:18:18 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/108\n172.17.0.1 - - [15/Aug/2018:20:18:48 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/123\n172.17.0.1 - - [15/Aug/2018:20:19:18 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/74\n172.17.0.1 - - [15/Aug/2018:20:19:48 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/138\n172.17.0.1 - - [15/Aug/2018:20:20:18 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/75\n172.17.0.1 - - [15/Aug/2018:20:20:48 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/149\n172.17.0.1 - - [15/Aug/2018:20:21:18 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/187\n172.17.0.1 - - [15/Aug/2018:20:21:48 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/147\n172.17.0.1 - - [15/Aug/2018:20:22:18 +0000] \"GET /healthz HTTP/1.1\" 200 2 \"\" \"kube-probe/.\" 0/71\n172.17.0.1 - - [15/Aug/2018:20:22:47 +0000] \"POST / HTTP/1.1\" 200 2131 \"\" \"\" 1/232988\nTraceback (most recent call last):\n File \"/usr/local/lib/python2.7/dist-packages/bottle.py\", line 862, in _handle return route.call(**args)\n File \"/usr/local/lib/python2.7/dist-packages/bottle.py\", line 1740, in wrapper\n rv = callback(*a, **ka)\n File \"/kubeless.py\", line 76, in handler\n raise res\nKeyError: 'term'\n\n```", "```\n$ git clone https://github.com/shzshi/kubeless-continuous-integration.git\n$ cd kubeless-continuous-integration\n```", "```\n$ npm install\n$ npm test\n> kubeless-nodejs@1.0.0 test /Users/shashi/Documents/packt/chapter7/kubeless-continuous-integration\n> mocha ./test/*.js\nkubelesshello\nâœ“ should return 0 when \"Hello Kubeless\" is present\n1 passing (8ms)\n```", "```\n$ serverless deploy -v\nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Deploying function kubelesshello...\nServerless: Pods status: {\"waiting\":{\"reason\":\"PodInitializing\"}}\nServerless: Pods status: {\"waiting\":{\"reason\":\"PodInitializing\"}}\nServerless: Function kubelesshello successfully deployed\nServerless: Skipping ingress rule generation\n```", "```\n$ serverless invoke -f kubelesshello -l\nServerless: Calling function: kubelesshello...\n--------------------------------------------------------------------\nHello Kubeless\n```"]