["```\n#Jenkinsfile\n\nstage ('Dev init')\n{\n    nodejs --version\n    npm install serverless-dynamodb-local --save-dev\n    npm install serverless-offline --save-dev\n    npm install serverless-mocha-plugin --save-dev\n    npm install\n    serverless dynamodb install\n    chmod 755 startOffline.sh\n    chmod 755 stopOffline.sh\n}\n```", "```\n# serverless.yml\nplugins:\n    - serverless-dynamodb-local\n    - serverless-offline\n    - serverless-mocha-plugin\ncustom:\n    serverless-mocha-plugin:\n        preTestCommands: \n            - bash startOffline.sh\n        postTestCommands:\n            - bash stopOffline.sh\n    dynamodb:\n      stages:\n        - dev\n      start:\n        migrate: true\n```", "```\n# jenkinsfile\nstage ('Dev init')\n        {\n            steps {\n\n                deleteDir()\n\n                checkout scm\n\n                sh '''\n                    nodejs --version\n                    npm cache clean --force\n                    npm install serverless-offline --save-dev\n                    npm install serverless-mocha-plugin --save-dev\n                    serverless plugin install -n serverless-dynamodb-local\n                    npm install\n                '''\n            }\n        }\n\n        stage ('System Test on Dev') {\n\n             steps {\n                sh ''' \n                    sls dynamodb remove\n                    serverless dynamodb install\n                    chmod 755 startOffline.sh\n                    chmod 755 stopOffline.sh\n                    export TASKS_ENDPOINT=http://localhost:3000\n                    serverless invoke test\n                '''\n                }\n        } \n```", "```\nInstallation complete!\n+ chmod 755 startOffline.sh\n+ chmod 755 stopOffline.sh\n+ export TASKS_ENDPOINT=http://localhost:3000\n+ serverless invoke test\nServerless: Tests being run with nodejs6.14,  service is using nodejs6.10\\. Tests may not be reliable.\nServerless: Run command: bash startOffline.sh\n\n  Create, Delete\n    ✓ should create a new Task, & delete it (198ms)\n\n  Create, List, Delete\n    ✓ should create a new task, list it, & delete it (180ms)\n\n  Create, Read, Delete\n    ✓ should create a new task, read it, & delete it (133ms)\n\n  3 passing (523ms)\n```", "```\napi keys:\n  None\nendpoints:\n  POST - https://ax1hlqv0vl.execute-api.us-east-1.amazonaws.com/sit/mytasks\n  GET - https://ax1hlqv0vl.execute-api.us-east-1.amazonaws.com/sit/mytasks\n  GET - https://ax1hlqv0vl.execute-api.us-east-1.amazonaws.com/sit/mytasks/{id}\n  PUT - https://ax1hlqv0vl.execute-api.us-east-1.amazonaws.com/sit/mytasks/{id}\n  DELETE - https://ax1hlqv0vl.execute-api.us-east-1.amazonaws.com/sit/mytasks/{id}\nfunctions:\n```", "```\n$ npm install serverless-domain-manager --save-dev\n```", "```\nplugins:  \n    - serverless-domain-manager\n\ncustom:  \n    customDomain:  \n        domainName: 'api.<registered_domain_name>'  \n        basePath: '<my_base_path>'  \n        stage: ${self:provider.stage}                                     createRoute53Record: true\n```", "```\n$ npm install serverless-plugin-aws-alerts --save-dev\n```", "```\n# serverless.yml\nplugins: \n    - serverless-plugin-aws-alerts \ncustom:  \n    alerts:  \n        stages:  \n            - production\n         topics:  \n             alarm:  \n                topic: ${self:service}-${opt:stage}-alerts-alarm\n                notifications:  \n                    - protocol: email  \n                      endpoint: myemail@domain.com   \n                alarms:  \n                    - functionErrors  \n                    - functionThrottles\n```", "```\n$ npm install --save serverless-finch\n```", "```\ncustom:\n  client:\n    ...\n    distributionFolder: [path/to/files]\n    ...\n```", "```\ncustom:\n  client:\n    bucketName: [unique-s3-bucketname]\n```", "```\nservice: my-static-website\n\nframeworkVersion: \"=1.26.0\"\n\nprovider:\n  name: aws\n  runtime: nodejs6.10\n  stage: dev\n  region: us-east-1\n  profile: dev-profile\n\nplugins:\n  - serverless-finch\n\ncustom:\n  client:\n    bucketName: my-static-pages-bucket\n    distributionFolder: client/dist \n    indexDocument: index.html\n    errorDocument: index.html\n\n```", "```\n$ serverless client deploy \n```", "```\n$ npm install serverless-plugin-warmup --save-dev\n```", "```\n# serverless.yml\nplugins:\n  - serverless-plugin-warmup\nfunctions:\n  hello:\n    warmup:\n      - production\n      - staging\ncustom:\n  warmup:\n    folderName: '_warmup' // Name of the folder created for the generated warmup \n    cleanFolder: false\n    memorySize: 256\n    name: 'warm-my-lambdas'\n    role: myCustRole0\n    schedule: 'cron(0/5 8-17 ? * MON-FRI *)' // Run WarmUP every 5 minutes Mon-Fri between 8:00am and 5:55pm (UTC)\n    timeout: 20\n    prewarm: true // Run WarmUp immediately after a deploymentlambda\n    tags:\n      Project: foo\n      Owner: bar  \n```", "```\n$ mkdir my-local-azure-function\n$ cd my-local-azure-function\n$ func init -n \nWriting .gitignore\nWriting host.json\nWriting local.settings.json\nCreated launch.json\n```", "```\n$ func new\nSelect a language:\n1\\. C#\n2\\. JavaScript\nChoose option: 2\nJavaScript\nSelect a template:\n1\\. Blob trigger\n2\\. Cosmos DB trigger\n3\\. Event Grid trigger\n4\\. HTTP trigger\n5\\. Queue trigger\n6\\. SendGrid\n7\\. Service Bus Queue trigger\n8\\. Service Bus Topic trigger\n9\\. Timer trigger\nChoose option: 4\nHTTP trigger\nFunction name: [HttpTriggerJS] my-azure-func-use-case\nWriting /Users/shashi/Documents/packt/chapter4/tutorial1/mylocalfunction/myLocalFunction/index.js\nWriting /Users/shashi/Documents/packt/chapter4/tutorial1/mylocalfunction/myLocalFunction/sample.dat\nWriting /Users/shashi/Documents/packt/chapter4/tutorial1/mylocalfunction/myLocalFunction/function.json\n```", "```\n$ func start\n%%%%%%\n %%%%%%\n @ %%%%%% @\n @@ %%%%%% @@\n @@@ %%%%%%%%%%% @@@\n @@ %%%%%%%%%% @@\n @@ %%%% @@\n @@ %%% @@\n @@ %% @@\n %%\n %\n[09/20/2018 20:57:09] Reading host configuration file '/Users/shashi/Documents/packt/chapter9/my-local-azure-function/host.json'\n[09/20/2018 20:57:09] Host configuration file read:\n[09/20/2018 20:57:09] {}\ninfo: Worker.Node.769f18ed-34f3-4813-9e9f-b4d43ea01191[0]\n Start Process: node --inspect=5858 \"/usr/local/lib/node_modules/azure-functions-core-tools/bin/workers/node/dist/src/nodejsWorker.js\" --host 127.0.0.1 --port 65058 --workerId 769f18ed-34f3-4813-9e9f-b4d43ea01191 --requestId 964f6629-d61a-4006-a293-e0438da20e45\ninfo: Worker.Node.769f18ed-34f3-4813-9e9f-b4d43ea01191[0]\n Debugger listening on ws://127.0.0.1:5858/0d0bfa98-d2a3-4af2-8c5c-3a2cc346b1fc\ninfo: Worker.Node.769f18ed-34f3-4813-9e9f-b4d43ea01191[0]\n For help see https://nodejs.org/en/docs/inspector\n[09/20/2018 20:57:10] Generating 1 job function(s)\n[09/20/2018 20:57:10] Starting Host (HostId=shashismacbookpro-628939497, Version=2.0.11415.0, ProcessId=5072, Debug=False, ConsecutiveErrors=0, StartupCount=1, FunctionsExtensionVersion=)\n[09/20/2018 20:57:10] Found the following functions:\n[09/20/2018 20:57:10] Host.Functions.my-azure-func-use-case\n[09/20/2018 20:57:10]\n[09/20/2018 20:57:10] Job host started\ninfo: Worker.Node.769f18ed-34f3-4813-9e9f-b4d43ea01191[0]\n Worker 769f18ed-34f3-4813-9e9f-b4d43ea01191 connecting on 127.0.0.1:65058\nListening on http://localhost:7071/\nHit CTRL-C to exit...\nHttp Functions:\nmy-azure-func-use-case: http://localhost:7071/api/my-azure-func-use-case\n```", "```\n$ npm install -g @google-cloud/functions-emulator\n```", "```\n$ serverless create --template google-nodejs --path my-service-name\n```", "```\nprovider:\n    name: google\n    runtime: nodejs\n    project: my-serverless-function-usecase\n    # the path to the credentials file needs to be absolute\n    credentials: ~/.gcloud/Serverless-SIT.json\nplugins:\n    - serverless-google-cloudfunctions\n```", "```\n$ serverless deploy -v\nServerless: Packaging service...\nServerless: Excluding development dependencies...\nServerless: Compiling function \"first\"...\nServerless: Uploading artifacts...\nServerless: Artifacts successfully uploaded...\nServerless: Updating deployment...\nServerless: Checking deployment update progress...\n...............\nServerless: Done...\nService Information\nservice: my-g-function-usecase\nproject: serverless-sit-217120\nstage: dev\nregion: us-central1\nDeployed functions\nfirst\n https://us-central1-serverless-sit-217120.cloudfunctions.net/http\n```"]