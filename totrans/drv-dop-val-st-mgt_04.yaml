- en: '[*Chapter 3*](B17087_03_Final_PD_epub.xhtml#_idTextAnchor085): Analyzing Complex
    System Interactions'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第3章*](B17087_03_Final_PD_epub.xhtml#_idTextAnchor085)：分析复杂系统的交互'
- en: IT organizations represent complex systems on several levels. First, the process
    of software development is a system, as are the operations and support functions.
    Second, the inclusion of team members extends the software development system's
    complexity, as does their computing equipment, networks, tools, and software applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: IT 组织在多个层面上代表着复杂的系统。首先，软件开发过程是一个系统，运营和支持功能也是如此。其次，团队成员的加入增加了软件开发系统的复杂性，计算设备、网络、工具和软件应用也增加了复杂性。
- en: Suppose the IT department supports multiple Agile or DevOps development teams
    working on a single product. In that case, each product team would function as
    both an independent system and as a component of a more extensive system – a "team
    of teams." In these scenarios, all the teams must collaborate to support the ongoing
    development of the software product or digitally-enabled service. This chapter
    provides guidance on assessing the complexity of these (and any other types of
    systems) by evaluating the elements that make up the system, their connections,
    and types of interactions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 假设 IT 部门支持多个敏捷或 DevOps 开发团队共同开发一个单一的产品。在这种情况下，每个产品团队将既作为一个独立系统运作，又作为更大系统的一个组成部分——一个“团队的团队”。在这些场景中，所有团队必须协作，以支持软件产品或数字化服务的持续开发。本章提供了评估这些（以及任何其他类型系统）复杂性的方法，重点评估构成系统的元素、它们之间的连接以及交互的类型。
- en: An essential analytical tool of value stream management is a modeling and visualization
    technique referred to as value stream mapping. This technique is introduced in
    the next chapter as part of the introduction to value stream management. However,
    if a value stream team only examines their activities, they may miss the broader
    scope of elements that impact their value stream as a system. They may also miss
    how those elements impact their system. This type of cross-domain complexity analysis
    is the domain of **systems thinking**, which is the topic of this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 价值流管理的一个基本分析工具是建模和可视化技术，称为价值流映射。这个技术将在下一章作为价值流管理介绍的一部分进行介绍。然而，如果一个价值流团队只检查他们的活动，他们可能会忽略那些影响其价值流作为一个系统的更广泛因素。他们也可能错过这些因素如何影响他们的系统。这种跨领域复杂性分析是**系统思维**的领域，本章将讨论这一主题。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将讨论以下主要内容：
- en: Resolving IT complexity through systems thinking
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过系统思维解决 IT 复杂性
- en: Analyzing cause and effects
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析因果关系
- en: Calculating potential connections
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算潜在连接
- en: Limiting connections
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制连接
- en: Learning the vocabulary of systems thinking
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习系统思维的词汇
- en: Visualizing the interrelationships of system elements
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化系统元素之间的相互关系
- en: Reading **causal loop diagrams** (**CLDs**)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读**因果环图**（**CLDs**）
- en: Resolving IT complexity through systems thinking
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过系统思维解决 IT 复杂性
- en: Systems thinking is an approach to evaluate the complexity of large systems
    not as a collection of individuals parts but rather the interactions between the
    elements that participate in the system. I discuss this subject at great length
    in [*Chapter 4*](B17087_04_Final_PD_epub.xhtml#_idTextAnchor104), *Systems Thinking*,
    of the book *Scaling Scrum Across Modern Enterprises*, introducing 17 CLDs related
    to Scrum-based Agile practices. So we'll only touch briefly on the subject of
    systems thinking within this book.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 系统思维是一种评估大型系统复杂性的方法，它不是将系统看作一个个独立的部分，而是看作参与系统的元素之间的相互作用。我在《*Scaling Scrum Across
    Modern Enterprises*》一书的[*第4章*](B17087_04_Final_PD_epub.xhtml#_idTextAnchor104)中详细讨论了这一主题，并介绍了与基于
    Scrum 的敏捷实践相关的17个因果环图。因此，本书中我们只会简要触及系统思维这一主题。
- en: Systems thinking also aids in analyzing other complex business processes, including
    the interactions of connected value streams. However, in this book, the primary
    focus is on using value stream mapping to evaluate and improve business processes.
    Still, systems thinking is a precursory activity to value stream mapping. As a
    result, Lean-Agile practitioners must understand the vernacular of systems thinking,
    analyze system-level cause and effects, evaluate approaches to reduce network
    densities, and use system visualization techniques.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 系统思维还帮助分析其他复杂的业务流程，包括连接的价值流之间的相互作用。然而，在本书中，主要关注的是使用价值流图来评估和改进业务流程。尽管如此，系统思维仍然是价值流图的前提活动。因此，精益-敏捷的从业者必须理解系统思维的术语，分析系统级别的因果关系，评估减少网络密度的方法，并运用系统可视化技术。
- en: Though both systems thinking and value stream mapping employ visualization and
    modeling techniques to evaluate flows, they have different objectives. Systems
    thinking aims to identify all the elements that intentionally and unintentionally
    participate in the system, determine which elements interact within the system,
    how the elements interact, and their cause and effects. In contrast, value stream
    mapping is a technique to assess the current and future state of how work is done,
    then find ways to improve it.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管系统思维和价值流图都运用可视化和建模技术来评估流动，它们的目标不同。系统思维旨在识别所有有意和无意参与系统的元素，确定系统内哪些元素相互作用，元素如何相互作用以及它们的因果关系。相比之下，价值流图是一种评估当前和未来工作方式的技术，然后寻找改进的方式。
- en: The impacts, causes, and effects of interacting elements are the most critical
    issues to address when evaluating complex systems' aggregate behaviors. Let's
    take a moment to find out why.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 互动元素的影响、原因和效果是评估复杂系统的整体行为时需要解决的最关键问题。让我们花点时间来了解为什么。
- en: Analyzing cause and effects in systems
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析系统中的因果关系
- en: A key concept in systems thinking is that the whole is greater than the sum
    of the parts that participate within a system. This statement is true for both
    system capabilities and complexities. It's the interrelationships between the
    parts that create complexity within a system. But the interrelationships also
    are what allow systems to do both useful and useless things. If we don't understand
    the cause and effects of the underlying interactions across the system, we can't
    begin to understand how to control the interactions in useful ways.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 系统思维中的一个关键概念是整体大于系统内各部分之和。这一说法对于系统的能力和复杂性都适用。正是部分之间的相互关系在系统内部创造了复杂性。但这些相互关系也正是让系统能够执行有用或无用的事情。如果我们不了解系统内部相互作用的原因和影响，我们就无法开始理解如何以有益的方式控制这些相互作用。
- en: Participant relationships and interactions can be accidental or intentional
    within the system. For example, we can evaluate a manufacturing ecosystem as representing
    a single system with any number of participating elements that interact, causing
    both desired (*intentional*) and undesired (*unintentional*) impacts. Some of
    the elements intentionally work to support the manufacturer's operations and delivery
    functions. However, the manufacturing system can also negatively impact other
    unintentional participants.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 参与者的关系和互动在系统内可能是偶然的或有意的。例如，我们可以将一个制造生态系统视为代表一个包含任何数量参与元素的单一系统，这些元素相互作用，导致既有*意图的*也有*非意图的*影响。部分元素是有意为制造商的运营和交付职能提供支持。然而，制造系统也可能对其他无意的参与者产生负面影响。
- en: Within the manufacturing ecosystem, intentional participants include supply
    chain partners, distributors, employees, contractors, customers, and other stakeholders
    supporting the operations. Unintentional participants include people and other
    elements affected when the industry creates health or safety problems through
    unsafe environmental practices.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在制造生态系统中，有意的参与者包括供应链合作伙伴、分销商、员工、承包商、客户以及其他支持运营的利益相关者。无意的参与者包括在行业通过不安全的环境实践造成健康或安全问题时受到影响的人和其他元素。
- en: From a systems thinking point of view, we need to understand how organizations
    conduct their business at a more granular level. We also need to understand the
    interactions of the participating elements. An **element** is anything that makes
    up the system, including materials, people, processes, information, and technology.
    Elements within a system are also sometimes called **nodes**. In **CLD modeling**,
    we use nodes and arrows to construct directed graphic models of cause and effect
    relationships.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从系统思维的角度看，我们需要更深入地理解组织如何在更细化的层面上开展业务。我们还需要理解参与元素之间的互动关系。**元素**是构成系统的任何事物，包括材料、人员、流程、信息和技术。系统中的元素有时也被称为**节点**。在**CLD建模**中，我们使用节点和箭头构建因果关系的有向图模型。
- en: Technically, a directed graphical model includes the probability of random variables
    affecting the nodes in the graph. In other words, the cause and effects can vary
    across a range of values for each system interaction. However, we don't need to
    get into that level of detail in this chapter.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度看，一个有向图模型包括了随机变量对图中节点的影响概率。换句话说，因果关系可以在每次系统互动的不同值范围内变化。然而，在本章中我们不需要深入探讨这些细节。
- en: The challenge with understanding the interrelationships between elements within
    a system is that we may not know those relationships exist, nor how those interactions
    play out across the system, without detailed system-level analysis. We'll review
    how to visualize elements and their interactions via CLD modeling later in the
    *Visualizing the interrelationships of system elements* subsection. However, before
    we do that, let's take a quick look to see how the number of elements within a
    system dramatically impacts the number of interrelationships. Plus, we need to
    learn some of the terms used in systems thinking before getting to the *Reading
    a CLD* section. In the next section, you will learn how to calculate potential
    connections to demonstrate the exponential increase in a system's complexity through
    a geometric growth in participating elements.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 理解系统中元素之间相互关系的挑战在于，我们可能不知道这些关系的存在，也不知道这些互动如何在系统中展开，除非进行详细的系统级分析。稍后我们将通过CLD建模回顾如何可视化元素及其互动关系，放在*可视化系统元素之间的相互关系*小节中。然而，在那之前，我们先快速看一下系统中元素数量的增加如何显著影响相互关系的数量。此外，在进入*阅读CLD*部分之前，我们还需要了解一些系统思维中的术语。在下一节中，你将学习如何计算潜在的连接，以展示系统复杂性通过几何增长的参与元素的方式呈指数增加。
- en: Calculating potential connections
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算潜在连接
- en: Systems represent interconnected networks. For example, the IT organization
    within a large enterprise might have several hundred or even several thousand
    employees and contractors working across its development and operations functions.
    Additionally, those employees and contractors work with and affect other departments,
    partners, employees, stakeholders, and customers. The IT system also includes
    computers, networks, applications, and a host of other elements that participate
    in the IT ecosystem.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 系统代表的是相互连接的网络。例如，一个大型企业中的IT组织可能有数百甚至数千名员工和承包商在其开发和运营职能中工作。此外，这些员工和承包商与其他部门、合作伙伴、员工、利益相关者和客户合作并相互影响。IT系统还包括计算机、网络、应用程序以及参与IT生态系统的众多其他元素。
- en: The organization creates policies and processes to help coordinate business
    functions and people's activities in order to achieve desirable outcomes by producing
    value-added products and services at a profit or within budget. Every one of these
    process touchpoints represents an interaction within the more extensive business
    system. Of course, there is the possibility for any number of unintentional, unplanned,
    and potentially undesirable interactions.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 该组织创建了政策和流程，以帮助协调业务职能和人员活动，从而通过以盈利或在预算范围内生产增值产品和服务来实现期望的结果。每一个这样的流程接触点代表了更广泛的业务系统中的一次互动。当然，也存在许多无意的、计划外的以及可能不理想的互动。
- en: By now, you may be getting a sense that the growth in connections in large systems
    might be a big problem. However, unless you are already familiar with the concept
    of managing network densities, you may not realize just how fast these interconnections
    and potential relationships grow.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 到现在为止，你可能已经意识到，随着大规模系统中的连接增长，问题可能会变得相当复杂。然而，除非你已经熟悉管理网络密度的概念，否则你可能并未意识到这些相互连接和潜在关系增长得有多快。
- en: Fortunately for us, there is a reasonably easy way to calculate the number of
    *potential connections* (*PC* in the following formulae) between elements that
    interact within a system. We can also calculate network densities as a percentage
    of actual connections to potential connections. Let's start with the potential
    connections algorithm; the highest possible measurement of interactions across
    a system.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们有一种相对简单的方法来计算系统内相互作用的元素之间的*潜在连接*（以下公式中的*PC*）。我们还可以计算网络密度，作为实际连接与潜在连接的百分比。让我们从潜在连接的算法开始，这是系统内相互作用的最高测量值。
- en: 'The calculation for potential connections is![](img/B17087_03_001.png), where
    *n* is the number of nodes or element connections within the system. In any system,
    the participating elements are the nodes that create complexity through their
    interactions. The more nodes, the greater the complexity. Let''s look at some
    examples:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 潜在连接的计算公式为![](img/B17087_03_001.png)，其中 *n* 是系统内节点或元素连接的数量。在任何系统中，参与的元素是通过相互作用产生复杂性的节点。节点越多，复杂性越大。让我们来看一些例子：
- en: If n=1, then the number of potential connections is 0, as there is nothing else
    to connect. Add another node, and the number of potential connections only grows
    by one, that is, ![](img/B17087_03_002.png). Add yet another node, 3 in total,
    and the number of connections grows to 3.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 n=1，那么潜在连接的数量是0，因为没有其他东西可以连接。再加一个节点，潜在连接的数量仅增加一个，即！[](img/B17087_03_002.png)。再加一个节点，总共有3个节点时，连接的数量增加到3。
- en: So far, the number of relationships and interactions looks very manageable.
    But now, let's grow the number of connections to 7, the size of a decent-sized
    Agile team. In this scenario, the number of potential connections is 21\. As the
    team size grows, or we add more teams working together, the number of potential
    connections explodes.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，关系和互动的数量看起来非常可控。但现在，我们将连接的数量增加到7，这是一个中型敏捷团队的规模。在这种情况下，潜在连接的数量为21。随着团队规模的扩大，或是我们增加更多团队一起合作，潜在连接的数量将呈爆炸式增长。
- en: Now, let's add the team member's laptops to our Agile team example. By adding
    laptops into our systems, we create equipment-related interrelationships in our
    IT team. The laptops grow the number of nodes in our Agile system to 14, and the
    potential connections to 91\. In other words, the team and their laptops form
    91 interactions that can impact how the team interoperates.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将团队成员的笔记本电脑添加到我们的敏捷团队示例中。通过将笔记本电脑加入我们的系统，我们在IT团队中创建了与设备相关的相互关系。笔记本电脑使我们的敏捷系统中的节点数量增加到14，并且潜在连接增加到91。换句话说，团队及其笔记本电脑形成了91个互动，这些互动可能影响团队的互操作性。
- en: But the Agile team also works on delivering a Sprint Backlog item over each
    Sprint. For this example, let's use an average of 10 work items per Sprint. So,
    the number of connected nodes now increases to include 7 team members, 7 laptops,
    10 work items – 24 elements in total, and the number of potential connections
    exponentially jumps to 276 potential connections in every Sprint.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 但敏捷团队每个迭代周期也会致力于交付一个Sprint待办事项。在这个例子中，我们假设每个Sprint有10个工作项。所以，连接的节点数量现在增加到包括7个团队成员、7台笔记本电脑、10个工作项——总共24个元素，并且潜在连接的数量每个Sprint急剧增加到276个潜在连接。
- en: Do you work in a multi-team environment? To demonstrate how that further adds
    to the complexity of managing an Agile team, let's add a second team of equal
    size to our IT product development system. As a result, the number of connected
    nodes now increases to include 14 team members, 14 laptops, and 20 work items,
    expanding our Agile system to 48 elements. As a result, the number of potential
    connections grows to 1,128.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否在多团队环境中工作？为了演示这如何进一步增加管理敏捷团队的复杂性，让我们为我们的IT产品开发系统增加一个大小相同的第二个团队。因此，连接的节点数量现在增加到包括14个团队成员、14台笔记本电脑和20个工作项，总共扩展到48个元素。因此，潜在连接的数量增加到1,128。
- en: 'We could include customers and other employees they must interact with, but
    I think you get the point. Every one of those potential connections is a potential
    point of failure or has the potential to create an undesirable outcome across
    every Sprint. The growth in system connections is shown in the following figure:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将客户和他们必须互动的其他员工包括在内，但我想你已经明白了。每一个潜在的连接都是潜在的失败点，或者有可能在每个Sprint中造成不理想的结果。系统连接的增长情况如下图所示：
- en: '![Figure 3.1 – Growth in potential system connections'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.1 – 潜在系统连接的增长'
- en: '](img/B17087_Figure_3.1.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17087_Figure_3.1.jpg)'
- en: Figure 3.1 – Growth in potential system connections
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – 潜在系统连接的增长
- en: As an example of how potential connections exponentially grow within a system,
    *Figure 3.1* provides a graphical depiction of accelerated PC growth from 0 out
    to 100 interconnected elements as an example of how potential connections exponentially
    grow within a system. A 10-person team has 45 potential connections, but an IT
    organization with 100 members has 4,950.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Before we leave this topic, it's important to understand that we can eliminate
    some potentially negative consequences by limiting the number of actual connections.
    That's the subject of the next section.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Limiting connections
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Often, not all elements in a system are connected. The easiest way to reduce
    system complexity is to reduce the opportunity for elements to communicate or
    interoperate with one another. Another way is to reduce the number of elements
    that participate in a system.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: If you have studied Scrum or Lean-Agile scaling strategies, you probably noted
    that they all leverage small team concepts. They do this even on very large product
    development activities, sometimes involving hundreds or thousands of people. Breaking
    up work across multiple small teams is one way to limit the number of interactions
    between the people working on the product.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: For example, **Scrum of Scrums** limits cross-team interactions to a handful
    of team members, called Ambassadors. The **Nexus** approach to Scrum implements
    **Network Integration Teams** (**NITs**) to manage cross-team dependencies, coordination,
    and synchronization activities. Similarly, the **Scaled-Agile Framework®** (**SAFe®**)
    implements small teams in the form of **Extreme Programming** (**XP**) and **Scrum**
    teams, with a higher-level team, called the **Agile Release Train** (**ARTs**),
    to integrate and coordinate work across a large product development effort, or
    multiple value streams involving 50-125 people split into 5-12 XP/Scrum teams.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of their specific strategies, all scaled Scrum and Lean-Agile methodologies
    seek to minimize complexity by reducing the number of participant relationships
    and interactions. In other words, we want fewer actual connections in our system
    than the potential theoretical connections.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: The ratio of actual connections to potential connections is called **network
    density**. The concept of network density is important as it offers a way to minimize
    the number of potential connections in large systems and reduce their potential
    for causing adverse impacts.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 3.2* shows a set of six Lean value stream activities operating as sequential
    nodes connected along a single line. The graphic also shows the worst-case scenarios
    for each identified value stream, where all activities are interconnected. Each
    value stream includes metrics identifying the number of nodes (*n*), their potential
    connections (*PC*), actual connections (*AC*), and their network densities (*ND*):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.2 – Graphic showing nodes, potential connections, actual connections,
    and network densities'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_3.2.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.2 – Graphic showing nodes, potential connections, actual connections,
    and network densities
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – 显示节点、潜在连接、实际连接和网络密度的图形
- en: It should be clear from the graphic that the least number of interactions, and
    therefore the least complexities, occur in situations with value streams having
    linear-sequential processes or activities. In this book, you will learn that linear-sequential
    flows are the hallmark of lean production practices and CI/CD and DevOps pipelines.
    When we reduce network density by lowering actual connections, we lower the number
    of potential failure points.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 从图示中应该可以清楚地看出，最少的互动次数，也就意味着最少的复杂性，出现在具有线性顺序流程或活动的价值流中。在本书中，您将学到，线性顺序流是精益生产实践、持续集成/持续交付（CI/CD）和DevOps管道的标志。当我们通过减少实际连接来降低网络密度时，我们减少了潜在的故障点数量。
- en: Drawing on our previous example, ways to decrease the network density include
    having backup laptops and access to alternative software products. Another way
    to improve outcomes in a complex system is to improve policies and processes that
    reduce the impact of or repair failed connections. For example, an IT support
    group that can rapidly reprovision laptops and software can reduce the downtime
    from losing access to those resources.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通过我们之前的例子，减少网络密度的方法包括拥有备份笔记本电脑和访问替代软件产品。改善复杂系统中的成果的另一种方法是改进那些能够减少影响或修复故障连接的政策和流程。例如，能够迅速重新配置笔记本电脑和软件的IT支持团队可以减少因无法访问这些资源而导致的停机时间。
- en: We can also reduce the number of interconnections between team members and the
    work items. For example, if our team members have broad skills, they can split
    the work items to reduce the number of dependencies across the work items. We
    can also limit the number of inter- and extra-team member interactions. This issue
    is critical within cross-team interactions. It's the reason so many scaled Scrum
    methodologies implement **ambassadors** or **network integration teams** to minimize
    cross-team interactions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以减少团队成员与工作项之间的相互连接。例如，如果我们的团队成员具备广泛的技能，他们可以拆分工作项，从而减少工作项之间的依赖关系。我们还可以限制团队内部和团队之间的互动数量。在跨团队互动中，这个问题至关重要。这也是为什么许多规模化的Scrum方法会实施**大使**或**网络集成团队**来最小化跨团队互动的原因。
- en: In a lean system, the ideal goal is to create a streamlined set of activities
    across a value stream, much like an assembly line, enabling work to flow through
    a set of independent activities in one direction and without the need to recycle
    back to a previous activity. It should be clear from the examples shown in *Figure
    3.2* that the linear-sequential flows are much less complicated and more streamlined.
    It should also be clear that network density issues become increasingly necessary
    to resolve with the increasing growth of activities (nodes) in a value stream
    system.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在精益系统中，理想的目标是通过价值流创建一套简化的活动流程，类似于装配线，使得工作可以通过一系列独立的活动按一个方向流动，而无需返回到先前的活动。从*图
    3.2*中展示的例子应该能明显看出，线性顺序的流动方式要简单得多，且更为精简。还应该清楚地看到，随着价值流系统中活动（节点）数量的增加，网络密度问题变得越来越迫切需要解决。
- en: So far, our sample system interactions are quite simple. Life is much more complicated
    in that each system interaction can have different types of impacts. Complex system
    interactions between elements are modeled and analyzed as **causal links**. But,
    before we get to that topic, let's take a moment to introduce the vocabulary of
    systems thinking.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们的示例系统交互非常简单。现实生活要复杂得多，因为每个系统交互可能会产生不同类型的影响。元素之间的复杂系统交互被建模和分析为**因果链**。但是，在我们深入探讨这个话题之前，让我们花点时间来介绍系统思维的词汇。
- en: Learning the vocabulary of systems thinking
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习系统思维的词汇
- en: 'The vocabulary of systems thinking is unique and not directly tied to Agile
    or Lean practices. But the concepts behind systems thinking are powerful and useful
    in helping teams collaborate in analyzing the elements and interrelationships
    within their large and complex business systems. The following list includes the
    basic terms of use in systems thinking and causal loop diagrams:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 系统思维的词汇是独特的，并不直接与敏捷或精益实践相关联。但系统思维背后的概念非常强大且有用，有助于团队在分析大规模复杂业务系统中的元素及其相互关系时进行协作。以下是系统思维及因果环图中常用的基本术语列表：
- en: '**Systems**: These are complex structures of tangible and intangible things,
    principles, procedures, and social and political environments that collectively
    serve some purpose or function.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统**：这些是由有形和无形事物、原则、程序以及社会和政治环境组成的复杂结构，这些元素共同服务于某种目的或功能。'
- en: '**Elements**: This term refers to the collection of parts that make up a system.
    These could be tangible and intangible things, principles, procedures, or social
    and political environments that participate in and guide the system''s behaviors.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**元素**：该术语指构成系统的各个部分的集合。这些部分可以是有形的或无形的事物、原则、程序或参与并引导系统行为的社会和政治环境。'
- en: '**Interconnections**: The relationships—including physical, informational,
    formal, or informal linkages—that bind elements together within the system.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相互连接**：这些关系——包括物理、信息、正式或非正式的联系——将元素联系在一起，形成系统内部的纽带。'
- en: '**Function**: The purpose, goal, or objective of a non-human system.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能**：非人类系统的目的、目标或意图。'
- en: '**Purpose**: The purpose, goal, or objective of a human-based system.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目的**：以人为基础的系统的目的、目标或意图。'
- en: '**Stocks**: These are tangible, quantifiable, and measurable variables within
    a system, subject to dynamic changes over time through a flow''s actions. The
    term *element* implies a type of thing at any given time; the term *stock* implies
    attributes of the elements with observable values at specific points in time.
    For example, an element might be a value stream activity, and its stock might
    be work items or materials.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**库存**：这些是系统内可量化、可测量的变量，受流动行为的动态变化影响。*元素*一词指在任何给定时刻的事物类型；*库存*一词则指在特定时刻，元素的属性及其可观察的数值。例如，一个元素可能是价值流活动，而其库存可能是工作项或材料。'
- en: '**Flows**: These actions dynamically change the directions of stock within
    a system, as inflows and outflows.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流动**：这些动作动态地改变系统内库存的方向，包括流入和流出。'
- en: '**Inflows**: These indicate a direction of flow that serves to increase the
    measurable amount of stock. Inflow displays have lines with arrows that point
    to the elements accumulating stock.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流入**：这些表示一种流动方向，用于增加可测量的库存量。流入显示通过带箭头的线条指向正在积累库存的元素。'
- en: '**Outflows**: These indicate a direction of flow that serves to decrease the
    measurable amount of stock. Outflow displays have lines with arrows that point
    away from the elements with decrementing stocks.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流出**：这些表示一种流动方向，用于减少可测量的库存量。流出显示通过带箭头的线条指向远离库存减少的元素。'
- en: '**Delays**: These occur when inflows are greater than outflows, resulting in
    an accumulation of stock. Displays of delays are indicated by writing the word
    *delay* on the arrow connecting elements, or a double hash mark striking through
    the connecting arrow.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**延迟**：当流入大于流出时，会发生延迟，导致库存积累。延迟的显示通常在连接元素的箭头上标注*延迟*字样，或在连接箭头上画上双井号。'
- en: '**Feedback loops**: These are mechanisms that adjust flows to either stabilize
    a system or reinforce a particular trend within the system.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反馈回路**：这些是调节流动的机制，旨在使系统稳定或在系统内强化某一特定趋势。'
- en: '**Balancing feedback loops**: These provide information or resources that bring
    a system or elements into equilibrium and maintain them within the desired range.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平衡反馈回路**：这些提供信息或资源，使系统或元素达到平衡，并保持在期望的范围内。'
- en: '**Reinforcing feedback loops**: These provide information or resources that
    support a trend within a system, or support elements within a system. The trend
    can be either positive or negative.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强反馈回路**：这些提供信息或资源，支持系统内的趋势或支持系统内的元素。该趋势可以是正向或负向的。'
- en: '**Causal Loop Diagram (CLD)**: A method to visualize the interrelationships
    of elements (a.k.a. *variables*) within a system as nodes and linkages between
    nodes (a.k.a. *edges*).'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**因果回路图（CLD）**：一种将系统内元素（即*变量*）之间的相互关系可视化的方法，将元素表示为节点，节点之间的联系表示为链接（即*边*）。'
- en: '**Positive causal link**: This means that the cause-and-effect impact of two
    linked nodes changes the observed attributes in the same (positive) direction,
    increasing the value of the monitored attributes.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正因果联系**：这意味着两个连接节点之间的因果关系会导致观察到的属性朝相同（正向）方向变化，从而增加监测属性的值。'
- en: '**Negative causal link**: This means that the cause-and-effect impact of two
    linked nodes changes the observed attributes in the opposite (negative) direction.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**负因果联系**：这意味着两个连接节点之间的因果关系会导致观察到的属性发生相反（负向）变化。'
- en: '**Open systems**: These are characterized by having inflows and outflows external
    to the system—that is, things that can enter or leave the system.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开放系统**：这些系统的特点是存在系统外部的流入和流出——也就是说，能够进入或离开系统的事物。'
- en: '**Closed systems**: These are characterized by having no net flows in or out
    of the system—that is, the system is fully self-contained and balanced.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**封闭系统**：这些系统的特点是系统内没有任何流入或流出——也就是说，系统完全自给自足并且平衡。'
- en: '**Labels**: Use labels on everything displayed within your causal diagrams
    so that reviewers know what the elements and links represent within your system
    model.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签**：在因果图中的所有元素上使用标签，以便评审人员了解这些元素和链接在系统模型中所代表的意义。'
- en: Now that you know the basic terms of systems thinking and causal loop diagraming,
    let's take a quick look at using them when analyzing an Agile-based development
    team as a system.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了系统思维和因果循环图的基本术语，我们来快速看看在分析基于敏捷的开发团队作为一个系统时，如何使用它们。
- en: Visualizing the interrelationships of system elements
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化系统元素之间的相互关系
- en: This section uses an example CLD from the previous book – *Scaling Scrum Across
    Modern Enterprises* – that describes a Scrum-based Sprint planning process (see
    *Figure 3.3*). This exercise aims not to explain the Sprint planning process but
    rather to show how the CLD modeling process works, using an Agile point of reference.
    Again, for those of you who want a more detailed understanding of using systems
    thinking and CLD techniques to evaluate the Lean-Agile process, I refer you to
    Scaled Scrum Across Modern Enterprises.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本节使用了前一本书《*Scaling Scrum Across Modern Enterprises*》中的一个 CLD 示例，描述了基于 Scrum
    的 Sprint 规划过程（见*图 3.3*）。本练习的目的是并非解释 Sprint 规划过程，而是展示 CLD 建模过程如何运作，并以敏捷为参考。再次提醒那些希望更详细理解如何使用系统思维和
    CLD 技术来评估精益敏捷流程的读者，我建议你们阅读《Scaling Scrum Across Modern Enterprises》一书。
- en: 'A Sprint Planning example is shown here:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这里展示了一个 Sprint 规划的示例：
- en: '![Figure 3.3 – Sprint Planning CLD'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 3.3 – Sprint 规划因果循环图（CLD）'
- en: '](img/B17087_Figure_3.3.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17087_Figure_3.3.jpg)'
- en: Figure 3.3 – Sprint Planning CLD
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – Sprint 规划因果循环图（CLD）
- en: It's important to note that CLD arrows always close system cycles to show a
    reinforcing or balancing feedback loop. In other words, all CLD nodes connect
    back to the entry point to form a loop, no matter how large or complex the system,
    creating a reinforcing or balancing effect.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，CLD 中的箭头总是关闭系统循环，以显示一个强化或平衡的反馈回路。换句话说，所有 CLD 节点都会连接回入口点，形成一个回路，无论系统多大或多复杂，都能产生强化或平衡的效果。
- en: A reinforcing loop is a cycle in which changing a variable propagates through
    the system to increase or decrease a trend. In contrast, a balancing loop is a
    cycle in which the effect of changing a variable propagates through the loop and
    forces a response to counter the new trend. Our example of a CLD for the Scrum-based
    Sprint Planning process is a form of reinforcing loop, as work items entered into
    the Sprint Backlog decrements the number of work items in the Product Backlog.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 强化回路是一个循环，其中改变一个变量会在系统中传播，导致某一趋势的增强或减弱。相比之下，平衡回路是一个循环，其中改变一个变量的效果会传播通过回路，并迫使系统做出反应，以抵消新的趋势。我们为
    Scrum 基础的 Sprint 规划过程所举的 CLD 示例就是一个强化回路的形式，因为进入 Sprint 待办事项清单的工作项减少了产品待办事项清单中的工作项数量。
- en: In a CDL, we use lines to represent flows, and the arrows indicate the impact
    of these flows. For example, a positive arrow (+) indicates a *positive causal
    link* relationship that trends in the same direction, while negative arrows (-)
    indicate a *negative causal link*, or opposing trend.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在因果循环图（CDL）中，我们用线条表示流动，箭头表示这些流动的影响。例如，正箭头（+）表示一个*正向因果关系*，趋势朝同一方向发展，而负箭头（-）则表示*负向因果关系*，即相反的趋势。
- en: In this model, the customer and end user requirements flow from a Sprint Review
    (a demo of the previous increments) or directly from external sources. The relationship
    is a positive causal link, as the trend is in the same direction. In other words,
    as customers and end users develop new requirements, they increase the flow of
    prospective work items.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个模型中，客户和最终用户的需求来自于 Sprint 评审（即上一个增量的演示）或直接来自外部源。这种关系是正向因果关系，因为趋势朝同一方向发展。换句话说，随着客户和最终用户提出新的需求，潜在工作项的流量会增加。
- en: In contrast, note the link between the number of items in the product backlog
    and the number of refined items in the product backlog, a negative causal link.
    This relationship suggests that the refinement process has a general trend to
    reduce the number of work items that flow out of the backlog.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Reading a CLD
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we end this chapter, let's work our way around the Sprint Planning Process
    (displayed in *Figure 2.10* in the previous chapter). This exercise will help
    you understand how to assess the relationships described across the CLD model.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: 'Sprint planning is part of Scrum-based Agile methodology. I previously noted
    that there are 17 CLD models in my previous book. However, the 17 CLD models span
    3 distinct processes:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Sprint Planning
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project-to-product team transformations
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enterprise implementations of Scrum
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'All three CLD models are related to analyzing IT functions, but each has a
    very different scope and set of objectives. For example, the Sprint Planning model
    is composed of five separate CLDs. The five CLDs break out loosely around specific
    areas of focus that the teams might want to analyze. These areas include the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: A CLD model of analyzing Product Backlog priorities
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An open CLD model of Product Backlog refinement activities
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A CLD model of design and work clarifications
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A CLD model of analyzing work against team capacity
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A CLD model of negotiations and trade-off activities
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is only one resulting Sprint Planning CLD model, but the team may prefer
    to break the work out along the lines of concern and build the Sprint planning
    CLD model incrementally. Let's now look at each of these sub-CLD models briefly.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: CLD model of analyzing Product Backlog priorities
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The goal of this CLD (see *Figure 3.4*) is to understand the elements involved
    in building a backlog of customer and end-user requirements. The model is shown
    here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.4 – CLD model of analyzing Product Backlog priorities'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_3.4.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.4 – CLD model of analyzing Product Backlog priorities
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: Customer and end-user requirements flow into or through the Sprint Review process
    and external processes beyond the scope of this Sprint Planning CLD model. The
    arrows *with* the positive (+) signs indicate a positive causal link, which indicates
    that the trend or impact moves in the same direction. In other words, the addition
    of requirements adds to the stock of items in the product backlog.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: But note that this positive causal link does not mean the flow is only an additive
    process. The (+) and (–) signs on the arrows do not imply a mathematical addition
    or subtraction process, only whether the flow is reinforcing a trend, or not.
    As a result, the positive (+) flow as a relationship between elements also means
    a reduction in requirements. This leads to a reduction of the stock of items in
    the Product Backlog.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Open CLD model of Product Backlog refinement activities
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The goal of this CLD (see *Figure 3.5*) is to understand the elements involved
    in refining the work items listed in the product backlog. To clarify, this means
    decomposing epics into user stories and understanding the development tasks. We
    can see this in the following figure:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.5 – Open CLD model of Product Backlog refinement activities'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_3.5.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.5 – Open CLD model of Product Backlog refinement activities
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: The example shown in *Figure 3.5* includes arrows with negative (-) trends,
    which means the relationships between elements are negative causal links between
    the number of items in the backlog and the number of refined product backlog items.
    There is a similar negative causal link between the number of refined product
    backlog items in the product backlog and the prioritized items in the product
    backlog.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: It may be a bit difficult at first glance to understand what's going on, particularly
    for those who don't understand the details. The negative causal links indicate
    that as the node in which a link starts increases, the other node decreases, and
    vice versa. In other words, both the refinement and prioritization activities
    have an opposing effect on the stock of work items. This oppositional effect happens
    because there are limits on how much work the teams can take to refine and prioritize.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Suppose, for example, a customer wants a new feature included in the next release.
    The item is included in the product backlog as an epic or user story. The item
    must be refined to ensure the team fully understands the requirements, and whether
    they are a priority. The negative links indicate the number of refined item trends
    in the opposite direction from the number of initial items that go into the backlog.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: The same trend occurs as the product owner decides which of the refined work
    items have a high priority. However, those items that have a high priority inform
    the Sprint Goal in the same direction. So, in other words, an increase in the
    number of high-priority work items increases the scope of the Sprint Goal. Likewise,
    if stocks of refined and prioritized work items dwindle, the scope of the Sprint
    Goal becomes smaller.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: CLD model of design and work clarifications
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The goal of the next CLD (see *Figure 3.6*) is to understand the elements involved
    in the CLD model of design and work clarifications. This CLD is a visualization
    of the work item design and scoping activities. Note that all relationships between
    elements have positive causal linkages:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.6 – CLD model of design and work clarifications'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_3.6.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.6 – CLD model of design and work clarifications
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: In this CLD, the team requires clarifications from the product owner and other
    sources, such as customers and end users, on the details of the requirements.
    Improved clarifying details improve the design and ability to scope the effort,
    and vice versa.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: Note that we also have a positive causal linkage from another part of the model
    that describes the Sprint Goal in terms of priorities in the product backlog.
    Understanding the Sprint Goal leads to a better understanding of the design requirements
    and scope of the effort.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Finally, there is a positive causal link between the *Define Design requirements*
    element and the *Scope the work effort* element. As the team better understands
    the design, they can better understand the work scope in the upcoming Sprint.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: CLD model of analyzing work against team capacity
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This CLD (*see Figure 3.7*) aims to understand the elements involved in the
    CLD model of analyzing work against team capacity. Though this is a larger and
    more complex CLD, the concepts remain the same, and we just have to work our way
    through the linkages:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.7 – CLD model of analyzing work against team capacity'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_3.7.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.7 – CLD model of analyzing work against team capacity
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Without seeing this part of the CLD in context with the entire Sprint Planning
    CLD, it isn't easy to see where we should start. However, we should start with
    the element titled *Defined Sprint Goal in context with product backlog priorities*.
    In the next subsection, we'll see how the interactions in this CLD exit to another
    CLD via the *# of items in the Sprint Backlog node*. Also, note that this CLD
    includes several smaller CLD loops. The activities are linked through their participation
    in evaluating team capacity against the desired product backlog priorities.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: The importance of this CLD is that it defines the elements and interactions
    necessary to define the initial tasks in the context of team capacities and their
    ability to self-organize around the work planned for the Sprint. Ultimately, these
    relationships lead to decisions on the number (and type) of work items added into
    the Sprint backlog. Note that the items also reinforce the design criteria for
    the product's development within the Sprint.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: CLD model of negotiations and trade-off activities
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The goal of this CLD (see *Figure 3.8*) is to understand the CLD model of negotiations
    and trade-off activities. The elements and interactions in the previous CLD –
    analyzing work against team capacity – impacted design-related decisions. But
    note that the team has added a CLD loop to analyze design-related impacts against
    their capacity to determine whether trade-offs are required and need to be negotiated
    with the product owner. For example, there may be technical debt issues that need
    to be addressed before taking on some of the higher-priority work items:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.8 – CLD model of negotiations and trade-off activities'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_3.8.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Figure 3.8 – CLD model of negotiations and trade-off activities
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: We've now completed our review of the entire Sprint Planning CLD and the topics
    for this chapter. The critical thing to know about CLD modeling is that there
    is no universal truth. What works in your value stream may not be appropriate
    or work in another organization's value streams, even when they have similar purposes.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: We'll dive into value stream management basics as a Lean-oriented modeling and
    visualization tool in the next chapter. But, before we do that, let's summarize
    what you learned in this chapter. Then, take the quick test to see if you have
    any areas you need to review.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned that systems are much more complicated than the
    sum of their parts. The number of potential connections and interactions explodes
    with a geometric increase as the number of participating elements increases. You've
    learned how to use systems thinking to analyze the complexities of the elements
    and their relationships. You've also learned the vocabulary of systems thinking
    and how to use CLD as a modeling and visualization technique to work through complex
    interrelationships. Next, you got to use your newfound knowledge in systems thinking
    and CLD visualizations to review the Sprint Planning process. Finally, you learned
    that systems thinking takes a different approach to modeling and visualizing flows
    than value stream mapping.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: With this knowledge, you now have the skills to assess the participating elements
    and their relationships within a system – relationships that contribute to complexities
    through their interactions. Systems thinking is an analytic approach to understanding
    the impacts, causes, and effects of interconnected and interacting elements. In
    contrast, value stream mapping is a technique to assess the current and future
    state of how work is done, then find ways to improve it.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Where systems thinking gives us the tools to discover and assess the impacts
    of interrelating elements, value stream mapping gives us the tools to improve
    work and information flows. We'll explore the components of value stream management
    in the next chapter.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is the value of systems thinking?
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the two types of relationships elements have within a system?
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why do we model the connections and interactions of elements within a system?
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the purpose of closing loops in causal loop diagraming?
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the least complex configuration of a system with multiple nodes?
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the equation to determine the number of potential connections in a system?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why do we try to reduce the number of actual connections?
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the equation for calculating network densities?
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the purpose of the arrows in a CLD diagram?
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the difference between positive and negative causal links?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Rupp, C.G., (2020) *Scaling Scrum Across Modern Enterprises: Implement Scrum
    and Lean-Agile techniques across complex products, portfolios, and programs in
    large organizations*. Packt Publishing. Birmingham, England'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
