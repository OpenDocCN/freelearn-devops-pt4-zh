- en: '[*Chapter 16*](B17087_16_Final_PD_epub.xhtml#_idTextAnchor491): Transforming
    Businesses with VSM and DevOps'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, you will learn how to use **value stream management**
    (**VSM**) and DevOps tools and related implementation initiatives to transform
    businesses into viable entities to compete in our digital economy. But there are
    two parts to making digital transformations. In part one, we need to transform
    our software delivery capabilities to support the organization's business transformations
    at large. In part two, we use our transformed software delivery capabilities to
    improve the way we build and deliver products across our value streams.
  prefs: []
  type: TYPE_NORMAL
- en: In other words, we must connect the software delivery improvements achieved
    through our DevOps-related VSM initiatives to support the needs of our broader
    enterprise VSM initiatives. But such connections are not automatic. From the perspective
    of systems thinking, improving software development capabilities apart from the
    intersecting value delivery needs of the business is a form of local optimization.
    The only way an organization will see an adequate ROI from its VSM and DevOps
    tools investments is to use its enhanced software delivery capabilities to improve
    its value delivery capabilities across the organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you will learn how to align VSM and DevOps tool investments
    with corporate strategies and portfolio investments. We''ll work through that
    topic in a stepwise approach. With that objective in mind, the topics covered
    in this chapter include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Uniting VSM initiatives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using VSM for DevOps improvements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting to enterprise VSM initiatives
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OKRs to drive business transformations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aligning VSM initiatives with strategies and portfolios
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Expanding the vision for the VSM tool industry
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the last topic will introduce a future vision for the VSM tool industry.
    It would be easy to read current documentation and press releases from VSM tool
    vendors and believe that their tools provide out-of-the-box solutions to have
    end-to-end visibility across all value streams. That's not really true today.
    Modern VSM tools provide end-to-end visibility of the activities that support
    software delivery pipelines. The VSM tool vision can be expanded to integrate
    all organizational development and operational value streams in the long run.
    I've included this topic as a call to VSM tool vendors to make that vision a reality.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get started on understanding how to transform our businesses into competitive
    digital enterprises through VSM. We'll begin with a discussion on what it means
    to unite VSM initiatives, and why taking such actions are important.
  prefs: []
  type: TYPE_NORMAL
- en: Uniting VSM initiatives
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Lean concepts are not new. For example, arguments could be made that Henry
    Ford''s Model T production assembly lines embodied several of the concepts applied
    in modern Lean practices. For example, Ford created continuous and streamlined
    flows across automotive assembly lines and sequenced parts to arrive just before
    assembly. But it was the founder and future leaders of Toyota who took these concepts
    to the next level, led by these three individuals primarily:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sakichi Toyoda** – Toyota''s founder'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developed and implemented the concepts behind **Jidoka** – *automation with
    a human touch* – as the means to facilitate quality at the source.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Kiichiro Toyota** – Sakichi Toyoda''s son'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Founded the *Toyota Motor Corporation* and developed **just-in-time** (**JIT**)
    concepts for manufacturing.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Taichi Ohno** – Shop-floor supervisor, industrial engineer, and executive
    at Toyota'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrated Toyota's JIT system with its Jidoka System, defined the Kanban system,
    and established the principles behind Kaizen (continuous improvements). Ohno is
    also credited with defining many of the elements embodied in the **Toyota Production
    System** (**TPS**) such as pull-oriented production systems, the elimination of
    waste, **Quick Die changes** (**SMED**), non-value-added work, U-shaped work cells,
    and single-piece flows.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: What eventually became known as *The Toyota Way* had such a profound impact
    on global competition in manufacturing that it was widely studied and duplicated
    as the means to survive in increasingly competitive global markets. The term **Lean**
    comes out of research conducted by the **International Motor Vehicle Program**
    (**IMVP**) at the **Massachusetts Institute of Technology** (**MIT**) under the
    direction of James P. Womack. John Krafcik, a researcher at IMVP, coined the term
    Lean Production, which is at the heart of VSM. Beyond these pioneers came many
    practitioners and experts who further expanded the use of Lean production practices.
  prefs: []
  type: TYPE_NORMAL
- en: The bottom line is that people who know about Lean already know about value
    stream mapping and VSM – but in a broader context across other organizational
    development and operational value streams. Moreover, they have been applying these
    methods for decades!
  prefs: []
  type: TYPE_NORMAL
- en: Diverging customer-centric development strategies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Still, Lean practices in software development and VSM are relatively new as
    mainstream software development concepts. While other domains and industries focused
    on Lean production practices to improve their customer-centric value delivery
    capabilities, the software community focused on implementing Agile-based strategies.
    Though Lean and Agile practices both focus on improving customer-oriented delivery
    of value and making continuous improvements, the early advocates of Agile set
    out to solve a different set of problems.
  prefs: []
  type: TYPE_NORMAL
- en: For example, Toyota sought to improve quality and efficiencies in an island
    nation, coming out of the Great Depression and then World War II, where access
    to resources was limited and expensive. Toyota's means of being competitive in
    its global markets was to build higher-quality products with fewer resources and
    simultaneously ensure they built only the products customers wanted when they
    wanted them. They became so good at this that the rest of the world's manufacturing
    industries had to respond in kind to survive. Other industries quickly followed
    the Lean trend.
  prefs: []
  type: TYPE_NORMAL
- en: In contrast, Agile came out of the software development community, and its advocates
    were solving a different set of problems. Specifically, the traditional project
    management model was not sufficiently responsive to address the evolving needs
    and priorities of businesses and their customers. So, Agile began as a set of
    values and principles to support the needs of small software development teams
    to become more responsive and adaptable. In the process, Agile evolved to implement
    iterative and incremental development practices that leveraged prototyping and
    empiricism to create working solutions with customer-directed inputs quickly.
  prefs: []
  type: TYPE_NORMAL
- en: But now, we see the concepts behind Lean and Agile beginning to merge, often
    characterized as implementing Lean-Agile practices. This topic is essential as
    Lean-Agile is the basis of the VSM Consortium's approach to implementing VSM tools
    as the means to improve DevOps-based software delivery capabilities. We'll discuss
    this in the upcoming section titled *Using VSM for DevOps improvements*. However,
    before we get to that topic, let's revisit what the modern VSM tool industry means
    when it uses the term VSM.
  prefs: []
  type: TYPE_NORMAL
- en: Defining VSM as a modern software tools category
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In its modern contextual usage, VSM is a tools-driven strategy to support VSM
    practices to implement Lean-oriented improvements across CI/CD and DevOps pipeline
    activities. A casual search on the internet might lead us to think this is the
    only meaning behind VSM as the most recent information on VSM primarily came out
    of the VSM and DevOps tools industries.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, Forrester – in its New Wave™ article titled *Value Stream Management
    Tools Q3 2018*, defines VSM as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: VSM is an emerging tool category that connects an organization's business to
    its software delivery capability. VSM tools provide multiple roles — product managers,
    developers, QA, and release managers — a view into planning, health indicators,
    and analytics, helping them collaborate more effectively to reduce waste and focus
    on work that delivers value to the customer and the business.
  prefs: []
  type: TYPE_NORMAL
- en: However, recall that *Section 1*, *Value Delivery*, and *Section 2*, *VSM Methodology*,
    of this book introduced the original concepts behind VSM as a generic Lean-improvement
    strategy and methodology. It's essential to distinguish between the traditional
    and modern VSM concepts here, as the fusion of the two VSM approaches is the best
    way forward to align our organization's resources to compete in a digital economy.
    With this understanding firmly in mind, we can now learn how and why we must fuse
    the traditional and modern VSM concepts.
  prefs: []
  type: TYPE_NORMAL
- en: Using VSM for DevOps improvements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 5*](B17087_05_Final_PD_epub.xhtml#_idTextAnchor126), *Driving Business
    Value through a DevOps Pipeline*, you learned how to apply a generic eight-step
    VSM methodology to any VSM improvement initiative. We used that same eight-step
    approach in our CI/CD pipeline improvement use case in [*Chapter 6*](B17087_06_Final_PD_epub.xhtml#_idTextAnchor165),
    *Launching the VSM Initiative (VSM Steps 1-3)*, through [*Chapter 10*](B17087_10_Final_PD_epub.xhtml#_idTextAnchor272),
    *Improving the Lean-Agile Value Delivery Cycle (VSM Steps 7 and 8)*. There is
    no reason we cannot use that same eight-step methodology to guide DevOps pipeline
    improvements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Still, the VSM Consortium recommends a slightly different roadmap for VSM implementations
    related to making improvements across DevOps activities and toolchains, as shown
    in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 16.1 – VSM Consortium – A VSM Implementation Roadmap'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_16.1.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 16.1 – VSM Consortium – A VSM Implementation Roadmap
  prefs: []
  type: TYPE_NORMAL
- en: In the VSM Implementation Roadmap, you can see similarities to both Lean and
    Agile improvement concepts. In fact, it's an amalgamation of both practices.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing the Lean aspects of the VSM roadmap
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The VSM Consortium's VSM Implementation Roadmap begins by identifying value
    streams, locating, and organizing the people who are accountable for each value
    stream activity, mapping both the current and desired future states, and connecting
    the DevOps toolchains to the activities in the value stream. Then, depending upon
    the selected **value stream management platform** (**VSMP**) in use, the DevOps
    toolchain integration can serve multiple roles, including integrating, automating,
    and orchestrating value stream activities spanning software development, security,
    and compliance.
  prefs: []
  type: TYPE_NORMAL
- en: However, the larger objective is to use the VSMP and its integrations with DevOps
    tools to capture real-time and end-to-end data across the identified software
    delivery value stream. Using a common and normalized data model, the value stream
    managers, team members, organizational executives, and other stakeholders have
    real-time visibility into software production flows, allowing them to observe
    and determine the cause of bottlenecks and waiting.
  prefs: []
  type: TYPE_NORMAL
- en: So, the primary difference between this part of the VSM Consortium's VSM Implementation
    Roadmap and the generic eight-step VSM methodology is the integration of software
    tools to capture end-to-end data in the value stream without the need for human
    intervention or manual data collection. Another key differentiator is the use
    of analytical tools, which we'll get into in the following subsection.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing the Agile aspects of the VSM roadmap
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The next two steps in the VSM Consortium's VSM Implementation Roadmap involve
    **inspection** and **adaption**. Scrum advocates will immediately recognize these
    two steps from Scrum's three empirical pillars of **transparency**, **inspection**,
    and **adaptation**.
  prefs: []
  type: TYPE_NORMAL
- en: In the previous subsection, you learned that VSMP products support the integration,
    automation, and orchestration of value stream activities. But the tools also give
    us visibility of work and information flows across our DevOps pipelines. So, though
    the term is not explicitly cited, the VSM Consortium has not ignored Scrum's pillar
    of *Transparency*. What is unique in the VSM tool industry is replacing the manual
    aspects of collecting and reporting data via its platforms and tools, which is
    enabled in the *Connect* step through the VSMP-DevOps toolchain integrations.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have real-time visibility across DevOps pipeline flows, the DevOps
    teams can *Inspect* the pipeline to inform their retrospective meetings with accurate
    and current information. We can use the insights gathered from the inspections
    and retrospectives to develop one or more hypotheses for potential solutions and
    perform experiments to evaluate the effectiveness of identified alternatives against
    our goals. Finally, we can *Adapt* our DevOps system based on our experiential
    findings.
  prefs: []
  type: TYPE_NORMAL
- en: So, from the *Start* through *Adapt* steps, the VSM Implementation Roadmap marries
    the best practices of both Lean and Agile into a seamless framework. This brings
    us to the last step, *Vision*. As it turns out, this is a critical step in Lean-Agile
    practices.
  prefs: []
  type: TYPE_NORMAL
- en: Establishing a business transformation vision
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Recall that Agile evolved as a set of values and principles by software engineers
    and consultants to be more responsive to evolving customer needs and priorities.
    But Agile also evolved primarily as a small teams-oriented development philosophy
    where incremental changes are evaluated over each development iteration – based
    on the team's experiences from the previous Sprint. In other words, Agile-based
    improvements tend to be limited to very short planning horizons – measured in
    1 to 4 weeks and limited to the budgets and authorities granted to the development
    team.
  prefs: []
  type: TYPE_NORMAL
- en: In contrast, Lean improvements often view changes across multiple planning horizons
    that span, potentially, several fiscal years and involve changes and budgets requiring
    executive-level sponsorship and commitment authorities. In fact, investments in
    both VSM and DevOps tools involve organizational investments and business operations,
    and cultural changes that small software development teams cannot authorize. Therefore,
    investments on this scale must support the strategies of the business, receive
    executive-level support, and fit within the organization's portfolio-level investments
    and priorities.
  prefs: []
  type: TYPE_NORMAL
- en: So, *Vision* as a VSM implementation step becomes vital to align the VSM and
    DevOps implementation objectives with the business strategies to gain executive
    support and prioritize budget allocations. And the only way that's going to happen
    is if the executives see how the improvements to software deliveries can improve
    the company's product deliveries across all organizational value streams.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand how Lean and Agile concepts come together in the *VSM
    Implementation Roadmap* as a tools and DevOps-based software delivery improvement
    strategy, let's take a step back to look at the importance people play in the
    implementation and use of these tools.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing tools is not a replacement for people
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Having access to real-time data across your DevOps pipelines does not remove
    the need to have executives and managers performing *Gemba* walks, especially
    in large software development initiatives involving multiple teams. The people
    performing the day-to-day work across these DevOps pipelines have the greatest
    knowledge about how and why work is performed and the issues that interfere with
    their workflow. In a modern VSM tools context, Gemba walks are explorations that
    can involve both virtual and face-to-face data gathering and communication activities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similar to how Gemba was explained in the section titled *Going to see (Gemba)*
    in [*Chapter 7*](B17087_07_Final_PD_epub.xhtml#_idTextAnchor183), *Mapping the
    Current State (VSM Step 4)*, the VSM members or VSM manager and executives can
    chat with the DevOps team members to ask the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: Ask the DevOps team members to describe the problems they experience with the
    way software development work is currently performed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '- Note that most people tend to avoid discussing difficult subjects or express
    opinions they believe others don''t want to hear.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Managers need to dive deeper to get past the superficial yet visible issues
    and get to the real problems that affect team performance and software deliveries.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, ask the team members what they think are the root causes of the problems
    and show evidence to support their reasoning (**Transparency**).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When the root cause is uncovered, next, ask the DevOps team members what should
    be done to resolve the issues and why.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then ask the DevOps team members how they will know if the problem is resolved.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '- What evidence will clearly indicate the problem is resolved?'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- What data and metrics can serve as indicators of successful outcomes and
    improvements?'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Finally, investigate the alternative recommended solutions through experimentation
    and inspection, and adapt to the approach that provides the most value.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You now understand the value of managers and executives going out to see what's
    going on and the kinds of questions they must ask of the DevOps team members.
    But, in many cases, the issues may require specialized skills and a team approach
    to resolve them. In those cases, the organization should establish a VSM team
    to conduct the analysis and manage the VSM initiative.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a VSM team for DevOps transformations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Creating a VSM team, just as we would for any other type of VSM initiative,
    helps to guide DevOps-oriented software delivery value stream improvement investments
    and activities. Moreover, larger software products involving multiple development
    and support teams make it critical to stand up a dedicated VSM team to guide the
    overarching initiative.
  prefs: []
  type: TYPE_NORMAL
- en: It could be possible that a non-IT VSM team – one that's guiding an organization's
    development or operational value streams improvements – identifies the need to
    improve or align the software development delivery capabilities in support of
    their value stream. In such cases, the original VSM team can guide the DevOps-oriented
    improvements for their value stream, but their team must also include experts
    on DevOps activities and tools.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of which approach the organization takes, the VSM team takes on the
    responsibility for guiding the improvements in software delivery capabilities
    to meet the needs of the value stream. This alignment is easier to accomplish
    when the assigned VSM team supports one of the organization's development and
    operational value streams as its VSM initiative.
  prefs: []
  type: TYPE_NORMAL
- en: In contrast, a VSM team that supports DevOps as a standalone value stream must
    recognize that they must ultimately align the DevOps team to support high-priority
    improvements in other organizational value streams. By way of an analogy, it's
    hard to hit a target if you don't know what you are aiming at. So, the DevOps-oriented
    VSM team can take on that responsibility, working with the organization's portfolio
    managers, product owners, and other value stream managers to identify high-priority
    software development needs.
  prefs: []
  type: TYPE_NORMAL
- en: This subsection concludes our discussion on using VSM for DevOps-based improvements
    to software delivery capabilities. In the next section, we will look at how the
    DevOps VSM initiatives support an organization's digital business transformations.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to enterprise VSM initiatives
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you'll learn how to connect traditional VSM methods with modern
    VSM tool applications and DevOps to support digital business transformations.
    You've learned throughout this book that organizations can use modern VSM tools
    to improve their DevOps-based software value delivery capabilities. However, organizations
    can and should also continue implementing traditional VSM initiatives to identify
    digital improvement opportunities across all other organizational value streams.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at *Figure 16.2 – DevOps pipeline providing digital improvements
    to manufacturing pipeline flows* to show how this strategy works. A traditional
    VSM initiative has identified three potential digital enhancements (Kaizen Bursts)
    within a manufacturing-oriented pipeline in this scenario. It doesn''t really
    matter for this example as to what they might be, but they might include any of
    the following types of digital enhancements:'
  prefs: []
  type: TYPE_NORMAL
- en: Improved product order and materials information across manufacturing pipeline
    activities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved access to shop floor/manufacturing process information.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Re-programming robotics and automated manufacturing systems to improve performance
    or reduce setup times.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement automated quality inspection systems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement programming on an automated paint process.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improvements to align labeling and shipping instructions with products.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improvements to supply chain management systems to support JIT delivery requirements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other digital enhancements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The VSM team meets with the DevOps team to explain their requirements and priorities,
    informing their product backlog. The DevOps pipeline can technically be at any
    stage of maturity. Regardless, based on priorities, the approved digital enhancements
    make their way through the pipeline into production and must be supported and
    potentially modified over the life of the manufacturing product line:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 16.2 – DevOps pipeline providing digital improvements to manufacturing
    pipeline flows'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_16.2.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 16.2 – DevOps pipeline providing digital improvements to manufacturing
    pipeline flows
  prefs: []
  type: TYPE_NORMAL
- en: The prioritized Kaizen Burst (improvement opportunities) identified in the organization's
    traditional VSM initiatives, working across all development and operational value
    streams, provide the information necessary to understand where digital transformations
    have the most positive impact on the business's operations. In this example, organizations
    use VSM methods strategically as a lean-oriented improvement technique to identify,
    assess, and prioritize where they can eliminate waste and streamline their value
    stream activities through digital transformations.
  prefs: []
  type: TYPE_NORMAL
- en: After reading this book, you should be fully aware that the strategic VSM initiatives
    identify many types of improvement opportunities to eliminate waste and streamline
    value stream flows, some of which may not require software-based solutions or
    enhancements. However, software and associated computing and network systems are
    at the heart of most product and value stream improvements in our digital economy.
    And we employ VSM tools to improve DevOps pipelines to support the digital improvement
    needs identified across all other organizational VSM initiatives.
  prefs: []
  type: TYPE_NORMAL
- en: We can direct our improved DevOps software delivery capabilities to eliminate
    waste and streamline flows across all organizational value streams. But, more
    often than not, it is those strategic VSM initiatives that help the organization
    identify strategic improvement opportunities – digital or otherwise. The recommendations
    ultimately require executive support and consideration for investment prioritization
    by the lean portfolio management function.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose a software development team or a value stream manager takes shortcuts
    to circumvent the organization's budget approval processes. In that case, they
    will fail to obtain the management and financial support required for success.
    A small development team might find a way to fund their DevOps implementation
    as a standalone, but that's not a scalable process. And they might fail to deliver
    sufficient value to justify the effort or justify the expansion of their efforts.
  prefs: []
  type: TYPE_NORMAL
- en: As discussed in the introduction to this chapter, improving software delivery
    capabilities in isolation of other organizational value stream needs is a form
    of local optimization from a systems thinking perspective. We can expend a lot
    of time, effort, and money and not see a justifiable return on investment.
  prefs: []
  type: TYPE_NORMAL
- en: Here's an example of why this is the case. Measurements across a fully integrated,
    automated, and orchestrated DevOps pipeline have cycle times measured in microseconds
    – something your connected VSM tools will quickly point out. Much of the overall
    lead time delays come from the *fuzzy frontend* activities associated with product
    conceptualization, requirements, and design. But once the requirements, acceptance
    criteria, and design issues are sorted, and a feature moves into production, most
    of the cycle time events can be measured in minutes or less.
  prefs: []
  type: TYPE_NORMAL
- en: So, a mature DevOps-based software development pipeline is not going to be a
    bottleneck in an organization's value streams. The assumption, of course, is that
    the DevOps pipeline improvement activities have already resolved budgeting and
    approval issues for tools and created reusable configurations for standing up
    testing environments and executing CI/CD pipeline activities.
  prefs: []
  type: TYPE_NORMAL
- en: None of the initial DevOps pipeline improvement activities comes quickly or
    easily. The organization's IT function needs to invest time and resources in the
    effort. They will also need to obtain executive support and buy-in to scale DevOps
    capabilities across the enterprise.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are three general scenarios in which DevOps enhanced software deliveries
    support an organization''s business objectives, as shown in the list that follows:'
  prefs: []
  type: TYPE_NORMAL
- en: To produce standalone software products – for external customers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enhancements to physical products – such as the nav and control systems in modern
    automobiles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Value stream improvements – to improve value delivery capabilities across operational
    value streams
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is not the objective of the previous list to conflate the use of software
    products with value streams. Instead, the objective is to note the ubiquitous
    nature of software across all types of development and operational value streams.
  prefs: []
  type: TYPE_NORMAL
- en: 'I''ve elaborated on this same point throughout this book to make it clear:
    I believe organizations must have two parallel VSM efforts going on at all times:'
  prefs: []
  type: TYPE_NORMAL
- en: VSM initiatives to improve software delivery capabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VSM initiatives to support Lean improvements across the enterprise
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corporate-sponsored VSM initiatives operate across all development and organizational
    value streams to support continuous lean improvements – some/many of which will
    require digital enhancements to affect the desired value-added changes. So, while
    the VSM improvements for software delivery are vital, the real value of those
    improvements comes from aligning software delivery to support digital improvements
    across the enterprise. And those improvement opportunities are identified and
    prioritized across the organization's value streams through corporate-sponsored
    VSM initiatives.
  prefs: []
  type: TYPE_NORMAL
- en: 'Moreover, it should be a focus of VSM teams and their initiatives to identify
    areas where IT can improve product value, eliminate waste, and improve value stream
    flows – and the assigned DevOps team can help with these assessments. The software
    industry is becoming increasingly aware of the importance of aligning its efforts
    with product teams and value streams. For example, the VSM Consortium''s initial
    report, due to be released in July 2021, found that nearly 40% (37.36%) of its
    respondents reported working in a product, feature, component, or stream-aligned
    team: [https://www.vsmconsortium.org/](https://www.vsmconsortium.org/).'
  prefs: []
  type: TYPE_NORMAL
- en: You now know to align your DevOps-based VSM initiatives to support the organization's
    other value streams. In the following two sections, you will learn how to connect
    with those other value streams through the organization's strategic **Objectives
    and Key Results** (**OKRs**) and portfolio management. We'll start with the discussion
    on OKRs.
  prefs: []
  type: TYPE_NORMAL
- en: Using OKRs to drive business transformations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The concepts behind OKRs were created by Andy Grove, the former CEO of Intel,
    whose leader transformed the company into the world's largest semiconductor company.
    Early advocates of OKRs, first at Intel, followed by other technology companies,
    including Google. The employment of OKRs by Intel and Google was chronicled in
    the book *Measure What Matters*, by John Doerr (Doerr, 2017).
  prefs: []
  type: TYPE_NORMAL
- en: John Doerr learned about the use of OKRs from Andy Grove as an employee at Intel
    before he left to become a venture capitalist at Kleiner Perkins. During his tenure
    with Kleiner Perkins, he taught the principles behind OKRs to the companies he
    invested in, including Google.
  prefs: []
  type: TYPE_NORMAL
- en: OKRs are fairly simple in concept. **Objectives** state what is to be achieved
    by the organization, while **Key Results** are the targets we set and monitor
    as objective measures of successful outcomes. More than a set of goals and measurements,
    OKRs serve as a management methodology and a framework to focus the company's
    efforts.
  prefs: []
  type: TYPE_NORMAL
- en: Results must be quantifiable, measurable, and verifiable. In other words, we
    use real numbers for stating objectives, not fuzzy verbiage that can't be measured
    or proven. In short, with well-defined OKRs, there can be no doubt across the
    organization about whether we achieved our objectives or not.
  prefs: []
  type: TYPE_NORMAL
- en: OKRs are also time-bound, usually with quarterly objectives, though some organizations
    may implement monthly objectives. It's possible to have long-lived objectives,
    perhaps spanning a year or more in duration. Still, the key results may be monitored
    and rolled up over no more than a quarterly basis.
  prefs: []
  type: TYPE_NORMAL
- en: OKRs are not hidden from sight. They are made visible to all employees and stakeholders.
    If people don't know what targets the organization is shooting for, how will they
    know where they are going and if they get there? OKRs guide everyone's efforts.
  prefs: []
  type: TYPE_NORMAL
- en: The objectives of an OKR are not meant to be easy. Instead, they should be achievable
    and yet challenging. And, as noted above, the objectives need to be specific,
    clearly stated, quantifiable, and visible. The ideal is to set stretch goals that
    inspire the organization through its people to achieve great things.
  prefs: []
  type: TYPE_NORMAL
- en: By now, you may be wondering why we are discussing OKRs in a book about applying
    methods and tools for VSM and DevOps. The answer is that OKRs help drive corporate
    strategies, portfolio priorities and investment decisions, and ultimately VSM
    metrics.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, a corporate objective might be to deliver a new software product
    enhancement to support a niche market opportunity. Our measurable **key results**
    (**KRs**) might include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**KR #1**: Develop three required features over the next quarter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**KR #2**: Conduct a targeted marketing campaign to promote the product enhancements
    to 20,000 qualified prospects over the same period.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**KR #3**: Sell 100 new software licenses in the first month of release and
    400 total licenses by the end of the second quarter.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Did you notice that only *KR #1* has anything to do with software development?
    The other two dealt with sales and marketing support, which are part of the organization''s
    operational value streams. That type of scenario will be typical in any strategic
    VSM initiative.'
  prefs: []
  type: TYPE_NORMAL
- en: We might include other key results to describe reseller or other value stream
    improvement objectives and desired results. In general, an OKR will have between
    3 and 5 key results.
  prefs: []
  type: TYPE_NORMAL
- en: Another important set of metrics used by organizations are **Key Performance
    Indicators** (**KPIs**). It's essential to understand the distinction between
    KPIs and OKRs. For example, KPIs focus on performance measurements for individuals
    and teams or groups of people against their goals. As a result, KPIs tend to focus
    on tactical objectives, whereas OKRs support strategic goals.
  prefs: []
  type: TYPE_NORMAL
- en: Using the preceding example, we strategically introduced a new product variant
    to open up a new market niche. The key results help the organization understand
    the expectations. But they also provide an idea of which value streams are most
    affected. We can now use our VSM initiatives to guide the improvement efforts
    required to meet the objectives.
  prefs: []
  type: TYPE_NORMAL
- en: Aligning VSM initiatives with strategies and portfolios
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VSM initiatives support strategic goals and objectives. This is true regardless
    of whether a VSM team is evaluating improvements to software deliveries through
    the implementation of DevOps pipeline capabilities or any of a myriad of other
    organizational value stream improvements. They are strategic because many of the
    improvement opportunities identified will involve investments and timeframes beyond
    what a small value stream team can authorize.
  prefs: []
  type: TYPE_NORMAL
- en: The chief executives will not support large investments that do not align with
    the business's mission, vision, and strategies. Larger enterprises will (or should)
    have more formal budgeting procedures than smaller entities. But regardless of
    size, the chief executives must have a mechanism to evaluate and prioritize investments.
    When viewed from this perspective, it should be apparent that VSM and DevOps tool
    investments compete against all the other potential investments under evaluation
    by the organization at large.
  prefs: []
  type: TYPE_NORMAL
- en: Since this is a book on VSM and not portfolio management, we will only touch
    briefly on this subject. However, the primary purpose of portfolio management
    is to centralize and control the budgeting and investments process so that organizations
    can evaluate all improvement opportunities and their priorities in the context
    of corporate strategies.
  prefs: []
  type: TYPE_NORMAL
- en: By their very nature, improvement opportunities tend to be project-oriented
    in nature. That is to say, they are characterized as having relatively short-term
    durations with defined beginning and end dates. The work is often relatively unique
    and standalone as one-off change endeavors. The executives make their budgeting
    and priority decisions based on return on investment criteria, so the improvement
    projects have precisely defined schedules, resources, and budget constraints.
  prefs: []
  type: TYPE_NORMAL
- en: As a result, portfolio management practices often spawned traditional projects
    and programs to manage the approved work. However, with the move to Lean-Agile
    practices, organizations move to implement Lean Portfolio Management concepts,
    such as those implemented by the Scaled Agile Framework® (SAFe®). Specifically,
    SAFe's Lean Portfolio Management process applies Lean and systems thinking approaches
    to strategy and investment funding, Agile portfolio operations, and governance.
  prefs: []
  type: TYPE_NORMAL
- en: You now have a general understanding of the portfolio management approach to
    evaluating, prioritizing, and approving budgets to support the improvement opportunities
    identified in the organization's VSM initiatives. You also know how to apply VSM
    methods and tools to improve value deliveries across the organization. Now let's
    move on to understand how the results of our VSM initiatives, no matter how successful,
    can fail over time without continued executive support, training, and Lean-oriented
    improvements over the organization's life.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding how VSM initiatives can fail over time
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While performing research for this book, I had a conversation with Todd Sperl
    – one of the founders of **LeanFITT**™, that I found both interesting and disturbing.
    He noted several examples where an organization makes investments in VSM initiatives
    and sees great and sometimes fantastic results, only to see the whole thing come
    apart a few years down the road. Moreover, he noted that when the organizations
    start to fail, they often fail harder and more quickly than it took to turn them
    into high-performing enterprises. In fact, they often end up performing below
    the levels they started at before moving to Lean. How does that happen?
  prefs: []
  type: TYPE_NORMAL
- en: I had discussions on this topic with Todd and later with Al Shalloway – the
    developer of PMI's FLEX. It's an interesting phenomenon and one that probably
    requires specific research to understand fully. But a common denominator appears
    to be new management coming in and not understanding how the organization changed
    its practices, behaviors, and culture to support improved horizontal flows of
    delivering value.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes the new management comes in through an acquisition. In other words,
    the success of the Lean company makes it an acquisition target. Still, the new
    executives fail to appreciate the Lean-oriented operations and structures that
    contributed to its success.
  prefs: []
  type: TYPE_NORMAL
- en: Instead, the new executives are often more familiar and comfortable managing
    the vertical silos that form around traditional business functions and domains,
    such as marketing, sales, manufacturing, HR, legal, accounting, transport, and
    warehousing. Moreover, the horizontal flow of value across domains is difficult
    to see; and seemingly much more difficult to manage than managing resources aligned
    with business domains and functions.
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 16.3* superimposes the horizontal flows of a value stream map against
    a traditional vertical organizational chart. Again, it''s easy to see that there
    is no direct correlation between these incongruent views of managing an organization:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 16.3 – Vertical organizational structures against horizontal workflows'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17087_Figure_16.3.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 16.3 – Vertical organizational structures against horizontal workflows
  prefs: []
  type: TYPE_NORMAL
- en: As a result, the change back to managing vertical silos instead of managing
    product flows is an immediate killer for the organization's performance. First,
    barriers quickly build between the disparate groups that must work together to
    maintain the horizontal value delivery flows. Then, the processes that supported
    horizontal activity flows quickly dissolve and fail. At that point, the organization
    metaphorically finds itself back to fighting an endless series of fires it cannot
    put out. At that point, things are so broken that the organization begins to fail
    on a massive scale.
  prefs: []
  type: TYPE_NORMAL
- en: We can never fix value delivery problems within vertical silos. Instead, we
    must install horizontal collaborations and improve work and information flows,
    and that process takes time and effort to accomplish. But, appropriately executed,
    there is no rational reason to go back to managing vertical domains instead of
    continuing along the path of managing product-oriented horizontal flows.
  prefs: []
  type: TYPE_NORMAL
- en: By way of an analogy, though it may take many months or even years to construct
    a building, we can bring it down in a matter of hours with explosives and heavy
    equipment. Managers who go backward to implement traditional management practices
    and vertical functional silos bring the explosives and heavy equipment that quickly
    bring down our Lean production flows.
  prefs: []
  type: TYPE_NORMAL
- en: The bottom-line learning point for new executives, shareholders, and board members
    is to be careful when acquiring a Lean-oriented company that is already doing
    well. They must take the time to understand why and how it works before imposing
    new management structures.
  prefs: []
  type: TYPE_NORMAL
- en: This section completes our discussion on fusing traditional and modern VSM initiatives
    to support business transformations. However, before closing this book, let's
    address a potential future state for the VSM tool industry and the benefits all
    organizations would derive from this new and expanded vision to apply VSM tools.
  prefs: []
  type: TYPE_NORMAL
- en: Expanding the vision for the VSM tool industry
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: My ultimate vision for VSM is that the traditional VSM initiatives and modern
    VSM tool-oriented concepts come together. In fact, I think this could be a tremendous
    boon for the VSM tool industry. Instead of limiting their use to improve DevOps-based
    software delivery value streams, we could use the same integration, automation,
    and orchestration capabilities across all organizational value streams.
  prefs: []
  type: TYPE_NORMAL
- en: For example, how hard would it be to extend the VSM tools vision – which currently
    supports data capture and the normalization of data across software delivery pipeline
    activities, to also provide the same kind of end-to-end visibility and analysis
    across all value stream flows? Such a strategy would mean the VSM tool vendors
    create extensions to help their customers develop applications and integrations
    to monitor and capture data across other types of development and operational
    value streams and their activities.
  prefs: []
  type: TYPE_NORMAL
- en: Most manufacturing companies already employ commercial and custom software applications
    to control production flows. Process control systems are particularly important
    in highly integrated, automated, and high-volume production environments.
  prefs: []
  type: TYPE_NORMAL
- en: In *Section 2*, *VSM Methodology*, I questioned the need to have separate VSM
    methods for IT, conducted differently than the VSM initiatives supporting other
    development and operational value streams. I similarly question if we need a different
    set of tools for data capture, normalization, and analytics across disparate value
    streams. We need to apply VSM concepts and tool capabilities across all organizational
    value streams in our digital economy. The aggregation of tools will enable seamless
    and real-time access to data and provide end-to-end visibility and analytics from
    concept to value delivery/cash.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, you have learned how to unite the work of traditional
    VSM initiatives with the improvements made through DevOps-based VSM initiatives
    and tools to improve an organization's competitive posture in our modern digital
    world. While many VSM tool vendors make it appear that their VSM tools provide
    end-to-end visibility across all value streams, the reality is they are focused
    on IT-oriented value streams. That's not a bad thing because DevOps pipelines
    are complex and expensive, and time-consuming to build on an enterprise scale.
  prefs: []
  type: TYPE_NORMAL
- en: But you've also learned that improvements in any value stream in isolation of
    understanding their impact on the system as a whole are forms of local optimization.
    That means we can spend a lot of time and money on maturing our DevOps-based software
    delivery capabilities and not move the needle to help the organization improve
    its overall value-delivery capabilities and bottom line.
  prefs: []
  type: TYPE_NORMAL
- en: We must align our improved software delivery capabilities to support the needs
    across the organization's value streams. That is where much greater ROI lies.
    In fact, if that alignment does not occur, it's doubtful the IT organization will
    obtain executive-level support to sustain the initiative on a large scale across
    the enterprise. So, in this chapter, you learned that you must align VSM and DevOps
    tool investments with corporate strategies through the portfolio management process.
    And you must also align your improved DevOps pipelines to support the identified
    digital improvement opportunities across the organization's other value streams
    and their VSM initiatives.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is a common use of VSM and DevOps tools and related implementation initiatives?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Ture or False: Lean and VSM are new concepts.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What problem did the leaders at Toyota face when they evolved the concepts that
    we describe today as Lean production?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What set of problems did the software community set out to address through the
    values and principles behind the Manifesto for Agile Software Development?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which three steps of the VSM Implementation Roadmap correlate most closely with
    the generic eight-step VSM methodology introduced in this book?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which step within the VSM Implementation Roadmap helps provide visibility across
    DevOps pipelines?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are common improvement horizons and levels of authority for Agile and Lean?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Implementing a VSM or DevOps toolchain in isolation from evaluating improvements
    in other value streams is an example of what, and why do we care?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the purpose of portfolio management, and why do we care?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Why do at least some previously very successful Lean-oriented organizations
    fail over time?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Doerr, John (2017), *Measure What Matters. OKRs – The Simple Idea That Drives
    10X Growth*, The Bennet Group, LLC, Published by Portfolio Penguin, Random House
    LLC, London, UK.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Appendix A – VSM Charter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/Appendix_Figure_A.1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Appendix A
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B17087_Appendix_A.2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Appendix B – VSM Storyboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/Appendix_Figure_B.1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Appendix B
  prefs: []
  type: TYPE_NORMAL
