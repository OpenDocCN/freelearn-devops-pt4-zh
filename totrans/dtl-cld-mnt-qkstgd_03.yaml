- en: '*Chapter 2*: Deploying the Datadog Agent'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第二章*：部署 Datadog 代理'
- en: In the previous chapter, we learned that the cornerstone of a monitoring tool
    is the group of metrics that helps to check the health of the production system.
    The primary tasks of the monitoring tool are to collect metric values periodically
    as time series data and to alert on issues based on the thresholds set for each
    metric.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了监控工具的基石是帮助检查生产系统健康状况的一组指标。监控工具的主要任务是定期收集度量值作为时间序列数据，并根据为每个指标设置的阈值对问题进行警报。
- en: The common method used by monitoring tools to collect such data is to run an
    agent process close to where the software application runs, be it on a bare-metal
    server, virtual machine, or container. This would enable the monitoring agent
    to collect metric values directly by querying the software application and the
    infrastructure where it runs.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 监控工具常用的收集数据的方法是将代理进程运行在软件应用程序所在的地方，无论是裸金属服务器、虚拟机还是容器。这将使监控代理能够通过查询软件应用程序及其运行的基础设施直接收集度量值。
- en: Datadog collects such data in various ways and like other monitoring tools,
    it also provides an agent. The agent gathers monitoring data from the local environment
    and uploads that to the Datadog SaaS backend in the cloud. In this chapter, we
    will learn how the Datadog Agent is configured to run in production environments.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog 通过多种方式收集这些数据，像其他监控工具一样，它也提供了一个代理。该代理从本地环境收集监控数据，并将其上传到 Datadog 的云端 SaaS
    后端。在本章中，我们将学习如何配置 Datadog 代理以在生产环境中运行。
- en: 'This chapter will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Installing the Datadog Agent
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Datadog 代理
- en: Agent components
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理组件
- en: Agent as a container
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为容器的代理
- en: Deploying the agent – use cases
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署代理 – 使用案例
- en: Advanced agent configuration
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级代理配置
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To try out the examples mentioned in this book, you need to have the following
    tools and resources:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试本书中提到的示例，您需要具备以下工具和资源：
- en: An Ubuntu 18.04 environment with Bash shell. The Datadog Agent can be installed
    on a variety of operating systems and Ubuntu is chosen only as a sample environment.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有 Bash shell 的 Ubuntu 18.04 环境。Datadog 代理可以安装在多种操作系统上，Ubuntu 仅作为示例环境。
- en: A Datadog account and a user with admin-level access.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Datadog 账户和一个具有管理员级别权限的用户。
- en: Docker
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker
- en: Installing the Datadog Agent
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Datadog 代理
- en: The Datadog Agent can be configured to run in multiple ways for it to monitor
    the infrastructure and the processes, including microservices in the environment
    where it runs. It can run at the host level and as a microservice and the actual
    configuration would usually depend on how the application software is deployed.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog 代理可以通过多种方式进行配置，以便监控基础设施和运行环境中的进程，包括微服务。它可以在主机级别和作为微服务运行，实际配置通常取决于应用软件的部署方式。
- en: Runtime configurations
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行时配置
- en: There are multiple ways you can deploy the Datadog Agent in runtime environments
    to collect events and data, and such configurations depend largely on how the
    applications are deployed. For example, if all the applications run directly on
    the host, then the Datadog Agent is run directly on the host as well. Let's look
    at the common runtime configurations.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方式可以在运行时环境中部署 Datadog 代理来收集事件和数据，这些配置在很大程度上取决于应用程序的部署方式。例如，如果所有应用程序都直接在主机上运行，那么
    Datadog 代理也会直接在主机上运行。我们来看一下常见的运行时配置。
- en: 'The Datadog Agent can be configured to run in three different ways locally,
    as illustrated in the diagrams shown as follows. In all the cases, the agent also
    collects data on the infrastructure health in addition to collecting application-specific
    metrics:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog 代理可以在本地以三种不同的方式进行配置，如下图所示。在所有情况下，代理除了收集特定于应用程序的指标外，还会收集基础设施健康状况的数据：
- en: '**As a service on the host monitoring application processes**: In this case,
    the Datadog Agent service monitors one or more application processes or services
    running on the same host:![Figure 2.1 – The Datadog Agent as a service on the
    host monitoring services'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**作为主机上的服务监控应用进程**：在这种情况下，Datadog 代理服务监控一个或多个在同一主机上运行的应用进程或服务：![图 2.1 – Datadog
    代理作为主机上的服务监控服务'
- en: '](img/Figure_2.1_B16483.jpg)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_2.1_B16483.jpg)'
- en: Figure 2.1 – The Datadog Agent as a service on the host monitoring services
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – Datadog 代理作为主机上的服务监控服务
- en: '**As a service on the Docker host monitoring application containers**: In this
    case, the software application is deployed as containers on the Docker host and
    the Datadog Agent runs directly on the host, monitoring the health of the containers
    and the application:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**作为宿主机上的服务，监控应用容器**：在这种情况下，软件应用作为容器部署在Docker宿主机上，Datadog Agent直接在宿主机上运行，监控容器和应用的健康状况：'
- en: '![Figure 2.2 – The Datadog Agent as a service on the host monitoring microservices'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.2 – Datadog Agent作为宿主机上的服务，监控微服务'
- en: '](img/Figure_2.2_B16483.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.2_B16483.jpg)'
- en: Figure 2.2 – The Datadog Agent as a service on the host monitoring microservices
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 – Datadog Agent作为宿主机上的服务，监控微服务
- en: '**As a container on the Docker host monitoring application containers**: In
    this configuration, both the Datadog Agent and the application are run in containers
    on the Docker host:'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**作为Docker宿主机上的容器，监控应用容器**：在这种配置下，Datadog Agent和应用程序都作为容器运行在Docker宿主机上：'
- en: '![Figure 2.3 – The Datadog Agent as a microservice monitoring other microservices'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.3 – Datadog Agent作为微服务，监控其他微服务'
- en: '](img/Figure_2.3_B16483.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.3_B16483.jpg)'
- en: Figure 2.3 – The Datadog Agent as a microservice monitoring other microservices
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3 – Datadog Agent作为微服务，监控其他微服务
- en: 'A real-life configuration might be a little more nuanced, but these basic configurations
    provide core ideas on how the Datadog Agent can be deployed to collect monitoring
    data:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 真实环境中的配置可能会更复杂，但这些基本配置提供了关于如何部署Datadog Agent以收集监控数据的核心思路：
- en: '![Figure 2.4 – The Datadog Agent communicates with its SaaS backend'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.4 – Datadog Agent与其SaaS后端通信'
- en: '](img/Figure_2.4_B16483.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.4_B16483.jpg)'
- en: Figure 2.4 – The Datadog Agent communicates with its SaaS backend
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4 – Datadog Agent与其SaaS后端通信
- en: In all these three configurations and their variations, the Datadog Agent should
    be able to connect to the Datadog SaaS backend through the company network and
    internet, to upload the metrics collected locally. Therefore, configuring the
    company network firewall to enable the traffic going out from the Datadog Agent
    is a prerequisite for it to be operational. While this network access is allowed
    by default in most environments, in some restrictive situations, configuring the
    network suitably is a requirement for rolling out Datadog.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这三种配置及其变体中，Datadog Agent应能通过公司网络和互联网连接到Datadog SaaS后端，上传本地收集的指标。因此，配置公司网络防火墙以允许Datadog
    Agent发送流量是其正常运行的前提条件。尽管在大多数环境中，默认允许这种网络访问，但在一些限制性环境中，需要适当配置网络，才能顺利部署Datadog。
- en: In general, if the application software is deployed as microservices, it is
    better to also deploy the Datadog Agent as a microservice. Likewise, in a non-microservice
    environment, the Datadog Agent is run directly on the hosts. Maintenance tasks
    such as version upgrades are very easy if the agent is deployed as a microservice,
    which is the preferred method in a compatible environment.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，如果应用软件以微服务方式部署，最好将Datadog Agent也作为微服务进行部署。同样，在非微服务环境下，Datadog Agent会直接在宿主机上运行。如果将Agent部署为微服务，维护任务（如版本升级）会非常简便，这也是在兼容环境中首选的方法。
- en: Steps for installing the agent
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Agent的步骤
- en: Datadog supports a wide variety of client platforms where the agent can be run,
    such as Windows, Kubernetes, Docker, and all the popular Linux distributions,
    such as Ubuntu, CentOS, and Red Hat Enterprise Linux. As an example, we will look
    at how the agent is installed on an Ubuntu host. On other operating systems, the
    steps are similar with changes specific to platform differences accounted for.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog支持多种客户端平台，Agent可以在这些平台上运行，例如Windows、Kubernetes、Docker以及所有流行的Linux发行版，如Ubuntu、CentOS和Red
    Hat Enterprise Linux。作为示例，我们将讨论如何在Ubuntu宿主机上安装Agent。在其他操作系统上，步骤类似，但会根据平台差异做适当调整。
- en: Before an agent can be installed, you should sign up for a Datadog account.
    Datadog allows you to try out most of its features for free for a 2-week trial
    period. Once you have access to an account, you will get access to an **API key**
    for that account. When an agent is installed, the API key has to be specified
    and that's how the Datadog SaaS backend correlates the agent traffic to a customer
    account.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装Agent之前，您需要注册Datadog账户。Datadog允许您免费试用其大部分功能，试用期为2周。获得账户后，您将获得该账户的**API密钥**。安装Agent时，必须指定API密钥，这样Datadog的SaaS后端就能将Agent流量与客户账户相关联。
- en: For the sample steps, we will use Datadog Agent 7\. Older versions are also
    supported, and version-specific steps can be found in the official documentation.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于示例步骤，我们将使用 Datadog 代理 7\. 旧版本也受支持，特定版本的步骤可以在官方文档中找到。
- en: 'On Linux distributions, the installation step involves just one command that
    can be executed from the command line. To obtain the command, you can follow these
    steps on the Datadog dashboard:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 发行版中，安装步骤只需要执行一个可以从命令行执行的命令。要获取该命令，可以在 Datadog 仪表盘上按照以下步骤操作：
- en: Click on the **Integrations** main menu, and then select **Agent**:![Figure
    2.5 – Agent menu for obtaining installation steps
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**集成**主菜单，然后选择**代理**:![图 2.5 – 获取安装步骤的代理菜单
- en: '](img/Figure_2.5_B16483.jpg)'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_2.5_B16483.jpg)'
- en: Figure 2.5 – Agent menu for obtaining installation steps
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.5 – 获取安装步骤的代理菜单
- en: 'On the left pane, the target operating system can be selected to view the command
    that can be used to install the agent on that platform:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板中，可以选择目标操作系统以查看可以用于在该平台上安装代理的命令：
- en: '![Figure 2.6 – Target platform-specific steps for installation'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.6 – 目标平台特定的安装步骤'
- en: '](img/Figure_2.6_B16483.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.6_B16483.jpg)'
- en: Figure 2.6 – Target platform-specific steps for installation
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 目标平台特定的安装步骤
- en: 'As you can see, for Ubuntu we have a command similar to this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，对于 Ubuntu，我们有一个类似这样的命令：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Basically, this command sets two environment variables pointing to the Datadog
    Agent version to be installed and the API key, downloads the install script, and
    executes it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，这个命令设置了两个环境变量，分别指向要安装的 Datadog 代理版本和 API 密钥，下载安装脚本并执行它。
- en: Installation of the Datadog Agent directly on a host machine is as simple as
    that. We will see how it can be deployed as a container later.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将 Datadog 代理直接安装在主机上就是这么简单。稍后我们将看到如何将其部署为容器。
- en: Once the agent is installed successfully, it will try to connect to the Datadog
    backend. The corresponding host will be listed on the dashboard under **Infrastructure**
    | **Host Map** and **Infrastructure List** if the agent is able to connect to
    the backend. This is a method to quickly verify whether an agent is operational
    at any time.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦代理成功安装，它将尝试连接到 Datadog 后端。如果代理能够连接到后端，对应的主机将显示在仪表盘的**基础设施** | **主机地图**和**基础设施列表**下。这是快速验证代理是否正常工作的一个方法。
- en: On Linux platforms, the logs related to the installation process are available
    in the `dd_agent.log` log file, which can be found in the current directory where
    the install script is run. If the installation process fails, it will provide
    pointers on what has gone wrong. The agent log files are available under the `/var/log/datadog`
    directory.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 平台上，与安装过程相关的日志可在 `dd_agent.log` 日志文件中找到，该文件位于运行安装脚本的当前目录。如果安装过程失败，它会提供有关出错原因的提示。代理日志文件位于
    `/var/log/datadog` 目录下。
- en: As mentioned earlier, the steps for installing the Datadog Agent on a specific
    operating system can be obtained by navigating to the **Integrations** | **Agent**
    window. The supported operating systems and platforms are listed on the left pane,
    and by clicking on the required one, you can get the steps, as shown in *Figure
    2.6* for Ubuntu.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，安装 Datadog 代理的步骤可以通过导航到**集成** | **代理**窗口获取。支持的操作系统和平台列在左侧面板中，点击所需的操作系统后，可以获得步骤，如
    *图 2.6* 中的 Ubuntu 所示。
- en: Agent components
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代理组件
- en: The Datadog Agent is a service that is composed of multiple component processes
    doing specific tasks. Let's look at those in detail to understand the workings
    of the Datadog Agent.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog 代理是由多个组件进程组成的服务，每个进程执行特定的任务。让我们详细了解这些组件，以便理解 Datadog 代理的工作原理。
- en: On Ubuntu systems, the Datadog Agent service is named `datadog-agent`. The runtime
    status of this service can be checked and maintained using the system command
    service like any other service.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ubuntu 系统上，Datadog 代理服务的名称为`datadog-agent`。可以像其他服务一样，使用系统命令服务检查和维护此服务的运行状态。
- en: The `/etc/datadog-agent` directory has all the configuration files related to
    the Datadog Agent running on that machine. The YAML `/etc/datadog-agent/datadog.yaml`
    file is the main configuration file. If any change is made to this file, the Datadog
    service needs to be restarted for those changes to take effect.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/datadog-agent` 目录包含与在该机器上运行的 Datadog 代理相关的所有配置文件。YAML 格式的 `/etc/datadog-agent/datadog.yaml`
    文件是主要的配置文件。如果对该文件进行了任何更改，需要重新启动 Datadog 服务才能使这些更改生效。'
- en: The `/etc/datadog-agent/conf.d/` directory contains configuration files related
    to the integrations that are run on that host. We will see the configuration requirements
    for integrations and how they are installed in [*Chapter 9*](B16483_09_Final_VK_ePub.xhtml#_idTextAnchor261),
    *Integrating with Platform Components*, which is dedicated to discussing integrating
    Datadog with cloud platform applications.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/datadog-agent/conf.d/` 目录包含与在该主机上运行的集成相关的配置文件。我们将在[*第 9 章*](B16483_09_Final_VK_ePub.xhtml#_idTextAnchor261)《与平台组件集成》中看到集成的配置要求以及如何安装这些集成，本章专门讨论
    Datadog 与云平台应用程序的集成。'
- en: 'There are three main components in the Datadog Agent service:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog Agent 服务主要有三个组件：
- en: '**Collector**: As the name suggests, the Collector collects the system metrics
    every 15 seconds. The collection frequency can be different for other types of
    metric types and the Datadog documentation provides that information.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Collector**（收集器）：顾名思义，收集器每 15 秒收集一次系统指标。其他类型的指标收集频率可能不同，Datadog 文档提供了相关信息。'
- en: '**Forwarder**: The metrics collected locally are sent over HTTPS to the Datadog
    backend by the Forwarder. To optimize the communication, the metrics collected
    are buffered in memory prior to shipping them to the backend.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Forwarder**（转发器）：本地收集的指标通过 HTTPS 发送到 Datadog 后端。为了优化通信，收集到的指标会先缓存在内存中，然后再发送到后端。'
- en: '`8125` by default. StatsD is a popular interface offered by monitoring tools
    for integrating with external systems. DogStatsD is an implementation of StatsD
    by Datadog and it is available as a component of the Datadog Agent. We will see
    later in this book how StatsD can be used to implement lightweight but very effective
    integrations.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下是 `8125`。StatsD 是许多监控工具提供的流行接口，用于与外部系统集成。DogStatsD 是 Datadog 提供的 StatsD
    实现，并作为 Datadog Agent 的一个组件可用。本书后面将展示如何使用 StatsD 来实现轻量但非常有效的集成。
- en: 'Besides these three components, there are optional processes that can be started
    by specifying them in the `datadog.yaml` file:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这三个组件外，还可以通过在 `datadog.yaml` 文件中指定它们来启动可选进程：
- en: '**APM agent**: This process is needed to support the APM feature and it should
    be run if the APM feature is used.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**APM agent**（APM 代理）：此进程支持 APM 功能，如果使用 APM 功能，则应运行该进程。'
- en: '**Process agent**: To collect details on the live processes running on the
    host, this component of the Datadog Agent process needs to be enabled.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Process agent**（进程代理）：为了收集主机上运行的实时进程的详细信息，需要启用 Datadog Agent 的该组件。'
- en: '**Agent UI**: The Datadog Agent also provides a UI component that runs directly
    on the host where the Datadog Agent is running. This is not a popular option;
    the information about a host is usually looked up on the main dashboard, which
    provides complete insight into your infrastructure and the applications running
    on it. However, it could be used for ad hoc purposes, for example, troubleshooting
    on consumer platforms such as macOS and Windows.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Agent UI**：Datadog Agent 还提供了一个 UI 组件，该组件直接运行在 Datadog Agent 所在的主机上。这不是一种常用的选项，主机信息通常通过主仪表板查阅，仪表板能提供对基础设施及其上运行的应用程序的完整洞察。然而，这个
    UI 组件可用于临时用途，例如在 macOS 和 Windows 等消费平台上的故障排除。'
- en: Agent as a container
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 作为容器的 Agent
- en: 'As mentioned earlier, the Datadog Agent can be installed as a container on
    a Docker host. Though the actual options might differ, the following is a sample
    command that explains how the Datadog Agent is started up as a container:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Datadog Agent 可以作为容器安装在 Docker 主机上。尽管实际选项可能有所不同，以下是一个示例命令，说明如何将 Datadog
    Agent 作为容器启动：
- en: '[PRE1]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Docker image of Datadog Agent 7 is pulled from Docker Hub in this example.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例中，Datadog Agent 7 的 Docker 镜像是从 Docker Hub 拉取的。
- en: When the agent is installed on the host, you have seen that `datadog.yaml` is
    used to set the configuration items. With a Docker image, that option is not directly
    available. However, any custom changes in it could be done by setting the corresponding
    environment variables. For example, in this example, `api_key` is set by passing
    the `DD_API_ KEY` environment variable. In a Kubernetes cluster, the Datadog Agent
    is installed as a DaemonSet, and that configuration will ensure that the agent
    container is deployed on all the nodes in the cluster. `DD_API_KEY` is specified
    as a Kubernetes secret. Datadog provides multiple templates for creating the Kubernetes
    manifest that can be used for deploying Datadog in your cluster. `kubectl` is
    used to configure and deploy the Datadog Agent.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当代理安装在主机上时，您已经看到`datadog.yaml`用于设置配置项。在Docker镜像中，这个选项是不可直接使用的。然而，任何自定义更改都可以通过设置相应的环境变量来完成。例如，在这个示例中，`api_key`通过传递`DD_API_KEY`环境变量来设置。在Kubernetes集群中，Datadog
    Agent作为DaemonSet安装，该配置确保代理容器部署在集群中的所有节点上。`DD_API_KEY`被指定为Kubernetes密钥。Datadog提供了多个模板，用于创建Kubernetes清单，这些清单可以用于在您的集群中部署Datadog。`kubectl`用于配置和部署Datadog
    Agent。
- en: Deploying the agent – use cases
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署代理 – 使用案例
- en: At the beginning of this chapter, we looked at multiple runtime configurations
    possible for running the Datadog Agent. In this section, we will explore a few
    use cases in which such options are utilized.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章开始时，我们探讨了多种运行Datadog Agent的运行时配置。在本节中，我们将探索一些实际案例，展示这些选项的应用。
- en: All on the hosts
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 所有主机上
- en: This is a classic configuration in which both the Datadog Agent and the application
    software run directly on the hosts. The hosts could be bare-metal or virtual machines.
    An agent will run on every host, reporting events and metrics into the Datadog
    backend.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个经典配置，其中Datadog Agent和应用软件都直接运行在主机上。主机可以是裸机或虚拟机。每个主机上都会运行一个代理，将事件和度量数据报告到Datadog后台。
- en: 'The deployment can be done using the following automated or semi-automated
    methods. In a real-life production environment, installing the Datadog Agent manually
    on hosts might be impractical or might not scale up:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 部署可以使用以下自动化或半自动化方法完成。在实际生产环境中，手动在主机上安装Datadog Agent可能不切实际，或者无法扩展：
- en: The Datadog Agent can be baked into the machine image used to boot up a bare-metal
    machine or spin up a virtual machine. For example, in AWS, the agent can be preinstalled
    and preconfigured for the target environment in the **Amazon Machine Image** (**AMI**).
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datadog Agent可以嵌入到用于启动裸机或创建虚拟机的机器镜像中。例如，在AWS中，可以在**Amazon机器镜像**（**AMI**）中预安装并预配置代理，以适应目标环境。
- en: Use an orchestration and configuration management tool such as Ansible to deploy
    the agent on multiple machines parallelly so the deployment task will scale operationally.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用像Ansible这样的编排和配置管理工具，在多个机器上并行部署代理，以便操作任务能够扩展。
- en: In a public cloud environment, the preferred method is always using a machine
    image because the hosts can be spun up and shut down on demand using features
    such as autoscaling. In such scenarios, a semi-automated method such as using
    Ansible is not viable. However, Ansible can be used to generate machine images
    and related configuration tasks.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在公共云环境中，首选的方法始终是使用机器镜像，因为可以通过自动扩展等功能按需启动和关闭主机。在这种情况下，像使用Ansible这样的半自动化方法不可行。然而，Ansible可以用于生成机器镜像和相关的配置任务。
- en: Agent on the host monitoring containers
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主机上的代理监控容器
- en: Running the Datadog Agent directly on the host is simple and flexible and it
    might make sense to use that configuration for some operational requirements.
    The Datadog Agent can be deployed as discussed before, but additional configuration
    changes are needed for the agent to discover and monitor the containers running
    on the host.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 直接在主机上运行Datadog Agent简单灵活，且在某些操作需求下可能很有意义。Datadog Agent可以像之前讨论的那样进行部署，但需要额外的配置更改，使代理能够发现并监控在主机上运行的容器。
- en: The containers are ephemeral in nature and that dynamicity must be accounted
    for in monitoring as well. The Datadog Agent uses the **Autodiscovery** feature
    to identify and monitor containers.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 容器本质上是短暂的，这种动态性也必须在监控中考虑。Datadog Agent使用**自动发现**功能来识别和监控容器。
- en: 'The easiest way to start monitoring containers running on the host, in this
    configuration, is to enable Docker integration. Though the specific steps to do
    that could be slightly different on different target operating system platforms,
    the following example of enabling it on Ubuntu 18.04 provides the general steps
    involved:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 启动监控主机上运行的容器的最简单方法是启用 Docker 集成。尽管在不同的操作系统平台上启用的具体步骤可能略有不同，但以下在 Ubuntu 18.04
    上启用的示例提供了所涉及的一般步骤：
- en: On the Datadog UI, navigate to **Integrations** | **Integrations**, and then
    search for Docker:![Figure 2.7 – Searching for Docker integration
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Datadog UI 中，导航到**集成**|**集成**，然后搜索 Docker：![图 2.7 – 搜索 Docker 集成
- en: '](img/Figure_2.7_B16483.jpg)'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_2.7_B16483.jpg)'
- en: Figure 2.7 – Searching for Docker integration
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.7 – 搜索 Docker 集成
- en: Under the Docker icon, click on the **install** link to complete the installation
    step on the backend.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Docker 图标下，点击**安装**链接，完成后端的安装步骤。
- en: 'To obtain the configuration steps on the host side, where the containers are
    running, click on the **configure** link on the Docker icon. That will open a
    window with all the required information, as shown in the following screenshot:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取主机端的配置步骤，即容器运行的地方，请点击 Docker 图标上的**配置**链接。点击后会打开一个包含所有所需信息的窗口，如下图所示：
- en: '![Figure 2.8 – Steps to enable Docker integration'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 2.8 – 启用 Docker 集成的步骤'
- en: '](img/Figure_2.8_B16483.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.8_B16483.jpg)'
- en: Figure 2.8 – Steps to enable Docker integration
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 启用 Docker 集成的步骤
- en: The steps provided in the **Configuration** tab are executed on the hosts to
    complete container monitoring on the hosts. We will see how that is done soon.
    The Docker-specific metrics that would be available through this integration are
    listed in the **Metrics** tab.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在**配置**选项卡中提供的步骤会在主机上执行，以完成主机上的容器监控。我们很快就会看到如何执行。通过此集成提供的 Docker 专用指标列在**指标**选项卡中。
- en: 'The following are the steps to be run on each Docker host:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在每个 Docker 主机上执行的步骤：
- en: 'Add user `dd-agent` to the `docker` operating system group:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将用户`dd-agent`添加到`docker`操作系统组：
- en: '[PRE2]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'There will be a sample configuration file under `/etc/datadog-agent/conf.d/docker.d/conf.yaml.example`.
    Copy or rename this file to `conf.yaml` and add the following settings:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`/etc/datadog-agent/conf.d/docker.d/conf.yaml.example`下会有一个示例配置文件。将该文件复制或重命名为`conf.yaml`，并添加以下设置：
- en: '[PRE3]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Restart the Datadog Agent:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启 Datadog Agent：
- en: '[PRE4]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To verify whether the Docker integration works on a host, you can look up the
    **Containers** dashboard from the **Infrastructure** main menu, as shown in the
    following screenshot:'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要验证 Docker 集成是否在主机上工作，可以从**基础设施**主菜单中查找**容器**仪表板，如下图所示：
- en: '![Figure 2.9 – Autodiscovery of Docker containers'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.9 – Docker 容器的自动发现'
- en: '](img/Figure_2.9_B16483.jpg)'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_2.9_B16483.jpg)'
- en: Figure 2.9 – Autodiscovery of Docker containers
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.9 – Docker 容器的自动发现
- en: On the **Containers** dashboard, search for a specific host by entering the
    hostname in the **Filter by** field, as shown in the preceding screenshot.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在**容器**仪表板上，通过在**筛选条件**字段中输入主机名来搜索特定主机，如前面的截图所示。
- en: By enabling the Docker integration, Docker-specific metrics that are prefixed
    with `docker.*` are available for use. The Docker metrics can be looked up in
    the `docker.containers.running` metric is used to look up the number of containers
    running on the `i-021b5a51fbdfe237b` host when the Docker integration has been
    enabled. To do that, navigate to `docker.containers.running` in the **Graph**
    field and the hostname in the **Over** field.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用 Docker 集成后，可以使用以`docker.*`为前缀的 Docker 专用指标。这些 Docker 指标可以在`docker.containers.running`指标中查找，当
    Docker 集成启用时，用于查找`i-021b5a51fbdfe237b`主机上正在运行的容器数量。为此，请在**图表**字段中导航到`docker.containers.running`，在**筛选**字段中输入主机名。
- en: 'The complete list of Docker-specific metrics are listed under the **Metrics**
    tab on the Docker integration page, as shown in the following screenshot:'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Docker 集成页面的**指标**选项卡下列出了完整的 Docker 专用指标，如下图所示：
- en: '![Figure 2.11 – List of Docker metrics'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '![图 2.11 – Docker 指标列表'
- en: '](img/Figure_2.11_B16483.jpg)'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '](img/Figure_2.11_B16483.jpg)'
- en: Figure 2.11 – List of Docker metrics
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 2.11 – Docker 指标列表
- en: Enabling Docker integration will provide only Docker-specific metrics. The specific
    application, Redis, in this example, might be publishing metrics also. To enable
    that, you need to follow steps similar to what we saw for enabling Docker.
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 启用 Docker 集成将只提供 Docker 专用指标。此示例中的特定应用程序 Redis 可能也会发布指标。要启用此功能，您需要执行与我们在启用 Docker
    时所见的类似步骤。
- en: On the host machine, the sample configuration file, `/etc/datadog-agent/conf.d/redisdb.d/conf.yaml.example`,
    can be renamed or copied to `/etc/datadog-agent/conf.d/redisdb.d/conf.yaml`, and
    then restart the Datadog Agent to complete the configuration.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主机上，示例配置文件 `/etc/datadog-agent/conf.d/redisdb.d/conf.yaml.example` 可以重命名或复制到
    `/etc/datadog-agent/conf.d/redisdb.d/conf.yaml`，然后重启 Datadog Agent 完成配置。
- en: If the integration works, you will be able to query for the related metrics
    in the `redis.*`.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果集成成功，你将能够查询到 `redis.*` 中的相关指标。
- en: 'If some steps fail, you cannot readily verify the enabling of integration on
    a host using the preceding method. One way to check for that is by looking at
    the output of the Datadog Agent status by running the following command:'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果某些步骤失败，无法通过前述方法直接验证主机上集成的启用情况。检查这一点的一种方式是通过运行以下命令查看 Datadog Agent 状态的输出：
- en: '[PRE5]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the output, look for the integration of interest. In this example, we looked
    at Docker and Redis and the following mentions of those are in the output:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输出中，查找相关的集成。在本示例中，我们查看了 Docker 和 Redis，输出中会提到这些内容：
- en: '[PRE6]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If there are issues, you will see error messages under the related sections.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现问题，你会在相关部分看到错误信息。
- en: The deployment strategy involves baking in the Datadog Agent and the configuration
    files relevant to your environment on a machine image, such as AMI in AWS. To
    get all the relevant metrics published to Datadog from the containers running
    on a host, a customized Datadog Agent configuration file and configuration files
    related to various integrations similar to those we have in the examples are needed.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 部署策略包括将 Datadog Agent 和与你的环境相关的配置文件集成到机器镜像中，例如 AWS 中的 AMI。为了将来自主机上运行的容器的所有相关指标发布到
    Datadog，需要一个定制的 Datadog Agent 配置文件和与各种集成相关的配置文件，类似于我们在示例中看到的配置。
- en: Agent running as a container
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 作为容器运行的代理
- en: This is the preferred configuration of running the agent when the software application
    is deployed as containers. The agent could be deployed as a container on the Docker
    host or as a service in a Kubernetes cluster. We discussed earlier how the agent
    is deployed in these scenarios.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在软件应用程序部署为容器时运行代理的首选配置。代理可以作为容器部署在 Docker 主机上，或作为服务部署在 Kubernetes 集群中。我们之前讨论过这些场景中的代理部署方式。
- en: As the Datadog Agent is deployed as a container, there is no need to include
    that in the machine image used for spinning up the Docker nodes. This adds operational
    flexibility as there would not be any need to update the machine image for rolling
    out or upgrading the Datadog Agent used.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Datadog Agent 是以容器形式部署的，因此不需要将其包含在用于启动 Docker 节点的机器镜像中。这提供了操作灵活性，因为在推出或升级使用的
    Datadog Agent 时，无需更新机器镜像。
- en: Advanced agent configuration
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级代理配置
- en: The main Datadog agent configuration file, `datadog.yaml`, can be updated to
    meet your specific monitoring requirements. By default, only `api_key` is set
    in it. A `datadog.yaml` file used in a real-life environment would have more options
    set.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 主 Datadog 代理配置文件 `datadog.yaml` 可以根据你的具体监控需求进行更新。默认情况下，文件中只设置了 `api_key`。在实际环境中使用的
    `datadog.yaml` 文件会有更多的配置选项。
- en: 'We will see some of the important configuration items that are usually leveraged
    to fine-tune the monitoring infrastructure:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将介绍一些通常用于微调监控基础设施的重要配置项：
- en: '`proxy`: If the outbound traffic to the internet has to go through a proxy,
    this option needs to be configured. Typical proxy settings for `http`, `https`,
    and `no_proxy` are supported.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxy`：如果出站流量需要通过代理访问互联网，则需要配置此选项。支持 `http`、`https` 和 `no_proxy` 的典型代理设置。'
- en: '`hostname`: If a specific hostname has to be used for reporting, it is set
    using this option. By default, the hostname is auto-detected using tools available
    at the operating system level.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`hostname`：如果需要使用特定的主机名进行报告，可以通过此选项进行设置。默认情况下，主机名是通过操作系统级别的工具自动检测的。'
- en: '`tags`: A very important option that is always used to tag the metrics reported
    by the agent. Multiple key/value pairs can be specified.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tags`：一个非常重要的选项，始终用于标记代理报告的指标。可以指定多个键值对。'
- en: '`collect_ec2_tags`: By enabling this option, the AWS EC2 node tags can be collected
    as host tags.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`collect_ec2_tags`：启用此选项后，可以将 AWS EC2 节点标签作为主机标签收集。'
- en: '`config_providers`: To enable autodiscovery of containers created from a specific
    Docker image, the related configurations must be provided here.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config_providers`：要启用来自特定 Docker 镜像的容器自动发现，必须在此提供相关的配置。'
- en: '`docker_labels_as_tags` and `docker_env_as_tags`: These configuration items
    can be used to extract Docker labels and environment variables as tags on metrics
    collected from related containers.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker_labels_as_tags`和`docker_env_as_tags`：这些配置项可用于提取Docker标签和环境变量，并将其作为与相关容器收集的指标的标签。'
- en: Similar tagging options are available with Kubernetes also by using `kubernetes_pod_labels_as_tags`
    and `kubernetes_pod_annotations_as_tags`.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`kubernetes_pod_labels_as_tags`和`kubernetes_pod_annotations_as_tags`，Kubernetes也可以提供类似的标签选项。
- en: Best practices
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最佳实践
- en: 'As you have seen, there are multiple ways to install and configure the Datadog
    Agent, and, for someone new to Datadog, it could be daunting to determine how
    the agent can be rolled out and fine-tuned efficiently to meet the monitoring
    requirements. However, there are a few things that are obvious as best practices,
    and let''s summarize those here:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，安装和配置Datadog Agent有多种方式，对于初次接触Datadog的人来说，可能会感到不知所措，不知道如何高效地部署和调优Agent以满足监控需求。然而，有一些明显的最佳实践，我们在这里总结如下：
- en: If the agent is installed on the host, plan to include it in the machine image
    used to spin up or boot the host.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果Agent安装在主机上，计划将其包含在用于启动或启动主机的机器镜像中。
- en: Set up Ansible playbooks or similar tools to make ad hoc changes to the Datadog
    Agent on the host. This is not recommended for some complex infrastructure environments,
    especially where bare-metal servers are used, so some in-place change might be
    needed.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Ansible剧本或类似工具，以便对主机上的Datadog Agent进行临时更改。对于一些复杂的基础设施环境，尤其是在使用裸金属服务器的情况下，不推荐这种做法，因此可能需要进行一些现场更改。
- en: When containers are to be monitored, plan to deploy the agent also as a container.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当需要监控容器时，计划将Agent也作为容器进行部署。
- en: Plan to collect tags from underlying infrastructure components such as Docker
    and Kubernetes by suitably configuring the agent.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划通过适当配置Agent，收集来自底层基础设施组件（如Docker和Kubernetes）的标签。
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: The Datadog Agent can be used for monitoring both classic and microservices-based
    environments that are built on a variety of cloud platforms and operating systems.
    To collect and publish monitoring metrics into its SaaS backend, an agent needs
    to be run on the local environment. The agent could be run directly on the host
    machine, as a container on a Docker host, or as a service in a microservice orchestration
    framework such as Kubernetes. This chapter looked at various configuration options
    available for deploying the Datadog Agent and typical use cases.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog Agent可以用于监控构建在各种云平台和操作系统上的经典环境和基于微服务的环境。为了将监控指标收集并发布到其SaaS后台，必须在本地环境中运行Agent。Agent可以直接在主机机器上运行，也可以作为Docker主机上的容器运行，或者作为微服务编排框架（如Kubernetes）中的服务运行。本章介绍了部署Datadog
    Agent的各种配置选项及典型使用案例。
- en: In the next chapter, we will look at key features of the Datadog UI. Though
    most of the changes can be done using APIs, the Datadog UI is a handy tool for
    both users and administrators to get a view into Datadog's backend, especially
    the custom dashboards that provide visual insights into the state of infrastructure
    and the application software system.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将查看Datadog UI的关键特性。尽管大多数更改可以通过API完成，但Datadog UI是一个便捷的工具，既适用于用户，也适用于管理员，帮助他们查看Datadog的后台，特别是自定义仪表板，它提供了对基础设施和应用软件系统状态的可视化洞察。
