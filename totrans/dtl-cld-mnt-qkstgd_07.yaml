- en: '*Chapter 6*: Monitoring Infrastructure'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第6章*：监控基础设施'
- en: In the previous chapter, we learned about events that occur in a software system
    that are useful for monitoring purposes and how they are handled in Datadog. The
    metrics and events, when combined with tags, provide Datadog users with a rich
    set of data and the means to group and filter that information for multiple monitoring
    requirements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了在软件系统中发生的事件，这些事件对于监控非常有用，并且它们在Datadog中的处理方式。指标和事件与标签结合后，为Datadog用户提供了一套丰富的数据，并可以用来对信息进行分组和过滤，以满足多种监控需求。
- en: 'In [*Chapter 1*](B16483_01_Final_VK_ePub.xhtml#_idTextAnchor014), *Introduction
    to Monitoring*, we looked at different types of monitoring that make up a comprehensive,
    proactive monitoring process. One of the basic types of monitoring is infrastructure
    monitoring, which is all about monitoring the compute, storage, and network infrastructure
    where the application system runs. All major monitoring applications offer infrastructure
    monitoring features out of the box. And at times, in many organizations, the scope
    of monitoring is limited to this type of monitoring. Datadog provides excellent
    support for infrastructure monitoring and we will learn about that in this chapter.
    We will look at the following topics specifically:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第1章*](B16483_01_Final_VK_ePub.xhtml#_idTextAnchor014)，*监控简介*中，我们了解了构成全面、主动监控过程的不同类型监控。基础设施监控是其中的一种基本监控类型，主要关注监控应用系统运行的计算、存储和网络基础设施。所有主要的监控应用都提供开箱即用的基础设施监控功能。而在许多组织中，监控的范围有时仅限于此类型的监控。Datadog为基础设施监控提供了出色的支持，我们将在本章学习这些内容。我们将具体探讨以下主题：
- en: Inventorying the hosts
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机清单
- en: Listing containers
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出容器
- en: Viewing system processes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看系统进程
- en: Monitoring serverless computing resources
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控无服务器计算资源
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To try out the examples mentioned in this book, you need to have the following
    tools installed and resources available:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 若要尝试本书中提到的示例，你需要安装以下工具并确保资源可用：
- en: A Datadog account and a user with admin-level access.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Datadog账户和一个具有管理员权限的用户。
- en: A Datadog Agent running at host level or as a microservice depending on the
    example, pointing to the Datadog account.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主机级别或作为微服务运行的Datadog Agent，具体取决于示例，指向Datadog账户。
- en: Inventorying the hosts
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主机清单
- en: 'There are two interfaces available in Datadog that provide a list of hosts:
    **Host Map** and **Infrastructure List**. Each host listed on these interfaces
    will have a Datadog agent running on it. The host could be a bare-metal machine
    or a **virtual machine** (**VM**) that has been provisioned in a public cloud
    service such as AWS or Azure.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在Datadog中，有两个界面提供主机列表：**主机地图**和**基础设施列表**。这些界面上列出的每个主机上都将运行Datadog Agent。该主机可以是裸金属机器，也可以是已在公共云服务（如AWS或Azure）中配置的**虚拟机**（**VM**）。
- en: 'Let''s look at the **Host Map** feature first. To access that interface, navigate
    to **Infrastructure** | **Host Map** on Datadog''s dashboard. You will see a dashboard
    similar to the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先看看**主机地图**功能。要访问该界面，请在Datadog仪表板上导航至**基础设施** | **主机地图**。你将看到一个类似于以下内容的仪表板：
- en: '![Figure 6.1 – Sample host map'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 6.1 – 示例主机地图'
- en: '](img/Figure_6.1_B16483.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_6.1_B16483.jpg)'
- en: Figure 6.1 – Sample host map
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – 示例主机地图
- en: Each hexagonal shape on the dashboard represents a host in the infrastructure
    monitored by Datadog. The CPU utilization (in percent) of a host is color coded,
    with less usage represented by green and higher usage represented by orange. The
    legend at the bottom-right corner of the dashboard provides details about the
    color coding being used. The gear button provided with the legend can be used
    to customize this color coding to your preference.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表板上的每个六边形图标代表Datadog监控的基础设施中的一个主机。主机的CPU利用率（以百分比表示）通过颜色编码表示，较低的使用率用绿色表示，较高的使用率用橙色表示。仪表板右下角的图例提供了颜色编码的详细信息。图例中提供的齿轮按钮可以用来根据个人喜好自定义颜色编码。
- en: 'The size of the hexagon can be tied to the value of a metric. At this point,
    the size of a hexagon pertaining to a host will be proportional to the value of
    the metric reported by that host. To use the *percentage CPU utilized for sizing*
    metric in the hexagons in the host map, select that metric from the **Fill by
    and Size by** dropdowns at the top-right end of the dashboard. The resulting host
    map will look as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.2 – Host Map with size option used'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.2_B16483.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.2 – Host Map with size option used
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the hexagons are smaller for those hosts with lower percentage
    CPU utilization. Any other metric that is published by the hosts can be used for
    this purpose.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: The hosts listed on the **Host Map** dashboard can be filtered and grouped by
    available tags. Searching for a specific set of hosts using tags is useful in
    general. For example, while troubleshooting issues, narrowing down the search
    to a few hosts would be convenient if there are hundreds of hosts in the infrastructure.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Let's take a look at the options that are available for filtering hosts using
    tags.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'By choosing one or more tags in the **Filter by** field, only the related hosts
    will be listed, as shown in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.3 – Host Map with a filter enabled'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.3_B16483.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.3 – Host Map with a filter enabled
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: In this case, the `metadata_platform:linux` tag is used as the filter to view
    only the Linux hosts.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'By selecting one or more tags in the **Group hosts by tags** field, the hosts
    can be listed in clusters on the **Host Map** dashboard, as shown in the following
    screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.4 – Host Map with hosts grouped'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.4_B16483.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.4 – Host Map with hosts grouped
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: In this case, the tag that was selected to group the hosts is `metadata_platform`.
    Here, we can see that the five Linux hosts are grouped together and that the lone
    Mac (**darwin**) host is shown separately from the Linux group.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: The **Group hosts by tags** option only uses the key of a tag, but the **Filter
    by** option requires its value also.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'You have already seen that there are multiple ways to list and locate a host
    on the **Host Map** dashboard. If you would like to look at a specific host, you
    can click on it, which will provide you with a zoomed-in version of it in another
    window containing host-specific details:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.5 – Host Map with host details zoomed in'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.5_B16483.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.5 – Host Map with host details zoomed in
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: This interface provides host-level information and links to related resources
    so that you can gather all the details of the host, both when static and at runtime.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'The details of the following resources can be looked up from the host dashboard:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '**Apps**: The links to details about the integrations that have been implemented
    for this host are listed in the hexagonal shape.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Agent**: The version of the agent.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**System**: The operating system-level details are provided here, which can
    be drilled down into multiple levels.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Container**: If containers are running on the host, the related information
    will be available here.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Metrics**: Host-level metrics that were published recently are listed here.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`host` tag pointing to the name of the host is available by default, more `host`-level
    tags can be set using the `tags` option in the Datadog agent configuration file.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'At the top of this interface, the host name and host aliases are provided.
    Also, links to the following dashboards with some relation to the host are available
    at the same location:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '**Dashboard**: This is a dashboard that''s specific to the host with charts
    on important host-level metrics. We will look at this dashboard soon.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Networks**: The dashboard for **Network Performance Monitoring**. This feature
    needs to be enabled in the Datadog agent for this to be available.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Processes**: If the Live Processes feature is enabled from the Datadog agent,
    this dashboard will be populated with details about the processes running on the
    host. We will look at it in detail in the *System processes* section.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Containers**: This link will lead you to the dashboard where containers running
    on the host are listed.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let's look at some of these detailed dashboards that we can access from
    the **Host Map** zoom-in window.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: 'By navigating to **Apps** | **Agent**, you can pull up a dashboard with Datadog
    agent-specific metrics listed, as shown in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.6– Datadog agent-specific metrics'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.6_B16483.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.6– Datadog agent-specific metrics
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: The **datadog_agent.** category of metrics is not directly useful for monitoring
    the application system, but it can provide insights into how well the Datadog
    agent runs on that specific host.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: 'By navigating to **Apps** | **system**, you will see a dashboard containing
    charts about the core infrastructure metrics for the host, such as CPU usage,
    load averages, disk usage and latency, memory availability and usage, and network
    traffic. The following screenshot provides such a sample dashboard:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.7 – Host dashboard with system metrics'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.7_B16483.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.7 – Host dashboard with system metrics
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: 'We have already seen that the block-links listed under the **Apps** section
    in *Figure 6.5* are related to integrations running on that host. Besides the
    common links such as **agent** and **system** that we have just looked at, the
    rest of the links will depend on what integrations are enabled on the host. For
    example, in *Figure 6.5*, there was **docker** and **redisdb**, which were enabled
    explicitly. By clicking on **docker**, a dashboard with charts for Docker-specific
    metrics can be pulled up, as shown in the following screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.8 – Dashboard for Docker metrics'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.8_B16483.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.8 – Dashboard for Docker metrics
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: By navigating to **Apps** | **system**, we can see how a dashboard with system-level
    metrics for the host can be viewed, as illustrated in *Figure 6.7*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: The system metrics can be looked up in a much better fashion by clicking the
    **View host in:** | **Dashboard** link from the host zoom-in window. This dashboard
    provides charts for each category of system metrics that are useful in inspecting
    the metrics for a time range. Let's look at which of these systems metrics make
    up the core of infrastructure monitoring.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: For each category of system metrics, a widget is available on the host dashboard
    with related metrics charted. Using the menu options available in the top-right
    corner, it's possible to drill down further into these widgets.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: 'By clicking on the left button, the widget can be viewed in full-screen mode
    with more options. The middle button pulls up a menu with options that are related
    to managing the chart. The right button provides details on the metrics that are
    being used on the chart. A screenshot of these menus, with the middle button highlighted,
    is as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.9 – Widget common menu options'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.9_B16483.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.9 – Widget common menu options
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's take a look at the main widgets available on the host dashboard.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: CPU usage
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'By hovering over the **CPU usage** chart, the related metrics can be displayed
    on the dashboard, as shown in the following screenshot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.10 – CPU usage metrics'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.10_B16483.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.10 – CPU usage metrics
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the main CPU usage-related metrics and their meanings:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '`system.cpu.idle`: The percentage of time the CPU spent in an idle state.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.cpu.system`: The percentage of time the CPU spent running the kernel.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.cpu.iowait`: The percentage of time the CPU spent waiting for the I/O
    operations to finish.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.cpu.user`: The percentage of time the CPU spent running the processes
    in the user space.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By tracking these metrics, you will get an overall picture of the CPU usage
    on the host and by building monitors around those, the tracking of these metrics
    could be made automated.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Load averages
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The load on a host that runs some UNIX-based operating system such as Linux
    or macOS is measured in terms of the number of concurrent processes running on
    it. Usually, the load is tracked as the average of that measurement over the last
    1 minute, 5 minutes, and 15 minutes. That''s why a UNIX command such as `uptime`
    returns three measurements for load averages, as shown in the following example:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The load averages data for the host are plotted on the **Load Averages** chart
    on the **host** dashboard, as shown in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.11 – Load Averages chart on the host dashboard'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.11_B16483.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.11 – Load Averages chart on the host dashboard
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: 'By hovering over the chart, the averages for 1-minute, 5-minute and 15-minute
    loads can be displayed, as shown in the preceding screenshot. The important metrics
    in this category are the following, all of which have self-documented names:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '`System.load.1`: Average load in the last 1 minute'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`System.load.5`: Average load in the last 5 minutes'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`System.load.15`: Average load in the last 15 minutes'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we looked at system load-related metrics. Now, let's look swap
    memory metrics.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Available swap
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Swap space on a Linux host allows the inactive pages in memory to be moved
    to disk to make room in the RAM. The following system metrics are plotted on this
    chart on the host dashboard:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: '`system.swap.free`: The size of the free swap space in bytes'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.swap.used`: The size of the swap space used in bytes'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The swap memory metrics can be viewed on the dashboard, as shown in the following
    screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.12 – Available swap'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.12_B16483.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.12 – Available swap
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: There are more swap-related metrics that are published by Datadog besides those
    being used on this chart, and they could be used on custom charts and monitors
    as well.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Disk latency
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The disk latency of a storage device is determined by the delay in getting
    an I/O request processed, and that also includes the waiting time in the queue.
    This is tracked by the `system.io.await` metric:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.13 – Disk latency widget in full-screen mode'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.13_B16483.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.13 – Disk latency widget in full-screen mode
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: This metric value is reported for each storage device on the host. In the preceding
    screenshot, a sample view of this widget has been provided in full-screen mode.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Memory breakdown
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Though Datadog publishes a large set of metrics related to the available memory
    and its usage on the host, this widget charts only two metrics: `system.memory.usable`
    and a diff of `system.memory.total` and `system.memory.usable`, which provides
    an estimate of the reserved memory:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.14 – Memory breakdown widget in full-screen view'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.14_B16483.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.14 – Memory breakdown widget in full-screen view
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: 'These are static metrics and don''t provide any information on the dynamic
    usage of memory on the host. Now, let''s look at some of the important metrics
    from this category:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '`system.mem.cached`: The amount of RAM used for the cache in bytes'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.mem.free`: The amount of RAM free in bytes'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.mem.paged`: The amount of physical memory used for paging in bytes'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.mem.used`: The amount of RAM being used in bytes'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we have looked at important memory-related metrics. In the
    next section, we'll look at how disk storage usage can be monitored using the
    related metrics.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Disk usage
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Tracking the use of storage on disks attached to a host is one of the most
    common aspects of infrastructure monitoring. This widget charts the disk usage
    for every device by using the `system.disk.in_use` metric, which is the amount
    of disk space that''s being used as a fraction of the total available on the device:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.15 – Disk usage widget'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.15_B16483.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.15 – Disk usage widget
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several disk-related metrics that are published by Datadog. The important
    ones are as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '`system.disk.free`: The amount of disk space that''s free on the device in
    bytes'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.disk.total`: The total amount of disk space on the device in bytes'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.disk.used`: The amount of disk space being used on the device in bytes'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.fs.inodes.free`: The number of `inodes` free on the device'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.fs.inodes.total`: The total number of `inodes` on the device'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.fs.inodes.used`: The number of `inodes` being used on the device'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`system.fs.inodes.in_use`: The number of `inodes` being used as a fraction
    of the total available on the device'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we looked at various metrics that help us monitor storage disk
    usage. In the next section, we'll review the metrics available for monitoring
    network traffic.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: Network traffic
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The inbound and outbound network traffic on the host is tracked by the `system.net.bytes_rcvd`
    and `system.net.bytes_sent` metrics, respectively. The following screenshot shows
    the network traffic widget that''s available on the **host** dashboard:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.16 – Network traffic widget in full-screen mode'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.16_B16483.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.16 – Network traffic widget in full-screen mode
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: As with other categories of system metrics, there are several network-related
    metrics that are published by Datadog, and they are available for use with charts
    and monitors. The full list of network metrics can be referenced at [https://docs.datadoghq.com/integrations/network/](https://docs.datadoghq.com/integrations/network/).
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Thus far, we have been looking at the many options that you can use to drill
    down into the status of various components of a host, starting with the **Host
    Map** interface. The list of hosts can be viewed using the Infrastructure List
    interface, which can be accessed by navigating to **Infrastructure** | **Infrastructure
    List** on the Datadog dashboard.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot provides a sample of the **Infrastructure List** interface:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.17 – Sample Infrastructure List interface'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.17_B16483.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.17 – Sample Infrastructure List interface
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Compared to Host Map, the Infrastructure List is a much simpler interface and
    lists the hosts in a tabular form. Clicking on a specific host will take you to
    the host dashboard, which we discussed extensively earlier in this section.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: While hosts, both bare-metal and VMs, used to be the building blocks of infrastructure
    that hosted application systems, continuing to deploy applications as microservices
    means that containers are important building blocks of the infrastructure as well.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will see how Datadog can help you monitor containers
    running in your environment.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Listing containers
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A microservice is deployed using one or more containers running on different
    hosts. If a Datadog agent runs on those hosts and it's been configured to detect
    those containers, Datadog will list them on the **Containers** dashboard. The
    Datadog agent configuration changes that are needed for discovering containers
    running on a host were discussed in [*Chapter 2*](B16483_02_Final_VK_ePub.xhtml#_idTextAnchor115),
    *Deploying a Datadog Agent*.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: 'To get to the **Containers** dashboard, you can navigate to **Infrastructure**
    | **Containers**. From there, you will be able to see the dashboard shown in the
    following screenshot:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.18 – Containers dashboard'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.18_B16483.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.18 – Containers dashboard
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: 'All the containers the Datadog agent discovers on the hosts are listed on this
    dashboard. Under the **Host** section on the left pane, the container hosts are
    listed. By selecting a specific host from that list, only the containers running
    on that host can be displayed on the dashboard:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.19 – Details of a NGINX container'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.19_B16483.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.19 – Details of a NGINX container
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Clicking on a container listing will take you to a detailed interface where
    the runtime details of the container such as the host name, the Docker image used
    to create the container, and the Datadog tags on the container are provided. The
    preceding screenshot shows the details of a sample container.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the processes that are running on a host is one of the basic system
    administrative tasks related to deploying an application, getting that application
    to work correctly, or checking on the health of the host in general. Datadog makes
    this easier to do. We'll look at this feature in the next section.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Viewing system processes
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The traditional method of viewing processes running on a host is logging into
    that machine and listing the processes using commands such as `ps` on a UNIX-like
    operating system. In an environment where more elastic and immutable infrastructure
    is preferred, such manual steps are either not preferred or discouraged. In such
    situations, the option of viewing the processes running on the hosts is very useful.
    Also, having the processes listed in one place makes comparing the runtime environments
    of two or more hosts easier.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: 'To get to the **Processes** dashboard, navigate to **Infrastructure** | **Processes**
    on the Datadog dashboard. You will see an interface similar to the one shown in
    the following screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.20 – List of processes'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.20_B16483.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.20 – List of processes
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: 'This dashboard is similar to what we saw regarding the **Containers** dashboard
    in the previous section. On the left pane, there are search and filter options
    that you can use to locate the processes that you need to drill into. By clicking
    on a process listing, you can look at its details, as shown in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.21 – Process details'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.21_B16483.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.21 – Process details
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: 'Information about a process such as its name, **process ID** (**PID**), and
    the user who started the process are available on the details page. The process
    details provided in this example can be queried directly on the host like so:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The processes running on a host are not reported by the Datadog agent by default,
    so you need to enable that feature. To do that, add the following option to the
    `datadog-agent.yml` Datadog agent configuration file and restart the agent service:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Usually, this configuration option is available but commented out in the agent
    configuration file, so you just need to uncomment these lines before restarting
    the agent.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: Thus far, we've mentioned real and virtual machines and containers as the building
    blocks of infrastructure. In the next section, we will see how Datadog can help
    with monitoring a serverless computing environment.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring serverless computing resources
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The current trend is to avoid infrastructure of any kind altogether and move
    to a serverless computing environment, in which case the public cloud vendors
    provide the platform to create, run, and monitor the applications. Let's not get
    confused with any hosting services in the cloud. There is no concept of a host
    (and hence the name serverless); instead, the applications are run in computing
    sandboxes provided by the cloud provider.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: One of the most popular serverless computing services is AWS Lambda. A Lambda
    function runs application code and, practically, you can consider it the equivalent
    of a microservice. By installing AWS integration and some additional configurations
    specific to Lambda, the Lambda functions can be monitored from Datadog.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps outline the process of setting up Datadog to monitor Lambda
    functions:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Install the AWS integration in Datadog.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install the Datadog Forwarder Lambda function on your AWS account.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Instrument the Lambda functions if any application monitoring-related information
    needs to be published to Datadog.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The detailed steps to do this configuration are available at [https://docs.datadoghq.com/serverless/](https://docs.datadoghq.com/serverless/).
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to **Infrastructure** | **Serverless** to get to the Serverless dashboard,
    which is where all the **Lambda** functions are monitored, as shown in the following
    screenshot:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.22 – AWS Lambda functions for serverless computing'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.22_B16483.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.22 – AWS Lambda functions for serverless computing
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: Note that no traditional agent is needed in this situation, but the Lambda function
    known as **Datadog Forwarder** does that job for Lambda-based serverless computing.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Best practices
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'These are the best practices that should be followed for monitoring infrastructure:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Datadog provides lots of metrics that cover various aspects of compute, storage,
    and network monitoring out of the box. Make sure that you only focus on the important
    metrics from each category.
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Containers are becoming core constructs of the infrastructure that hosts modern
    applications. If microservices are used, it is important to monitor the containers
    and obtain insights that could be used to fine-tune the performance and availability
    of applications.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aggregating the processes would make it easy to compare runtime environments,
    and that feature must be enabled.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Though there is no infrastructure to manage in serverless computing, Datadog
    provides options for monitoring the application functions that should be enabled
    for tracking the related metrics.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In a traditional computing scenario where hosts are involved, infrastructure
    monitoring is the core of monitoring. Hosts include both bare-metal and virtual
    machines. With the increased use of microservices to deploy applications, the
    container has become an important element in building infrastructure. Datadog
    provides features that support both host- and container-level monitoring. The
    Datadog feature of aggregating processes from the hosts makes comparing runtime
    environments at the host level easy. Though no infrastructure is involved, Datadog
    can be used to monitor serverless computing resources such as AWS Lambda functions.
    In this chapter, you learned how various components of the infrastructure that
    run a software application system are monitored using Datadog. These infrastructure
    components could be in traditional data centers or public clouds, and they could
    be virtual machines or containers.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Though useful metrics can be published to Datadog or generated by it, if you
    do not use monitors and alerts, they are not very useful. In the next chapter,
    we will learn how monitors and alerts are set up in Datadog.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
