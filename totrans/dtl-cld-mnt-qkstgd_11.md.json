["```\n$ curl -s -X GET https://app.datadoghq.com/api/v1/hosts -H \"Content-Type: application/json\" -H \"DD-API-KEY: cd5bc9603bc23a2d97beb118b75f7b11\" -H \"DD-APPLICATION-KEY: 21f769cbd8f78e158ad65b5879a36594c77eb076\" |python -m json.tool\n            \"metrics\": {\n                \"cpu\": 15.446295,\n                \"iowait\": 0,\n                \"load\": 1.0077666\n            },\n            \"mute_timeout\": null,\n            \"name\": \"thomass-mbp-2.lan\",\n            \"sources\": [\n                \"agent\"\n            ],\n            \"tags_by_source\": {\n                \"Datadog\": [\n                    \"host:thomass-mbp-2.lan\"\n                ]\n            },\n            \"up\": true\n        }\n    ],\n    \"total_matching\": 1,\n    \"total_returned\": 1\n}\n```", "```\n$ curl -i https://app.datadoghq.com/api/v1/hosts  -H \"DD-API-KEY: cd5bc9603bc23a2d97beb118b75f7b11\" -H \"DD-APPLICATION-KEY: 21f769cbd8f78e158ad65b5879a36594c77eb076\"\nHTTP/2 200 \ndate: Sun, 24 Jan 2021 22:48:05 GMT\ncontent-type: application/json\ncontent-length: 2687\nvary: Accept-Encoding\npragma: no-cache\ncache-control: no-cache\nset-cookie: DD-PSHARD=134; Max-Age=604800; Path=/; expires=Sun, 31-Jan-2021 22:48:05 GMT; secure; HttpOnly\nx-dd-version: 35.3760712\nx-dd-debug: V1SoipvPhHDSfl6sDy+rFcFwnEIiS7Q6PT\nTTTi5csh65nTApZwN4YpC1c2B8H0Qt\nx-content-type-options: nosniff\nstrict-transport-security: max-age=15724800;\ncontent-security-policy: frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report\nx-frame-options: SAMEORIGIN\n```", "```\n$ curl -i -X POST https://app.datadoghq.com/api/v1/host/thomass-mbp-2.lan/mute  -H \"DD-API-KEY: cd5bc9603bc23a2d97beb118b75f7b11\" -H \"DD-APPLICATION-KEY: 21f769cbd8f78e158ad65b5879a36594c77eb076\" -d @mute.json\nHTTP/2 200 \ndate: Mon, 25 Jan 2021 01:21:59 GMT\ncontent-type: application/json\ncontent-length: 74\nvary: Accept-Encoding\npragma: no-cache\ncache-control: no-cache\nset-cookie: DD-PSHARD=134; Max-Age=604800; Path=/; expires=Mon, 01-Feb-2021 01:21:59 GMT; secure; HttpOnly\nx-dd-version: 35.3760712\nx-dd-debug: HbtaOKlJ6OCrx9tMXO6ivMTrEM+g0c93H\nDp08trmOmgdHozC5J+vn10F0H4WPjCU\nx-content-type-options: nosniff\nstrict-transport-security: max-age=15724800;\ncontent-security-policy: frame-ancestors 'self'; report-uri https://api.datadoghq.com/csp-report\nx-frame-options: SAMEORIGIN\n{\"action\":\"Muted\",\"downtime_id\":1114831177,\"hostname\":\"thomass-mbp-2.lan\"}\n```", "```\n    {\n      \"action\": \"Muted\",\n      \"end\": 1893456000,\n      \"message\": \"Muting my host using curl\"\n    }\n    ```", "```\n    HTTP/2 200 \n    {\"action\":\"Muted\",\"downtime_id\":1114831177,\"hostname\":\"thomass-mbp-2.lan\"}\n    ```", "```\n# post-event.py\nfrom datadog import initialize, api\noptions = {\n    \"api_key\": \"cd5bc9603bc23a2d97beb118b75f7b11\",\n    \"app_key\": \"21f769cbd8f78e158ad65b5879a36594c77eb076\",\n}\ninitialize(**options)\ntitle = \"Event from Datadog tutorial book\"\ntext = \"Hello World! My test program finally worked and posted an event!\"\ntags = [\"application:pymonitor\"]\napi.Event.create(title=title, text=text, tags=tags)\n```", "```\n$ pip install datadog\n```", "```\n$ python post-event.py\n```", "```\n# post-metric-and-event.py\nimport sys\nimport time\nfrom datadog import initialize, api\noptions = {\n    \"api_key\": \"cd5bc9603bc23a2d97beb118b75f7b11\",\n    \"app_key\": \"21f769cbd8f78e158ad65b5879a36594c77eb076\",\n}\ninitialize(**options)\n# Get the hourly count as a parameter.\norders_count=int(sys.argv[1])\nts=time.time()\ntag_list=[\"product:cute-game1\",\"fulfillment_type:download\"]\n# Post metric data\napi.Metric.send(\n   metric='mycompany.orders.hourly_count', \n   points=(ts,orders_count),\n   tags=tag_list)\n# Set event info for posting\ntitle = \"Posted hourly sales count\"\ntext = \"Hourly sales count has been queried from order fulfillment system and posted to Datadog for tracking.\\nHourly Count: \"+sys.argv[1]\n# Post event\napi.Event.create(title=title, text=text, tags=tag_list)\nThe Python code provided here can be saved in a file named post-metric-and-event.py and it could be executed as follows from a UNIX shell with Python installed:\n$ python post-metric-and-event.py SALES_ORDERS_COUNT \n```", "```\nts=time.time()\n```", "```\ntag_list=[\"product:cute-game1\",\"fulfillment_type:download\"]\n```", "```\napi.Metric.send(\n   metric='mycompany.orders.hourly_count', \n   points=(ts,orders_count),\n   tags=tag_list)\n```", "```\norders_count=int(sys.argv[1]) \n```", "```\n# create-monitor.py\nfrom datadog import initialize, api\n\noptions = {\n    \"api_key\": \"cd5bc9603bc23a2d97beb118b75f7b11\",\n    \"app_key\": \"21f769cbd8f78e158ad65b5879a36594c77eb076\",\n}\ninitialize(**options)\ntag_list=[\"product:cute-game1\"]\n# Create a new monitor\nmonitor_options = {\n   \"notify_no_data\": True,\n   \"no_data_timeframe\": 20\n}\napi.Monitor.create(\n    type=\"metric alert\",\n    query=\"avg(last_5m):avg:mycompany.orders.hourly_count{*} < 100\",\n    name=\"Hourly order count fell below 100\",\n    message=\"The order count dropped dramatically during the last hour. Check if everything is alright, including infrastructure\",\n    tags=tag_list,\n    options=monitor_options\n)\n```", "```\n# query-events.py \nimport time\nimport json\nfrom datadog import initialize, api\noptions = {\n    \"api_key\": \"cd5bc9603bc23a2d97beb118b75f7b11\",\n    \"app_key\": \"21f769cbd8f78e158ad65b5879a36594c77eb076\",\n}\ninitialize(**options)\nend_time = time.time()\nstart_time = end_time - 500\nresult = api.Event.query (\n    start=start_time,\n    end=end_time,\n    priority=\"normal\",\n    tags=[\"fulfillment_type:download\"],\n    unaggregated=True\n)\nprint (json.dumps(result, sort_keys=True, indent=4))\n```", "```\n$ python query-events.py \n{\n    \"events\": [\n        {\n            \"alert_type\": \"info\", \n            \"comments\": [], \n            \"date_happened\": 1611721000, \n            \"device_name\": null, \n            \"host\": \"thomass-mbp-2.lan\", \n            \"id\": 5829380167378283872, \n            \"is_aggregate\": false, \n            \"priority\": \"normal\", \n            \"resource\": \"/api/v1/events/5829380167378283872\", \n            \"source\": \"My Apps\", \n            \"tags\": [\n                \"fulfillment_type:download\", \n                \"product:cute-game2\"\n            ], \n            \"text\": \"Hourly sales count has been queried from order fulfillment system and posted to Datadog for tracking.\\nHourly Count: 300\", \n            \"title\": \"Posted hourly sales count\", \n            \"url\": \"/event/event?id=5829380167378283872\"\n        }\n    ]\n}\n```"]