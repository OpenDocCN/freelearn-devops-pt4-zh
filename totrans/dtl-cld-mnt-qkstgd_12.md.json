["```\n    $ sudo apt-get install snmpd snmp snmp-mibs-downloader\n    ```", "```\n    $ sudo /etc/init.d/snmpd restart\n    ```", "```\n$ snmpwalk -mALL -v2c -cpublic localhost  2>/dev/null\nSNMPv2-MIB::sysObjectID.0 = OID: NET-SNMP-TC::linux\nDISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (346799) 0:57:47.99\nSNMPv2-MIB::sysContact.0 = STRING: Me <me@example.org>\nSNMPv2-MIB::sysName.0 = STRING: ip-172-31-31-12\nSNMPv2-MIB::sysLocation.0 = STRING: Sitting on the Dock of the Bay\nSNMPv2-MIB::sysServices.0 = INTEGER: 72\nSNMPv2-MIB::sysORLastChange.0 = Timeticks: (2) 0:00:00.02\nSNMPv2-MIB::sysORID.1 = OID: SNMP-MPD-MIB::snmpMPDCompliance\nSNMPv2-MIB::sysORID.2 = OID: SNMP-USER-BASED-SM-MIB::usmMIBCompliance\nSNMPv2-MIB::sysORUpTime.1 = Timeticks: (1) 0:00:00.01\nHOST-RESOURCES-MIB::hrSystemUptime.0 = Timeticks: (760881) 2:06:48.81\nHOST-RESOURCES-MIB::hrSystemDate.0 = STRING: 2021-1-31,6:53:37.0,+0:0\nHOST-RESOURCES-MIB::hrSystemInitialLoadDevice.0 = INTEGER: 393216\nHOST-RESOURCES-MIB::hrSystemNumUsers.0 = Gauge32: 1\nHOST-RESOURCES-MIB::hrSystemProcesses.0 = Gauge32: 103\nHOST-RESOURCES-MIB::hrSystemMaxProcesses.0 = INTEGER: 0\n```", "```\n    $ cd /etc/datadog-agent/conf.d/snmp.d\n    $ cp conf.yaml.example conf.yaml\n    ```", "```\n    tags:\n           - integration:snmp\n           - metrics-type:ubuntu-snmp\n    ```", "```\n$ sudo datadog-agent status\n    snmp (3.5.3)\n    ------------\n      Instance ID: snmp:98597c6009cbe92e [OK]\n      Configuration Source: file:/etc/datadog-agent/conf.d/snmp.d/conf.yaml\n      Total Runs: 96\n      Metric Samples: Last Run: 2, Total: 192\n      Events: Last Run: 0, Total: 0\n      Service Checks: Last Run: 1, Total: 96\n      Average Execution Time : 7ms\n      Last Execution Date : 2021-01-31 08:16:21.000000 UTC\n      Last Successful Execution Date : 2021-01-31 08:16:21.000000 UTC\n```", "```\n    $ curl -OL https://apache.claz.org/cassandra/3.11.9/apache-cassandra-3.11.9-bin.tar.gz\n    ```", "```\n    $ tar xzf apache-cassandra-3.11.9-bin.tar.gz\n    $ cd apache-cassandra-3.11.9\n    ```", "```\n    $ sudo apt install openjdk-8-jre-headless -y\n    ```", "```\n$ bin/cassandra\n```", "```\n$ bin/nodetool status\nDatacenter: datacenter1\n=======================\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  127.0.0.1  70.71 KiB  256          100.0%            03262478-23a3-4bd4-97f1-bc2c837ad650  rack1\n      $ tail -f logs/system.log\nINFO  [main] 2021-01-29 06:05:27,118 CassandraDaemon.java:650 - Startup complete\nINFO  [OptionalTasks:1] 2021-01-29 06:05:36,893 CassandraRoleManager.java:372 - Created default superuser role 'cassandra'\n```", "```\n    $ cp conf.yaml.example conf.yaml\n    ```", "```\n    init_config:\n      ## @param is_jmx - boolean - required\n      ## Whether or not this file is a configuration for a JMX integration\n      #\n      is_jmx: true\n    ```", "```\n    $ sudo service datadog-agent restart\n    ```", "```\n$ sudo datadog-agent status\n========\nJMXFetch\n========\n  Initialized checks\n  ==================\n    cassandra\n      instance_name : cassandra-localhost-7199\n      message : <no value>\n      metric_count : 230\n      service_check_count : 0\n      status : OK\n```", "```\n    instances:\n      -\n        ## @param host - string - optional - default: localhost\n        ## JMX host to connect to.\n        #\n        host: localhost\n        ## @param port - integer - required\n        ## JMX port to connect to.\n        #\n        port: 7199\n    ```", "```\n                 tags:\n                     - integration:jmx\n                     - metrics-type:default\n    ```", "```\n    $ sudo service datadog-agent restart\n    ```", "```\n$ sudo datadog-agent status\n========\nJMXFetch\n========\n  Initialized checks\n  ==================\n    jmx\n      instance_name : jmx-localhost-7199\n      message : <no value>\n      metric_count : 27\n      service_check_count : 0\n      status : OK\n  Failed checks\n  =============\n    no checks\n```", "```\n conf:\n  - include:\n      domain: org.apache.cassandra.db\n      type:\n         - Caches\n```", "```\n=========\nDogStatsD\n=========\n  Event Packets: 0\n  Event Parse Errors: 0\n  Metric Packets: 5,107,230\n  Metric Parse Errors: 0\n  Service Check Packets: 0\n  Service Check Parse Errors: 0\n  Udp Bytes: 329,993,779\n  Udp Packet Reading Errors: 0\n  Udp Packets: 5,107,231\n  Uds Bytes: 0\n  Uds Origin Detection Errors: 0\n  Uds Packet Reading Errors: 0\n  Uds Packets: 0\n```", "```\n$ echo \"testdogstatsd:2|c\" | nc -u -w0 127.0.0.1 8125\n```", "```\n# post-metric-dogstatsd.py \nimport time\nimport random\nfrom datadog import initialize, statsd\noptions = {\n    'statsd_host':'127.0.0.1',\n    'statsd_port':8125\n}\ninitialize(**options)\nwhile(1):\n  # Get a random number to mimic the outdoor temperature.\n  temp = random.randrange(50,70)\n  statsd.gauge('statsd_test.outdoor_temp', temp, tags=[\"metric-source:dogstatsd\"]\n  )\n  time.sleep(10)\n```", "```\n# post-event-dogstatsd.py \nfrom datadog import initialize, statsd\noptions = {\n    'statsd_host':'127.0.0.1',\n    'statsd_port':8125\n}\ninitialize(**options)\ntitle = \"An event testing DogStatsD API\"\ntext = \"The DogStatsD API works fine! Just wanted to confirm it.\"\ntags = [\"event-source:dogstatsd-test\"]\nstatsd.event(title, text, alert_type='info', tags=tags)\n```"]