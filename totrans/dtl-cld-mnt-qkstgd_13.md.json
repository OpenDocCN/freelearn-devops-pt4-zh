["```\n$ pip install datadog\n```", "```\n$ git clone https://github.com/DataDog/datadogpy.git\n$ cd datadogpy\n$ python setup.py install\n```", "```\n$ pip3 install datadog-api-client\n```", "```\n<dependency>\n    <groupId>com.datadoghq</groupId>\n    <artifactId>java-dogstatsd-client</artifactId>\n    <version>2.11.0</version>\n</dependency>\n```", "```\n    $ pip3 install \"datadog-checks-dev[cli]\"\n    ```", "```\n    Successfully installed PyYAML-5.3.1 Pygments-2.8.0 appdirs-1.4.4 atomicwrites-1.4.0 attrs-20.3.0 bcrypt-3.2.0 bleach-3.3.0 cached-property-1.5.2 certifi-2020.12.5 cffi-1.14.5 chardet-4.0.0 colorama-0.4.4 coverage-5.5 cryptography-3.4.6 datadog-checks-dev-9.0.0 distlib-0.3.1 distro-1.5.0 docker-4.4.4 docker-compose-1.28.5 dockerpty-0.4.1 docopt-0.6.2 docutils-0.16 filelock-3.0.12 idna-2.10 in-toto-1.0.1 iniconfig-1.1.1 iso8601-0.1.14 jsonschema-3.2.0 keyring-22.3.0 markdown-3.3.4 mock-4.0.3 packaging-20.9 paramiko-2.7.2 pathspec-0.8.1 pip-tools-5.5.0 pkginfo-1.7.0 pluggy-0.13.1 psutil-5.8.0 py-1.10.0 py-cpuinfo-7.0.0 pycparser-2.20 pygal-2.4.0 pygaljs-1.0.2 pynacl-1.4.0 pyparsing-2.4.7 pyperclip-1.8.2 pyrsistent-0.17.3 pytest-6.2.2 pytest-benchmark-3.2.3 pytest-cov-2.11.1 pytest-mock-3.5.1 python-dateutil-2.8.1 python-dotenv-0.15.0 readme-renderer-29.0 requests-2.25.1 requests-toolbelt-0.9.1 rfc3986-1.4.0 securesystemslib-0.20.0 semver-2.13.0 tenacity-6.3.1 texttable-1.6.3 toml-0.10.2 tox-3.22.0 tqdm-4.58.0 twine-3.3.0 urllib3-1.26.3 virtualenv-20.4.2 webencodings-0.5.1 websocket-client-0.57.0\n    ```", "```\n    $ mkdir dd\n    ```", "```\n    $ cd dd\n    $ git clone https://github.com/DataDog/integrations-extras.git\n    ```", "```\n    $ cd integrations-extras\n    $ ddev config set repo extras\n    ```", "```\n$ ddev create -n CityWeather\n```", "```\n$ cd cityweather\n```", "```\n    [tox]\n    minversion = 2.0\n    skip_missing_interpreters = true\n    basepython = py39\n    envlist = py{27,39}\n    [testenv]\n    ensure_default_envdir = true\n    envdir =\n        py27: {toxworkdir}/py27\n        py39: {toxworkdir}/py39\n    dd_check_style = true\n    usedevelop = true\n    platform = linux|darwin|win32\n    deps =\n        datadog-checks-base[deps]>=6.6.0\n        -rrequirements-dev.txt\n    passenv =\n        DOCKER*\n        COMPOSE*\n    commands =\n        pip install -r requirements.in\n        pytest -v {posargs}\n    ```", "```\n    $ cd zabbix\n    ```", "```\n    $ cat tests/compose/docker-compose.yml \n    ```", "```\n    $ ddev test zabbix\n    ```", "```\n      py39: commands succeeded\n      style: commands succeeded\n      congratulations :)\n    Passed!\n    ```", "```\n$ ddev validate config --sync zabbix\nValidating default configuration files...\nWriting config file to `/Users/thomastheakanath/dd/integrations-extras/zabbix/datadog_checks/zabbix/data/conf.yaml.example`\nAll 2 configuration files are valid!\n```", "```\n$ ddev release build zabbix\nBuilding `zabbix`...\n'build/lib' does not exist -- can't clean it\n'build/bdist.macosx-10.13-x86_64' does not exist -- can't clean it\n'build/scripts-3.9' does not exist -- can't clean it\nwarning: no previously-included files matching '__pycache__' found anywhere in distribution\nBuild done, artifact(s) in: /Users/thomastheakanath/dd/integrations-extras/zabbix/dist\nSuccess!\n```", "```\n$ ls dist/*.whl\ndist/datadog_zabbix-1.0.0-py2.py3-none-any.whl\n```", "```\n$ sudo –u dd-agent datadog-agent integration install -w dist/datadog_zabbix-1.0.0-py2.py3-none-any.whl\nFor your security, only use this to install wheels containing an Agent integration and coming from a known source. The Agent cannot perform any verification on local wheels.\nProcessing  ./dist/datadog_zabbix-1.0.0-py2.py3-none-any.whl\nInstalling collected packages: datadog-zabbix\nSuccessfully installed datadog-zabbix-1.0.0\nSuccessfully copied configuration file conf.yaml.example\nSuccessfully completed the installation of datadog-zabbix\n```", "```\n$ ls zabbix.d\nconf.yaml.example\n```"]