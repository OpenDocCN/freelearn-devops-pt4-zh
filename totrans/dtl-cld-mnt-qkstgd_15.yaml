- en: '*Chapter 12*: Monitoring Containers'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第12章*：监控容器'
- en: The monitoring of containers has been briefly covered earlier in the book. However,
    the adoption of microservices-based architecture to build applications and the
    ever-increasing use of containers to deploy such applications demands a dedicated
    chapter like this. Monitoring applications are trying to support advances in this
    space, and Datadog has been adding new features as well.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 容器监控在本书的早期已经简要介绍。然而，采用基于微服务的架构来构建应用程序，以及越来越多地使用容器来部署这些应用程序，要求有像本章这样专门的章节来讲解。监控应用程序正在努力支持这一领域的进展，而Datadog也在不断添加新特性。
- en: 'In this chapter, you will learn about the important Datadog features related
    to monitoring containers. Specifically, the following topics will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解与监控容器相关的Datadog重要功能。具体来说，将涵盖以下主题：
- en: Collecting Docker logs
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集Docker日志
- en: Monitoring Kubernetes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控Kubernetes
- en: Using Live Containers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用实时容器
- en: Viewing logs using Live Tail
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用实时尾随查看日志
- en: Searching container data
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索容器数据
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To try out the examples mentioned in this chapter, you need to have an environment
    where the Datadog Agent is deployed on either Docker or Kubernetes. The examples
    were developed in the following environments:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试本章中提到的示例，您需要在Docker或Kubernetes上部署Datadog Agent的环境。以下环境中开发了这些示例：
- en: '**Docker**: **Docker Desktop 3.2.2** running on a MacBook Pro. Any environment
    that has the latest version of Docker would be compatible.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker**：**Docker Desktop 3.2.2**，在MacBook Pro上运行。任何具有最新版本Docker的环境都兼容。'
- en: '`minikube v1.18.1` running on a MacBook Pro. To try out the examples, any Kubernetes
    environment that has `kubectl` `v1.20.0` or higher can be used.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在MacBook Pro上运行`minikube v1.18.1`。要尝试这些示例，可以使用任何拥有`kubectl` `v1.20.0`或更高版本的Kubernetes环境。
- en: The examples might even work with older versions of Docker and Kubernetes; you
    are encouraged to try out the examples on their respective most recent versions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些示例甚至可能适用于旧版本的Docker和Kubernetes；我们鼓励您在它们各自的最新版本上尝试这些示例。
- en: Collecting Docker logs
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集Docker日志
- en: In [*Chapter 2*](B16483_02_Final_VK_ePub.xhtml#_idTextAnchor115), *Deploying
    the Datadog Agent*, you learned how to monitor Docker-based containers as part
    of the infrastructure. By configuring the Datadog Agent appropriately, information
    about the running Docker containers, the `metrics.*` group of metrics, can be
    obtained and the health of containers can be monitored. The application logs from
    a container are typically written to the `stdout` and `stderr` streams. In this
    section, let's look at how application logs can be collected by configuring the
    Datadog Agent and the corresponding Docker image.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第2章*](B16483_02_Final_VK_ePub.xhtml#_idTextAnchor115)，*部署Datadog Agent*，您学习了如何作为基础设施的一部分监控基于Docker的容器。通过适当配置Datadog
    Agent，可以获取正在运行的Docker容器的信息、`metrics.*`指标组，并监控容器的健康状态。容器的应用日志通常写入`stdout`和`stderr`流。在本节中，我们来看看如何通过配置Datadog
    Agent及相应的Docker镜像来收集应用日志。
- en: 'The preferred method to collect logs from a container is to run the Datadog
    Agent as a container on the same Docker host. Though the actual command line to
    start the Datadog Agent container can be slightly different depending on the target
    operating system, on a Unix-like system such as macOS or Linux it would be as
    follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从容器收集日志的首选方法是将Datadog Agent作为容器在同一Docker主机上运行。尽管启动Datadog Agent容器的实际命令行可能会因目标操作系统的不同而略有不同，但在Unix类系统（如macOS或Linux）上，命令将如下所示：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note that `DATADOG-API-KEY` must be replaced with a valid API key associated
    with a Datadog user account.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`DATADOG-API-KEY`必须替换为与Datadog用户账户关联的有效API密钥。
- en: 'Upon successfully running the Datadog Agent container, you should be able to
    verify it from the command line as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 成功运行Datadog Agent容器后，您应能够从命令行验证其状态，具体如下：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There could also be other containers running on the host, but look for the Datadog
    Agent container labeled `datadog-agent`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 主机上可能还会运行其他容器，但请寻找标签为`datadog-agent`的Datadog Agent容器。
- en: 'To check whether the Datadog Agent service is able to collect logs from other
    containers, you can run any other containers that generate logs. For the example
    here, we can try running an NGINX container as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查Datadog Agent服务是否能够从其他容器收集日志，您可以运行任何其他生成日志的容器。对于这里的示例，我们可以尝试运行一个NGINX容器，如下所示：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This command will run an NGINX container labeled `web`, a name that we can use
    later in the Datadog dashboards to locate this container. Also, the container
    port will be mapped to port `8080` on the Docker host machine.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令将运行一个标签为`web`的 NGINX 容器，这是我们稍后可以在 Datadog 仪表盘中用来定位此容器的名称。此外，容器端口将映射到 Docker
    宿主机上的`8080`端口。
- en: 'The output of the preceding command is not provided here for brevity, but you
    can check if it''s up and running as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出在此未提供以简化说明，但您可以按照以下方式检查它是否正在运行：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Look at the name of the container and the port mapping; this enables you to
    access the NGINX service on port `8080` on the host machine, even though the service
    runs on port `80` in the container.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 查看容器的名称和端口映射；这使得您可以通过宿主机上的`8080`端口访问 NGINX 服务，即使该服务在容器中运行在`80`端口。
- en: Also, you can access the NGINX service on a web browser using the URL `http://localhost:8080`
    (or using an IP address or `CNAME` in place of localhost if the service is accessed
    from a remote host). The service could also be accessed using a command-line tool
    such as `curl`. You need to do this to generate some logs to see them being collected
    by the Datadog Agent.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您还可以通过浏览器使用 URL `http://localhost:8080` 访问 NGINX 服务（如果从远程主机访问服务，可以使用 IP 地址或`CNAME`替代
    localhost）。也可以使用命令行工具如`curl`访问该服务。您需要这样做，以生成一些日志，查看 Datadog Agent 如何收集它们。
- en: 'Now let''s see how the logs can be viewed using the Datadog UI. By navigating
    to **Infrastructure** | **Containers**, you can get to the **Containers** dashboard,
    as shown in the following screenshot:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何通过 Datadog UI 查看日志。通过导航到**基础设施** | **容器**，您可以进入**容器**仪表盘，如下图所示：
- en: '![Figure 12.1 – Listing containers'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.1 – 列出容器'
- en: '](img/Figure_12.1_B16483.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.1_B16483.jpg)'
- en: Figure 12.1 – Listing containers
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1 – 列出容器
- en: 'Look for the name of the container that you want to check for the logs. In
    this sample case, it''s **web**, and you can double-click on it to open the following
    dialog. Select the **Logs** tab in the dropdown, as shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 查找您想查看日志的容器名称。在此示例中，容器名称为**web**，您可以双击它以打开以下对话框。在下拉菜单中选择**日志**标签，如下图所示：
- en: '![Figure 12.2 – Logs collected from a container'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.2 – 从容器收集的日志'
- en: '](img/Figure_12.2_B16483.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.2_B16483.jpg)'
- en: Figure 12.2 – Logs collected from a container
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.2 – 从容器收集的日志
- en: As you can see, the logs displayed can be filtered down to a time window such
    as the past 15 minutes, as set in the example. To generate new logs, just access
    the URL using a web browser or `curl`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，显示的日志可以按时间窗口进行筛选，比如示例中设置的过去 15 分钟。要生成新日志，只需通过 web 浏览器或`curl`访问 URL。
- en: 'The logs can also be viewed in a better interface provided by **Log Explorer**.
    The dialog specified in *Figure 12.2* provides a link to launch Log Explorer,
    as shown in the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 日志也可以在**日志浏览器**提供的更好的界面中查看。如*图 12.2*所示的对话框提供了一个链接，用于启动日志浏览器，如下图所示：
- en: '![Figure 12.3 – Link to Log Explorer'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.3 – 链接到日志浏览器'
- en: '](img/Figure_12.3_B16483.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.3_B16483.jpg)'
- en: Figure 12.3 – Link to Log Explorer
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.3 – 链接到日志浏览器
- en: 'By clicking on the link **Open in Log Explorer**, as shown in *Figure 12.3*,
    the **Log Explorer** dashboard can be launched, and the interface will be as in
    the following screenshot:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击链接**在日志浏览器中打开**，如*图 12.3*所示，可以启动**日志浏览器**仪表盘，界面如下所示：
- en: '![Figure 12.4 – Log Explorer'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.4 – 日志浏览器'
- en: '](img/Figure_12.4_B16483.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.4_B16483.jpg)'
- en: Figure 12.4 – Log Explorer
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.4 – 日志浏览器
- en: This interface is very similar to that provided by industry-standard log aggregation
    tools such as **Splunk**, **Sumo Logic**, and the **ELK Stack**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 该界面与行业标准的日志聚合工具非常相似，如**Splunk**、**Sumo Logic**和**ELK Stack**。
- en: In this example, you have learned how to capture logs from containers and publish
    them to Datadog by running the Datadog Agent, also as a container, on the same
    Docker host. If you have the option to customize the Docker image that is used
    to run the container, the image can be instrumented to capture the container logs
    better. In the following example, you will learn how NGINX logs integration is
    enabled on a container.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，您已经学习了如何从容器捕获日志并通过运行 Datadog Agent（也是作为容器）在同一 Docker 宿主机上将其发布到 Datadog。如果您有自定义运行容器的
    Docker 镜像的选项，则可以对镜像进行修改，以更好地捕获容器日志。在接下来的示例中，您将学习如何在容器上启用 NGINX 日志集成。
- en: 'The main step involved is to label the Docker image for log collection, as
    done in the following **Dockerfile**, which is used to build a custom version
    of the NGINX image that was used in the previous example:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 主要步骤是为日志收集给Docker镜像打标签，如下所示的**Dockerfile**所示，该文件用于构建在前面的示例中使用的NGINX镜像的自定义版本：
- en: 'Create a Dockerfile in the current directory as follows, build a custom version
    NGINX image, and launch a container using it:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在当前目录中创建如下所示的Dockerfile，构建自定义版本的NGINX镜像，并使用它启动容器：
- en: '[PRE4]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Build the Docker image:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建Docker镜像：
- en: '[PRE5]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Verify whether the Docker image has been successfully built:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证Docker镜像是否成功构建：
- en: '[PRE6]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Launch the custom-built NGINX container:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动自定义构建的NGINX容器：
- en: '[PRE7]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Check whether the NGINX container is running:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查NGINX容器是否正在运行：
- en: '[PRE8]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Verify whether you can access the container on port `8080` on the Docker host:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证是否可以在Docker主机的端口`8080`上访问容器：
- en: '[PRE9]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: If all the previous steps were successful, then you can check whether Datadog
    is capturing the logs.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有前面的步骤都成功，您可以检查Datadog是否正在捕获日志。
- en: 'To verify that the logs are collected, the container logs can be looked up
    on the Datadog Containers dashboard as you have seen earlier:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证日志是否已被收集，可以在Datadog容器仪表盘中查找容器日志，正如您之前所看到的那样：
- en: Navigate to **Infrastructure** | **Containers**.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**基础设施** | **容器**。
- en: Double-click on the **nginx-custom** container.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**nginx-custom**容器。
- en: Look for log entries under the **Logs** tab.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**日志**标签下查找日志条目。
- en: Alternatively, **Log Explorer** can also be used to search the logs as you learned
    in the previous example.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另外，**日志浏览器**也可以用于搜索日志，正如您在前面的示例中所学到的那样。
- en: You have learned that the containers running on a Docker host can be monitored
    using Datadog at both the infrastructure and application levels, and specifically,
    how to collect application logs from a container in this section. Kubernetes is
    becoming the default platform for deploying microservices lately, and in the next
    section, you will learn how to use Datadog to monitor containers that run on Kubernetes.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经了解了如何使用Datadog监控运行在Docker主机上的容器的基础设施和应用程序级别，特别是在本节中如何收集来自容器的应用程序日志。Kubernetes最近正在成为部署微服务的默认平台，在下一节中，您将学习如何使用Datadog监控运行在Kubernetes上的容器。
- en: Monitoring Kubernetes
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控Kubernetes
- en: Docker can be used for both packaging and running microservices, and you have
    seen examples of that in the previous section. However, that is only one of the
    packaging solutions available for microservices. Kubernetes is a platform for
    running microservices that are packaged using tools such as Docker. It provides
    a vast number of features to orchestrate and maintain the deployment of a microservices-based
    software system. Practically, it can be considered an operating system for microservices.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Docker可以用于打包和运行微服务，您在前面的章节中已经看到了这些示例。然而，这只是微服务可用的打包解决方案之一。Kubernetes是一个用于运行使用Docker等工具打包的微服务的平台。它提供了大量功能来编排和维护基于微服务的软件系统的部署。实际上，它可以被视为微服务的操作系统。
- en: Kubernetes environments can be set up on a wide variety of infrastructures,
    starting from your laptop for testing purposes through clusters of several machines
    in a data center. However, the most popular option to run Kubernetes is using
    the managed services available on public cloud platforms such as `kubectl`. In
    this section, you will learn how to deploy the Datadog Agent to monitor containers
    running in a Kubernetes environment.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes环境可以在多种基础设施上设置，从用于测试目的的笔记本电脑到数据中心中几台机器的集群。然而，运行Kubernetes最流行的方式是使用公共云平台上提供的托管服务，如`kubectl`。在本节中，您将学习如何部署Datadog代理，以监控在Kubernetes环境中运行的容器。
- en: 'To test the steps provided here, a `minikube`-based Kubernetes environment
    that runs on a personal computer was used. The details of setting up `minikube`
    can be found here: [https://minikube.sigs.k8s.io/docs/start/](https://minikube.sigs.k8s.io/docs/start/).
    The steps to deploy Datadog are applicable in any Kubernetes environment and you
    can try them out anywhere regardless of the underlying Kubernetes infrastructure.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试这里提供的步骤，使用了基于`minikube`的Kubernetes环境，它在个人计算机上运行。关于如何设置`minikube`的详细信息可以在这里找到：[https://minikube.sigs.k8s.io/docs/start/](https://minikube.sigs.k8s.io/docs/start/)。这些部署Datadog的步骤适用于任何Kubernetes环境，您可以在任何地方尝试，无论底层Kubernetes基础设施如何。
- en: Monitoring Kubernetes has two parts – monitoring the Kubernetes cluster itself,
    and monitoring the microservices that run in the containers orchestrated by Kubernetes.
    The first is infrastructure monitoring and the latter is application monitoring.
    For Datadog to access the related monitoring information, the Datadog Agent must
    be installed as one of the containers in the Kubernetes cluster, supported by
    Kubernetes resources defined for that.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 监控 Kubernetes 包括两个部分：监控 Kubernetes 集群本身，以及监控由 Kubernetes 编排的容器中运行的微服务。前者是基础设施监控，后者是应用程序监控。要使
    Datadog 能够访问相关的监控信息，必须将 Datadog Agent 安装为 Kubernetes 集群中的一个容器之一，由此定义 Kubernetes
    资源以支持。
- en: Installing the Datadog Agent
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Datadog Agent
- en: 'The Datadog Agent is installed as a **DaemonSet** on all the nodes in a Kubernetes
    cluster so that logs, traces, and metrics from each node can be collected and
    pushed to the Datadog backend. The actual implementation would be different in
    a larger environment, as the Kubernetes platform and the types of services it
    runs can be vastly different in a real-life scenario. Let''s look at the general
    steps by doing a sample installation:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog Agent 安装为 Kubernetes 集群中所有节点上的 **DaemonSet**，以便收集并推送来自每个节点的日志、跟踪和指标至
    Datadog 后端。在较大的环境中，实际实施可能会有所不同，因为 Kubernetes 平台及其运行的服务类型在实际场景中可能大不相同。让我们通过进行示例安装来查看一般步骤：
- en: 'Download the sample YAML file to create `ClusterRole` for `datadog-agent`:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载用于创建 `datadog-agent` 的 `ClusterRole` 的示例 YAML 文件：
- en: '[PRE10]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add the following code snippet to the end of the `clusterrole.yaml` file. This
    might not be needed in the latest versions of Kubernetes:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码片段添加到 `clusterrole.yaml` 文件的末尾。在最新版本的 Kubernetes 中可能不需要这样做：
- en: '[PRE11]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create `ClusterRole` for `datadog-agent`:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 `datadog-agent` 创建 `ClusterRole`：
- en: '[PRE12]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Download the sample YAML file to create `ServiceAccount` for `datadog-agent`
    and then provision that:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载用于为 `datadog-agent` 创建 `ServiceAccount` 的示例清单，然后进行配置：
- en: '[PRE13]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Download the sample YAML file for creating `ClusterRoleBinding datadog-agent`,
    which links to the `ClusterRole` and `ServiceAccount` resources set up in the
    previous steps:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载用于创建 `ClusterRoleBinding datadog-agent` 的示例 YAML 文件，它链接到先前步骤中设置的 `ClusterRole`
    和 `ServiceAccount` 资源：
- en: '[PRE14]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a secret for the API key:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 API 密钥创建一个秘密：
- en: '[PRE15]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Download a sample manifest to deploy a Datadog Agent that suits your requirements.
    The complete list is available at [https://docs.datadoghq.com/agent/kubernetes/?tab=daemonset](https://docs.datadoghq.com/agent/kubernetes/?tab=daemonset).
    For the purposes of this sample deployment, a manifest that supports the enabling
    of logs and metrics is used:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载一个适合您需求的 Datadog Agent 的示例清单。完整列表可在 [https://docs.datadoghq.com/agent/kubernetes/?tab=daemonset](https://docs.datadoghq.com/agent/kubernetes/?tab=daemonset)
    上找到。为了本示例部署的目的，使用支持启用日志和指标的清单：
- en: '[PRE16]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Update the sample Datadog Agent manifest with the following changes.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新示例 Datadog Agent 清单，进行以下更改。
- en: 'In the section for the `datadog-agent` secret resource, update the `api-key`
    field with the base64-encoded value of a valid API key. The encoding can be done
    in different ways, and there are online tools available for these ways. It can
    be done reliably on the command line using `openssl` if that is available in your
    working environment:'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 `datadog-agent` 密钥资源部分，使用有效 API 密钥的 base64 编码值更新 `api-key` 字段。可以以不同方式进行编码，并且有在线工具可用于这些方式。如果您的工作环境中有
    `openssl`，可以在命令行上可靠地执行编码：
- en: '[PRE17]'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Add the following environment variables to the container section for the Agent:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代理程序的容器部分添加以下环境变量：
- en: '[PRE18]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Deploy the Datadog Agent DaemonSet:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署 Datadog Agent DaemonSet：
- en: '[PRE19]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The Kubernetes resources that have been created in the previous steps could
    be looked up and verified using Kubernetes Dashboard as well. For example, if
    all the preceding steps were successful, you will be able to see the `datadog-agent`
    Pod listed with the status as `Running`, as in the following screenshot:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过 Kubernetes 仪表板查找和验证之前步骤中创建的 Kubernetes 资源。例如，如果所有前面的步骤都成功，您将能够看到列出 `datadog-agent`
    Pod，并显示状态为 `Running`，如下所示的截图：
- en: '![Figure 12.5 – The datadog-agent Pod listed on Kubernetes Dashboard'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.5 – 在 Kubernetes 仪表板上列出的 datadog-agent Pod'
- en: '](img/Figure_12.5_B16483.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.5_B16483.jpg)'
- en: Figure 12.5 – The datadog-agent Pod listed on Kubernetes Dashboard
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.5 – 在 Kubernetes 仪表板上列出的 datadog-agent Pod
- en: Likewise, other resources related to deploying the Datadog Agent can also be
    looked up on Kubernetes Dashboard, and they can be managed from there.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，可以在 Kubernetes 仪表板上查找与部署 Datadog Agent 相关的其他资源，并可以从那里管理它们。
- en: 'After the Datadog Agent is deployed successfully, you will be able to see the
    Kubernetes infrastructure resources and the containers running in the cluster
    on the **Containers** dashboard, as in the following screenshot:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功部署 Datadog Agent 后，您将能够在 **Containers** 仪表板上查看 Kubernetes 基础设施资源和在集群中运行的容器，如以下截图所示：
- en: '![Figure 12.6 – Kubernetes resources and containers'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.6 – Kubernetes 资源和容器'
- en: '](img/Figure_12.6_B16483.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.6_B16483.jpg)'
- en: Figure 12.6 – Kubernetes resources and containers
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.6 – Kubernetes 资源和容器
- en: By clicking on the container of interest, logs and metrics related to that container
    can be viewed on the **Containers** dashboard as you learned in the previous section,
    including the access available to the **Log Explorer** dashboard.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击感兴趣的容器，可以在 **Containers** 仪表板上查看与该容器相关的日志和指标，如您在上一节中学习到的内容，包括访问 **Log Explorer**
    仪表板的权限。
- en: The option to view Kubernetes platform resources such as **Pods**, **Deployments**,
    **ReplicaSets**, **Services**, and **Nodes** is similar to that available on Kubernetes
    Dashboard. However, having those resources tracked by Datadog provides the option
    to monitor those resources using Datadog too.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 Kubernetes 平台资源的选项，例如 **Pods**、**Deployments**、**ReplicaSets**、**Services**
    和 **Nodes**，与 Kubernetes Dashboard 提供的选项类似。然而，通过 Datadog 跟踪这些资源，还可以选择使用 Datadog
    来监控这些资源。
- en: We have already learned how Datadog can be used to monitor live containers with
    the help of integrations with Docker and Kubernetes. In the next section, you
    will learn more about that feature in the context of Kubernetes.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何通过与 Docker 和 Kubernetes 的集成，使用 Datadog 来监控实时容器。在接下来的部分中，您将了解在 Kubernetes
    环境中有关该功能的更多信息。
- en: Using Live Containers
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用实时容器
- en: Live Containers is a Datadog feature that provides insights into the workings
    of live containers. As you know, Kubernetes has become an industry standard for
    orchestrating containers, and that is not limited to Docker. Docker is only one
    of the tools available to package and run microservices. Though Docker is still
    the dominant containerization platform, there are tools like **CoreOS rkt** that
    could be used with Kubernetes, and this trend has gained momentum.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 实时容器是 Datadog 的一项功能，它提供了对实时容器运行情况的洞察。如您所知，Kubernetes 已经成为编排容器的行业标准，这不仅限于 Docker。Docker
    只是用于打包和运行微服务的工具之一。尽管 Docker 仍然是主导的容器化平台，但像 **CoreOS rkt** 这样的工具也可以与 Kubernetes
    配合使用，而且这一趋势正在获得动力。
- en: Kubernetes is a complex platform and so monitoring the Kubernetes platform itself,
    besides the containers it runs, is also equally important. Though native applications
    such as Kubernetes Dashboard are the tools of choice for monitoring a Kubernetes
    cluster manually, Datadog's platform monitoring features help to consolidate monitoring
    on one platform and to automate it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 是一个复杂的平台，因此除了监控其运行的容器之外，监控 Kubernetes 平台本身同样重要。尽管 Kubernetes Dashboard
    等原生应用程序是手动监控 Kubernetes 集群的首选工具，Datadog 的平台监控功能有助于将监控整合到一个平台上并实现自动化。
- en: When a Kubernetes cluster is fully configured for the Datadog Agent to publish
    both cluster-level and application-level information, the **Containers** dashboard
    would look like that in *Figure 12.6*. By clicking on the containers and Kubernetes
    resources, you can look up the related info live at any time.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Kubernetes 集群完全配置，以便 Datadog Agent 发布集群级别和应用程序级别信息时，**Containers** 仪表板将如 *图
    12.6* 所示。通过点击容器和 Kubernetes 资源，您可以随时查看相关的实时信息。
- en: 'To be able to get the information captured from the Kubernetes cluster published
    to Datadog, the cluster needs to be configured. Some of those configurations were
    already discussed in the previous section, but it''s worth going over some of
    the important points that were not discussed or not covered in detail:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够将从 Kubernetes 集群捕获的信息发布到 Datadog，需要对集群进行配置。上一节已经讨论过一些配置内容，但值得再次回顾一些未讨论或未详细说明的重要事项：
- en: 'The Datadog Agent container should have the following environment variable
    defined:'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datadog Agent 容器应定义以下环境变量：
- en: '[PRE20]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The Datadog Agent `ClusterRole` should have permissions set for Live Containers
    to collect information on Kubernetes resources. That requirement was discussed
    in the previous section, related to the setting up of the `clusterrole.yaml` file.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Datadog Agent 的 `ClusterRole` 应该设置权限，以便实时容器能够收集 Kubernetes 资源的信息。这个要求在上一节中已经讨论过，涉及到
    `clusterrole.yaml` 文件的设置。
- en: 'The process agent container must be run with the following environment variables
    set:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进程代理容器必须设置以下环境变量才能运行：
- en: '[PRE21]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Set the `DD_CLUSTER_NAME` environment variable for both `agent` and `process-agent`:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置`DD_CLUSTER_NAME`环境变量，适用于`agent`和`process-agent`：
- en: '[PRE22]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: On the **Containers** dashboard, information about various Kubernetes resources
    such as Nodes, Services, Deployments, and Pods is also listed. Usually, such details
    are looked up and managed from the Kubernetes Dashboard UI, but having them available
    on the Datadog **Containers** dashboard can be handy, as such information can
    then be gathered from multiple Kubernetes clusters at one location.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在**容器**仪表板上，还列出了有关各种 Kubernetes 资源的信息，如节点、服务、部署和 Pod。通常，这些详细信息是通过 Kubernetes
    仪表板 UI进行查询和管理的，但将它们显示在 Datadog **容器**仪表板上会很方便，因为这样您可以在一个位置收集来自多个 Kubernetes 集群的信息。
- en: In the **Logs** tab of both the **Containers** and **Log Explorer** dashboards,
    you might have already noticed the **Live Tail** option. Let's get some more details
    on that feature in the next section.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在**容器**和**日志浏览器**仪表板的**日志**标签页中，您可能已经注意到**实时日志**选项。我们将在下一节中进一步介绍该功能的更多细节。
- en: Viewing logs using Live Tail
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用实时日志查看日志
- en: Datadog's `tail`, which continuously puts out any additions to a log file that
    it tracks. The advantage with **Live Tail** is that updates to a set of similar
    log files from multiple sources can be tracked on one dashboard.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Datadog的`tail`会持续输出它跟踪的日志文件中的任何新增内容。使用**实时日志**的好处是，可以在一个仪表板上跟踪来自多个来源的相似日志文件的更新。
- en: 'The **Live Tail** option is available on the **Containers** dashboard as in
    the following screenshot:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**实时日志**选项在**容器**仪表板上也可用，如下图所示：'
- en: '![Figure 12.7 – The Live Tail option to view logs in real time'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.7 – 使用 Live Tail 选项实时查看日志](img/Figure_12.7_B16483.jpg)'
- en: '](img/Figure_12.7_B16483.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.7_B16483.jpg)'
- en: Figure 12.7 – The Live Tail option to view logs in real time
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.7 – 使用实时日志选项实时查看日志
- en: '**Log Explorer** also has a **Live Tail** option available as shown in the
    following screenshot:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**日志浏览器**也有一个**实时日志**选项，如下图所示：'
- en: '![Figure 12.8 – Live Tail on Log Explorer'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.8 – 在日志浏览器中的实时日志](img/Figure_12.8_B16483.jpg)'
- en: '](img/Figure_12.8_B16483.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.8_B16483.jpg)'
- en: Figure 12.8 – Live Tail on Log Explorer
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.8 – 在日志浏览器中使用实时日志
- en: In this section, you have learned how the **Live Tail** option can be useful
    in terms of looking at the logs and reporting on them on a regular basis. In the
    next section, you will learn how to search a vast number of logs that would be
    collected from containers and use the insights for monitoring purposes.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您已经了解了如何利用**实时日志**选项查看日志并定期报告它们。在下一节中，您将学习如何搜索从容器收集的大量日志，并利用这些洞察进行监控。
- en: Searching container data
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 搜索容器数据
- en: So far, our focus has been to collect information from containers and the infrastructure
    they run on, and publish that to the Datadog backend. Various Datadog dashboards,
    especially **Live Containers** and **Log Explorer**, presented that information
    for user consumption. In a real-life environment where Datadog would be publishing
    copious amounts of monitoring information, it could easily become a little overwhelming
    to process such a huge volume of data. The solution is to use methods of searching
    for information using keywords and tags, and you will learn how to do that in
    this section.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们的重点一直是收集来自容器及其运行基础设施的信息，并将这些信息发布到 Datadog 后端。各种 Datadog 仪表板，尤其是**实时容器**和**日志浏览器**，为用户提供了这些信息。在一个实际环境中，Datadog
    可能会发布大量监控信息，这样的海量数据可能会让人感到有些难以处理。解决方案是使用关键词和标签来搜索信息，您将在本节中学习如何做到这一点。
- en: 'Keywords can be used to search for containers on the **Live Containers** dashboard
    and they will match with container names, IDs, and image names. For example, in
    the following screenshot, the container ID is looked up:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用关键词在**实时容器**仪表板上搜索容器，搜索将与容器名称、ID和镜像名称匹配。例如，在以下截图中，查找了容器 ID：
- en: '![Figure 12.9 – Searching for a container using the container ID'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 12.9 – 使用容器 ID 搜索容器](img/Figure_12.9_B16483.jpg)'
- en: '](img/Figure_12.9_B16483.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_12.9_B16483.jpg)'
- en: Figure 12.9 – Searching for a container using the container ID
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.9 – 使用容器 ID 搜索容器
- en: The result can be further filtered and/or grouped by using tags. The containers
    could also be filtered using tags without using a keyword.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 结果可以通过使用标签进一步筛选和/或分组。容器也可以仅通过标签来筛选，而无需使用关键词。
- en: The keyword search can be more than just for simple strings. It can be compounded
    using Boolean operators such as `AND`, `OR`, and `NOT`. For example, `apache OR
    nginx` will return a list of containers that have `apache` or `nginx` present
    in the fields supported by the search, such as the field for the name of a container.
    Parentheses can be used to create more complex constructs for searching.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 关键词搜索不仅仅是针对简单字符串的搜索。它可以通过使用布尔运算符，如`AND`、`OR`和`NOT`，进行复合查询。例如，`apache OR nginx`将返回在搜索支持的字段中（如容器名称字段）包含`apache`或`nginx`的容器列表。可以使用括号来创建更复杂的搜索构造。
- en: Like containers, Kubernetes cluster resources such as **Pods**, **ReplicaSets**,
    **Deployments**, and **Services** could also be searched and filtered using keywords
    and tags on the Live Containers dashboard.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 与容器一样，Kubernetes集群中的资源，如**Pods**、**ReplicaSets**、**Deployments**和**Services**，也可以通过关键词和标签在实时容器仪表板中进行搜索和筛选。
- en: Now let's look at best practices related to monitoring containers in the next
    section.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在下一节中看看与容器监控相关的最佳实践。
- en: Best practices
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最佳实践
- en: 'The following are some of the best practices to be followed while monitoring
    containers using Datadog:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在使用Datadog监控容器时应遵循的一些最佳实践：
- en: Run the Datadog Agent as a container for the easy discovery of application containers
    and flexibility. Even if the Datadog Agent may have to be run at the host level
    for some reason, running it as a container on the same host might be acceptable
    considering the operational benefits that it brings.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Datadog代理作为容器运行，以便轻松发现应用容器并提供灵活性。即使由于某些原因可能需要在主机级别运行Datadog代理，将其作为容器在同一主机上运行也是可以接受的，考虑到它带来的操作优势。
- en: In a Kubernetes environment, don't try to access container logs directly via
    Docker integration; instead, install the Datadog Agent on the Kubernetes cluster
    and configure it to collect logs.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Kubernetes环境中，不要尝试通过Docker集成直接访问容器日志；而是应该在Kubernetes集群上安装Datadog代理并配置它以收集日志。
- en: Though `kubectl` and Kubernetes Dashboard can be used to view Kubernetes cluster
    resources, making those available in Datadog will help to increase the visibility
    of their availability and health.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管可以使用`kubectl`和Kubernetes Dashboard查看Kubernetes集群资源，但将它们集成到Datadog中有助于提高它们的可用性和健康状态的可见性。
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have learned how containers can be monitored using Datadog
    with the help of integrations available for Docker and Kubernetes. You have also
    learned how to search the container information and container logs once such information
    is collected by Datadog. After reading this chapter and trying out the samples
    provided in it, you are prepared to use Datadog to monitor containers that run
    in both Docker and Kubernetes environments.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你学习了如何利用Datadog结合Docker和Kubernetes的集成功能来监控容器。你还学会了在Datadog收集到容器信息和容器日志后，如何进行容器信息和日志的搜索。阅读本章并尝试其中提供的示例后，你已经为使用Datadog监控在Docker和Kubernetes环境中运行的容器做好了准备。
- en: Log aggregation, indexing, and search is a major area in monitoring and there
    are major initiatives around in the industry, such as the **ELK Stack**, **Splunk**,
    and **Sumo Logic**. Datadog also offers a solution, and you will learn about that
    in the next chapter.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 日志聚合、索引和搜索是监控中的一个主要领域，业内有许多重大举措，比如**ELK Stack**、**Splunk**和**Sumo Logic**。Datadog也提供了解决方案，你将在下一章学习到相关内容。
