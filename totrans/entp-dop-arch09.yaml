- en: '*Chapter 7*: Understanding the Impact of AI on DevOps'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第七章*：理解AI对DevOps的影响'
- en: In this chapter, we will introduce **artificial intelligence** (**AI**) and
    what the impact of AI is on DevOps. We will discuss how this is driving a shift
    left in operations, by enabling the fast identification of issues already at the
    beginning of the DevOps cycle, using AI and **machine learning** (**ML**). Before
    we can implement systems such as AIOps, we need to get the enterprise ready for
    AIOps in the first place by creating visibility of all IT assets and workflows
    and mapping them to AI-driven processes. Next, we need an integrated toolset for
    both development and operations. Leading public cloud providers offer native toolsets,
    as we will see in this chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍**人工智能**（**AI**）以及AI对DevOps的影响。我们将讨论它如何通过使用AI和**机器学习**（**ML**）驱动操作中的“左移”，即在DevOps周期开始时迅速识别问题。在实施AIOps等系统之前，我们首先需要通过创建所有IT资产和工作流的可视化，并将其映射到AI驱动的流程中，来让企业为AIOps做好准备。接下来，我们需要一个整合的工具集，既适用于开发，也适用于运维。领先的公共云提供商提供了原生的工具集，正如我们在本章中将看到的那样。
- en: After completing this chapter, you will have a good understanding of the concept
    of AI in DevOps processes. You will also have learned how AI-driven systems can
    help in achieving shift left. Before we discuss the possible outcomes and benefits
    of AIOps, we need to create full visibility of all assets and processes in the
    enterprise's IT. In this chapter, we will also learn why that is important and
    how we can achieve full-stack visibility.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本章后，你将对DevOps过程中的AI概念有一个清晰的理解。你还将学习到AI驱动的系统如何帮助实现“左移”（shift left）。在我们讨论AIOps的可能结果和收益之前，我们需要首先实现对企业IT所有资产和流程的全面可视化。在本章中，我们还将了解这一点的重要性，以及如何实现全栈可视化。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主要内容：
- en: Introducing AI and ML
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍AI和ML
- en: Understanding the shift-left movement in DevOps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解DevOps中的左移（shift-left）运动
- en: Defining the first step – DevOps as a service
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义第一步——作为服务的DevOps
- en: Creating the IT asset visibility map
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建IT资产可视化地图
- en: Measuring the business outcomes of AIOps
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 衡量AIOps的业务成果
- en: Introducing AI and ML
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍AI和ML
- en: 'In this section, we will briefly introduce the concepts of AI and ML. There
    have been complete bookstores worth of books written about AI and ML, but in this
    section, we will merely give a definition and describe how these concepts will
    change development and operations:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将简要介绍AI和ML的概念。关于AI和ML已经有成千上万本书籍被写成书店的库存，但在这一节中，我们仅仅提供定义并描述这些概念如何改变开发和运维：
- en: '**AI**: The broadest definition of AI is a computer technology that simulates
    human behavior. In most cases, AI is used to express the fact that software is
    able to react to events in an autonomous, intelligent way by deducting and analyzing
    and, by doing that, reaching decisions without human interference.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AI**：AI的最广泛定义是模拟人类行为的计算机技术。在大多数情况下，AI用于表示软件能够通过推理和分析事件，自动且智能地做出反应，从而在没有人工干预的情况下做出决策。'
- en: '**ML**: After AI is machines that learn how to perform tasks and execute actions
    by analyzing earlier events, and then use this experience to improve autonomous
    decision making. To enable this, both AI and ML as technology need data and they
    need to understand how to interpret this data.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ML**：在AI之后是机器学习，它通过分析早期的事件，学习如何执行任务和执行操作，然后利用这些经验改善自主决策。为了实现这一点，AI和ML作为技术需要数据，并且需要理解如何解读这些数据。'
- en: AI and ML are not magic. You will need to define the scope for these technologies,
    just as with any other concept. Next, you will need to prepare environments to
    be ready for AI and ML. For example, an enterprise will need to have a good understanding
    of automation to start with and a complete overview of all of their assets. Otherwise,
    even AI will be working *in the blind*, bringing no value.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: AI和ML并非魔法。你需要像定义其他任何概念一样，明确这些技术的应用范围。接下来，你需要准备好环境，以便为AI和ML做好准备。例如，企业首先需要对自动化有一个清晰的理解，并全面了解其所有资产。否则，即使是AI也会在*盲目操作*的情况下工作，无法带来任何价值。
- en: 'Introducing and implementing AIOps starts with a different mindset: improvements
    start with the early detection of possible failures and learning how to prevent
    them before they enter production, instead of detecting and correcting failures
    in production. This is the domain of shift-left thinking. We will learn more about
    that in the next section.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the shift-left movement in DevOps
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Shift left has become a popular term over the past years. But what do we mean
    by this? It''s about moving activities that were originally planned at a later
    stage up to the beginning of a process. This is typically the case with testing,
    which for a long time was executed as soon as the whole product was delivered
    to a test team. Shift-left testing has become an important paradigm in DevOps:
    executing tests as early as possible. By having tests already from the beginning
    of development, issues will be found much sooner and can be fixed in that early
    stage. It will improve the end product. The following figure shows the impact
    of shift-left testing:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.1 – Impact of shift-left testing'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17492_07_001.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.1 – Impact of shift-left testing
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'The shift-left principle can be applied to more processes in DevOps. Think
    of the very first step in DevOps: design. IT teams, both software developers and
    cloud engineers working on the infrastructure, should have a good understanding
    of the business requirements before they start building a solution. One of the
    major pitfalls in IT is that IT is building something without completely understanding
    these business requirements. A strong collaboration between business and IT can
    solve this by adopting other design approaches. Design thinking fits in perfectly
    and is a good example of shift left.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'Design thinking starts with evaluating the perspectives of all parties involved
    in the development: in the methodology, this is referred to as *empathy*. The
    next step is to define the problem, brainstorming and generating ideas to solve
    the problem from every angle, then building and testing the prototype. Testing,
    however, is not the final stage. On the contrary: design thinking is an iterative
    process, just as DevOps. Products will get better with every cycle. The key is
    to involve IT already at the very beginning of the project, in the phase where
    business requirements are defined. The process is shown in the following figure:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.2 – Process of design thinking'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17492_07_002.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.2 – Process of design thinking
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Finally, shift left is also applicable to deployment and operations in DevOps.
    This is where automation, templating, and blueprinting play a major role. With
    automated templates, pre-approved patterns, and processes, we can shift deployment
    to an early stage. Using automation, we can achieve consistent deployment applications
    that will help operations in managing these environments.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Pre-approved patterns also include **test-driven development** (**TDD**), shifting
    testing all the way to the beginning of the development and deployment process.
    In [*Chapter 3*](B17492_03_ePub_RK.xhtml#_idTextAnchor040), *Architecting for
    DevOps Quality*, we discussed TDD, where the team writes the test cases first
    and then the code. The code is written to the specifications of the test case,
    proving that requirements have been fulfilled.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 预先批准的模式还包括**测试驱动开发**（**TDD**），将测试移至开发和部署过程的最初阶段。在 [*第 3 章*](B17492_03_ePub_RK.xhtml#_idTextAnchor040)
    *面向 DevOps 质量的架构* 中，我们讨论了 TDD，在这种方法中，团队首先编写测试用例，然后编写代码。代码是根据测试用例的规范编写的，从而证明了需求已被满足。
- en: In short, the shift-left principle is about reducing failures in an early stage,
    making end products more stable and resilient. Issues are often only discovered
    in production, typically caused by inconsistencies in the deployment of systems.
    Manual tasks or the use of a lot of different tools increase the risk of these
    inconsistencies. Developers using different tools than operations can result in
    issues that need to be fixed by manual tasks. In **Site Reliability Engineering**
    (**SRE**), this is referred to as toil, as we have seen in [*Chapter 5*](B17492_05_ePub_RK.xhtml#_idTextAnchor066),
    *Architecting Next-Level DevOps with SRE*. Or, issues are caused by different
    procedures. Automation, templating, and TDD can avoid these issues occurring and
    reduce the failure rate. Templates, patterns, and blueprints are tested and improved
    continuously, leading to more stable operations.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，左移原则是关于在早期阶段减少故障，使最终产品更加稳定和具有弹性。问题通常只会在生产环境中被发现，通常是由于系统部署中的不一致性所导致。手动任务或使用大量不同工具会增加这些不一致性的风险。开发人员使用与运维不同的工具可能会导致需要通过手动任务来修复的问题。在**站点可靠性工程**（**SRE**）中，这被称为
    toil，正如我们在 [*第 5 章*](B17492_05_ePub_RK.xhtml#_idTextAnchor066) *通过 SRE 架构下一个层次的
    DevOps* 中看到的那样。或者，问题是由不同的流程引起的。自动化、模板化和 TDD 可以避免这些问题的发生，并减少故障率。模板、模式和蓝图会不断测试和改进，从而实现更加稳定的运营。
- en: AI and ML can help in all of this. First of all, AI-driven monitoring will help
    in detecting issues and especially inconsistencies at an early stage. It will
    learn from these inconsistencies and suggest and even implement improvements in
    code and procedures using ML. But before we dive into that, we need to discuss
    automation a bit more as part of the shift-left paradigm, shifting as much as
    possible to cloud services using integrated toolsets, implementing DevOps as a
    service. That's the topic for the next section.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: AI 和 ML 可以在这一切中提供帮助。首先，AI 驱动的监控将帮助在早期阶段发现问题，特别是不一致性。它将从这些不一致性中学习，并利用 ML 提出甚至实施代码和流程的改进。但在我们深入讨论之前，我们需要先讨论一下自动化，作为左移范式的一部分，尽可能地将工作转移到云服务中，利用集成的工具集，实施
    DevOps 作为服务。这是下一节的主题。
- en: Defining the first step – DevOps as a service
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义第一步 – 将 DevOps 作为一种服务
- en: 'Consistency is the key to success. That applies to almost anything and it certainly
    applies to DevOps. Dev and ops need to collaborate in the same toolset: that is
    what DevOps as a service is about. DevOps as a service enables shifting left,
    but is also a good starting point for implementing overarching monitoring systems,
    including AIOps.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一致性是成功的关键。这几乎适用于任何事情，当然也适用于 DevOps。开发和运维需要在相同的工具集下协作：这就是将 DevOps 作为一种服务的核心。DevOps
    作为一种服务使得左移成为可能，同时也是实施全面监控系统的良好起点，包括 AIOps。
- en: Note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: AIOps is way more than just a monitoring tool, as we will find out in the following
    chapters. However, AIOps starts with the monitoring of complex environments. By
    gathering data from these systems and analyzing this, it will be able to track
    and remediate systems and processes, including the automation of repetitive tasks.
    AIOps is capable of discovering patterns for which it can define automated triggers.
    But it can't do this if it can't monitor the source systems.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: AIOps 远不止是一个监控工具，正如我们将在接下来的章节中了解到的那样。然而，AIOps 从监控复杂环境开始。通过收集这些系统的数据并进行分析，它能够跟踪和修复系统和流程，包括自动化重复任务。AIOps
    能够发现模式，并为其定义自动触发器。但如果它无法监控源系统，它就无法做到这一点。
- en: 'DevOps as a service will track every step in the development and delivery process,
    but the real value is that it provides feedback as soon as an issue in that process
    is detected. The value lies in the fact that this feedback is already collected
    before the software is pushed to production. From the start of the development
    cycle, an integrated toolset enables the tracking of bugs and errors and sends
    this back to the development team, way before operations is confronted with faulty
    software and unpredicted behavior from systems. This is a true shift left: shifting
    things that we typically do at a later stage to the beginning.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 作为服务将跟踪开发和交付过程中的每一步，但真正的价值在于它能在检测到该过程中的问题时立即提供反馈。其价值在于，这些反馈在软件推送到生产环境之前就已经被收集。从开发周期的开始，集成的工具集使得错误和缺陷的跟踪成为可能，并将其反馈给开发团队，这远在操作团队面临故障软件和系统的异常行为之前。这是真正的“左移”：将通常在后期阶段进行的工作提前到开始阶段。
- en: 'DevOps as a service thus represents an integrated toolset that enables collaboration
    between developers and operations. The tools have to cover all steps in the DevOps
    process and basically work together as one tool. Cloud platforms provide these
    tools. In this section, we will discuss these tools in Azure, AWS, and **Google
    Cloud Platform** (**GCP**):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，DevOps 作为服务代表了一种集成的工具集，能够促进开发人员和运维人员之间的协作。这些工具必须涵盖 DevOps 流程中的所有步骤，并且基本上像一个工具一样协同工作。云平台提供这些工具。在本节中，我们将讨论在
    Azure、AWS 和 **Google Cloud Platform** (**GCP**) 中的这些工具：
- en: '**AWS**: AWS CodeBuild, AWS CodePipeline, and AWS CodeDeploy are the three
    main solutions to look at. CodeBuild is a managed service for building, compiling,
    and testing code through automated processes. CodeBuild also provides unique encryption
    keys for every artifact that is built and stored in the code repository. Deployment
    scenarios are defined in CodePipeline, up until production, where CodeDeploy enables
    the delivery to targeted infrastructure in production. CodeDeploy also takes care
    of patching, upgrades, and the synchronization of builds.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS**：AWS CodeBuild、AWS CodePipeline 和 AWS CodeDeploy 是需要关注的三大解决方案。CodeBuild
    是一个用于通过自动化流程构建、编译和测试代码的托管服务。CodeBuild 还为每个构建的工件提供唯一的加密密钥，这些工件存储在代码仓库中。部署场景在 CodePipeline
    中定义，直到生产阶段，CodeDeploy 实现将应用交付到生产环境的目标基础设施中。CodeDeploy 还负责修补、升级和构建的同步。'
- en: '**Microsoft Azure**: Azure DevOps is the integrated toolset in Azure for development
    and deployment. It''s a sort of Swiss Army knife: it acts as one tool, but under
    the hood, it holds different solutions that work together. You can manage the
    code in Azure Repos, which provides support for Git repositories. Building, testing,
    and deploying code is done in Azure Pipelines. More extensive testing can be executed
    using Azure Test Plans. Next to this, Azure DevOps provides Azure Boards, which
    is used to track projects: it can be compared to Kanban boards. Finally, it provides
    Azure Artifacts, where developers can share NuGet, NPM, Python, and Maven packages
    from other sources into Azure DevOps.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft Azure**：Azure DevOps 是 Azure 中的集成工具集，用于开发和部署。它就像一把瑞士军刀：它作为一个工具存在，但在背后却包含了多种协同工作的解决方案。你可以在
    Azure Repos 中管理代码，Azure Repos 支持 Git 仓库。代码的构建、测试和部署在 Azure Pipelines 中完成。更全面的测试可以通过
    Azure Test Plans 执行。此外，Azure DevOps 还提供 Azure Boards，用于跟踪项目：它类似于看板。最后，Azure DevOps
    提供 Azure Artifacts，开发人员可以通过它将来自其他来源的 NuGet、NPM、Python 和 Maven 包共享到 Azure DevOps
    中。'
- en: '**Google Cloud**: Google Cloud offers the Operations Suite, formerly known
    as Stackdriver. The most interesting part for developers is likely Cloud Debugger,
    which allows analyzing code in a running state and finding bugs without stopping
    the applications. Code deployment is done through Deployment Manager. GCP also
    offers a powerful tool for fast and automatic issue detection and analysis with
    Cloud Trace—in fact, this is already very close to AIOps.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud**：Google Cloud 提供了 Operations Suite，之前称为 Stackdriver。对开发人员来说，最有趣的部分可能是
    Cloud Debugger，它允许在应用程序运行时分析代码并发现错误，而无需停止应用程序。代码部署通过 Deployment Manager 完成。GCP
    还提供了一个强大的工具 Cloud Trace，用于快速和自动地检测和分析问题——实际上，这已经非常接近 AIOps。'
- en: Having integrated toolsets will help us in the shift-left movement and create
    a good starting point to implement AIOps. But we need to do one thing first and
    that's making sure that we have visibility of every asset in our IT environment.
    That's the topic of the next section.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 集成的工具集将帮助我们推动“左移”运动，并为实施AIOps提供一个良好的起点。但我们首先需要做一件事，那就是确保能够全面掌控我们IT环境中的每一个资产。这是下一节的主题。
- en: Creating the IT asset visibility map
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There''s a famous line in *Alice in Wonderland*: "If you don''t know where
    you are going, any road will get you there." You can actually turn this around:
    if you want to go somewhere, you need to know where you''re coming from. Let''s
    put this into practice: if we want to transform the enterprise, we need to know
    what it is we are transforming. That''s why every approach to digital transformation
    starts with assessments and discovery. An enterprise needs to have full visibility
    of all of its assets. The following figure shows the basic steps in a migration
    and transformation plan, starting with the assessment:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.3 – High-level plan for migration'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B17492_07_003.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.3 – High-level plan for migration
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'When all assets have been identified, we can start the planning of migrating
    and transforming these assets to a new target landing zone, typically a platform
    in the public cloud. Applications need to be validated so that the right strategy
    can be defined: rehost, replatform, rebuild. This is the domain of app modernization
    that we discussed in [*Chapter 4*](B17492_04_ePub_RK.xhtml#_idTextAnchor053),
    *Scaling DevOps*. The final step is to plan the migrations and transformations
    in waves. A *big bang* can be a strategy, but in large enterprises, this is certainly
    not recommended.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'Getting back to the reasons why enterprises adopt Agile and DevOps: enterprises
    do this to speed up the delivery of products and become more flexible so they
    can respond faster to the changing demands of customers. To gain that speed, they
    need to rely on stable systems and operations, so time can be spent on development
    instead of fixing issues. IT needs to become more predictive and actually avoid
    issues occurring. Data coming from assets is crucial. That data needs to be collected
    and analyzed in real time.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: The first source of this data is the **configuration management database** (**CMDB**).
    The problem with a lot of CMDBs is that the information they hold is not accurate.
    The root cause for that is the fact that a lot of data is still entered manually
    by, for instance, importing spreadsheets; monitoring and asset collection is not
    done in real time; or data is scattered across multiple CMDBs that need to be
    synced.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Next, CMDBs are not very often *cleaned*, so they contain noise. This typically
    is a result of not updating the CMDB after changes have been executed. The CMDB
    should be the single source of truth when it comes to capturing assets, but without
    real-time updated—automated—information, this becomes a challenge. The CMDB will
    not reflect the actual status of systems anymore.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'You will have noticed that we''re using two different terms in this section:
    assets and configuration. These are different things, and they are equally important
    in understanding how the enterprise''s IT is set up. Only when we have full visibility
    of assets and configurations can we start planning migrations and getting the
    tools in place that will help operations to become more predictable. Ops needs
    a system that does the following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到，在本节中我们使用了两个不同的术语：资产和配置。这是两个不同的概念，它们在了解企业 IT 配置时同样重要。只有当我们完全了解资产和配置时，我们才能开始规划迁移，并准备好帮助运营变得更加可预测的工具。运营需要一个能够做到以下几点的系统：
- en: Knows what systems are in the IT environment
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 知道 IT 环境中有哪些系统
- en: Knows how these systems relate to each other
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 知道这些系统之间是如何相互关联的
- en: Tracks the status and configurations of these systems in real time
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实时跟踪这些系统的状态和配置
- en: 'We start with knowing what systems we have in our environment: the asset visibility
    map. This is asset management: basically a list of every physical and virtual
    system, including the software that is used and licenses so that we know when
    systems will need to be upgraded or replaced, for instance, because software gets
    to the end of support or licenses have expired. This is addressed by the life
    cycle management process.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从了解环境中有哪些系统开始：资产可视化图。这就是资产管理：基本上是每个物理和虚拟系统的清单，包括使用的软件及其许可证，以便我们知道何时需要升级或更换系统，例如，当软件结束支持或许可证到期时。这通过生命周期管理过程来解决。
- en: We also need to know how these systems are configured and what their relation
    is to other systems, including dependencies so that operators know what the impact
    is when a database is shut down. This is configuration management.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要知道这些系统是如何配置的，以及它们与其他系统的关系，包括依赖关系，以便操作人员了解在数据库关闭时可能产生的影响。这就是配置管理。
- en: So, full visibility involves not only all assets but also a comprehensible visualization
    of connections, dependencies, and processes. Without this information, operations
    will have to spend hours finding the root cause of a problem and learning how
    to solve it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，完全的可视化不仅包括所有资产，还包括对连接、依赖关系和流程的清晰可视化。如果没有这些信息，运营人员将不得不花费大量时间寻找问题的根本原因，并学习如何解决它。
- en: 'Working in the cloud makes real-time asset collection easier. As an example,
    with the `Get` command in Azure, you can create lists of assets in Azure subscriptions.
    Again, real time is crucial here. Since cloud systems tend to change fast, it
    becomes even more important to have instant, accurate asset data. How do we create
    this visibility? We define five layers, as shown in the following figure:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在云中工作使得实时资产收集变得更加容易。例如，在 Azure 中，使用 `Get` 命令，你可以创建 Azure 订阅中的资产列表。同样，实时性在这里至关重要。由于云系统变化较快，拥有即时、准确的资产数据变得尤为重要。我们如何实现这种可视化？我们定义了五个层次，如下图所示：
- en: '![Figure 7.4 – Layers of asset management'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.4 – 资产管理的层次](img/B17492_07_004.jpg)'
- en: '](img/B17492_07_004.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17492_07_004.jpg)'
- en: Figure 7.4 – Layers of asset management
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4 – 资产管理的层次
- en: 'Let''s explore these five layers in a bit more detail:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地探讨这五个层次：
- en: '**Infrastructure**: This includes virtual machines and all network components.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施**：包括虚拟机和所有网络组件。'
- en: '**Operating systems**: Are all operating systems up to date? But also: how
    are they configured? For example, enterprises typically have security standards,
    applied to images of operating systems that are hardened with these standards.
    Are all systems implemented with that same image? Systems that have been set up
    with another image might be vulnerable.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作系统**：所有操作系统是否都已更新？另外：它们是如何配置的？例如，企业通常会有安全标准，应用于已按这些标准加固的操作系统镜像。所有系统是否都使用了相同的镜像？使用其他镜像设置的系统可能存在安全漏洞。'
- en: '**Application**: What application software has been installed and what version?
    Is software properly patched and licensed?'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序**：安装了哪些应用程序软件，版本是什么？软件是否已正确打补丁并获得授权？'
- en: '**Data**: Where is data stored and how is it stored? For example, is data encrypted
    and in what way?'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据**：数据存储在哪里？是如何存储的？例如，数据是否经过加密，采用何种方式加密？'
- en: '**Access**: Who or what has access to the four other layers?'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问**：谁或什么可以访问其他四层？'
- en: Note
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: 'There are two vertical layers in the figure. Life cycle management is applicable
    to the entire stack. Are all components still compliant, properly licensed, and
    not running out of service? This is even valid for the access layer: think of
    accounts that are not used anymore and should be disabled.'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图中有两个垂直层次。生命周期管理适用于整个技术栈。所有组件是否仍然符合要求、具有正确的许可证并且没有过期？这对于访问层也是适用的：想想那些不再使用的账户，应该被禁用。
- en: Security is intrinsic to all layers. It's not something that we only have to
    take care of in the infrastructure or the data layer. Every layer needs to be
    compliant with the security policies. We will learn more about this in the third
    part of this book when we will talk about security in DevOps.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 安全性是所有层次的固有部分。它不是我们只需要在基础设施或数据层中关注的事项。每一层都需要遵守安全政策。在本书的第三部分，我们将讨论在 DevOps 中的安全性，届时我们将深入学习更多内容。
- en: 'But enterprises will likely have more than only assets in a public cloud. Also,
    assets in the public cloud might have relations and dependencies with even non-cloud
    systems. So, we need an overarching system that collects all data and where this
    data is maintained: the single-pane-of-glass view or full-stack visibility.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 但企业可能不仅仅拥有公共云中的资产。此外，公共云中的资产可能与甚至非云系统存在关系和依赖。因此，我们需要一个全面的系统，来收集所有数据并维护这些数据：单一视图（single-pane-of-glass）或全栈可视化。
- en: 'Azure, AWS, and GCP offer APIs to **enterprise service management** (**ESM**)
    systems such as ServiceNow and BMC. ESM goes way further than only IT: it correlates
    business processes to IT and provides one view of how IT supports these business
    processes. These systems allow predicting how changes in IT systems will impact
    the business processes.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Azure、AWS 和 GCP 提供了用于**企业服务管理**（**ESM**）系统的 API，例如 ServiceNow 和 BMC。ESM 的范围远远超出了
    IT：它将业务流程与 IT 相关联，并提供 IT 如何支持这些业务流程的单一视图。这些系统能够预测 IT 系统的变化将如何影响业务流程。
- en: So far, we have only talked about the assets and configurations that reside
    within the enterprise. But in this fast-changing world, the enterprise will also
    have a massive amount of external sources that create data. Think of data coming
    from websites and social media platforms. These might be real assets to a company,
    but data from these sources are likely to have an impact on business processes.
    Therefore, enterprises will also have a need to analyze this data.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只讨论了企业内部的资产和配置。但在这个快速变化的世界中，企业也将拥有大量来自外部的数据源。想象一下来自网站和社交媒体平台的数据。这些可能对公司来说是真正的资产，但来自这些源的数据可能会影响业务流程。因此，企业也需要分析这些数据。
- en: For example, a campaign on social media might raise sales, requiring the extra
    capacity of the sales systems, including the company's websites. If this is not
    foreseen and systems crash because of traffic overload, it will definitely cause
    damage to the company that is not limited to loss of revenue, but also reputational
    damage.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，社交媒体上的一次活动可能会提高销售额，要求销售系统的额外容量，包括公司的网站。如果没有预见到这一点，且由于流量过载导致系统崩溃，这将无疑对公司造成损害，损失不仅限于收入损失，还包括声誉损害。
- en: Predicting the behavior of systems and measuring the impact on a business requires
    full visibility of the entire ecosystem of the enterprise's IT. AIOps will help
    and in the last section of this chapter, we will discuss how.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 预测系统行为并衡量其对业务的影响需要对企业 IT 的整个生态系统进行全面可视化。AIOps 将提供帮助，在本章的最后一部分，我们将讨论如何实现这一点。
- en: Measuring the business outcomes of AIOps
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 衡量 AIOps 的业务成果
- en: In the previous sections, we discussed shift left and saw how we can define
    DevOps as a service. Next, we learned how to create total visibility of all assets
    in the enterprise as a starting point to implement AI-driven processes that will
    help improve development, deployment, and operations and with that, accelerate
    a shift left in IT. How will AI help with that?
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们讨论了“向左移动”（shift left），并看到我们如何将 DevOps 定义为一种服务。接下来，我们学习了如何创建企业所有资产的全面可视化，作为实施
    AI 驱动流程的起点，这些流程将帮助改进开发、部署和运维，从而加速 IT 中的“向左移动”。那么，AI 如何在这方面提供帮助呢？
- en: 'AI is about analyzing data. AIOps is no different: it analyzes operational
    data and is able to give recommendations on improving systems in terms of performance
    and efficiency.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AI 是关于分析数据的。AIOps 也不例外：它分析操作数据，并能够提供有关如何改善系统性能和效率的建议。
- en: 'To get valid data and recommendations, AIOps has to reduce noise. Noise is
    a very common problem in operations and specifically in monitoring systems and
    CMDBs, as we learned in the previous section. What is really an issue and what
    is a false alert? AIOps is capable of analyzing these alerts and, with the help
    of algorithms that group alerts, can identify and prioritize these. The outcome
    is that this saves a lot of time in operations: operators can now focus on alerts
    that really impact systems—and therefore business.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了获得有效的数据和建议，AIOps 必须减少噪音。噪音是运维中非常常见的问题，特别是在监控系统和 CMDB 中，正如我们在前一部分所学的那样。什么是真正的问题，什么是虚假的警报？AIOps
    能够分析这些警报，并借助算法将警报进行分组，识别并优先处理它们。结果是，这将节省大量运维时间：运维人员现在可以集中精力处理那些真正影响系统的警报——从而影响业务。
- en: 'A very strong capability of AIOps is that it can correlate alerts and events
    to identify the root cause of an issue. A prerequisite is the full-stack visibility
    that we discussed in the previous section. AIOps are learning systems: meaning
    that they will first need to capture all the assets and understand the relationships
    between them.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AIOps 的一个强大功能是它能够关联警报和事件，找出问题的根本原因。一个前提是我们在前一部分讨论过的全栈可视化。AIOps 是学习系统：这意味着它们首先需要捕获所有资产并理解它们之间的关系。
- en: 'One more time: AIOps are learning systems, so they will learn what the normal
    behavior of systems is. They will then recognize anomalies and correlate these
    proactively with the possible business impact. Take the example we used with the
    campaign leading to a spike in sales. AIOps systems will detect abnormally high
    traffic much faster than operations and trigger scaling more quickly.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 再次强调：AIOps 是学习系统，因此它们会学习系统的正常行为。然后，它们将识别异常并主动与可能的业务影响相关联。以我们之前提到的营销活动导致销售激增为例，AIOps
    系统将比运维更快地检测到异常的高流量，并更迅速地触发扩展。
- en: Triggering scaling implies that AIOps is highly automated. AIOps can be used
    to take care of routine tasks, such as executing backups.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触发扩展意味着 AIOps 高度自动化。AIOps 可以用于处理例行任务，例如执行备份。
- en: 'How can we measure the benefits of adding AI? The following **key performance
    indicators** (**KPIs**) can help:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何衡量添加 AI 的收益？以下 **关键绩效指标** (**KPIs**) 可以提供帮助：
- en: '**Mean time to detect (MTTD)**: How much time elapses before an issue is detected?
    AIOps will learn how to detect failures, analyzing patterns and the behavior of
    systems. AIOps will also know how *severe* an issue is by analyzing how it affects
    business processes. Since AIOps uses ML, it will learn how to detect issues faster,
    how to predict them, and eventually avoid them by proactive recommendations.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检测问题的平均时间 (MTTD)**：从问题出现到被检测到需要多长时间？AIOps 将学习如何检测故障，分析系统的模式和行为。AIOps 还将通过分析问题对业务流程的影响来判断问题的*严重性*。由于
    AIOps 使用机器学习，它将学会如何更快地检测问题，如何预测问题，并最终通过主动建议来避免问题。'
- en: '**Mean time to acknowledge (MTTA)**: This logically follows MTTD. MTTD is about
    detection, while MTTA is about how fast AIOps can route the issue to the right
    operators. This is covered by automation of the workflow process: AIOps will first
    recognize the issue, determine the impact, and then decide which operator it should
    be routed to for further investigation. This includes raising the incident to
    the highest level of criticality when, for instance, crucial business processes
    are impacted. AIOps may decide to flag the issue as critical, triggering the crisis
    workflow. Using these systems, a lot of time will be saved in comparison to manual
    intervention.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**确认问题的平均时间 (MTTA)**：这在逻辑上是 MTTD 的延续。MTTD 是关于检测，而 MTTA 是关于 AIOps 能多快地将问题分配给正确的运维人员。这由工作流程过程的自动化来覆盖：AIOps
    会首先识别问题，确定影响范围，然后决定将其分配给哪个运维人员进行进一步调查。当关键业务流程受到影响时，例如，AIOps 可能会决定将问题标记为关键，触发危机处理流程。使用这些系统，与人工干预相比，将节省大量时间。'
- en: '**Mean time to resolve (MTTR)**: Using AIOps, it can be quickly identified
    whether similar issues have occurred before and what solution was executed to
    mitigate them. In short, AIOps will help in finding and analyzing solutions fast,
    restoring the service as soon as possible.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**解决问题的平均时间 (MTTR)**：使用 AIOps，可以快速识别类似问题是否曾经发生过，并执行了什么解决方案来缓解它们。简而言之，AIOps
    将帮助快速找到并分析解决方案，尽早恢复服务。'
- en: '**Detection by monitoring**: A useful KPI to measure the success rate of AIOps
    is how many issues have been detected by AIOps before users actually noticed a
    drop in performance or even the outage of systems.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控检测**：衡量 AIOps 成功率的一个有用 KPI 是，在用户实际注意到性能下降甚至系统宕机之前，AIOps 检测到的问题数量。'
- en: '**Remediation by automation**: This is sometimes referred to as *automate automation*.
    AIOps will learn what solutions are used to solve issues. Sophisticated systems
    will also learn how to automate these solutions, proactively taking measures to
    prevent the issue from happening again. A useful KPI to measure the effectiveness
    of AIOps is to track how many remediating actions are automated by AIOps and what
    the effect is on the availability of systems.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化修复**：有时也称为 *自动化自动化*。AIOps 将学习解决问题所用的方案。复杂的系统还将学会如何自动化这些解决方案，主动采取措施防止问题再次发生。衡量
    AIOps 效果的一个有用 KPI 是跟踪 AIOps 自动化的修复行动数量及其对系统可用性的影响。'
- en: 'Be aware that AIOps is still in its very early stages. Quite a number of tools
    that call themselves AIOps aren''t able yet to, for instance, "automate automation,"
    as described in the last bullet. However, AI and ML will absolutely evolve and
    get more mature in the coming years. It will be a first step in implementing AI
    and ML to DevOps and IT as a whole and changing the software development by doing
    the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，AIOps 仍处于非常早期阶段。相当多的工具自称为 AIOps，但目前还无法做到，例如上一条所描述的“自动化自动化”。然而，AI 和 ML 无疑将在未来几年发展并变得更加成熟。这将是将
    AI 和 ML 实现到 DevOps 和整体 IT 中的第一步，并通过以下方式改变软件开发：
- en: Creating prototypes
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建原型
- en: Automated detection and analysis
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化检测与分析
- en: Automated correction
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化修正
- en: Automated code generation
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化代码生成
- en: Automated testing
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化测试
- en: This chapter introduced the concepts of AI and ML and how these technologies
    will impact the development, deployment, and management of IT systems. AI will
    help in creating more reliable systems and improve the development of software.
    AI will certainly not replace developers or operators, but their roles might change
    as they learn to work with AI-driven systems such as AIOps. First, we will discuss
    how we can integrate AIOps into our architecture, which is the main topic of [*Chapter
    8*](B17492_08_ePub_RK.xhtml#_idTextAnchor095), *Architecting AIOps*.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了 AI 和 ML 的概念以及这些技术将如何影响 IT 系统的开发、部署和管理。AI 将有助于创建更可靠的系统，并改进软件开发。AI 当然不会取代开发者或运维人员，但随着他们学习如何与
    AI 驱动的系统（如 AIOps）协作，他们的角色可能会发生变化。首先，我们将讨论如何将 AIOps 集成到我们的架构中，这是 [*第 8 章*](B17492_08_ePub_RK.xhtml#_idTextAnchor095)
    的主题，*AIOps 架构设计*。
- en: Summary
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'After a short introduction to AI and ML, this chapter discussed how these technologies
    will help in making better software and more reliable systems. AI enables the
    shift-left movement: shifting things that were typically done in a later stage
    to the beginning of the development and deployment cycle. With AI, it''s possible
    to detect issues in a very early stage and by means of automation, AI will also
    be able to trigger correcting actions.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在简要介绍了 AI 和 ML 之后，本章讨论了这些技术如何帮助开发更好的软件和更可靠的系统。AI 支持“左移”运动：将通常在后期阶段完成的工作提前到开发和部署周期的开始阶段。通过
    AI，能够在非常早期的阶段检测到问题，并通过自动化手段，AI 还能触发修正行动。
- en: Since AI and ML are learning systems, they will learn how to predict and possibly
    prevent issues from happening. For this, AI needs real-time data coming from source
    systems, hence the first step is to get a total overview of all assets in our
    IT environments and make sure that these systems are monitored, providing real-time
    logs. We learned how to create this full visibility using five layers.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 AI 和 ML 是学习系统，它们将学会如何预测并可能预防问题的发生。为此，AI 需要来自源系统的实时数据，因此第一步是全面了解我们 IT 环境中的所有资产，并确保这些系统正在被监控，提供实时日志。我们学习了如何使用五个层次创建这种完整的可见性。
- en: In the last section, we discussed KPIs used to measure the outcomes of AI-driven
    systems. Although AIOps is still relatively new, the technology is very promising
    in getting better insights into the behavior of IT and predicting the impact of
    IT events on the business. In the next chapter, we will learn how to integrate
    AIOps into the enterprise architecture.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们讨论了用于衡量 AI 驱动系统成果的 KPI。尽管 AIOps 仍然相对较新，但这项技术在深入了解 IT 行为并预测 IT 事件对业务影响方面非常有前景。在下一章中，我们将学习如何将
    AIOps 集成到企业架构中。
- en: Questions
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Design thinking is a method to create a shift-left movement. Design thinking
    starts with evaluating the perspectives of all parties involved in the development.
    What is the term that is used to describe this step in the methodology?
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设计思维是一种推动左移变革的方法。设计思维从评估所有参与开发方的视角开始。在该方法论中，描述此步骤的术语是什么？
- en: AWS offers DevOps as a service using native tools. What are the three tools
    for building the code, planning the deployment scenarios, and the actual deployment
    to production instances?
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS提供使用本地工具的DevOps作为服务。用于构建代码、规划部署场景和实际部署到生产实例的三个工具是什么？
- en: What does MTTA stand for?
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MTTA代表什么？
- en: Further reading
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '*AI Crash Course*, by Hadelin de Ponteves, Packt Publishing, 2019'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*AI速成课程*，作者：Hadelin de Ponteves，出版方：Packt Publishing，2019年'
- en: 'Blog by Clive Longbottom: https://searchitoperations.techtarget.com/definition/DevOps-as-a-service-DaaS'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Clive Longbottom的博客：[DevOps作为服务（DaaS）](https://searchitoperations.techtarget.com/definition/DevOps-as-a-service-DaaS)
- en: '*Azure DevOps Explained*, by Sjoukje Zaal, Stefano Demiliani, and Amit Malik,
    Packt Publishing, 2020'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure DevOps解析*，作者：Sjoukje Zaal, Stefano Demiliani 和 Amit Malik，出版方：Packt
    Publishing，2020年'
