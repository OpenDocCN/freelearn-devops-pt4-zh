- en: '*Chapter 13*: Working with DevSecOps Using Industry Security Frameworks'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第13章*：使用行业安全框架与 DevSecOps 合作'
- en: An important artifact in security – and DevSecOps – is security frameworks.
    There are generic frameworks, such as **Center for Internet Security** (**CIS**),
    but typically, industries must comply with and report about compliancy according
    to specific industry security standards. These have an impact on the way security
    is handled within enterprises and therefore in the implementation of DevSecOps.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性和 DevSecOps 中一个重要的工具是安全框架。存在通用框架，例如**互联网安全中心**（**CIS**），但通常行业必须根据特定的行业安全标准遵守并报告合规性。这些框架影响了企业内部安全处理的方式，因此也影响了
    DevSecOps 的实施。
- en: This chapter will explain the functionality and impact of frameworks and how
    to incorporate them into DevSecOps. This chapter includes a separate paragraph
    on the use and value of the MITRE ATT&CK framework since it is becoming more well-known
    and more widely accepted as a base framework.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将解释框架的功能和影响，以及如何将它们融入到 DevSecOps 中。本章包括关于 MITRE ATT&CK 框架使用和价值的单独段落，因为它正变得越来越知名并被广泛接受，成为基础框架。
- en: After completing this chapter, you will have a good understanding of the most
    used security frameworks and how the controls of these frameworks can be applied
    to DevOps.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本章后，您将对最常用的安全框架有一个清晰的了解，并知道如何将这些框架的控制措施应用于 DevOps。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主要内容：
- en: Understanding industry security frameworks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解行业安全框架
- en: Working with the MITRE ATT&CK framework
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MITRE ATT&CK 框架
- en: Applying frameworks to DevSecOps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将框架应用于 DevSecOps
- en: Creating compliance reports and guiding audits
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建合规报告并指导审计
- en: Understanding industry security frameworks
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解行业安全框架
- en: IT has become more complex over the years. The same applies to IT security.
    There's a correlation between the two. Enterprise IT environments are no longer
    monolithic systems that sit in the basement of a company that's functioning as
    the enterprise's data center. Today, IT environments share different components
    and have connections to the outside world through internet connections. With that
    notion, systems are, *by default*, accessible through the internet. Yet, only
    authorized users should be able to access these systems. Hence, we need some strong
    defenses to protect systems from security breaches.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，IT变得越来越复杂，IT安全也是如此，两者之间存在关联。企业 IT 环境不再是位于公司地下室的数据中心的单一系统。如今，IT 环境由不同的组件组成，并通过互联网连接与外部世界互联。因此，系统*默认*是可以通过互联网访问的。然而，只有授权用户才能访问这些系统。因此，我们需要一些强有力的防御措施来保护系统免受安全漏洞的侵害。
- en: 'The level of required security will differ per industry. First of all, financial
    institutions will want to make sure that bank accounts can''t be compromised and
    that money is not being illegally transferred. Healthcare institutions need to
    protect their patients'' personal and health data. Manufacturers want to protect
    their intellectual property and patents. Above all, there are several overarching
    principles in terms of security, protecting data, identities, and hardening systems
    from outside attacks. It''s almost impossible to keep track of all this, and that''s
    where security frameworks come in: they provide guidance for implementing the
    right set of security policies in an enterprise.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所需的安全级别因行业而异。首先，金融机构需要确保银行账户无法被入侵，且资金不会被非法转移。医疗机构需要保护患者的个人和健康数据。制造商希望保护其知识产权和专利。最重要的是，安全方面有几个总体原则，即保护数据、身份，以及加强系统防范外部攻击。要跟踪这些几乎是不可能的，这时安全框架就派上了用场：它们为企业实施正确的安全政策提供了指导。
- en: Before we learn how security frameworks impact CI/CD and DevOps, we will need
    to understand what these frameworks are. In short, a framework is a set of policies
    and documented guidelines on implementing and managing these policies. The policies
    themselves are focusing on identifying risks, mitigating risks, and reducing the
    attack surface of systems and procedures in case vulnerabilities are detected.
    This is a generic approach, but industry frameworks tune this approach to specific
    needs in an industry.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习安全框架如何影响CI/CD和DevOps之前，我们需要理解这些框架的概念。简而言之，框架是一套实施和管理这些政策的政策和文档化指南。政策本身专注于识别风险、减轻风险以及在发现漏洞时减少系统和程序的攻击面。这是一种通用方法，但行业框架会根据行业的具体需求对这种方法进行调整。
- en: 'Generic IT security frameworks include ISO IEC 27001/ISO 2700212, the **National
    Institute of Standards and Technology** (**NIST**) Cybersecurity Framework, **Center
    for Internet Security** (**CIS**), and **Control Objectives for Information and
    Related Technologies** (**COBIT**). Let''s explore these in a bit more detail
    first:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 通用的IT安全框架包括ISO IEC 27001/ISO 2700212、**美国国家标准与技术研究院**（**NIST**）的网络安全框架、**互联网安全中心**（**CIS**）和**信息与相关技术控制目标**（**COBIT**）。让我们先详细了解这些框架：
- en: '**ISO IEC 27001/ISO 2700212/27017**: ISO 27001 is setting international standards
    for system security controls. The emphasis is on controls that detect threats
    that will have a severe impact on the availability and integrity of systems. ISO
    27002 sets additional standards to manage the controls themselves, such as user
    access management and maintaining asset inventories. ISO 27017 specifically targets
    the cloud. It deals with shared responsibilities in **Platform-as-a-Service**
    (**PaaS**) and **Software-as-a-Service** (**SaaS**) environments, secures deployments
    and removes cloud systems, and monitors cloud services, as a few examples.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ISO IEC 27001/ISO 2700212/27017**：ISO 27001制定了国际系统安全控制标准，重点关注能检测出会严重影响系统可用性和完整性的威胁的控制。ISO
    27002则设立了额外的标准，用以管理这些控制措施，如用户访问管理和资产清单维护。ISO 27017专门针对云计算，涉及在**平台即服务**（**PaaS**）和**软件即服务**（**SaaS**）环境中的共享责任，确保云服务的部署与移除，并监控云服务等。'
- en: '**NIST**: The NIST Cybersecurity Framework doesn''t specify controls, but it
    does provide five functions to enhance security: identify, protect, detect, respond,
    and recover. These functions allow organizations to set controls to manage data
    breach risks. Controls must include access control, measures to protect data,
    and also the awareness of staff. Respond calls for controls must describe how
    organizations should react to threats and attacks, including mitigation and communication
    guidelines. Recovery is the last resort: organizations need to have a clear strategy
    regarding how to recover from attacks, such as system and data recovery. The five
    NIST domains are shown in the following diagram:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NIST**：NIST网络安全框架并未指定具体的控制措施，但它提供了五个功能来增强安全性：识别、保护、检测、响应和恢复。这些功能允许组织设定控制措施以管理数据泄露风险。控制措施包括访问控制、保护数据的措施，以及员工的安全意识。响应要求控制措施描述组织应如何应对威胁和攻击，包括缓解和沟通指南。恢复是最后的手段：组织需要有明确的战略来恢复攻击后的系统和数据。NIST的五个领域如下图所示：'
- en: '![Figure 13.1 – The NIST cybersecurity framework'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.1 – NIST网络安全框架'
- en: '](img/B17492_13_001.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17492_13_001.jpg)'
- en: Figure 13.1 – The NIST cybersecurity framework
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 – NIST网络安全框架
- en: '**CIS**: CIS offers extensive frameworks with specific controls for platforms,
    operating systems, databases, and containers. Some of the CIS frameworks are embedded
    in platforms such as CIS for Azure and AWS. In these scenarios, the CIS benchmarks
    can be accessed from Azure Security Center and AWS Security Hub. The CIS benchmarks
    make sure that used components are *hardened*. The big difference compared to
    NIST is that NIST focuses on guidelines to assess risks, whereas CIS provides
    long lists of security controls and best practices.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CIS**：CIS提供了针对平台、操作系统、数据库和容器的广泛框架，并提供具体的控制措施。一些CIS框架嵌入在平台中，如CIS for Azure和AWS。在这些场景中，可以通过Azure安全中心和AWS安全中心访问CIS基准。CIS基准确保所使用的组件是*强化的*。与NIST相比，主要的区别在于，NIST侧重于评估风险的指南，而CIS提供了大量的安全控制措施和最佳实践。'
- en: '**COBIT**: COBIT was launched by **Information Systems Audit and Control Association**
    (**ISACA**), the international organization of IT security and audits. Originally,
    COBIT was about identifying and mitigating technical risks in IT systems, but
    with the recent release of the framework – COBIT 5 – it also covers business risks
    that are related to IT. COBIT is complicated to implement and manage since it
    covers the entire enterprise, including all IT management processes such as incident,
    problem, configuration, and change management.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**COBIT**：COBIT由**信息系统审计与控制协会**（**ISACA**）推出，ISACA是一个国际IT安全与审计组织。最初，COBIT是关于识别和缓解IT系统中的技术风险，但随着最近发布的框架——COBIT
    5，它还涵盖了与IT相关的业务风险。COBIT的实施和管理较为复杂，因为它涵盖了整个企业，包括所有IT管理流程，如事件管理、问题管理、配置管理和变更管理。'
- en: These are control frameworks. All of these frameworks may have *editions* that
    cover specific industry requirements, but typically, industries have to adhere
    to their *own* standards, as well as be fully compliant. This is important when
    industries are audited. In the last section of this chapter, we will discuss auditing
    in more detail.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是控制框架。所有这些框架可能有涵盖特定行业需求的*版本*，但通常情况下，行业需要遵守它们*自己的*标准，并且完全合规。这在行业进行审计时非常重要。在本章的最后一节，我们将更详细地讨论审计问题。
- en: The major industry frameworks – actually, these are regulatory attestations
    – are **Health Insurance Portability and Accountability Act** (**HIPAA**) for
    healthcare, **Federal Risk and Authorization Management Program** (**FedRAMP**)
    for governmental organizations in the US, **General Data Protection Regulation**
    (**GDPR**) in the European Union, and **Payment Card Industry Data Security Standard**
    (**PCI-DSS**) for financial institutions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的行业框架——实际上，这些是监管认证——包括医疗保健领域的**健康保险流通与责任法案**（**HIPAA**），美国政府机构的**联邦风险与授权管理计划**（**FedRAMP**），欧盟的**通用数据保护条例**（**GDPR**），以及金融机构的**支付卡行业数据安全标准**（**PCI-DSS**）。
- en: All of these are global or at least regionally implemented, but there may also
    be specific national security regulations a company needs to apply. An example
    is the **New York Department of Financial Services** (**NYDFS**) Cybersecurity
    Regulation. This framework was released in 2017, placing security regulations
    on all financial institutions in the US. However, the rules in this framework
    are aligned with NIST and apply ISO 27001 standards. Yet, NYDSF does have some
    rules that supersede these generic frameworks. Under NYDSF, data encryption and
    enhanced multi-factor authentication are mandatory security controls for all inbound
    connections.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这些框架都在全球范围内或至少在区域内实施，但也可能有公司需要遵守的特定国家安全法规。例如，**纽约金融服务部**（**NYDFS**）的网络安全法规。该框架于2017年发布，对美国所有金融机构提出了安全要求。然而，这一框架中的规则与NIST一致，并应用了ISO
    27001标准。然而，NYDFS确实有一些规则，优先于这些通用框架。在NYDFS的规定下，数据加密和增强的多因素身份验证是所有入站连接的强制性安全控制措施。
- en: There's one framework that we haven't discuss yet and that's MITRE ATT&CK. MITRE
    ATT&CK is not a real framework, such as the ones that we discussed in this section.
    It's a knowledge base that covers tactics on how systems might be attacked and
    breached. It can, however, be used as input to define risk strategies and threat
    models to protect systems. In the next section, we will learn how to use MITRE
    ATT&CK.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个框架我们还没有讨论，那就是MITRE ATT&CK。MITRE ATT&CK并不是一个真实的框架，比如我们在本节中讨论的那些框架。它是一个知识库，涵盖了系统可能遭受的攻击和突破的策略。然而，它可以作为定义风险策略和威胁模型的输入，来保护系统。在下一节中，我们将学习如何使用MITRE
    ATT&CK。
- en: Working with the MITRE ATT&CK framework
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用MITRE ATT&CK框架
- en: 'Maybe it''s not a completely fair statement, but we will post it here regardless:
    MITRE ATT&CK lets you think from the attacker''s perspective when it comes to
    security. The strength of this framework is that anyone can contribute to it.
    It doesn''t really describe the actual vulnerabilities in systems, but more the
    techniques attackers could use to exploit these vulnerabilities. MITRE ATT&CK
    uses a matrix with 14 attack tactics. Next, it divides these tactics across major
    platforms or technologies, including cloud and containers. In the cloud, there''s
    a subdivision for Azure, AWS, and GCP.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 也许这不是一个完全公平的说法，但我们会在这里发布它：MITRE ATT&CK 在涉及安全时让您从攻击者的角度思考。该框架的强大之处在于任何人都可以为其做出贡献。它实际上并没有描述系统中的实际漏洞，而是描述攻击者可能利用这些漏洞的技术。MITRE
    ATT&CK 使用一个包含 14 个攻击策略的矩阵。接下来，它将这些策略分配给主要平台或技术，包括云和容器。在云中，有 Azure、AWS 和 GCP 的细分。
- en: Tip
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The full MITRE ATT&CK framework can be found at [https://attack.mitre.org/](https://attack.mitre.org/).
    However, it is recommended to follow MITRE on Twitter as well at `@MITREattack`.
    The matrix is open source, so a lively community is contributing to the tactics
    and techniques that are collected in the framework. MITRE invites people to join
    the community and actively contribute to their findings.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的 MITRE ATT&CK 框架可以在 [https://attack.mitre.org/](https://attack.mitre.org/)
    找到。但是，建议还关注 MITRE 的 Twitter 帐号 `@MITREattack`。该矩阵是开源的，因此活跃的社区正在为收集在框架中的策略和技术做出贡献。MITRE
    鼓励人们加入社区并积极贡献他们的发现。
- en: 'In this section, we will briefly go over the 14 tactics and then specifically
    address the ones for containers, since these are widely used in **Continuous Integration/Continuous
    Deployment** (**CI/CD**):'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将简要介绍 14 种策略，然后专门讨论容器中的策略，因为这些在**持续集成/持续部署**（**CI/CD**）中被广泛使用。
- en: '**Reconnaissance**: These techniques gather as much information as possible
    to prepare attacks. This includes scanning systems, but also social engineering,
    wherein the staff of organizations are used to get information.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**侦察**：这些技术旨在收集尽可能多的信息以准备攻击。这包括扫描系统，还包括社会工程，即利用组织的员工获取信息。'
- en: '**Resource development**: These techniques involve creating, purchasing, or
    stealing resources that hackers can use to execute an attack.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源开发**：这些技术涉及创建、购买或窃取黑客可以用来执行攻击的资源。'
- en: '**Initial access**: This is the first attempt at gaining access to systems.
    This includes abusing valid (service) accounts and phishing.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**初始访问**：这是首次尝试访问系统。包括滥用有效（服务）账户和钓鱼。'
- en: '**Execution**: This technique is about running malicious code.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行**：这项技术涉及运行恶意代码。'
- en: '**Persistence**: This technique gains access using backdoors. It uses containers
    to inject malicious code, boot, and log into initialization scripts.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**持久性**：这种技术通过后门获取访问权限。它利用容器注入恶意代码，引导并登录初始化脚本。'
- en: '**Privilege escalation**: This technique involves using exploits to leverage
    privileges on systems to eventually gain more control. When it comes to using
    containers, this is a commonly used tactic. Containers should always be hardened
    to prevent them from gaining extra privileges.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限升级**：这种技术涉及利用漏洞在系统上提升权限，最终获取更多控制权。在使用容器时，这是一种常用的策略。容器应始终加固，以防止它们获取额外的权限。'
- en: '**Defense evasion**: This involves tactics wherein code is used to go around
    intrusion detection, logging, and other prevention measures. In cloud environments,
    this tactic is used to manipulate cloud (coded) firewalls by, for example, entering
    through an unused environment in a different region or unprotected sandbox environments.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**防御规避**：这包括使用代码绕过入侵检测、日志记录和其他预防措施的策略。在云环境中，此策略用于操纵云（编码）防火墙，例如通过未使用的不同区域中的环境或未受保护的沙盒环境进入。'
- en: '**Credential access**: Typically, this involves brute-force attacks to get
    usernames and passwords.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**凭证访问**：通常涉及暴力破解以获取用户名和密码。'
- en: '**Discovery**: This tactic is used to find user data, devices, applications,
    data, and services to gain as much information about the available systems as
    possible.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发现**：此策略用于查找用户数据、设备、应用程序、数据和服务，以尽可能多地了解可用系统的信息。'
- en: '**Lateral movement**: This tactic is used to move systems and data from one
    host to another, sometimes in a different environment that''s not under the control
    of the enterprise. Pass the hash and remote admin access are commonly used techniques.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**横向移动**：此战术用于将系统和数据从一个主机移动到另一个主机，有时是移动到一个不在企业控制下的环境中。常用的技术包括散列传递和远程管理员访问。'
- en: '**Collection**: This tactic is used to collect data from keyboard strokes or
    screen captures, for instance. In the cloud, collecting API keys to access storage
    and key vaults are popular techniques.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**收集**：此战术用于收集数据，例如键盘输入或屏幕截图等。在云环境中，收集 API 密钥以访问存储和密钥保管库是常见的技术。'
- en: '**Command and control**: When using this technique, hackers try to communicate
    with systems in an attempt to gain control of them.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令与控制**：使用此技术时，黑客尝试与系统通信，试图获得对系统的控制。'
- en: '**Exfiltration**: This tactic involves gaining control of data and data streams
    by, for instance, sending data to different storage environments and encrypting
    the data.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据外泄**：此战术涉及通过例如将数据发送到不同的存储环境并加密数据，来控制数据和数据流。'
- en: '**Impact**: This is a broad category and includes denial of service techniques
    and resource hijacking.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**影响**：这是一个广泛的类别，包括拒绝服务技术和资源劫持。'
- en: 'MITRE ATT&CK is not a magic wand: it doesn''t solve all security problems.
    It should be considered another source you can use to start protecting IT environments
    in a better way by providing different insights. It shows potential attack patterns
    and paths that security engineers can include in their security policies. MITRE
    ATT&CK provides insights from specific platforms and technologies, which makes
    it rather unique. Common attack tactics may have different paths and patterns
    in various platforms, and that''s where MITRE ATT&CK is a good guardrail.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: MITRE ATT&CK 并不是一个魔法棒：它并不能解决所有的安全问题。它应被视为另一种可以帮助你以更好的方式保护 IT 环境的资源，通过提供不同的见解。它展示了潜在的攻击模式和路径，安全工程师可以将其纳入安全策略中。MITRE
    ATT&CK 提供了来自特定平台和技术的见解，这使得它非常独特。常见的攻击战术在不同平台上可能有不同的路径和模式，而这正是 MITRE ATT&CK 成为一个良好护栏的地方。
- en: Note
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In DevOps, scanning code is crucial. Static and dynamic scanning must be the
    default in CI/CD. Scanning is typically done against baselines. One baseline that
    is commonly used in DevOps is **OWASP**, the **Open Web Application Security Project**.
    OWASP is open source and yearly lists the top 10 vulnerabilities in applications.
    We will discuss OWASP in more detail in [*Chapter 14*](B17492_14_ePub_RK.xhtml#_idTextAnchor168),
    *Integrating DevSecOps with DevOps*.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 中，扫描代码至关重要。静态和动态扫描必须是 CI/CD 中的默认操作。扫描通常是针对基线进行的。在 DevOps 中常用的基线之一是**OWASP**，即**开放网页应用程序安全项目**。OWASP
    是开源的，每年列出应用程序中的十大漏洞。我们将在 [*第14章*](B17492_14_ePub_RK.xhtml#_idTextAnchor168) *将
    DevSecOps 与 DevOps 集成* 中更详细地讨论 OWASP。
- en: In the next section, we will show you how the matrix can be used to better protect
    containers.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将向你展示如何使用矩阵来更好地保护容器。
- en: Using MITRE ATT&CK tactics for containers
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 MITRE ATT&CK 战术保护容器
- en: 'So, how does MITRE ATT&CK work in practice? Let''s use the matrix for containers,
    since they are frequently used in CI/CD pipelines, as an example. First, we must
    go to the specific matrix on [https://attack.mitre.org/matrices/enterprise/containers/](https://attack.mitre.org/matrices/enterprise/containers/).
    You will recognize some of the 14 tactics that we discussed in the previous section.
    Not all of them are applicable; for containers, eight tactics have proven to be
    relevant:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，MITRE ATT&CK 在实践中是如何工作的呢？我们以容器矩阵为例，因为容器在 CI/CD 流水线中被频繁使用。首先，我们必须访问 [https://attack.mitre.org/matrices/enterprise/containers/](https://attack.mitre.org/matrices/enterprise/containers/)
    上的特定矩阵。你将会认识到我们在上一节中讨论的 14 个战术中的一些。并非所有战术都适用；对于容器，有八个战术被证明是相关的：
- en: Initial access
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始访问
- en: Execution
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行
- en: Persistence
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持久性
- en: Privilege escalation
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权限提升
- en: Defense evasion
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防御规避
- en: Credential access
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 凭证访问
- en: Discovery
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现
- en: Impact
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 影响
- en: 'Next, we can look at one of these tactics. We will use **Execution** as an
    example, as shown in the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以看一下这些战术中的一个。我们将以**执行**为例，如下图所示：
- en: '![Figure 13.2 – Tab in MITRE ATT&CK for containers'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 13.2 – MITRE ATT&CK 中容器的标签'
- en: '](img/B17492_13_002.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17492_13_002.jpg)'
- en: Figure 13.2 – Tab in MITRE ATT&CK for containers
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2 – MITRE ATT&CK 中容器的标签
- en: 'The top two in Execution are as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 执行中的前两项如下：
- en: '**Container Administration Command**'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器管理命令**'
- en: '**Deploy Container**'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署容器**'
- en: If we click on the first one, **Container Administration Command**, the matrix
    provides us with information on how a specific vulnerability in container administration
    has been exploited. The vulnerability itself may occur while managing the containers
    using, for instance, a Docker daemon or the Kubernetes API. These may allow remote
    access and management to be used while the containers are launched. MITRE gives
    two examples of techniques that have been used for this. The first technique is
    Hildegard, which makes it possible to execute commands on running containers using
    the kubelet API run command. Kinsing, the second technique that MITRE mentions,
    exploits an Ubuntu entry point to run shell scripts to take over container administration
    processes.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击第一个，**容器管理命令**，矩阵将为我们提供有关如何在容器管理中利用特定漏洞的信息。漏洞本身可能出现在使用例如Docker守护进程或Kubernetes
    API管理容器时。这些可能允许在容器启动时使用远程访问和管理。MITRE给出了两个已经使用的技术例子。第一个技术是Hildegard，它使得可以使用kubelet
    API运行命令在运行中的容器上执行命令。MITRE提到的第二个技术是Kinsing，它利用Ubuntu入口点运行shell脚本来接管容器管理进程。
- en: Next, the matrix provides mitigations. In the given examples, the mitigating
    actions are using read-only containers and limiting communications with the container
    service, daemon, or Kubernetes using remote access via SSH.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，矩阵提供了缓解措施。在给定的例子中，缓解措施包括使用只读容器并限制通过SSH的远程访问来与容器服务、守护进程或Kubernetes进行通信。
- en: You will find that Kinsing also appears under the **Deploy Container** tab,
    next to the Doki exploit, which is a piece of malware that was discovered in the
    spring of 2020 and targets Docker containers.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现Kinsing也出现在**部署容器**标签下，紧挨着Doki漏洞，后者是一种在2020年春季被发现的恶意软件，专门针对Docker容器。
- en: The matrix will guide you through various exploits and help you mitigate them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 矩阵将引导你了解各种漏洞并帮助你减轻它们。
- en: With that, we've discussed the contents of the various frameworks. In the next
    section, we will learn how to use them in DevSecOps and how compliance reports
    are created to show that frameworks have been applied.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在这方面，我们已经讨论了各种框架的内容。在接下来的章节中，我们将学习如何在DevSecOps中使用这些框架，以及如何创建合规性报告来展示框架的应用。
- en: Applying frameworks to DevSecOps
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将框架应用于DevSecOps
- en: 'In this section, we will learn how to include the controls of frameworks in
    DevOps and embed them as DevSecOps. Good news: it''s not as hard as it may sound.
    The following diagram shows this process:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何将框架的控制措施融入到DevOps中，并将它们嵌入为DevSecOps。好消息是：这并不像听起来那么困难。下图展示了这个过程：
- en: '![Figure 13.3 – Process of applying controls from security frameworks to DevOps'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '![图13.3 – 从安全框架到DevOps的控制应用过程'
- en: '](img/B17492_13_003.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17492_13_003.jpg)'
- en: Figure 13.3 – Process of applying controls from security frameworks to DevOps
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.3 – 从安全框架到DevOps的控制应用过程
- en: In general, we start by assessing the framework that the enterprise needs to
    apply to their IT environments. From that assessment, the different controls are
    derived and set to the development and deployment cycles of applications and infrastructure.
    As soon as code is pulled from the repositories, scanning starts against these
    controls.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们首先评估企业需要应用到其IT环境中的框架。从这个评估中，衍生出不同的控制措施，并将其设置为应用和基础设施的开发和部署周期。一旦代码从仓库拉取，扫描就会针对这些控制措施开始。
- en: We are using the CIS benchmark as an example here since CIS is the most used
    framework for setting security controls. Applying controls starts with the realization
    that in DevOps, the IT environments are highly dynamic by default. Everything,
    including the infrastructure, is turned into code, so applications will run in
    containers or in serverless mode. This calls for some specific controls.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里以CIS基准为例，因为CIS是最常用的安全控制框架。应用控制始于认识到，在DevOps中，IT环境默认是高度动态的。一切，包括基础设施，都转化为代码，因此应用程序将运行在容器中或无服务器模式下。这需要一些特定的控制措施。
- en: 'Some generic controls must be applied. These include the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 必须应用一些通用控制措施。这些包括以下内容：
- en: '**Vulnerability management**: This must be implemented as a control before
    code is pushed to production, but with the principles of shift-left in mind, vulnerability
    scanning should already start from the moment that code is pulled from repositories.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞管理**：这必须作为一个控制措施在代码推送到生产环境之前实现，但考虑到左移原则，漏洞扫描应该从代码从仓库拉取的那一刻就开始。'
- en: '**Access**: With this control, you can limit and manage the privileges of all
    resources, including containers.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问控制**：通过此控制，你可以限制和管理所有资源的权限，包括容器。'
- en: '**Logging**: This includes the logs while building and testing code. Sometimes,
    only logs are collected in production environments, but that is not sufficient
    if you want to be in control of the DevOps cycle.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日志记录**：这包括在构建和测试代码时的日志。有时，在生产环境中只收集日志，但如果你想掌控 DevOps 循环，这样是不足够的。'
- en: 'These are generic. CIS has developed a specific framework for securing containers,
    as shown in the following figure:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是通用的。CIS 开发了一个专门用于保护容器的框架，如下图所示：
- en: '![Figure 13.4 – The CIS Docker Benchmark'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 13.4 – CIS Docker 基准测试'
- en: '](img/B17492_13_004.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B17492_13_004.jpg)'
- en: Figure 13.4 – The CIS Docker Benchmark
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4 – CIS Docker 基准测试
- en: 'This benchmark, as CIS calls it, contains controls for the following:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基准测试，CIS 称之为基准，包含以下控制项：
- en: Linux host configuration; for example, ensuring a separate partition for containers
    and ensuring that only trusted users can control the Docker daemon.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux 主机配置；例如，确保容器使用独立分区，并确保只有可信用户可以控制 Docker 守护进程。
- en: Docker daemon configuration; for example, running the daemon as a non-root user
    if possible and ensuring that containers are restricted in gaining new privileges.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 守护进程配置；例如，如果可能的话，作为非 root 用户运行守护进程，并确保容器在获取新权限时受到限制。
- en: Container images and build file configuration; for example, ensuring that a
    container only uses trusted base images.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器镜像和构建文件配置；例如，确保容器只使用可信的基础镜像。
- en: Container runtime configuration; for example, Linux kernel capabilities are
    restricted in containers and ensuring that privileged ports are not mapped in
    containers.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器运行时配置；例如，限制容器中的 Linux 内核功能，并确保容器中不会映射特权端口。
- en: CIS has some generic recommendations too, such as making sure that containers
    are hardened and that the Docker version is up to date.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: CIS 还有一些通用的建议，比如确保容器经过加固，并确保 Docker 版本是最新的。
- en: Tip
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: All CIS benchmarks can be downloaded for free at [https://www.cisecurity.org/](https://www.cisecurity.org/).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 CIS 基准测试都可以在 [https://www.cisecurity.org/](https://www.cisecurity.org/) 上免费下载。
- en: The benchmark not only tells you *what* controls should be in place but also
    gives recommendations on *how* to implement these, together with the rationale
    of *why* the controls should be there. Well, look at the example where CIS recommends
    having a separate partition for containers – control 1.1.1 in CIS v1.3.1 (2021)
    for Docker.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基准不仅告诉你*应该*实施哪些控制项，还提供了*如何*实施这些控制项的建议，以及*为什么*这些控制项必须存在的理由。看一下 CIS 推荐为容器设置独立分区的例子——这是
    CIS v1.3.1 (2021) 中的控制项 1.1.1。
- en: This starts with *profile applicability*. In control 1.1.1, this is set to Level
    1-Linux host. This means that the settings are only applicable to the Linux host,
    providing a clear security benefit without hampering the intended functionality
    of a component – in this case, the Linux host.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这从*配置文件适用性*开始。在控制项 1.1.1 中，这个设置为 Level 1-Linux 主机。这意味着这些设置仅适用于 Linux 主机，在不妨碍组件预期功能的情况下，提供明确的安全性好处——在这个例子中，是
    Linux 主机。
- en: Next, the control itself is described, as well as the rationale behind it. In
    this example, it describes how Docker uses `/var/lib/docker` as the default to
    store all its components. The directory is shared with the Linux host, which means
    it can easily be filled up completely, making both Docker and the host unusable.
    Hence, a separate partition is recommended. Lastly, CIS provides a *manual* on
    how to do this by creating a separate partition for the `/var/lib/docker` mount
    point.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，描述了控制项本身及其背后的理由。在这个例子中，它描述了 Docker 如何使用 `/var/lib/docker` 作为默认路径来存储所有组件。该目录与
    Linux 主机共享，这意味着它可能会很容易被完全填满，导致 Docker 和主机都无法使用。因此，推荐使用独立分区。最后，CIS 提供了一个*手动*指南，说明如何通过为
    `/var/lib/docker` 挂载点创建独立分区来实现这一点。
- en: Do you have to follow through on all these recommendations? No. CIS has made
    a clear distinction between critical and important controls. Obviously, the critical
    ones should be implemented in all cases, but you will need to assess every control,
    regardless of whether it makes sense to implement them in your DevOps practice.
    The golden rule here is that if you implement a control, you need to adhere to
    it consistently and report on it for compliance. Enterprises will be audited on
    rules and policies they have implemented. In the last section of this chapter,
    we will discuss reports and audits.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 是否必须按照这些建议执行？不一定。CIS 明确区分了关键控制和重要控制。显然，关键控制在所有情况下都应当执行，但你需要评估每个控制措施，无论它是否对你的
    DevOps 实践有意义。这里的黄金法则是，如果你实施了某个控制，你需要持续遵守它，并进行合规报告。企业将根据他们已实施的规则和政策接受审计。在本章的最后一节中，我们将讨论报告和审计。
- en: Creating compliance reports and guiding audits
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建合规性报告并指导审计
- en: 'DevOps is taking a huge flight in enterprises. Embedding security in DevOps
    is a logical next step. But how can enterprises be sure that their DevOps and
    DevSecOps are compliant with the frameworks that we''ve discussed throughout this
    chapter? The answer to that question is: by audit. IT systems are regularly audited,
    and so should DevOps practices. Having said that, auditing DevOps is still *unchartered
    territory*, although major accounting firms such as KPMG and Deloitte have issued
    white papers on the subject.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 在企业中正在迅速发展，将安全嵌入 DevOps 是一个合乎逻辑的下一步。但是，企业如何确保其 DevOps 和 DevSecOps 符合我们在本章讨论的框架呢？这个问题的答案是：通过审计。IT
    系统会定期审计，DevOps 实践也应如此。尽管如此，审计 DevOps 仍然是*未知领域*，尽管像 KPMG 和德勤这样的主要会计公司已就此发布了白皮书。
- en: 'DevOps audits should include at least the following topics:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 审计应至少涵盖以下主题：
- en: '**Evaluating the DevSecOps strategy**: Is the strategy clear? How is governance
    arranged? A DevOps strategy can be set per business unit or enterprise-wide. Both
    are fine, so long as the strategy is followed through consistently. The goals
    should be clear and adopted by every team. The same applies to the way of working
    across all disciplines in the team. Processes such as testing procedures and acceptance
    criteria must be transparent and adhered to without exceptions.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**评估 DevSecOps 策略**：策略是否清晰？治理是如何安排的？可以根据业务单元或全公司范围制定 DevOps 策略。两者都可以，只要策略始终如一地贯彻执行。目标应当清晰，并且被每个团队采纳。同样，所有团队的工作方式也应一致。测试流程和验收标准等流程必须透明并且严格遵守，没有例外。'
- en: '**Assessing the level of DevSecOps training**: Training is not just simply
    creating a presentation with a one-slider on **Scaled Agile Framework** (**SAFe**)
    and showing the DevOps cycles. DevOps is very much about culture, but sometimes,
    organizations simply get overwhelmed by a sudden new way of working. For example,
    implementing DevOps also means creating teams with the right skills. This needs
    to be organized and goes further than just releasing the **Spotify model** in
    an organization. Staff don''t organize themselves in guilds and squads just by
    telling them they must. An enterprise will need to train its staff in DevOps and
    make sure the teams have the right skill sets. Training also includes managing
    organizations.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**评估 DevSecOps 培训水平**：培训不仅仅是做一个幻灯片，展示**规模化敏捷框架**（**SAFe**）并说明 DevOps 循环。DevOps
    强调的是文化，但有时组织会因突然改变工作方式而感到不知所措。例如，实施 DevOps 还意味着创建具备正确技能的团队。这需要组织安排，并且远不止于在组织中推出**Spotify
    模型**。员工不会仅仅通过告诉他们必须这样做就自动在公会和小组中组织起来。企业需要对员工进行 DevOps 培训，并确保团队拥有所需的技能。培训还包括组织管理。'
- en: Note
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意
- en: The Spotify model has become immensely popular in organizations as an approach
    to scaling the agile way of working, which DevOps is part of. The Spotify model,
    named after the agile way of working that was implemented by the audio-streaming
    service, advocates autonomy in teams, organized into squads. Each squad is allowed
    to choose its own toolsets and agile framework, such as Scrum or Kanban.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Spotify 模型在组织中已成为一种非常流行的扩展敏捷工作方式的方案，而 DevOps 就是其中的一部分。Spotify 模型以音频流媒体服务实施的敏捷工作方式命名，提倡团队自主性，团队被组织成小组。每个小组可以选择自己的工具集和敏捷框架，如
    Scrum 或 Kanban。
- en: '**Reviewing the DevSecOps toolchain**: Is there an architecture that specifies
    the DevOps tools, and is it coherent? Does it serve the strategy and is it aligned
    with the IT strategy of the enterprise? For example, if the enterprise has an
    open source strategy, then the tools must adhere to that. Lastly, just like any
    tool used in the enterprise, it needs to be put under architecture change control.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审查 DevSecOps 工具链**：是否有架构来指定 DevOps 工具，并且它是否连贯？它是否服务于战略，并且与企业的 IT 战略一致？例如，如果企业有开源战略，那么工具必须遵循这一战略。最后，就像任何在企业中使用的工具一样，它需要受到架构变更控制。'
- en: '**Reviewing the DevSecOps processes**: DevOps doesn''t mean that processes
    are not valid anymore. Enterprises will still need to have the basic IT processes
    in place, such as incident management, problem management, and change management.
    These processes must be documented, including their escalation levels. Also, clear
    descriptions of the roles in these processes must be provided and followed through
    when implementing DevSecOps. Security management takes a special position here
    in that it must describe how security policies are defined, how they are implemented
    and managed in the enterprise, and how they are embedded in the DevOps process.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审查 DevSecOps 流程**：DevOps 并不意味着流程不再有效。企业仍然需要有基本的 IT 流程，如事件管理、问题管理和变更管理。这些流程必须有文档记录，包括它们的升级流程。同时，必须清晰地描述这些流程中的角色，并在实施
    DevSecOps 时遵循这些描述。安全管理在这里占据特殊位置，因为它必须描述安全政策是如何定义的，如何在企业中实施和管理的，以及如何在 DevOps 流程中嵌入安全措施。'
- en: With that, we've studied the basic principles of security in DevOps and the
    industry frameworks for security. Now, we need to merge – or rather integrate
    – security into our DevOps practice. That's the topic of [*Chapter 14*](B17492_14_ePub_RK.xhtml#_idTextAnchor168),
    *Integrating DevSecOps with DevOps*.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们已经学习了 DevOps 中安全的基本原则以及行业安全框架。现在，我们需要将安全整合，或者更确切地说，融入到我们的 DevOps 实践中。这就是
    [*第 14 章*](B17492_14_ePub_RK.xhtml#_idTextAnchor168)的主题，*将 DevSecOps 与 DevOps
    整合*。
- en: Summary
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed various security frameworks. These frameworks
    are guidelines for setting security controls for the IT environments of the enterprise.
    These controls apply to systems and applications, and also to the DevOps practice.
    From the moment developers pull code from a repository and start the build, up
    until deployment and production, IT environments, including CI/CD pipelines, need
    to adhere to security controls. There are a lot of different frameworks. Some
    of them are generically and broadly accepted by enterprises, such as NIST, CIS,
    and COBIT.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了各种安全框架。这些框架是为企业的 IT 环境设置安全控制的指南。这些控制适用于系统和应用程序，也适用于 DevOps 实践。从开发人员从代码库拉取代码并开始构建，到部署和生产，IT
    环境，包括 CI/CD 管道，都需要遵循安全控制。框架种类繁多，其中一些被企业广泛接受，如 NIST、CIS 和 COBIT。
- en: We also discussed the MITRE ATT&CK framework, which takes a different angle
    by comparing itself to other security control frameworks. MITRE ATT&CK lists tactics
    and techniques that hackers may use or have used to exploit vulnerabilities. Just
    like CIS, MITRE ATT&CK lists specifics for various platforms and technologies,
    including containers that are commonly used in CI/CD.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还讨论了 MITRE ATT&CK 框架，它通过与其他安全控制框架进行对比，采用了不同的角度。MITRE ATT&CK 列出了黑客可能使用或曾经使用过的战术和技术，来利用漏洞。就像
    CIS 一样，MITRE ATT&CK 列出了适用于不同平台和技术的具体内容，包括 CI/CD 中常用的容器。
- en: In the last section, we looked at auditing DevSecOps. It's recommended to review
    topics such as the consistent usage of tools, processes, and the skills of the
    DevOps teams.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一节中，我们讨论了 DevSecOps 的审计。建议复审诸如工具的持续使用、流程和 DevOps 团队的技能等话题。
- en: In the next chapter, we will integrate the security practice into DevOps and
    learn how enterprises can adopt a true DevSecOps strategy.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将把安全实践融入 DevOps，并学习企业如何采纳真正的 DevSecOps 战略。
- en: Questions
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What ISO standard is specifically for the cloud?
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪项 ISO 标准专门针对云？
- en: What two techniques does MITRE ATT&CK mention for containers under the execution
    tactic?
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MITRE ATT&CK 在执行战术下提到的两种容器技术是什么？
- en: 'True or false: CIS doesn''t mention the versioning of Docker as a control.'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 判断对错：CIS 没有提到 Docker 的版本控制作为一种控制措施。
- en: Further reading
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'KPMG, January 2020: [https://advisory.kpmg.us/articles/2020/role-of-internal-audit-devops.html](https://advisory.kpmg.us/articles/2020/role-of-internal-audit-devops.html)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KPMG，2020年1月：[https://advisory.kpmg.us/articles/2020/role-of-internal-audit-devops.html](https://advisory.kpmg.us/articles/2020/role-of-internal-audit-devops.html)
- en: 'Discover the Spotify model, a blogpost by Mark Cruth on Atlassian: [https://www.atlassian.com/agile/agile-at-scale/spotify#:~:text=It%20is%20now%20known%20as%20the%20Spotify%20model.,by%20focusing%20on%20autonomy%2C%20communication%2C%20accountability%2C%20and%20quality](https://www.atlassian.com/agile/agile-at-scale/spotify#:~:text=It%20is%20now%20known%20as%20the%20Spotify%20model.,by%20focusing%20on%20autonomy%2C%20communication%2C%20accountability%2C%20and%20quality)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现Spotify模型，这是Mark Cruth在Atlassian上的一篇博客文章：[https://www.atlassian.com/agile/agile-at-scale/spotify#:~:text=It%20is%20now%20known%20as%20the%20Spotify%20model.,by%20focusing%20on%20autonomy%2C%20communication%2C%20accountability%2C%20and%20quality](https://www.atlassian.com/agile/agile-at-scale/spotify#:~:text=It%20is%20now%20known%20as%20the%20Spotify%20model.,by%20focusing%20on%20autonomy%2C%20communication%2C%20accountability%2C%20and%20quality)
- en: 'Website of CIS: [https://www.cisecurity.org/](https://www.cisecurity.org/)'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CIS网站：[https://www.cisecurity.org/](https://www.cisecurity.org/)
- en: 'Website of ISACA, where the COBIT 5 framework can be found: [https://www.isaca.org/](https://www.isaca.org/)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ISACA网站，您可以在这里找到COBIT 5框架：[https://www.isaca.org/](https://www.isaca.org/)
- en: 'Website of NIST: [https://www.nist.gov/](https://www.nist.gov/)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NIST网站：[https://www.nist.gov/](https://www.nist.gov/)
- en: 'Website of ISO: [https://www.iso.org/standards.html](https://www.iso.org/standards.html)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ISO网站：[https://www.iso.org/standards.html](https://www.iso.org/standards.html)
