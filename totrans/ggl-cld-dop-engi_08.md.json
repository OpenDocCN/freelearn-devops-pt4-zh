["```\n#Build code using the Dockerfile\ndocker build -t <image-name> .\n#Tag the locally created image with the destination repository\ndocker tag <image-name> <host-name>/<project-id>/<image-name>\n#Push the tagged image to the choice of repository\ndocker push <host-name>/<project-id>/<image-name>\n# Note that hostname refers to the location where image is stored. 'gcr.io' refers that by default the images are stored in Cloud Storage; specifically US location\n#To deploy the application, pull the image from the repository as a pre-requisite\ndocker pull <host-name>/<project-id>/<image-name>\n#To deploy or run the application\ndocker run –name <container-name> <host-name>/<project-id>/<image-name>\n```", "```\n# Format to invoke the build manually using Dockerfile\ngcloud builds submit --tag <host-name>/<project-id>/<image-name> <app-code-directory-path>\n#Example (. Indicates current directory)\ngcloud builds submit –tag gcr.io/gcp-devops-2021/manual-dockerfile-image .\n```", "```\nsteps:\n- name: 'gcr.io/cloud-builders/docker'\n  args: ['build', '-t', 'gcr.io/$PROJECT_ID/builder-myimage', '.']\n- name: 'gcr.io/cloud-builders/docker'\n  args: ['push', 'gcr.io/$PROJECT_ID/builder-myimage']\n- name: 'gcr.io/cloud-builders/gcloud'\n```", "```\n# Format to invoke the build manually using the build configuration file\ngcloud builds submit --config <build-config-file> <source-code-path>\n#Example 1 (Source code is located in the current directory)\ngcloud builds submit --config cloudbuild.yaml .\n#Example 2 (Source code is located in a cloud storage bucket)\ngcloud builds submit --config cloudbuild.yaml gs://my-cloud-build-examples/cloud-build-manual.tar.gz\n```", "```\nsteps: \n- name: 'gcr.io/cloud-builders/docker'\n  args: ['build', '-t', 'gcr.io/myproject/myimage', '.'] \noptions:\n  logging: GCS_ONLY\nlogsBucket: 'gs://mylogsbucket'\n```", "```\nsteps: \n- name: 'gcr.io/kaniko-project/executor:latest'\n  args:\n  - --destination=gcr.io/$PROJECT_ID/image\n  - --cache=true\n  - --cache-ttl=XXh\n```", "```\ngcloud config set builds/use_kaniko True\n```", "```\nsteps: \n- name: gcr.io/cloud-builders/gsutil\n  args: ['cp','gs://mybucket/results.zip','previous_results.zip']\n  dir: 'my-cloud-build/examples'\n# operations that use previous_results.zip and produce new_results.zip\n- name: gcr.io/cloud-builders/gsutil\n  args: ['cp','new_results.zip','gs://mybucket/results.zip']\n  dir: 'my-cloud-build/examples'\n```", "```\ngcloud builds submit --config=cloudbuild.yaml \\\n  --machine-type=N1_HIGHCPU_8\n```", "```\n# To enable container registry\ngcloud services enable containerregistry.googleapis.com\n# To disable container registry\ngcloud services disable containerregistry.googleapis.com\n```", "```\n# Add image tag:\ngcr.io/PROJECT-ID/my-image:tag1\n# Add image digest:\ngcr.io/PROJECT-ID/my-image@sha256:4d11e24ba8a615cc85a535daa17 b47d3c0219f7eeb2b8208896704ad7f88ae2d\n```", "```\n    docker tag SOURCE_IMAGE HOSTNAME/PROJECT_ID/IMAGE\n    #Example\n    docker tag my-local-image gcr.io/gcpdevops-2021/my-gcr-image \n    ```", "```\n    docker push HOSTNAME/PROJECT-ID/IMAGE\n    #Example\n    docker push gcr.io/gcpdevops-2021/my-gcr-image\n    ```", "```\ngcloud container images list –repository=HOSTNAME/PROJECT-ID\n#Example\ngcloud container images list –repository=gcr.io/gcpdevops-2021\n```", "```\n# Pull based on Image Tag\ndocker pull HOSTNAME/PROJECT-ID/IMAGE:TAG\n# Pull based on Image-Digest\ndocker pull HOSTNAME/PROJECT-ID/IMAGE@IMAGE_DIGEST\n# Pull without Image Tag or Image-Digest\ndocker pull HOSTNAME/PROJECT-ID/IMAGE\n```", "```\n    # To configure authentication with IAM user credentials:\n    gcloud auth login \n    ```", "```\n    # To configure authentication with service account credentials:\n    gcloud auth activate-service-account <service-account-name> --key-file=<key-file-name>\n    ```", "```\n    gcloud auth configure-docker \n    ```", "```\n    docker-credential-gcr configure-docker\n    ```", "```\n    gcloud source repos clone my-cloud-build-trigger --project=$GOOGLE_CLOUD_PROJECT\n    #$GOOGLE_CLOUD_PROJECT is an environment variable that refers to the current project\n    ```", "```\n    cd my-cloud-build-trigger\n    ```", "```\n    git checkout -b feature/build-trigger\n    ```", "```\n    git add *\n    git commit -m \"Adding files!\"\n    git push --set-upstream origin feature/build-trigger\n    ```", "```\n    git checkout -b master\n    git branch --unset-upstream\n    ```", "```\n    git push –set-upstream origin git push -u master\n    ```", "```\napp = FastAPI()\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n```", "```\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.7\nCOPY ./app /app\nEXPOSE 8080\nCMD [\"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]\n```", "```\nsteps:\n- name: 'gcr.io/cloud-builders/docker'\n  args: ['build', '-t', 'gcr.io/$PROJECT_ID/cloud-build-trigger', '.']\n- name: 'gcr.io/cloud-builders/docker'\n  args: ['push', 'gcr.io/$PROJECT_ID/cloud-build-trigger']\n- name: 'gcr.io/cloud-builders/gcloud'\n  args: ['run', 'deploy', 'cbt-cloud-run', '--image', 'gcr.io/$PROJECT_ID/cloud-build-trigger', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated'] \n```"]