["```\n# Create a GKE cluster with default options\ngcloud container clusters create my-first-cli-cluster --zone us-central1-c\n```", "```\n# Connect to the cluster – 'my-first-cluster'\ngcloud container clusters get-credentials my-first-cluster --zone us-central1-c --project gcp-devops-2021\n# Find the list of pods for the deployment hello-world\nkubectl get pods\n# For a specific pod, create a port-forward option to access the application running inside the pod\nkubectl port-forward hello-world-6755d97c-dlq7m 10080:8080\n```", "```\n    # Connect to the cluster\n    gcloud container clusters get-credentials my-first-cluster --zone us-central1-c --project gcp-devops-2021\n    ```", "```\n    apiVersion: \"apps/v1\"\n    kind: \"Deployment\"\n    metadata:\n      name: \"hello-world-cli\"\n      namespace: \"default\"\n      labels:\n        app: \"hello-world-cli\"\n    spec:\n      replicas: 1\n      selector:\n        matchLabels:\n          app: \"hello-world-cli\"\n      template:\n        metadata:\n          labels:\n            app: \"hello-world-cli\"\n        spec:\n          containers:\n          - name: \"cloud-build-trigger-sha256-1\"\n            image: \"gcr.io/gcp-devops-2021/cloud-build-trigger:latest\"\n    ```", "```\n    kubectl apply -f hello-world-cli.yaml\n    ```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: hello-world-cli-service\n    spec:\n      type: LoadBalancer\n      selector:\n        app: hello-world-cli\n      ports:\n      - protocol: TCP \n        port: 80\n        targetPort: 8080\n    ```", "```\n    kubectl apply -f hello-world-cli-service.yaml\n    ```", "```\nnodeConfig: {\n        machineType: \"n2-highmem-32\",\n        oauthScopes: [\n            \"https://www.googleapis.com/auth/compute\",\n            \"https://www.googleapis.com/auth/logging.write\",\n            \"https://www.googleapis.com/auth/monitoring\"\n        ],\n        diskType: \"pd-ssd\"\n    }\n```", "```\ngcloud container node-pools create my-high-mem-pool --machine-type=n1-highmem-8 --cluster=my-first-cluster --num-nodes=2 –zone=us-central1-c\n```", "```\n# Resize node pool\ngcloud container clusters resize my-first-cluster --node-pool=my-high-mem-pool --num-nodes=1 –zone=us-central1-c\n# Upgrading node pool to specific cluster version\ngcloud container clusters upgrade my-first-cluster --cluster-version=\"1.17.17-gke.3000\" --node-pool=my-high-mem-cluster --zone=us-central1-c\n# Delete a node pool\ngcloud container node-pools delete my-high-mem-pool --cluster=my-first-cluster --zone=us-central1-c\n```", "```\n#Syntax\ngcloud containers clusters create CLUSTER_NAME \\\n  --zone COMPUTE_ZONE \\\n  --node-locations COMPUTE_ZONE, COMPUTE_ZONE, [..]\n#Single Zone Cluster\ngcloud containers clusters create single-zone-cluster \\\n  --zone us-central1-a\n#Multi Zonal Cluster\ngcloud containers clusters create single-zone-cluster \\\n  --zone us-central1-a \\\n  --node-locations us-central1-a,us-central1-b, us-central1-c\n```", "```\n#Syntax\ngcloud containers clusters create CLUSTER_NAME \\\n  --region COMPUTE_REGION \\\n  --node-locations COMPUTE_ZONE, COMPUTE_ZONE, [..]\n#Regional Cluster\ngcloud containers clusters create single-zone-cluster \\\n  --region us-central1 \\\n  --node-locations us-central1-a,us-central1-b, us-central1-c\n```", "```\n#Syntax\ngcloud containers clusters create CLUSTER_NAME \\\n  --zone COMPUTE_ZONE \\\n  --release-channel CHANNEL \\\n  ADDITIONAL_FLAGS\n# Release Channel Example\ngcloud containers clusters create my-cluster \\\n  --zone us-central1-a \\\n  --release-channel rapid\n```", "```\n#Syntax\ngcloud container clusters create cluster-name \\\n    --enable-kubernetes-alpha \\\n    [--zone compute-zone] \\\n    [--cluster-version version]\n#Alpha Cluster Example\ngcloud container clusters create my-cluster \\\n    --enable-kubernetes-alpha \\\n    --region us-central1\n```", "```\n# Create cluster with autoscaler limits\ngcloud container clusters create my-autoscaler-cluster \\\n  --zone us-central1-b \\\n  --num-nodes 3 --enable-autoscaling --min-nodes 1 --max-nodes 5\n# Update autoscaling profile to optimize-utilization\ngcloud beta container clusters update my-autoscaler-cluster \\\n  -autoscaling-profile optimize-utilization\n```", "```\napiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: nginx\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: my-nginx\n  minReplicas: 1\n  maxReplicas: 5\n  targetCPUUtilizationPercentage: 75\n```", "```\napiVersion: autoscaling.k8s.io/v1\nkind: VerticalPodAutoscaler\nmetadata:\n  name: my-vpa\nspec:\n  targetRef:\n    apiVersion: \"apps/v1\"\n    kind:       Deployment\n    name:       my-nginx\n  updatePolicy:\n    updateMode: \"On\"\n```", "```\n# To view recommendations of VPA is updateMode was set to Off\nkubectl get vpa my-vpa --output yaml\n# To disable VPA\ngcloud container clusters update my-cluster --no-enable-vertical-pod-autoscaling\n```", "```\n# Stdout container logs; pod has a single container\nkubectl logs <pod-name>\n# Stdout container logs; pod has multiple containers\nkubectl logs <pod-name> -c <container-name>\n# Stdout container logs – most recent 50 lines\nkubectl logs --tail=50 <pod-name>\n# Stdout most recent container logs in the last 1 hour\nkubectl logs --since=1h <pod-name>\n# Stream pod logs\nkubectl logs -f <pod-name>\n```"]