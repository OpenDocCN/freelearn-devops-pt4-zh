- en: Discovering Vagrant Boxes - Vagrant Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you will learn all about Vagrant boxes. You will learn what
    a box is, and how to manage one via the Vagrant commands and sub-commands that
    we covered in the previous chapter. We will also learn about the Vagrant Cloud,
    which is an online catalog of public and private Vagrant boxes available for you
    to search and install on your system – ready to use for your own Vagrant environment!
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will have a solid foundational knowledge of
    Vagrant boxes and the Vagrant Cloud. You will also learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: The anatomy of a Vagrant box
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to install Vagrant boxes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to remove Vagrant boxes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Box versioning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the Vagrant Cloud?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to create your own box (repackaged)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to upload your custom box to the Vagrant Cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enterprise solutions for Vagrant boxes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding Vagrant boxes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Vagrant box is a specific package format for containing Vagrant environments.
    A Vagrant box file uses the `.box` file extension. A Vagrant box can be used with
    any platform and system that Vagrant supports to create the same environment by
    following the steps in the box file.
  prefs: []
  type: TYPE_NORMAL
- en: Vagrant box file anatomy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A Vagrant box file is made up of three components: box file, box metadata,
    and box information. These components help package everything you need into one
    file. Various parts of these components are used by Vagrant when using and installing
    a new box to create the correct environment. Let''s dive into the three components
    and see what each one does.'
  prefs: []
  type: TYPE_NORMAL
- en: Box file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The box contains different information depending on the provider. It is provider-specific
    and could be in several different formats, such as ZIP, `tar.gz`, or TAR. This
    information is not used by Vagrant but is instead passed on to the provider.
  prefs: []
  type: TYPE_NORMAL
- en: Box metadata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The box catalog metadata is generally used with the Vagrant cloud platform.
    It contains information such as the box name, different versions, descriptions
    and different supported providers, and any URLs to specific box files. This metadata
    is usually stored as a JSON document. The filename would be `metadata.json`.
  prefs: []
  type: TYPE_NORMAL
- en: Box information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The box information is the extra details that you can add. These extra details
    are displayed when a user runs the `vagrant box list --box-info` command. You
    can set information for the author name/company and a URL. This file is a JSON
    document and the filename would be `info.json`.
  prefs: []
  type: TYPE_NORMAL
- en: How to install a Vagrant box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, you will learn how to install a Vagrant box. There are a number
    of ways that Vagrant boxes can be installed:'
  prefs: []
  type: TYPE_NORMAL
- en: A URL that points directly to the box file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A shorthand/alias for a public box name, such as `debian/jessie64`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A file path or URL to a box in a specific catalog
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Often, the simplest option is to use shorthand as it does not require you to
    know the full box URL or catalog URL.
  prefs: []
  type: TYPE_NORMAL
- en: 'When a Vagrant box supports multiple providers, you will be given the option
    to choose which one you wish to install:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00012.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You can also use the `--provider` flag to specify which provider version of
    the box you wish to install. Vagrant offers an easy-to-use option, such as the
    preceding screenshot, or provides a much more comprehensive utility when using
    the command line.
  prefs: []
  type: TYPE_NORMAL
- en: Direct URL to box file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using this option requires you to know the full URL to a box file and you must
    use the `--name` flag so Vagrant has some reference to the box. This reference
    helps with updating and versioning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the command: `vagrant box add --name "mybox" http://www.example.com/boxname.box`.'
  prefs: []
  type: TYPE_NORMAL
- en: This command would install the `boxname.box` box, giving it the name `mybox`,
    and downloading it from the `www.example.com` domain.
  prefs: []
  type: TYPE_NORMAL
- en: Shorthand/alias to box file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This method is fairly simple and straightforward if you know theshorthand/alias
    name for the box.
  prefs: []
  type: TYPE_NORMAL
- en: Here is an example of the command: `vagrant box add debian/jessie64`.
  prefs: []
  type: TYPE_NORMAL
- en: This command will install the 64-bit *Jessie* version of the Debian OS. You
    can often find the shorthand/alias box name by searching online via search engines
    or using the Vagrant Cloud platform.
  prefs: []
  type: TYPE_NORMAL
- en: A file path or URL to a box in a specific catalog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This method is similar to the first method mentioned in the *Direct URL to box
    file* section, where you can use a URL or file path to download and install a
    box file directly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of the command: `vagrant box add https://app.vagrantup.com/ubuntu/boxes/trusty64`.'
  prefs: []
  type: TYPE_NORMAL
- en: This command will install the 64-bit *Trusty* version of Ubuntu. You do not
    need to use the `--name` flag for this method as Vagrant will get this information
    from the box metadata and box information files.
  prefs: []
  type: TYPE_NORMAL
- en: How to delete a Vagrant box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At some point, you may need to delete a Vagrant box from your system. There
    may be a few reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: To free up system space
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To remove a corrupt version
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To remove an old version that is no longer required
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Whatever your reason, in this section, you will learn how to delete Vagrant
    boxes. Before deleting a box, it's worth getting the correct name/format in case
    you accidentally delete the wrong box!
  prefs: []
  type: TYPE_NORMAL
- en: To list the available boxes on your system, run the `vagrant box list -i` command,
    which will return the installed boxes on your system, their name, their provider,
    and the latest version. Using the `-i` flag will supply an additional description
    that may help you choose the correct box.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting a specific version of a box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is possible to delete a specific version of a Vagrant box without deleting
    the box entirely from your system. You may do this to free up space from older
    box versions that you no longer use on your system.
  prefs: []
  type: TYPE_NORMAL
- en: You can run the `vagrant box prune --dry-run` command to view a list of outdated
    box version on your system. The output of this command will show you boxes that
    will be kept (if you choose to run the `prune` command) and any boxes that will
    be removed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the example output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00013.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: If you wish to remove all outdated boxes from your system, run the `vagrant
    box prune` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'To delete a specific box version, you can run the `vagrant box remove [BOXNAME]
    --box-version [BOXVERSION]` command, where the first parameter is the box name
    and the second is the specific version. Here is the example output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00014.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Deleting all versions of a box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To remove all versions of a Vagrant box, you can run the `vagrant box remove
    [BOXNAME]` command, where the first parameter is the box name. When running this
    command, your terminal will ask for confirmation before deleting the box.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the example output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00015.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: If, for any reason, you just want to delete the box without confirmation, you
    can run the `vagrant box remove [BOXNAME] --force` command, which uses the `--force`
    flag.
  prefs: []
  type: TYPE_NORMAL
- en: Box versioning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vagrant boxes can have multiple versions that can be installed on your system.
    In the previous section, we discussed how to `prune` outdated box versions and
    how to delete a box by a specific version.
  prefs: []
  type: TYPE_NORMAL
- en: Vagrant Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will focus on the Vagrant Cloud. We will learn what it is,
    what it is used for, how you can use it, and how you can search the Vagrant Cloud
    for Vagrant boxes to install on your system.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Vagrant Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Vagrant Cloud is HashiCorp's cloud platform that allows you to search, upload,
    and download Vagrant boxes. It allows you to create accounts and offers three
    different account tiers, which are a mix of free and paid.
  prefs: []
  type: TYPE_NORMAL
- en: Vagrant Cloud website
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can access the Vagrant Cloud website by visiting [https://app.vagrantup.com](https://app.vagrantup.com),
    although it may redirect you to [https://app.vagrantup.com/boxes/search](https://app.vagrantup.com/boxes/search).
  prefs: []
  type: TYPE_NORMAL
- en: 'There are currently three different pricing tiers, which offer different features
    depending on what you need. Here are the three tiers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Free**: This option provides unlimited public boxes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Personal**: This option provides unlimited public boxes and an option of
    $5 per month per private box'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Organization**: This options provides unlimited public boxes, an option of
    $25 per month per private box, and the ability to share private boxes with teams'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To choose the right tier, it really depends on your use case and what you wish
    to use the Vagrant Cloud for. You can start with the free tier and always upgrade
    if you need to.
  prefs: []
  type: TYPE_NORMAL
- en: Installing a Vagrant box found on the Vagrant Cloud – Part 1, Search
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's use the search feature to find a box that we can install on our system.
    The search feature is fairly simple, but does offer a few filters. You can access
    the search box at [https://app.vagrantup.com/boxes/search](https://app.vagrantup.com/boxes/search).
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see a section similar to the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00016.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'There are three different options available for searching the Vagrant Cloud:'
  prefs: []
  type: TYPE_NORMAL
- en: The main text input area in which you can type pretty much anything – the box
    name, operating system, architecture, and included software.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can filter by Provider, such as virtualbox, vmare, and docker. If you have
    no preference, you can choose the any option.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can also sort the results by Downloads (number of total downloads), Recently
    Created, and Recently Updated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s search for a `Laravel` (this is a PHP framework) box that supports the
    VirtualBox provider and let''s sort it by Downloads:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00017.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s click on the first result to get more information about that box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00018.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: There is a wealth of information found on this page, including the box version
    history. The latest box version is listed by most recent so you should always
    see the latest one at the top.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first section, titled *How to use this box with Vagrant*, gives a two basic
    examples about installing and using this box on your system. The default tab shown
    is the Vagrantfile one, which shows you three lines that can be added to your
    Vagrantfile. The second tab, titled New, shows you how to install and run the
    box using commands in your terminal, you can see that option here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00019.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Let's look at version 6.0.0, which is the *currently-released version*. You
    can see when this version was created (in our case, it was 20 days ago) and there
    is a GitHub URL available where you can view the release information for that
    specific version.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, you can also view which providers this version supports and
    the file size for this box. In our case, we can see that three providers are supported
    for the 6.0.0 version: hyperv, vmware_desktop, and virtualbox. We can see that
    the file size for hyperv is 1.26 GB, and for vmare_desktop and virtualbox the
    file size is 1.38 GB.'
  prefs: []
  type: TYPE_NORMAL
- en: Installing a Vagrant box found on the Vagrant Cloud – Part 2, Install
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have found the Vagrant box we want, let's install it and use it
    on our system. We will use the `init` command to create a new **Vagrantfile**
    and install the box.
  prefs: []
  type: TYPE_NORMAL
- en: 'First create a new empty directory, move into that directory, and run the `vagrant
    init laravel/homestead` command, as described on the Vagrant Cloud website:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00020.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You should now see a new Vagrantfile in your current directory, run the `ls`
    command to see:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00021.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s look inside the Vagrantfile. I''ve opened the Vagrantfile using the
    Atom text editor. Let''s focus on the first few lines (not the comments):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00022.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You can see on line number 15 that the `config.vm.box` key has been set a value
    of `laravel/homestead`. This is what the `init` command does, it creates/initializes
    a new Vagrantfile and sets a specified value depending on the parameter of the
    command.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can now start up the Vagrant box, which will install the `laravel/homestead` box.
    Run the `vagrant up` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00023.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: If you do not have the box installed on your system, it will first have to download
    the `.box` file. The file is approximately 1.38 GB (according to the Vagrant Cloud
    website for the current version we are trying to download, which is 6.0.0); it
    may take some time to download depending on your internet connection/speed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once installed, you should see a green success message and the box will start
    to be imported:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00024.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once imported, Vagrant will continue the box initialization, which will configure
    networking, SSH, and storage mounting. You can start experimenting with the box
    by connecting via SSH by running the `vagrant ssh` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00025.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s run a simple command against the Vagrant box to make sure everything
    is working. Once you''ve run the `ssh` command, run the `php -v` command, which
    will output the PHP version installed on the system. PHP should be installed as
    that is one of the requirements of the Laravel framework. You should see an output
    similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00026.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We can see that PHP is installed and the version is `7.2.4-1`. If you wish
    to exit out of the Vagrant box, simply run the `exit` command. You can view `vagrant
    status` to view the status of the Vagrant box, the value should be `virtualbox
    (running)`. You can stop the command by running the `vagrant halt` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00027.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can now check the status again by running the `vagrant status` command
    again:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00028.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You can see that the status has changed to `poweroff (virtualbox)`.
  prefs: []
  type: TYPE_NORMAL
- en: Uploading a Vagrant box to the Vagrant cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will learn how to create your own Vagrant box and how to
    upload that box to the Vagrant cloud. You will learn how to package up a base
    box to work with the VirtualBox provider.
  prefs: []
  type: TYPE_NORMAL
- en: Before we continue, please create an account with the Vagrant Cloud platform.
    This can be done at [https://app.vagrantup.com/account/new](https://app.vagrantup.com/account/new)
    or by visiting the Vagrant Cloud website and clicking on the Create an Account link
    in the menu.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Vagrant box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we can upload anything to the Vagrant Cloud platform, we need to create
    a box. Our Vagrant box will be a repackaged version of the `ubuntu/xenial64` base
    box that can be found on the Vagrant Cloud platform. To keep it simple, we will
    simply be repackaging this box and uploading it using a different name.
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, you will need to make sure you have the `ubuntu/xenial64` box
    installed on your system. You can check this by running the `vagrant box list`
    command. You can see that I have it installed on my system as it appears in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00029.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: If you do not have it installed, run the `vagrant box add ubuntu/xenial64` command
    to install the box on your system.
  prefs: []
  type: TYPE_NORMAL
- en: Let's run the box to make sure it's working correctly. Run the `vagrant init
    ubuntu/xenial64` command to generate a basic Vagrantfile and then run the `vagrant
    up` command to get the box up and running.
  prefs: []
  type: TYPE_NORMAL
- en: Once up and running, you should be able to `vagrant ssh` into the machine. Everything
    should be working, let's now `exit` out of the box and run the `vagrant halt`
    command to stop the machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now it''s time to set up the Vagrant box in the Vagrant Cloud dashboard. Log
    into your account and click on the Dashboard button, you should see another button
    titled New Vagrant Box. Click on that button and you should see the following
    screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00030.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The name is split into two parts: your username and the box name separated
    by a slash. My box will be accessible via `abraunton/alextest`, but it would be
    better to use a more descriptive name. You cannot use private mode unless you
    have a paid account. I would recommend adding in a Short description when possible.
    Click on the Create box button to continue when you are ready.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We now need to add a version in for this box. Let''s start with `0.0.1` as
    this is the very first iteration of our box. You can also add in a Description
    for this specific version:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00031.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the Create version button when you are ready. We now need to add a
    provider to our Vagrant box. You can do this by clicking the Add a provider button,
    within your new version:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00032.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You will now need to choose which provider this box file supports. We will
    be sticking with VirtualBox in this example and selecting the Upload to Vagrant
    Cloud option as we wish to directly upload the box file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00033.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Before we can continue, we must package the box into a file. You can do this
    by running the `vagrant package --output alextest.box` command in the same directory
    as the box you wish to package:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00034.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'This may take a few minutes, depending on the size of your machine. Once completed,
    head back to the Vagrant Cloud page and click the Continue to upload button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00035.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Choose the file (it must be a `.box` file) and the upload should start automatically.
    This may take some time, depending on your internet speed. When complete, the
    status should change to Upload Complete.
  prefs: []
  type: TYPE_NORMAL
- en: 'Congratulations! You have successfully created and uploaded a Vagrant box onto
    the Vagrant Cloud. You can see this by clicking on the Dashboard menu; this will
    now list any boxes you have added:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00036.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can see that under the My Vagrant Boxes section, my `abraunton/alextest`
    box has appeared. It has the description that we added in and it also states that
    there are No released versions. This means that the box is unavailable for download
    but we can change that. Click into the box and you should see the following message:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00037.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Scroll down and you should see the 0.0.1 version of the box that we have uploaded.
    Click on the Release... button to start the release process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00038.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You will now see a confirmation screen and will be required to click on the
    Release version button to complete the process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00039.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You should now see a green Successfully released message. Congratulations!
    You have publicly released your first Vagrant box onto the Vagrant Cloud:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00040.gif)'
  prefs: []
  type: TYPE_IMG
- en: 'Now for the real test; let''s check to make sure our box is available and that
    we can install and run it on our system. Run the `vagrant init abraunton/alextest
    --box-version 0.0.1` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00041.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'This will generate a Vagrantfile telling Vagrant to use the abraunton/alextest
    box and the specific version of 0.0.1\. Next, run the `vagrant up` command. This
    will install our box from the Vagrant Cloud and create our environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00042.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'If your box is available and has a release, you should be able to successfully
    download it. If all goes well, you should see this green message in your terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00043.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The Vagrant box should now be up and running, let''s `vagrant ssh` into the
    box and see what we get. Upon SSHing in, you should see the Ubuntu welcome message.
    That''s correct, as we repackaged an Ubuntu box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00044.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Congratulations! You have successfully installed and run your Vagrant box from
    the Vagrant cloud. You may now stop the machine, remove the box, or experiment
    with it. Have fun!
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise solutions for Vagrant boxes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are looking for a more enterprise solution for hosting and managing your
    boxes, there are services available to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'These services offer products and features such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Box-hosting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Box versioning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Private box access and security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Local repositories for offline box access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced/smart search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An example of this type of service is **Artifactory**, which is developed by
    JFrog. Artifactory is a binary artifact-management tool. Artifactory allows you
    to host, manage, and version Vagrant boxes in a secure manner. Their focus on
    security often appeals to enterprise customers who may need to host sensitive
    data.
  prefs: []
  type: TYPE_NORMAL
- en: Artifactory offers a type of onsite hosting by using local repositories. It
    still allows you to share access between employees and teams within your organization.
    These repositories can be cloned to other Artifactory services if access needs
    to be shared outside local networks.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on your requirements and company rules, a solution such as this may
    be worth looking into. The Vagrant Cloud is an excellent service to consider as
    well.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered many aspects of Vagrant boxes. We learned what a
    Vagrant box is, what forms a box, how to install a box, how to delete a box, box
    versioning, and we created our own (repackaged) box and uploaded it to the Vagrant
    Cloud. We then installed that box from the Vagrant Cloud and tested it on our
    system.
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 5](part0158.html#4MLOS0-d86fec2f29de42f086efd11bc5538d9c), *Configuring
    Vagrant Using a Vagrantfile*, we will focus on the Vagrantfile. We have briefly
    mentioned this file but we have not used it to its full potential yet. The Vagrantfile
    is used to configure Vagrant and offers a very powerful but easy-to-use syntax.
    You will learn how to create a Vagrantfile, how to validate one, and the syntax
    it uses.
  prefs: []
  type: TYPE_NORMAL
