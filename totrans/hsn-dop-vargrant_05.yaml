- en: Configuring Vagrant Using a Vagrantfile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will focus on configuring Vagrant by using Vagrantfiles.
    We will focus on the key aspects of a Vagrantfile, such as its structure and syntax.
    At the end of this section, we will have covered the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Vagrantfiles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a Vagrantfile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vagrantfile structure and syntax
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Troubleshooting a Vagrantfile
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding Vagrantfiles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Vagrantfile is the main way of configuring a Vagrant environment. This file
    has no extension as such; it is simply found on your system as `Vagrantfile` ,
    not `.Vagrantfile` or `vagrantfile.Vagrantfile`.
  prefs: []
  type: TYPE_NORMAL
- en: Using a Vagrantfile allows you to manage your Vagrant environment dependencies
    and settings. It is a best practice to have one Vagrantfile per Vagrant project,
    and to include the Vagrantfile in your source control.
  prefs: []
  type: TYPE_NORMAL
- en: One of the main benefits of using a Vagrantfile is the ability to share that
    file with any other developer that has Vagrant installed. They will be able to
    simply run the `vagrant up` command to pull in any dependencies, such as boxes,
    and to set up any configuration to get the same Vagrant environment up and running
    as you.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Vagrantfile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we create our own Vagrantfile, let''s first create and move into a new
    directory. In this example, we will create a new directory called `vagrantfiletest`
    to keep things simple! Run the following commands in the given order:'
  prefs: []
  type: TYPE_NORMAL
- en: '`mkdir vagrantfiletest`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`cd vagrantfiletest`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`vagrant init`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'By using the `vagrant init` command, we have now initialized a new Vagrantfile
    in our current `vagrantfiletest` directory, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00045.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'The default Vagrantfile has a basic structure to get you started. If you wish
    to create a very minimal shell then you can run either the `vagrant init --minimal`
    or the `vagrant init -m` command, either of which will generate a very basic Vagrantfile
    with no comments or additional settings, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Now let's move on to the next section and learn more about a Vagrantfile's syntax.
  prefs: []
  type: TYPE_NORMAL
- en: Vagrantfile syntax
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Vagrantfile uses the Ruby language syntax but no knowledge of Ruby is required.
    It is a simple, expressive, and easy-to-understand language when using the Vagrantfile.
    In most cases you will simply be setting a variable and a value, such as `config.vm.box
    = "ubuntu/trusty64"` , which sets the box to `ubuntu/trusty64`, the 64-bit version
    of Ubuntu 14.04.
  prefs: []
  type: TYPE_NORMAL
- en: A Vagrantfile configuration is contained within the `configure` block. The first
    line is `Vagrant.configure("2") do |config|` and the last line is `end`. Within
    this block we can define all sorts of values, such as the Vagrant box, networking,
    filesystems, provisioning, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Vagrantfile options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will cover the various sections that are available to configure
    in a Vagrantfile. You will learn how to configure the virtual machine directly,
    configure the provider (VirtualBox), and configure how Vagrant will connect to
    your machine via SSH or any other communicator.
  prefs: []
  type: TYPE_NORMAL
- en: Vagrant machine configuration (config.vm)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `config.vm` namespace, we will look at configuring certain parts
    of the Vagrant machine, such as box information and miscellaneous settings including
    synced folders, provision, and providers. The configurable elements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`config.vm.boot_timeout` is used to specify (in seconds) how long Vagrant will
    wait for the machine to start up and become available for use. The default time
    is 300 seconds.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box` is used to set a specific box for the machine. You can reference
    a box already installed on your system or a shorthand syntax box name from the
    Vagrant cloud, such as `ubuntu/trusty64`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_check_update` is used by Vagrant to check whether the box you
    have selected or the box being used by the current machine is up to date. The
    default setting is `true` but only certain box types can be checked for an update –
    mainly Vagrant cloud boxes. If an update is found during the Vagrant startup process,
    a yellow message will be displayed on the screen to the user.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_download_checksum` is used to compare the checksum of a box
    and a given checksum; if they do not match then it will throw an error. Vagrant
    will only perform this check when a box needs to be downloaded. This value requires
    the `config.vm.box_download_checksum_type` value to be set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_download_checksum_type` is the checksum hash type used when
    comparing checksum values used by the `config.vm.box_download_checksum` value.
    There are a few supported options here, and they are `md5`, `sha1`, and `sha256`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_download_client_cert` is used to supply a path to a client certificate
    that is used when downloading a box. There is no default value for this setting.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_download_ca_cert` is used to supply the path to a CA certificate
    bundle that is used when downloading a box directly. The default value for this
    uses the Mozilla CA certificate bundle.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_download_ca_path` is used to supply a path to a directory containing
    CA certificates when downloading a box directly. Similarly, the default value
    used is the Mozilla CA certificate bundle.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_download_insecure` is used to validate SSL certificates from
    the server. If `true` is set then no validation will be done. If the box URL is
    HTTPS then the SSL certificates will be verified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_download_location_trusted` is used to trust all redirects when
    the value is set to `true`. The default process is for Vagrant to trust the initial
    request, using any specified credentials.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_url` is used to set a specific box URL. This is similar to `config.vm.box`
    but it does not support the shorthand Vagrant cloud syntax for box names; if `config.vm.box`
    has been set in the Vagrantfile, you do not need to specify a value here. The
    value specified can be a single URL or multiple URLs that will be tried in order.
    If you have already configured other settings such as certificates, they will
    be applied to all URLs supplied. The Vagrantfile does also support local files
    using the `file://` abbreviation and scheme.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.box_version` is used to specify what box version to use. This value
    supports constraints separated by commas such as (greater than and equal to) >=
    0.2 and < 2.0 (less than), where Vagrant would look for a box version that''s
    between 0.2 and less then 2.0 . Vagrant will try and get the latest box version
    within these constraints. The default value used is >= 0, which signifies the
    latest version available.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.communicator` is used to set the communicator type that connects
    to the guest box. The default value is `ssh` but it is recommended that Windows
    guests use `winrm`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.graceful_halt_timeout` is used to set the time (in seconds) that
    Vagrant will wait for the machine to halt. This applies when the `vagrant halt`
    command is used, and the default value is 60 seconds.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.guest` is used to set the guest OS that will be running within the
    machine. Vagrant will attempt to auto-detect the correct OS used. This information
    is required to perform certain OS-specific values such as network configuration.
    The default value for this is `:linux`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.hostname` is used to set a hostname for a machine. The value should
    be provided as a string, for example `elite`. The default value is `nil`, which
    means that Vagrant will not manage the hostname. This hostname (if it''s a provider)
    will be set during boot.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.network` is used to set the machine''s network options. There are
    quite a few options available for this setting, and they will be covered in a
    later chapter. Some of the main options include `forwarded_port`, `private_network`,
    and `public_network`.  Each option has various sub-values or sub-options that
    you can set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.post_up_message` is used to display a message to the user after
    the `vagrant up` command is run. This is similar to a message of the day found
    on servers or other pieces of software that you can log into.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.provider` is a configuration block used to set provider-specific
    values. Each provider supports different values but you can have multiple configuration
    blocks that target different providers. As we are using VirtualBox as our provider,
    we can set specific values such as `memory`, which sets the RAM, `cpus`, which
    sets the CPU core count, and `gui`, which when set to `true` will actually open
    the Vagrant machine in a GUI so you can interact with it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.provision` is used to specify a provisioner that can install and
    configure software during the creation process. This is quite an advanced topic
    and something we will cover in later chapters. Certain providers supported are
    Chef, Ansible, Puppet, and a standard script.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.synced_folder` is used to configure synced folders between your
    host machine and the guest machine. This will allow you to create or edit a file
    on your system (in the synced folder) and have that change made and become visible
    in the Vagrant machine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vm.usable_port_range` is used to specify a port range that Vagrant
    can use. The default value or port range is `220..2250`. Vagrant will use these
    values for any port collisions that happen.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vagrant SSH configuration (config.ssh)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `config.ssh` namespace we will look at configuring Vagrant so it
    connects to a guest machine using SSH. Here, we will look at certain values such
    as SSH username, password, ports, and keys, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`config.ssh.username` is used to set the username that Vagrant will use when
    trying to connect via SSH. The default username is `vagrant`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.password` is used to set the password that Vagrant will use when
    trying to connect via SSH.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.host` is used to set the hostname or IP address used when SSHing
    in. This value is often left blank by default as the provider can auto-detect
    the correct value.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.port` is used to set the port used for SSHing into. The default
    value used is 22.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.guest_port` is used to set the port number that SSH will run on
    on the guest machine. Vagrant can use this along with `config.ssh.port` to intelligently
    connect to the correct SSH port. This is often used if there is a forwarded port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.private_key_path` is used to set the path to a private key that
    you want to use when connecting to a machine. The default value is an insecure
    key that Vagrant and many public boxes use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.keys_only` is used when you wish to use Vagrant-provided SSH keys.
    The default setting is `true`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.verify_host_key` is used to perform host-key validation. The default
    value is `false`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.forward_agent` is used to enable agent forwarding over SSH. The
    default value is `false`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.forward_x11` is used to enable X11 forwarding over SSH. The default
    value is `false`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.forward_env` is used to supply an array of host environment variables
    to the guest machine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.insert_key` is used when `true` (as per the default setting) to
    insert a new keypair to use with SSH, replacing the insecure, default Vagrant
    keypair. When set to `true`, this value is also used with the `config.ssh.password`
    option.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.proxy_command` is used to proxy a command-line command through
    SSH via `stdin`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.pty` is not recommended unless you really need to use it. This
    option, when set to `true`, will use `pty` for provisioning. `pty` can break certain
    parts of Vagrant so be wary when using it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.keep_alive` will send keep alive packets via SSH every 5 seconds
    to keep the connection alive when the value is set to `true`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.shell` is used to set the shell you wish to use when running SSH
    commands from Vagrant.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.export_command_template` is the template used when generating environment
    variables in the active session.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.sudo_command` is used to set the command when running a `sudo`
    command. The default value is `sudo -E -H %c`, where `%c` is replaced by the command
    to run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.compression` is used to send a compression setting when connecting
    via SSH if the value is set to `true`. To disable this, set the value to `false`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.dsa_authentication` is used to send the DSA authentication setting
    when connecting via SSH if the value is set to `true`. To disable this, set the
    value to `false`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.ssh.extra_args` is used to pass additional commands into the SSH executable.
    It supports a single value or an array of values. This can be sent to enable more
    advanced actions with SSH, such as reverse tunneling.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vagrant settings (config.vagrant)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `config.vagrant` namespace we will look at configuring Vagrant specifically.
    There are not many options available within this namespace compared to the others
    we have already looked at. The commands for the `config.vagrant` namespace are
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`config.vagrant.host` is used to set the host machine that is running Vagrant.
    The default value is `:detect`, which allows Vagrant to intelligently auto-detect
    the host. Certain features Vagrant offers are host-specific and this value is
    only recommended to be changed if auto-detection fails.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`config.vagrant.sensitive` is used to supply a list or array of items that
    will not be displayed in Vagrant''s output or logged output. These values are
    often passwords or keys.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other Vagrantfile settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are two other namespace settings that you can configure in the Vagrantfile.
    We will not be focusing on these in detail in this book, but the following section
    will offer an overview.
  prefs: []
  type: TYPE_NORMAL
- en: WinRM settings (config.winrm)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `config.winrm` namespace is used to configure Vagrant when using a Windows
    guest machine. To use these settings, you must set your `config.vm.communicator` setting
    to `winrm`.
  prefs: []
  type: TYPE_NORMAL
- en: There are around 12 different configuration options available, which include
    `config.winrm.username`, `config.winrm.password`, `config.winrm.port`, and `config.winrm.transport`.
    Using the `config.winrm` namespace gives you much more control over how Vagrant
    behaves when using a Windows guest machine.
  prefs: []
  type: TYPE_NORMAL
- en: WinSSH settings (config.ssh and config.winssh)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This uses the `config.ssh` namespace, similar to namespaces we discussed earlier.
    This uses the WinSSH software, which is used for the Windows-native port of OpenSSH.
    Vagrant's official documentation states that WinSSH is in the *pre-release* stage
    and is therefore not yet production-ready.
  prefs: []
  type: TYPE_NORMAL
- en: There are around 17 different options available, which are a mixture of the
    `config.ssh` and `config.winssh` namespace, these include: `config.ssh.username`, `config.ssh.password`, `config.winssh.forward_agent`, `config.winssh.upload_directory` ,
    and `config.winssh.export_command_template`.
  prefs: []
  type: TYPE_NORMAL
- en: Troubleshooting a Vagrantfile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Vagrantfile can be quite a complex collection of configuration options. There
    are multiple options, such as basic string values, configuration blocks, array
    values, and much more. It can be quite common to write out a Vagrantfile, go to
    run `vagrant up` or a similar command, and be faced with an error.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of a Vagrant error after running the `vagrant up` command is as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00046.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s dissect the error in the preceding screenshot. The first clue is a reference
    to the line number `Vagrantfile:24`; in other words, line 24 of the Vagrantfile.
    This error also gives us the type of error: `syntax error, unexpected tIDENTIFIER,
    expecting keyword_end # accessing "localhost:8080" will access port on`. This
    could mean that a config block or loop has no end value set, or we have tried
    to set an incomplete variable.'
  prefs: []
  type: TYPE_NORMAL
- en: 'An easy way to check a Vagrantfile after making any changes and trying to run
    or provision a Vagrant machine is by using the `vagrant validate` command. In
    the following screenshot, you can see that we still get the same error and output
    from Vagrant even with the `vagrant validate` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00047.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s open up the Vagrantfile and take a closer look at line 24, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00048.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Looking at line 24, we can see the value # `accessing "localhost:8080" will
    access port 80 on` mentioned in the error. Now, although this is a comment, we
    can see that the `localhost:8080` value is exposed because it is wrapped in double
    quotes (`"`). If we trace back towards the beginning of the file, we should come
    across line 15, which looks a little odd. Here, we can see the value is `config.vm.box
    = "base` but there is no closing double quote.'
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let''s add a double quote to the end of this line, save the file, and run
    the `vagrant validate` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00049.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Great! As you can see in the preceding screenshot, we have successfully found
    the error and fixed it.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at how to configure Vagrant using the Vagrantfile.
    We also looked at various parts of the Vagrantfile, such as how to create one,
    its supported commands, options, and values, its syntax and layout, and how to
    troubleshoot it when there is an issue. In the coming chapters, we will be using
    the Vagrantfile more to focus on specific areas of Vagrant, such as provisioning.
  prefs: []
  type: TYPE_NORMAL
- en: 'In [Chapter 6](part0171.html#532G60-d86fec2f29de42f086efd11bc5538d9c), *Networking
    in Vagrant*, we will look at networking in Vagrant. In it, we will learn about
    the three main types of networking configurations: port-forwarding, public networks,
    and private networks.'
  prefs: []
  type: TYPE_NORMAL
