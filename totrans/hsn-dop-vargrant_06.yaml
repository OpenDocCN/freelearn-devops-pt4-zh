- en: Networking in Vagrant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be focusing on networking in Vagrant. By the end of
    this chapter, you will have a good understanding of the different networking options
    available in Vagrant. You will be able to configure networking in Vagrant using
    simple methods, such as port-forwarding, or set custom IP addresses using public
    and private networking.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the three networking types present in Vagrant that you will learn
    about in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Port-forwarding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Private networking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Public networking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Port-forwarding
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A powerful yet simple way to configure networking in Vagrant is to use port-forwarding.
    This does not require any advanced knowledge or configuration on your part.
  prefs: []
  type: TYPE_NORMAL
- en: Port-forwarding is the action of linking a port on your host machine to a port
    on the guest machine. It is as simple as that, but can be really powerful as it
    allows you to get up and running quickly.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the steps to configure port-forwarding:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open up our Vagrantfile. We''ll start with a very basic Vagrantfile by using
    the `ubuntu/xenial64` box and a basic shell provision script to install the nginx
    web server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00050.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you''ve saved the Vagrantfile, run the `vagrant up` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00051.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the box has completed installing nginx and is up and running, open your
    web browser and try navigating to `localhost:8080`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00052.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: nginx should be available (possibly not on `port 8080`), but as you can see,
    we cannot access it. This is because we have not yet set up port-forwarding. If
    we access localhost from inside the Vagrant machine, we should be able to access
    it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the `vagrant ssh` command. Once in the Vagrant machine, run the `curl localhost`
    command. This should return the nginx default page in HTML code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00053.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Let's set up port forwarding so we can access this page from the host machine
    (outside Vagrant).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Exit out of the machine and open up your Vagrantfile again. In the following
    code (you can see it on line 8 of the following screenshot) – `config.vm.network
    "forwarded_port", guest: 80, host: 8080`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00054.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Let's break down the line that we just added into the Vagrantfile. First of
    all, we are calling the `config.vm.network` namespace to tell Vagrant that we
    want to change the network settings. The first argument we are passing in is `forwarded_port`,
    followed by two different port numbers. The first port is the port number that
    we will be accessing inside the guest/Vagrant machine. In the preceding example,
    we will be accessing port 80, which is generally the default port for a website/web
    server. The final argument is the host port, which is the port that we connect
    to from our host. In our example, it would be `8080`, and via URL we could access
    it at `http://localhost:8080`, which would connect to Vagrant and access the machine's
    `port 80`.
  prefs: []
  type: TYPE_NORMAL
- en: Save the Vagranfile and run the `vagrant reload --provision` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This will restart the Vagrant machine and force provisioning to run again.
    You''ll see, at the bottom of the following screenshot, that it now includes our
    new port in the `default: Forwarding ports...` section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00055.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the Vagrant machine is finished provisioning and is up and running, try
    to open `localhost:8080` in your browser:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00056.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You should see the Welcome to nginx! default page. Congratulations! You have
    successfully configured port-forwarding on your Vagrant box.
  prefs: []
  type: TYPE_NORMAL
- en: Port-forwarding notes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When using the port-forwarding option within the Vagrantfile, there are a few
    tips you can use.
  prefs: []
  type: TYPE_NORMAL
- en: If you wish to forward multiple ports, simply create a new line and add the
    new guest/host ports. This could get messy if you have lots of ports to manage.
    At this point, it may be worth looking into the public and private networking
    options later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are more options/parameters that you can use with this configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '`auto_correct`: Used for port-collision. If set to `true`, Vagrant will check
    to see whether it collides with a port already being used. If one is found, Vagrant
    will change the port number automatically.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`guest_ip`: The IP address of the guest that you wish to bind to the forwarded
    port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`host_ip`: The IP address of the host that you wish to bind to the forwarded
    port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`protocol`: The protocol allowed through the forwarded port. You may supply
    `udp` or `tcp` as options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`id`: The rule name visible in VirtualBox. This would be formatted as *[protocol][guest]*,
    for example `udp111`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These arguments are optional. However, you are required to specify the `guest`
    and `host` port values.
  prefs: []
  type: TYPE_NORMAL
- en: Private networking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Private networking allows your Vagrant machine to be assigned and accessed via
    a private address space IP address. An example of a private IP address would be
    one you may have seen on your local area network, such as `192.168.1.2`.
  prefs: []
  type: TYPE_NORMAL
- en: Using this method can enable less restriction when accessing your Vagrant machine
    compared to port forwarding, since, by default, you can access any available port
    on that local IP address.
  prefs: []
  type: TYPE_NORMAL
- en: To use private networking, there are two main options. You can allow the IP
    address to be assigned by the **Dynamic Host Configuration Protocol** (**DHCP**) or
    you can choose one manually by adding in a static IP address.
  prefs: []
  type: TYPE_NORMAL
- en: DHCP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Follow these step to use the DHCP option:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You must select `dhcp` as the value for the `type` parameter. Within your Vagrantfile,
    add the following line to enable DHCP private networking:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When you save the Vagrantfile, you can run `vagrant up --provision` to see
    the changes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00057.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: To find out the IP address of the newly-upped Vagrant machine, we must SSH into
    the machine itself.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the `vagrant ssh` command. Once in the Vagrant machine, run the `ifconfig`
    command (this networking command will depend on the operating system). Here is
    an example output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00058.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In the `enp0s8` section, you can see there is a red underlined value starting
    with `inet addr:`. This is the private IP address that our Vagrant machine is
    using. The value is `172.28.128.3`. Let's see whether we can now access the machine
    via this IP address.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open an internet browser on your host machine and type in the IP address that
    was returned inside your Vagrant machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You should still have nginx running on `port 80` inside the Vagrant machine
    to see the results.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is an example of me navigating to that private IP address and
    seeing the nginx web server default page that was served from inside the Vagrant
    machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00059.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Static IP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To use the static IP option:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter a private address space IP address as the value for the `ip` parameter.
    Within your Vagrantfile, add the following line to enable static IP private networking:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'When you save the Vagrantfile, run `vagrant up --provision` to force the changes.
    To confirm that your changes have been made, enter the `10.10.10.10` IP address
    into your internet browser on your host machine to see whether you get the nginx
    homepage:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00060.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can also `vagrant ssh` into the machine, run the `ifconfig` command (this
    is OS-dependant), and look for that IP address in the returned values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00061.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'When using the (static IP) option with private networking, there is an optional
    parameter you can supply. The `auto_config` parameter allows you to enable or
    disable auto-configuration. If you wish to manually configure the network interface,
    you can disable it using the `false` value:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: I've found that in certain circumstances, sometimes you have to disable `auto_config`
    to get the static IP address to work.
  prefs: []
  type: TYPE_NORMAL
- en: IPv6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can also specify an IPv6 address using a similar format in your Vagrantfile:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Using an IPv6 address is not supported by the DHCP option and must be supported
    by your host machine/network adapter. It is worth mentioning that the default
    subnet for IPv6 is `/64`.
  prefs: []
  type: TYPE_NORMAL
- en: Public networking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Public networking in Vagrant can be quite a confusing concept. In essence, it
    is private networking, but Vagrant will attempt to allow public access from outside
    your host machine (if your provider and machine will allow it) instead of just
    allowing access from inside the host machine.
  prefs: []
  type: TYPE_NORMAL
- en: By performing the following steps, you should be able to access your Vagrant
    machine via an IP address from another device on your local network. Make sure
    that you have nginx installed so you know when you have successfully connected
    via HTTP to the IP address. I have been able to view the nginx default page using
    my smartphone on the same local network. If you were to use the `private_networking`
    option, this would not work and my smartphone would not be able to load a page
    or find the device, which would result in a timeout.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two main ways to set up public networking: you can use DHCP or manually
    assign a static IP address.'
  prefs: []
  type: TYPE_NORMAL
- en: DHCP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The fastest and easiest way to get started with public networking is to allow
    DHCP to assign an IP address to the Vagrant machine:'
  prefs: []
  type: TYPE_NORMAL
- en: In your Vagrantfile, use `config.vm.network "public_network"` to get it started.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is no need to specify the `type` parameter like you would in the private
    networking DHCP configuration.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the `vagrant up --provision` command to get the Vagrant machine up and
    running. As we are using a public network, you will be prompted to select a bridged
    network interface. Depending on your requirements and some possible trial and
    error, choose one. I will select the first option, `1) en0: (Wi-Fi) Airport`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00062.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: To find out the IP address of the newly-upped Vagrant machine, we must SSH into
    the machine itself. Run the `vagrant ssh` command. Once in the Vagrant machine,
    run the `ifconfig` command (this networking command will depend on the operating
    system).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There is an optional parameter that can be supplied when using DHCP. This is
    the *DHCP assigned default route*. In certain cases, this option may be required.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of this parameter would be adding `config.vm.network "public_network",
    use_dhcp_assigned_default_route: true` into your Vagrantfile.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Static IP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Configuring a static IP address of your choice with public networking is fairly
    straightforward. You must supply the `ip` parameter in the Vagrantfile and add
    in the IP address you wish to use. Here is an example of the configuration in
    my Vagrantfile:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Save your Vagrantfile and run the `vagrant up --provision` command to get the
    Vagrant machine up and running. As we are using a public network, you will be
    prompted to select a bridged network interface. Depending on your requirements
    and some possible trial and error then choose one. I will select the first option, `1)
    en0: (Wi-Fi) Airport`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00063.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Network bridge
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As you''ve seen in the public network DHCP and static IP address, when you
    run the `vagrant up` or `vagrant up --provision` command, you will be asked to
    select which network bridge to use. To avoid this step, you can supply the default
    network bridge in the Vagrantfile as an additional parameter: `config.vm.network
    "public_network", bridge: "en0: Wi-Fi (AirPort)"`.'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we looked at how to configure and manage networking in Vagrant.
    We focused on the three main types available: port-forwarding, private networking,
    and public networking. You should now be able to configure Vagrant to match your
    networking needs.'
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 7](part0183.html#5EGMU0-d86fec2f29de42f086efd11bc5538d9c), *Multi-Machine*,
    we'll look at Vagrant's multi-machine feature. This cool feature allows us to
    configure and provision multiple Vagrant machines from one Vagrantfile config.
    We'll create a real-world scenario of having multiple Vagrant machines – one will
    act as a load balancer that distributes HTTP traffic between two Vagrant boxes
    and a web server.
  prefs: []
  type: TYPE_NORMAL
