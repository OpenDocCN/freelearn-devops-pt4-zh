- en: Networking in Vagrant
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrant中的网络
- en: In this chapter, we will be focusing on networking in Vagrant. By the end of
    this chapter, you will have a good understanding of the different networking options
    available in Vagrant. You will be able to configure networking in Vagrant using
    simple methods, such as port-forwarding, or set custom IP addresses using public
    and private networking.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点讲解Vagrant中的网络。到本章结束时，你将对Vagrant中不同的网络选项有一个清晰的了解。你将能够使用简单的方法（如端口转发）来配置Vagrant中的网络，或者使用公共和私有网络设置自定义IP地址。
- en: 'Here are the three networking types present in Vagrant that you will learn
    about in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Vagrant中存在的三种网络类型，你将在本章中学习到：
- en: Port-forwarding
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口转发
- en: Private networking
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 私有网络
- en: Public networking
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公共网络
- en: Port-forwarding
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 端口转发
- en: A powerful yet simple way to configure networking in Vagrant is to use port-forwarding.
    This does not require any advanced knowledge or configuration on your part.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 配置Vagrant中的网络设置有一个强大而简单的方法——使用端口转发。这不需要你具备任何高级知识或配置。
- en: Port-forwarding is the action of linking a port on your host machine to a port
    on the guest machine. It is as simple as that, but can be really powerful as it
    allows you to get up and running quickly.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 端口转发是将宿主机上的端口链接到客机上的端口。操作就是这么简单，但它可以非常强大，因为它允许你快速启动和运行。
- en: 'The following are the steps to configure port-forwarding:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是配置端口转发的步骤：
- en: 'Open up our Vagrantfile. We''ll start with a very basic Vagrantfile by using
    the `ubuntu/xenial64` box and a basic shell provision script to install the nginx
    web server:'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开我们的Vagrantfile。我们将从一个非常基础的Vagrantfile开始，使用`ubuntu/xenial64`盒子和一个基本的shell配置脚本来安装nginx网页服务器：
- en: '![](img/00050.jpeg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00050.jpeg)'
- en: 'Once you''ve saved the Vagrantfile, run the `vagrant up` command:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存Vagrantfile后，运行`vagrant up`命令：
- en: '![](img/00051.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.jpeg)'
- en: 'Once the box has completed installing nginx and is up and running, open your
    web browser and try navigating to `localhost:8080`:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦盒子安装完nginx并启动运行，打开浏览器并尝试访问`localhost:8080`：
- en: '![](img/00052.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00052.jpeg)'
- en: nginx should be available (possibly not on `port 8080`), but as you can see,
    we cannot access it. This is because we have not yet set up port-forwarding. If
    we access localhost from inside the Vagrant machine, we should be able to access
    it.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: nginx应该可以访问（可能不在`port 8080`端口），但如你所见，我们无法访问它。这是因为我们还没有设置端口转发。如果我们从Vagrant机器内部访问localhost，就能正常访问。
- en: 'Run the `vagrant ssh` command. Once in the Vagrant machine, run the `curl localhost`
    command. This should return the nginx default page in HTML code:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`vagrant ssh`命令。进入Vagrant机器后，运行`curl localhost`命令。此时应返回nginx的默认页面HTML代码：
- en: '![](img/00053.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: Let's set up port forwarding so we can access this page from the host machine
    (outside Vagrant).
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置端口转发，以便我们能够从宿主机（Vagrant外部）访问该页面。
- en: 'Exit out of the machine and open up your Vagrantfile again. In the following
    code (you can see it on line 8 of the following screenshot) – `config.vm.network
    "forwarded_port", guest: 80, host: 8080`:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '退出机器并重新打开Vagrantfile。在以下代码中（你可以在以下截图的第8行看到）– `config.vm.network "forwarded_port",
    guest: 80, host: 8080`：'
- en: '![](img/00054.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00054.jpeg)'
- en: Let's break down the line that we just added into the Vagrantfile. First of
    all, we are calling the `config.vm.network` namespace to tell Vagrant that we
    want to change the network settings. The first argument we are passing in is `forwarded_port`,
    followed by two different port numbers. The first port is the port number that
    we will be accessing inside the guest/Vagrant machine. In the preceding example,
    we will be accessing port 80, which is generally the default port for a website/web
    server. The final argument is the host port, which is the port that we connect
    to from our host. In our example, it would be `8080`, and via URL we could access
    it at `http://localhost:8080`, which would connect to Vagrant and access the machine's
    `port 80`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来逐步分析我们刚刚在Vagrantfile中添加的那行代码。首先，我们调用了`config.vm.network`命名空间，告诉Vagrant我们想要更改网络设置。我们传递的第一个参数是`forwarded_port`，后面跟着两个不同的端口号。第一个端口是我们将在客机/Vagrant机器内部访问的端口。在上面的示例中，我们将访问端口80，这通常是网站/网页服务器的默认端口。最后一个参数是宿主机端口，这是我们从宿主机连接到的端口。在我们的示例中，它是`8080`，通过URL我们可以在`http://localhost:8080`访问它，这将连接到Vagrant并访问机器的`port
    80`。
- en: Save the Vagranfile and run the `vagrant reload --provision` command.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存Vagrantfile并运行`vagrant reload --provision`命令。
- en: 'This will restart the Vagrant machine and force provisioning to run again.
    You''ll see, at the bottom of the following screenshot, that it now includes our
    new port in the `default: Forwarding ports...` section:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '这将重启 Vagrant 虚拟机并强制重新执行配置过程。你会看到，在以下屏幕截图的底部，现在已经包含了我们新端口的 `default: Forwarding
    ports...` 部分：'
- en: '![](img/00055.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00055.jpeg)'
- en: 'Once the Vagrant machine is finished provisioning and is up and running, try
    to open `localhost:8080` in your browser:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 Vagrant 虚拟机完成配置并启动，尝试在浏览器中打开 `localhost:8080`：
- en: '![](img/00056.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00056.jpeg)'
- en: You should see the Welcome to nginx! default page. Congratulations! You have
    successfully configured port-forwarding on your Vagrant box.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到 "Welcome to nginx!" 默认页面。恭喜！你已经成功配置了 Vagrant 虚拟机的端口转发。
- en: Port-forwarding notes
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 端口转发注意事项
- en: When using the port-forwarding option within the Vagrantfile, there are a few
    tips you can use.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Vagrantfile 中使用端口转发选项时，有一些技巧可以帮助你。
- en: If you wish to forward multiple ports, simply create a new line and add the
    new guest/host ports. This could get messy if you have lots of ports to manage.
    At this point, it may be worth looking into the public and private networking
    options later in this chapter.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望转发多个端口，只需创建新的一行并添加新的 guest/host 端口。如果需要管理很多端口，可能会显得有些混乱。此时，你可能需要考虑本章后面介绍的公共和私有网络选项。
- en: 'There are more options/parameters that you can use with this configuration:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用更多的选项/参数来配置此设置：
- en: '`auto_correct`: Used for port-collision. If set to `true`, Vagrant will check
    to see whether it collides with a port already being used. If one is found, Vagrant
    will change the port number automatically.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_correct`：用于端口冲突处理。如果设置为 `true`，Vagrant 会检查是否与已使用的端口发生冲突。如果发现冲突，Vagrant
    会自动更改端口号。'
- en: '`guest_ip`: The IP address of the guest that you wish to bind to the forwarded
    port.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`guest_ip`：你希望绑定到转发端口的虚拟机的 IP 地址。'
- en: '`host_ip`: The IP address of the host that you wish to bind to the forwarded
    port.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host_ip`：你希望绑定到转发端口的主机的 IP 地址。'
- en: '`protocol`: The protocol allowed through the forwarded port. You may supply
    `udp` or `tcp` as options.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`protocol`：通过转发端口允许的协议。你可以选择 `udp` 或 `tcp` 作为选项。'
- en: '`id`: The rule name visible in VirtualBox. This would be formatted as *[protocol][guest]*,
    for example `udp111`.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id`：在 VirtualBox 中可见的规则名称。它的格式为 *[protocol][guest]*，例如 `udp111`。'
- en: These arguments are optional. However, you are required to specify the `guest`
    and `host` port values.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数是可选的。然而，你必须指定 `guest` 和 `host` 端口值。
- en: Private networking
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 私有网络
- en: Private networking allows your Vagrant machine to be assigned and accessed via
    a private address space IP address. An example of a private IP address would be
    one you may have seen on your local area network, such as `192.168.1.2`.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 私有网络允许将你的 Vagrant 虚拟机分配并通过私有地址空间 IP 地址进行访问。一个私有 IP 地址的例子可能是你在本地网络中见过的，如 `192.168.1.2`。
- en: Using this method can enable less restriction when accessing your Vagrant machine
    compared to port forwarding, since, by default, you can access any available port
    on that local IP address.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法可以比端口转发方法提供更少的限制，因为默认情况下，你可以访问该本地 IP 地址上的任何可用端口。
- en: To use private networking, there are two main options. You can allow the IP
    address to be assigned by the **Dynamic Host Configuration Protocol** (**DHCP**) or
    you can choose one manually by adding in a static IP address.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用私有网络，有两种主要选项。你可以允许 IP 地址由 **动态主机配置协议** (**DHCP**) 自动分配，或者你可以手动添加静态 IP 地址。
- en: DHCP
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DHCP
- en: 'Follow these step to use the DHCP option:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤使用 DHCP 选项：
- en: 'You must select `dhcp` as the value for the `type` parameter. Within your Vagrantfile,
    add the following line to enable DHCP private networking:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你必须选择 `dhcp` 作为 `type` 参数的值。在你的 Vagrantfile 中，添加以下行来启用 DHCP 私有网络：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When you save the Vagrantfile, you can run `vagrant up --provision` to see
    the changes:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存 Vagrantfile 后，你可以运行 `vagrant up --provision` 来查看更改：
- en: '![](img/00057.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00057.jpeg)'
- en: To find out the IP address of the newly-upped Vagrant machine, we must SSH into
    the machine itself.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查找新启动的 Vagrant 虚拟机的 IP 地址，我们必须通过 SSH 进入虚拟机本身。
- en: 'Run the `vagrant ssh` command. Once in the Vagrant machine, run the `ifconfig`
    command (this networking command will depend on the operating system). Here is
    an example output:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `vagrant ssh` 命令。进入 Vagrant 虚拟机后，运行 `ifconfig` 命令（此网络命令依赖于操作系统）。以下是示例输出：
- en: '![](img/00058.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00058.jpeg)'
- en: In the `enp0s8` section, you can see there is a red underlined value starting
    with `inet addr:`. This is the private IP address that our Vagrant machine is
    using. The value is `172.28.128.3`. Let's see whether we can now access the machine
    via this IP address.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`enp0s8`部分，您可以看到以`inet addr:`开头的红色下划线数值。这是我们的 Vagrant 机器正在使用的私有 IP 地址。该数值为`172.28.128.3`。让我们看看是否现在可以通过此
    IP 地址访问该机器。
- en: Open an internet browser on your host machine and type in the IP address that
    was returned inside your Vagrant machine.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主机机器上打开 Internet 浏览器，输入在 Vagrant 机器内返回的 IP 地址。
- en: You should still have nginx running on `port 80` inside the Vagrant machine
    to see the results.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该仍然在 Vagrant 机器内运行`port 80`上的 nginx，以查看结果。
- en: 'The following is an example of me navigating to that private IP address and
    seeing the nginx web server default page that was served from inside the Vagrant
    machine:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是我导航到该私有 IP 地址并查看从 Vagrant 机器内部提供的 nginx Web 服务器默认页面的示例：
- en: '![](img/00059.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00059.jpeg)'
- en: Static IP
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 静态 IP
- en: 'To use the static IP option:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用静态 IP 选项：
- en: 'Enter a private address space IP address as the value for the `ip` parameter.
    Within your Vagrantfile, add the following line to enable static IP private networking:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个私有地址空间 IP 地址作为`ip`参数的值。在您的 Vagrantfile 中，添加以下行以启用静态 IP 私有网络：
- en: '[PRE1]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When you save the Vagrantfile, run `vagrant up --provision` to force the changes.
    To confirm that your changes have been made, enter the `10.10.10.10` IP address
    into your internet browser on your host machine to see whether you get the nginx
    homepage:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您保存 Vagrantfile 后，请运行`vagrant up --provision`以强制更改。为确认更改已生效，请在主机机器上的 Internet
    浏览器中输入`10.10.10.10` IP 地址，查看是否显示 nginx 主页：
- en: '![](img/00060.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00060.jpeg)'
- en: 'You can also `vagrant ssh` into the machine, run the `ifconfig` command (this
    is OS-dependant), and look for that IP address in the returned values:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以`vagrant ssh`进入机器，运行`ifconfig`命令（这取决于操作系统），并查找返回值中的该 IP 地址：
- en: '![](img/00061.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00061.jpeg)'
- en: 'When using the (static IP) option with private networking, there is an optional
    parameter you can supply. The `auto_config` parameter allows you to enable or
    disable auto-configuration. If you wish to manually configure the network interface,
    you can disable it using the `false` value:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用（静态 IP）选项与私有网络时，您可以提供一个可选参数。`auto_config`参数允许您启用或禁用自动配置。如果希望手动配置网络接口，可以使用`false`值将其禁用：
- en: '[PRE2]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: I've found that in certain circumstances, sometimes you have to disable `auto_config`
    to get the static IP address to work.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现在某些情况下，有时必须禁用`auto_config`才能使静态 IP 地址正常工作。
- en: IPv6
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IPv6
- en: 'You can also specify an IPv6 address using a similar format in your Vagrantfile:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在 Vagrantfile 中使用类似格式指定 IPv6 地址：
- en: '[PRE3]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Using an IPv6 address is not supported by the DHCP option and must be supported
    by your host machine/network adapter. It is worth mentioning that the default
    subnet for IPv6 is `/64`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 IPv6 地址不受 DHCP 选项支持，必须由主机机器/网络适配器支持。值得一提的是，IPv6 的默认子网是`/64`。
- en: Public networking
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公共网络
- en: Public networking in Vagrant can be quite a confusing concept. In essence, it
    is private networking, but Vagrant will attempt to allow public access from outside
    your host machine (if your provider and machine will allow it) instead of just
    allowing access from inside the host machine.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant 中的公共网络可能是一个令人困惑的概念。本质上，它是私有网络，但 Vagrant 将尝试允许从主机机器外部访问（如果您的提供商和机器允许），而不仅仅允许从主机机器内部访问。
- en: By performing the following steps, you should be able to access your Vagrant
    machine via an IP address from another device on your local network. Make sure
    that you have nginx installed so you know when you have successfully connected
    via HTTP to the IP address. I have been able to view the nginx default page using
    my smartphone on the same local network. If you were to use the `private_networking`
    option, this would not work and my smartphone would not be able to load a page
    or find the device, which would result in a timeout.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行以下步骤，您应该能够通过本地网络上的另一设备的 IP 地址访问您的 Vagrant 机器。确保已安装 nginx，以便在成功通过 HTTP 连接到
    IP 地址时获得通知。我已经能够在同一本地网络上使用我的智能手机查看 nginx 默认页面。如果使用`private_networking`选项，则此操作将无效，我的智能手机将无法加载页面或找到设备，这将导致超时。
- en: 'There are two main ways to set up public networking: you can use DHCP or manually
    assign a static IP address.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种设置公共网络的主要方式：您可以使用 DHCP 或手动分配静态 IP 地址。
- en: DHCP
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DHCP
- en: 'The fastest and easiest way to get started with public networking is to allow
    DHCP to assign an IP address to the Vagrant machine:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 开始使用公共网络的最快和最简单的方法是允许 DHCP 为 Vagrant 虚拟机分配 IP 地址：
- en: In your Vagrantfile, use `config.vm.network "public_network"` to get it started.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 Vagrantfile 中，使用`config.vm.network "public_network"`来启动它。
- en: There is no need to specify the `type` parameter like you would in the private
    networking DHCP configuration.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要像在私有网络的 DHCP 配置中那样指定`type`参数。
- en: 'Run the `vagrant up --provision` command to get the Vagrant machine up and
    running. As we are using a public network, you will be prompted to select a bridged
    network interface. Depending on your requirements and some possible trial and
    error, choose one. I will select the first option, `1) en0: (Wi-Fi) Airport`:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '运行`vagrant up --provision`命令启动 Vagrant 虚拟机。由于我们使用的是公共网络，你将被提示选择一个桥接网络接口。根据你的需求和可能的试错过程，选择一个。我将选择第一个选项，`1)
    en0: (Wi-Fi) Airport`：'
- en: '![](img/00062.jpeg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00062.jpeg)'
- en: To find out the IP address of the newly-upped Vagrant machine, we must SSH into
    the machine itself. Run the `vagrant ssh` command. Once in the Vagrant machine,
    run the `ifconfig` command (this networking command will depend on the operating
    system).
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要找出新启动的 Vagrant 虚拟机的 IP 地址，我们必须 SSH 进入虚拟机本身。运行`vagrant ssh`命令。进入 Vagrant 虚拟机后，运行`ifconfig`命令（这个网络命令将根据操作系统有所不同）。
- en: There is an optional parameter that can be supplied when using DHCP. This is
    the *DHCP assigned default route*. In certain cases, this option may be required.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 DHCP 时可以提供一个可选参数。这是*DHCP 分配的默认路由*。在某些情况下，这个选项可能是必需的。
- en: 'An example of this parameter would be adding `config.vm.network "public_network",
    use_dhcp_assigned_default_route: true` into your Vagrantfile.'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '这个参数的示例可以是将`config.vm.network "public_network", use_dhcp_assigned_default_route:
    true`添加到你的 Vagrantfile 中。'
- en: Static IP
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 静态 IP
- en: 'Configuring a static IP address of your choice with public networking is fairly
    straightforward. You must supply the `ip` parameter in the Vagrantfile and add
    in the IP address you wish to use. Here is an example of the configuration in
    my Vagrantfile:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 配置你选择的静态 IP 地址与公共网络结合使用非常简单。你只需要在 Vagrantfile 中提供`ip`参数，并添加你希望使用的 IP 地址。以下是我
    Vagrantfile 中的配置示例：
- en: '[PRE4]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Save your Vagrantfile and run the `vagrant up --provision` command to get the
    Vagrant machine up and running. As we are using a public network, you will be
    prompted to select a bridged network interface. Depending on your requirements
    and some possible trial and error then choose one. I will select the first option, `1)
    en0: (Wi-Fi) Airport`:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '保存你的 Vagrantfile 并运行`vagrant up --provision`命令，启动 Vagrant 虚拟机。由于我们使用的是公共网络，你将被提示选择一个桥接网络接口。根据你的需求和可能的试错过程来选择一个。我将选择第一个选项，`1)
    en0: (Wi-Fi) Airport`：'
- en: '![](img/00063.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00063.jpeg)'
- en: Network bridge
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络桥接
- en: 'As you''ve seen in the public network DHCP and static IP address, when you
    run the `vagrant up` or `vagrant up --provision` command, you will be asked to
    select which network bridge to use. To avoid this step, you can supply the default
    network bridge in the Vagrantfile as an additional parameter: `config.vm.network
    "public_network", bridge: "en0: Wi-Fi (AirPort)"`.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '正如你在公共网络 DHCP 和静态 IP 地址中看到的，当你运行`vagrant up`或`vagrant up --provision`命令时，系统会要求你选择使用哪个网络桥接。为了避免这一步，你可以在
    Vagrantfile 中提供默认的网络桥接作为额外参数：`config.vm.network "public_network", bridge: "en0:
    Wi-Fi (AirPort)"`。'
- en: Summary
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we looked at how to configure and manage networking in Vagrant.
    We focused on the three main types available: port-forwarding, private networking,
    and public networking. You should now be able to configure Vagrant to match your
    networking needs.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了如何配置和管理 Vagrant 中的网络设置。我们重点介绍了三种主要的网络类型：端口转发、私有网络和公共网络。你现在应该能够根据你的网络需求配置
    Vagrant。
- en: In [Chapter 7](part0183.html#5EGMU0-d86fec2f29de42f086efd11bc5538d9c), *Multi-Machine*,
    we'll look at Vagrant's multi-machine feature. This cool feature allows us to
    configure and provision multiple Vagrant machines from one Vagrantfile config.
    We'll create a real-world scenario of having multiple Vagrant machines – one will
    act as a load balancer that distributes HTTP traffic between two Vagrant boxes
    and a web server.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](part0183.html#5EGMU0-d86fec2f29de42f086efd11bc5538d9c)《多机配置》中，我们将介绍 Vagrant
    的多机功能。这个酷炫的功能允许我们从一个 Vagrantfile 配置中配置并管理多个 Vagrant 虚拟机。我们将创建一个真实世界的场景，其中有多台 Vagrant
    虚拟机——一台作为负载均衡器，分发 HTTP 流量到两台 Vagrant 虚拟机上，其中一台作为 Web 服务器。
