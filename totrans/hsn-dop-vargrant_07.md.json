["```\nVagrant.configure(\"2\") do |config|\n    # Configure load balancer machine\n     config.vm.define \"lb1\" do |lb1|\n    end\n    # Configure first web machine\n     config.vm.define \"web1\" do |web1|\n     end\n    # Configure second web machine\n     config.vm.define \"web2\" do |web2|\n    end\n end\n```", "```\nconfig.vm.define \"lb1\" do |lb1|\n end\n```", "```\nconfig.vm.define \"lb1\" do |lb1|\n     lb1.vm.box = \"ubuntu/xenial64\"\n     lb1.vm.network \"private_network\", ip: \"10.0.0.10\"\n end\n```", "```\n config.vm.define \"web1\" do |web1|\n     web1.vm.box = \"ubuntu/xenial64\"\n     web1.vm.network \"private_network\", ip: \"10.0.0.11\"\n end\n config.vm.define \"web2\" do |web2|\n     web2.vm.box = \"ubuntu/xenial64\"\n     web2.vm.network \"private_network\", ip: \"10.0.0.12\"\n end\n```", "```\n#!/bin/bash\necho 'Starting Provision: lb1'\n sudo apt-get update\n sudo apt-get install -y nginx\n sudo service nginx stop\n sudo rm -rf /etc/nginx/sites-enabled/default\n sudo touch /etc/nginx/sites-enabled/default\n echo \"upstream testapp {\n     server 10.0.0.11;\n     server 10.0.0.12;\n }\nserver {\n     listen 80 default_server;\n     listen [::]:80 default_server ipv6only=on;\n    root /usr/share/nginx/html;\n     index index.html index.htm;\n    # Make site accessible from http://localhost/\n     server_name localhost;\n    location / {\n         proxy_pass http://testapp;\n     }\n}\" >> /etc/nginx/sites-enabled/default\n sudo service nginx start\n echo \"Machine: lb1\" > /var/www/html/index.html\n echo 'Provision lb1 complete'\n```", "```\n#!/bin/bash\necho 'Starting Provision: web'$1\n sudo apt-get update\n sudo apt-get install -y nginx\n echo \"<h1>Machine: web\"$1 \"</h1>\" > /var/www/html/index.html\n echo 'Provision web'$1 'complete'\n```", "```\nVagrant.configure(\"2\") do |config|\n    # Configure load balancer machine\n     config.vm.define \"lb1\" do |lb1|\n         lb1.vm.box = \"ubuntu/xenial64\"\n         lb1.vm.network \"private_network\", ip: \"10.0.0.10\"\n         lb1.vm.provision :shell do |shell|\n             shell.path = \"lb.sh\"\n         end\n     end\n    # Configure first web machine\n     config.vm.define \"web1\" do |web1|\n         web1.vm.box = \"ubuntu/xenial64\"\n         web1.vm.network \"private_network\", ip: \"10.0.0.11\"\n         web1.vm.provision :shell do |shell|\n             shell.args = \"1\"\n             shell.path = \"web.sh\"\n        end\n    end\n    # Configure second web machine\n     config.vm.define \"web2\" do |web2|\n         web2.vm.box = \"ubuntu/xenial64\"\n         web2.vm.network \"private_network\", ip: \"10.0.0.12\"\n         web2.vm.provision :shell do |shell|\n             shell.args = \"2\"\n             shell.path = \"web.sh\"\n        end\n     end\nend\n```", "```\nVagrant.configure(\"2\") do |config|\n    # Configure web server machine\n     config.vm.define \"web1\" do |web1|\n         web1.vm.box = \"ubuntu/xenial64\"\n         web1.vm.network \"private_network\", ip: \"10.0.0.50\"\n         web1.vm.provision :shell do |shell|\n             shell.path = \"web.sh\"\n         end\n     end\n    # Configure database server machine\n     config.vm.define \"db1\" do |db1|\n         db1.vm.box = \"ubuntu/xenial64\"\n         db1.vm.network \"private_network\", ip: \"10.0.0.51\"\n         db1.vm.provision :shell do |shell|\n             shell.path = \"db.sh\"\n         end\n     end\nend\n```", "```\n#!/bin/bash\necho 'Starting Provision: web server'\n sudo apt-get update\n sudo apt-get install -y nginx\n touch /var/www/html/index.php\n sudo apt-get install -y php-fpm php-mysql\n echo 'Provision web server complete'\n```", "```\n#!/bin/bash\necho 'Starting Provision: database server'\n sudo apt-get update\n echo 'Provision database server complete'\n```", "```\nsudo nano /etc/nginx/sites-available/default\n```", "```\nindex index.html index.htm index.nginx-debian.html;\n```", "```\nindex index.php index.html index.htm index.nginx-debian.html;\n```", "```\n #location ~ \\.php$ {\n #    include snippets/fastcgi-php.conf;\n #\n #    # With php7.0-cgi alone:\n #    fastcgi_pass 127.0.0.1:9000;\n #    # With php7.0-fpm:\n #    fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n #}\n```", "```\nlocation ~ \\.php$ {\n     include snippets/fastcgi-php.conf;\n    # With php7.0-fpm:\n     fastcgi_pass unix:/run/php/php7.0-fpm.sock;\n }\n```", "```\nsudo systemctl reload nginx\n```", "```\n<?php\nphpinfo();\n?>\n```", "```\n<?php\n$conn = new mysqli(\"10.0.0.51\", \"external\", \"password\", \"VagrantDatabase\");\n$result = $conn->query(\"SELECT VagrantText FROM VagrantTable WHERE VagrantId = 1\");\nwhile($row = $result->fetch_assoc()) {\n     echo $row['VagrantText'];\n }\n?>\n```", "```\nCREATE USER 'external'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON *.* TO 'external'@'localhost' WITH GRANT OPTION;\nCREATE USER 'external'@'%' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON *.* TO 'external'@'%' WITH GRANT OPTION;\nFLUSH PRIVILEGES;\n```", "```\nCREATE DATABASE VagrantDatabase;\nUSE VagrantDatabase;\nCREATE TABLE VagrantTable (VagrantId int, VagrantText varchar(255));\nINSERT INTO VagrantTable (VagrantId, VagrantText) VALUES (1, \"This text is from MySQL\");\n```", "```\nsudo nano /etc/mysql/mysql.conf.d/mysqld.cnf\n```", "```\nbind_address = 127.0.0.1 \n```", "```\nbind_address = 0.0.0.0\n```", "```\nsudo service mysql restart\n```"]