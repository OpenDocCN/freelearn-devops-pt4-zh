["```\npackage { \"nginx\":\n     ensure => installed\n }\n\n service { \"nginx\":\n     require => Package[\"nginx\"],\n     ensure => running,\n     enable => true\n }\n```", "```\n# This comment wont be parsed by Puppet but it will be useful for other developers/DevOps\n```", "```\n package { \"nginx\":\n     ensure => installed\n }\n service { \"nginx\":\n     require => Package[\"nginx\"],\n     ensure => running,\n     enable => true\n }\n```", "```\n Vagrant.configure(\"2\") do |config|\n     config.vm.box = \"ubuntu/xenial64\"\n     config.vm.network \"private_network\", ip: \"11.11.11.11\"\n     config.vm.provision \"shell\", :inline => <<-SHELL\n         apt-get update\n         apt-get install -y puppet\n     SHELL\n     config.vm.provision \"puppet\" do |pup|\n         pup.manifest_file = \"nginx.pp\"\n     end\n end\n```", "```\n mkdir vagrant-puppet-agent && cd vagrant-puppet-agent\n```", "```\nVagrant.configure(\"2\") do |config|\n     config.vm.box = \"ubuntu/xenial64\"\n         # Puppet master configuration\n         config.vm.define \"puppetmaster\" do |pm|\n\n                 pm.vm.provider \"virtualbox\" do |v|\n                         v.memory = 2048\n                         v.cpus = 2\n                 end\n\n                 pm.vm.network \"private_network\", ip: \"10.10.10.11\"\n\n                 pm.vm.provision \"shell\", :inline => <<-SHELL\n                         sudo echo \"10.10.10.11 master.example.com\" | sudo tee -a /etc/hosts\n                         sudo echo \"10.10.10.12 node.example.com\" | sudo tee -a /etc/hosts\n                         wget https://apt.puppetlabs.com/puppetlabs-release-pc1-xenial.deb\n                         sudo dpkg -i puppetlabs-release-pc1-xenial.deb\n                         sudo apt-get update -y\n                         sudo apt-get install -y puppetserver\n                         sudo awk '{sub(/-Xms2g -Xmx2g -XX:MaxPermSize=256m/,\"-Xms512m -Xmx512m\")}1'                   /etc/default/puppetserver > tmp.txt && mv tmp.txt /etc/default/puppetserver\n                         sudo echo \"*\" | sudo tee -a /etc/puppetlabs/puppet/autosign.conf\n                         sudo echo \"autosign = true\" | sudo tee -a /etc/puppetlabs/puppet/puppet.conf\n                         sudo echo \"certname=master.example.com\" | sudo tee -a /etc/puppetlabs/puppet/puppet.conf\n                         sudo echo \"[agent]\" | sudo tee -a /etc/puppetlabs/puppet/puppet.conf\n                         sudo echo \"certname=node.example.com\" | sudo tee -a /etc/puppetlabs/puppet/puppet.conf\n                         sudo echo \"exec { 'apt-get update': path => '/usr/bin' } package { \"nginx\": ensure => installed } service { \"nginx\": require => Package[\"nginx\"], ensure => running, enable => true }\" | sudo tee -a /etc/puppetlabs/code/environments/production/manifests/default.pp\n                         sudo systemctl enable puppetserver\n                         sudo systemctl start puppetserver\n                 SHELL\n         end\n\n         # Puppet Node configuration\n         config.vm.define \"pnode\" do |pn|\n\n                 pn.vm.network \"private_network\", ip: \"10.10.10.12\"\n\n                 pn.vm.provision \"shell\", :inline => <<-SHELL\n                 sudo echo \"10.10.10.11 master.example.com\" | sudo tee -a /etc/hosts\n                 sudo echo \"10.10.10.12 node.example.com\" | sudo tee -a /etc/hosts\n                 apt-get update\n                 apt-get install -y puppet\n                 sudo puppet agent --enable\n                 sudo echo \"autosign = true\" | sudo tee -a /etc/puppet/puppet.conf\n                 sudo echo \"certname=master.example.com\" | sudo tee -a /etc/puppet/puppet.conf\n                 sudo echo \"[agent]\" | sudo tee -a /etc/puppet/puppet.conf\n                 sudo echo \"certname=node.example.com\" | sudo tee -a /etc/puppet/puppet.conf\n         SHELL\n\n         pn.vm.provision \"puppet_server\" do |pup|\n                 pup.puppet_node = \"nginxplease\"\n                 pup.puppet_server = \"master.example.com\"\n                 pup.options = \"--verbose --waitforcert 10\"\n         end\n\n     end\n end\n```"]