["```\ncd chapter09/\n```", "```\nvagrant global-status\nvagrant up\n```", "```\nvagrant status\n```", "```\nCurrent machine states:\n\nprometheus                   running (virtualbox)\n\nThe VM is running. To stop this VM, you can run `vagrant halt` to\nshut it down forcefully, or you can run `vagrant suspend` to simply\nsuspend the virtual machine. In either case, to restart it again,\nsimply run `vagrant up`.\n```", "```\nvagrant ssh prometheus\n```", "```\nvagrant destroy -f\n```", "```\nvagrant@prometheus:~$ cat /etc/prometheus/prometheus.yml\nglobal:\n...\n evaluation_interval: 1m\n...\n\nrule_files:\n - \"recording_rules.yml\"\n...\n```", "```\ngroups:\n- name: <group_name_1>\n  interval: <evaluation_interval>\n  rules:\n  - record: <rule_name_1>\n    expr: <promql_expression_1>\n    labels:\n <label_name>: <label_value>\n  ...\n  - record: <rule_name_N>\n    expr: <promql_expression_N>\n...\n- name: <group_name_N>\n  ...\n```", "```\nvagrant@prometheus:~$ cat /etc/prometheus/recording_rules.yml\n```", "```\n...\n- name: recording_rules\n  rules:\n  - record: instance:node_cpu:count\n    expr: count without (cpu) (count without (mode) (node_cpu_seconds_total))\n...\n```", "```\n...\n- name: different_eval_interval\n  interval: 5s\n...\n```", "```\n- record: handler_instance:prometheus_http_request_duration_seconds_sum:rate5m\n  expr: >\n    rate(prometheus_http_request_duration_seconds_sum[5m])\n\n- record: handler_instance:prometheus_http_request_duration_seconds_count:rate5m\n  expr: >\n    rate(prometheus_http_request_duration_seconds_count[5m])\n\n- record: handler:prometheus_http_request_duration_seconds:mean5m\n  expr: >\n    sum without (instance) (\n      handler_instance:prometheus_http_request_duration_seconds_sum:rate5m\n    )\n    /\n    sum without (instance) (\n      handler_instance:prometheus_http_request_duration_seconds_count:rate5m\n    )\n```", "```\nvagrant@prometheus:~$ cat /etc/prometheus/prometheus.yml \nglobal:\n...\n evaluation_interval: 1m\n...\nrule_files:\n - \"recording_rules.yml\"\n - \"alerting_rules.yml\"\nalerting:\n alertmanagers:\n - static_configs:\n - targets:\n - “prometheus:5001”\n...\n```", "```\nvagrant@prometheus:~$ cat /etc/prometheus/alerting_rules.yml \ngroups:\n- name: alerting_rules\n rules:\n - alert: NodeExporterDown\n expr: up{job=\"node\"} != 1\n for: 1m\n labels:\n severity: \"critical\"\n annotations:\n description: \"Node exporter {{ $labels.instance }} is down.\"\n link: \"https://example.com\"\n```", "```\nvagrant@prometheus:~$ sudo systemctl stop node-exporter\nvagrant@prometheus:~$ sudo systemctl status node-exporter\n\n...\nMar 05 20:49:40 prometheus systemd[1]: Stopping Node Exporter...\nMar 05 20:49:40 prometheus systemd[1]: Stopped Node Exporter.\n```", "```\nvagrant@prometheus:~$ cat /vagrant/cache/alerting.log\n[\n   {\n       \"labels\": {\n           \"alertname\": \"NodeExporterDown\",\n           \"dc\": \"dc1\",\n           \"instance\": \"prometheus:9100\",\n           \"job\": \"node\",\n           \"prom\": \"prom1\",\n           \"severity\": \"critical\"\n       },\n       \"annotations\": {\n           \"description\": \"Node exporter prometheus:9100 is down.\",\n           \"link\": \"https://example.com\"\n       },\n       \"startsAt\": \"2019-03-04T21:51:15.04754979Z\",\n       \"endsAt\": \"2019-03-04T21:58:15.04754979Z\",\n       \"generatorURL\": \"http://prometheus:9090/graph?g0.expr=up%7Bjob%3D%22node%22%7D+%21%3D+1&g0.tab=1\"\n   }\n]\n```", "```\n   annotations:\n     description: \"Node exporter {{ .Labels.instance }} is down.\"\n     link: \"https://example.com\"\n```", "```\n       \"annotations\": {\n           \"description\": \"Node exporter prometheus:9100 is down.\",\n           \"link\": \"https://example.com\"\n       },\n```", "```\nvagrant@prometheus:~$ cat /etc/prometheus/tests.yml\n```", "```\nrule_files:\n  - /etc/prometheus/recording_rules.yml\n...\nevaluation_interval: 1m\n```", "```\ntests:\n```", "```\n- interval: 15s\n```", "```\n    input_series:\n      - series: 'node_cpu_seconds_total{cpu=\"0\",instance=\"prometheus:9100\",job=\"node\",mode=\"user\"}'\n        values: '1 1 1 1 1 1 1 1 1 1'\n      - series: 'node_cpu_seconds_total{cpu=\"1\",instance=\"prometheus:9100\",job=\"node\",mode=\"user\"}'\n        values: '1 1 1 1 1 1 1 1 1 1'\n      - series: 'node_cpu_seconds_total{cpu=\"0\",instance=\"example:9100\",job=\"node\",mode=\"idle\"}'\n        values: '1 1 1 1 1 1 1 1 1 1'\n      - series: 'node_cpu_seconds_total{cpu=\"0\",instance=\"example:9100\",job=\"node\",mode=\"system\"}'\n        values: '1 1 1 1 1 1 1 1 1 1'\n```", "```\npromql_expr_test:\n```", "```\n- expr: instance:node_cpu:count\n```", "```\n        eval_time: 1m\n        exp_samples:\n          - labels: 'instance:node_cpu:count{instance=\"prometheus:9100\", job=\"node\"}'\n            value: 2\n          - labels: 'instance:node_cpu:count{instance=\"example:9100\", job=\"node\"}'\n            value: 1\n```", "```\nvagrant@prometheus:/etc/prometheus$ promtool test rules tests.yml \nUnit Testing: tests.yml\n SUCCESS\n```", "```\nvagrant@prometheus:/etc/prometheus$ promtool test rules tests.yml \nUnit Testing: tests.yml\n  FAILED:\n    expr:'instance:node_cpu:count', time:1m0s, \n        exp:\"{__name__=\\\"instance:node_cpu:count\\\", instance=\\\"example:9100\\\", job=\\\"node\\\"} 1E+00, {__name__=\\\"instance:node_cpu:count\\\", instance=\\\"example:9100\\\", job=\\\"node\\\"} 1E+00, {__name__=\\\"instance:node_cpu:count\\\", instance=\\\"prometheus:9100\\\", job=\\\"node\\\"} 2E+00\", \n        got:\"{__name__=\\\"instance:node_cpu:count\\\", instance=\\\"example:9100\\\", job=\\\"node\\\"} 1E+00, {__name__=\\\"instance:node_cpu:count\\\", instance=\\\"example:9100\\\", job=\\\"node\\\"} 1E+00, {__name__=\\\"instance:node_cpu:count\\\", instance=\\\"prometheus:9100\\\", job=\\\"node\\\"} 1E+00\"\n```", "```\n  - interval: 5s\n    input_series:\n      - series: 'prometheus_http_request_duration_seconds_count{handler=\"/\",instance=\"localhost:9090\",job=\"prometheus\"}'\n        values: '0+5x60'\n      - series: 'prometheus_http_request_duration_seconds_sum{handler=\"/\",instance=\"localhost:9090\",job=\"prometheus\"}'\n        values: '0+1x60'\n```", "```\n0 5 10 15 20 … 290 295 300\n```", "```\n0 1 1 0 1+0x3 0 1 1 0 1 1 0 0 0 1 1 0+0x3 1\n```", "```\n0 1 1 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 1 0 0 0 0 1\n```", "```\nvagrant@prometheus:~$ cat /etc/prometheus/tests.yml\n```", "```\nrule_files:\n  - /etc/prometheus/alerting_rules.yml\n```", "```\nevaluation_interval: 1m\n```", "```\n  - interval: 1m\n    input_series:\n      - series: 'up{job=\"node\",instance=\"prometheus:9100\"}'\n        values: '1 1 1 0 0 0 0 0 0 0'\n      - series: 'up{job=\"prometheus\",instance=\"prometheus:9090\"}'\n        values: '1 0 1 1 1 0 1 1 1 1'\n```", "```\n    alert_rule_test:\n      - alertname: NodeExporterDown\n        eval_time: 3m\n      - alertname: NodeExporterDown\n        eval_time: 4m\n        exp_alerts:\n          - exp_labels:\n              instance: \"prometheus:9100\"\n              job: \"node\"\n              severity: \"critical\"\n            exp_annotations:\n              description: \"Node exporter prometheus:9100 is down.\"\n              link: \"https://example.com\"\n```", "```\nvagrant@prometheus:~$ promtool test rules /etc/prometheus/tests.yml \nUnit Testing: /etc/prometheus/tests.yml\n SUCCESS\n```", "```\nvagrant@prometheus:~$ promtool test rules /etc/prometheus/tests.yml \nUnit Testing: /etc/prometheus/tests.yml\n  FAILED:\n    alertname:NodeExporterDown, time:4m0s, \n        exp:\"[Labels:{alertname=\\\"NodeExporterDown\\\", instance=\\\"prometheus:9100\\\", job=\\\"node\\\", severity=\\\"critical\\\"} Annotations:{description=\\\"Node exporter prometheus:9999 is down.\\\", link=\\\"https://example.com\\\"}]\", \n        got:\"[Labels:{alertname=\\\"NodeExporterDown\\\", instance=\\\"prometheus:9100\\\", job=\\\"node\\\", severity=\\\"critical\\\"} Annotations:{description=\\\"Node exporter prometheus:9100 is down.\\\", link=\\\"https://example.com\\\"}]\"\n```"]