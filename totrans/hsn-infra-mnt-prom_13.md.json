["```\ncd ./chapter10/\n```", "```\nvagrant global-status\nvagrant up\n```", "```\nvagrant status\n```", "```\nCurrent machine states:\n\nprometheus                 running (virtualbox)\ngrafana                    running (virtualbox)\n\nThis environment represents multiple VMs. The VMs are all listed above with their current state. For more information about a specific VM, run `vagrant status NAME`.\n```", "```\nvagrant destroy -f\n```", "```\nvagrant@grafana:~$ cat /etc/grafana/provisioning/datasources/prometheus.yaml \napiVersion: 1\n\ndatasources:\n- name: prometheus\n type: prometheus\n access: proxy\n orgId: 1\n url: http://prometheus:9090\n isDefault: True\n version: 1\n editable: True\n```", "```\nvagrant@grafana:~$ ls /etc/grafana/dashboards/\nnode_exporter_basics.json\n```", "```\ncd ./chapter10/provision/kubernetes/\n```", "```\nminikube status\nminikube delete\n```", "```\nminikube start \\\n  --cpus=2 \\\n  --memory=3072 \\\n  --kubernetes-version=\"v1.14.0\" \\\n  --vm-driver=virtualbox\n```", "```\nkubectl apply -f ./bootstrap/\nkubectl rollout status deployment/prometheus-operator -n monitoring\n```", "```\nkubectl apply -f ./prometheus/\nkubectl rollout status statefulset/prometheus-k8s -n monitoring\n```", "```\nkubectl apply -f ./services/\nkubectl get servicemonitors --all-namespaces\n```", "```\nkubectl apply -f ./grafana/grafana-serviceaccount.yaml\n```", "```\n...\ndatasources:\n- name: prometheus\n...\n url: http://prometheus-service.monitoring.svc:9090\n...\n```", "```\nkubectl apply -f ./grafana/grafana-datasources-provision.yaml\n```", "```\n...\ndata:\n  dashboards.yaml: |-\n    {\n        \"apiVersion\": 1,\n        \"providers\": [{\n           \"folder\": \"\",\n           \"name\": \"default\",\n           \"options\": {\n             \"path\": \"/etc/grafana/dashboards\" \n           },\n           \"orgId\": 1,\n           \"type\": \"file\"\n         }]\n    }\nkind: ConfigMap\n...\n```", "```\n...\ndata:\n  node_exporter_basics.json: |-\n    {\n...\n    }\nkind: ConfigMap\n...\n```", "```\nkubectl apply -f ./grafana/grafana-dashboards-provision.yaml\n\nkubectl apply -f ./grafana/grafana-dashboards.yaml\n```", "```\nkubectl apply -f ./grafana/grafana-deployment.yaml\n```", "```\n... \n        volumeMounts:\n        - name: grafana-datasources-provision\n          mountPath: /etc/grafana/provisioning/datasources\n        - name: grafana-dashboards-provision\n          mountPath: /etc/grafana/provisioning/dashboards\n        - name: grafana-dashboards\n          mountPath: /etc/grafana/dashboards\n...\n```", "```\nkubectl rollout status deployment/grafana -n monitoring\n```", "```\nkubectl apply -f ./grafana/grafana-service.yaml\n\nkubectl apply -f ./grafana/grafana-servicemonitor.yaml\n```", "```\nminikube service grafana -n monitoring\n```", "```\nminikube delete\n```", "```\nlabel_replace(avg by (mode, instance) (irate(node_cpu_seconds_total{instance=\"$instance\", mode!=\"idle\"}[5m])), \"instance\", \"$1\", \"instance\", \"([^:]+):.+\")\n```", "```\nvagrant@prometheus:/usr/share/prometheus$ systemctl cat prometheus\n...\nExecStart=/usr/bin/prometheus \\\n    --config.file=/etc/prometheus/prometheus.yml \\\n    --storage.tsdb.path=/var/lib/prometheus/data \\\n --web.console.templates=/usr/share/prometheus/consoles \\\n --web.console.libraries=/usr/share/prometheus/console_libraries\n...\n```", "```\nvagrant@prometheus:~$ ls -lh /usr/share/prometheus/consoles \ntotal 36K\n-rw-r--r-- 1 root root 623 Mar 10 16:28 index.html.example\n-rw-r--r-- 1 root root 2.7K Mar 10 16:28 node-cpu.html\n-rw-r--r-- 1 root root 3.5K Mar 10 16:28 node-disk.html\n-rw-r--r-- 1 root root 1.5K Mar 10 16:28 node.html\n-rw-r--r-- 1 root root 5.7K Mar 10 16:28 node-overview.html\n-rw-r--r-- 1 root root 1.4K Mar 10 16:28 prometheus.html\n-rw-r--r-- 1 root root 4.1K Mar 10 16:28 prometheus-overview.html\n```", "```\n{{template \"head\" .}}\n\n{{template \"prom_content_head\" .}}\n```", "```\n<h1>Grafana</h1>\n\n<h3>Requests by endpoint</h3>\n<div id=\"queryGraph\"></div>\n<script>\nnew PromConsole.Graph({\n  node: document.querySelector(\"#queryGraph\"),\n  expr: \"sum(rate(http_request_total{job='grafana'}[5m])) by (handler)\",\n  name: '[[ handler ]]',\n  yAxisFormatter: PromConsole.NumberFormatter.humanizeNoSmallPrefix,\n  yHoverFormatter: PromConsole.NumberFormatter.humanizeNoSmallPrefix,\n  yUnits: \"/s\",\n  yTitle: \"Requests\"\n})\n</script>\n```", "```\n{{template \"prom_content_tail\" .}}\n\n{{template \"tail\"}}\n```"]