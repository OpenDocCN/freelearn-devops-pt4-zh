- en: Security and Compliance
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全性与合规性
- en: As important as it is to ensure that your application performs the functions
    it needs to, you also need to ensure it doesn't do things that it shouldn't. In
    the previous chapter, you learned about quality and testing in order to continuously
    measure whether your application is doing what it is supposed to do. In this chapter,
    you will learn how to prevent any unwanted behavior. This is the subject of security
    and compliance. While increasing the flow of value to your end users—by deploying
    faster and shortening delivery cycles—you will still want to make sure that you
    are delivering secure and compliant software. In this chapter, you will learn
    how to address these concerns in your DevOps processes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 就像确保你的应用程序执行所需功能一样重要，你还需要确保它不会做不该做的事。在上一章中，你学习了质量和测试，以便持续衡量应用程序是否按预期工作。在本章中，你将学习如何防止任何不希望发生的行为。这就是安全性和合规性的主题。在增加价值流向终端用户——通过更快地部署和缩短交付周期——的同时，你仍然需要确保交付的是安全且符合规定的软件。在本章中，你将学习如何在
    DevOps 流程中解决这些问题。
- en: 'To do this, this chapter will start by discussing the perceived trade-off between
    speed and security, and it will explain how security is not decreased but might
    even be increased when embracing DevOps. Next, a specific dimension of security
    is addressed: how to handle secrets such as keys and passwords that your pipeline
    and application need securely. Following this, code scanning tools for automatically
    identifying possible security risks in your application code and in your dependencies
    are discussed. The chapter concludes by discussing how to keep your infrastructure
    and configuration deployments compliant, and how to detect runtime security risks
    and threats using Azure Policy and Security Center.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，本章将首先讨论速度与安全性之间的权衡，并解释如何在拥抱 DevOps 时安全性并不会降低，甚至可能增加。接下来，将讨论安全性的一个具体维度：如何安全地处理管道和应用程序所需的机密信息，如密钥和密码。随后，将讨论代码扫描工具，用于自动识别应用程序代码和依赖项中可能存在的安全风险。本章最后将讨论如何保持基础设施和配置部署的合规性，以及如何使用
    Azure 策略和安全中心检测运行时安全风险与威胁。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Applying DevOps principles to security and compliance
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 DevOps 原则应用于安全性和合规性
- en: Working with secrets
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理机密信息
- en: Detecting application code vulnerabilities
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测应用程序代码漏洞
- en: Working with dependencies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理依赖项
- en: Ensuring infrastructure compliance
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保基础设施合规性
- en: Monitoring and detecting runtime security risks and threats
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控和检测运行时安全风险与威胁
- en: Other tools you can use
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用的其他工具
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To experiment with the techniques described in this chapter, you will need
    one or more of the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要尝试本章中描述的技术，你将需要以下一项或多项资源：
- en: An Azure DevOps project with access to build and release pipelines and the right
    to install extensions
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个具有构建和发布流水线访问权限并且有权安装扩展的 Azure DevOps 项目
- en: An Azure subscription. (To sign up for Azure, you can go to [https://portal.azure.com](https://portal.azure.com)
    and follow the guide there if you do not have an account yet)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 Azure 订阅。 （如果你还没有账户，可以访问[https://portal.azure.com](https://portal.azure.com)，并按照指南进行注册）
- en: PowerShell with the PowerShell Azure module installed. (Instructions on how
    to install the PowerShell Azure module can be found at [https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-4.1.0](https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-4.1.0))
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了 PowerShell Azure 模块的 PowerShell。 （有关如何安装 PowerShell Azure 模块的说明，请参考[https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-4.1.0](https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-4.1.0)）
- en: Optionally, subscriptions for WhiteSource Bolt, SonarCloud, or similar products
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选的 WhiteSource Bolt、SonarCloud 或类似产品的订阅
- en: The preceding are all available, for free or as a trial, for learning or evaluation
    purposes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 前述所有内容都可以免费或作为试用版使用，供学习或评估之用。
- en: Applying DevOps principles to security and compliance
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 DevOps 原则应用于安全性和合规性
- en: Concerns about security and compliance can be a reason for companies to be reluctant
    to accept a full DevOps mindset, in order to ship software often and quickly.
    In the past, they used to have fewer releases that were all handed off for a security
    or pen test before being deployed to production. This gave them the confidence
    that they were not shipping software that contained security vulnerabilities.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对安全性和合规性的担忧可能是公司不愿意接受完整DevOps思维方式的原因之一，以便能够更频繁、更快速地发布软件。过去，他们通常有较少的发布，每个版本发布前都会交由安全团队或进行渗透测试，然后再部署到生产环境。这种做法使他们确信不会发布包含安全漏洞的软件。
- en: This practice of fewer releases and having a big final security test before
    the final release conflicts with a DevOps mindset, and this is where some companies
    struggle. They are looking for ways to ensure that they are shipping business
    value to their users but are not willing to compromise on security to do so. The
    question is whether this is a fair trade-off. Wouldn't it be possible to have
    both speed and security? Might it not actually be the case that releasing faster
    and more often, in combination with rigorous automation, can help to increase
    the level of security in software development? To answer this question, it is
    good to first explore how security is often practiced in non-DevOps environments
    and how this needs to be changed when adopting DevOps.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这种较少发布并在最终发布前进行一次大的安全测试的做法，与DevOps思维方式相冲突，这也是一些公司面临的挑战所在。他们希望确保将业务价值交付给用户，但又不愿为此牺牲安全性。问题在于，这种权衡是否公平。是否可以在保证速度的同时确保安全性？难道更快、更频繁的发布，并结合严格的自动化，反而可以提高软件开发中的安全性吗？为了回答这个问题，我们首先可以探索一下在非DevOps环境中如何进行安全性实践，以及采用DevOps后这种实践需要如何改变。
- en: Bringing developers and security engineers together
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将开发人员和安全工程师聚集在一起
- en: In many companies, security engineers are part of a different department compared
    to developers. The thought behind this separation is that it is beneficial to
    have some distance between those who are writing the code (that is, the developers)
    and those who are checking it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多公司中，安全工程师与开发人员通常属于不同的部门。这种分离的背后理念是，保持一定的距离是有益的，即将编写代码的人（即开发人员）与检查代码的人分开。
- en: In the past, the same separation often existed between software developers and
    software testers. However, recent insights have shown that putting developers
    and testers closer together does not result in unwanted behaviors such as group
    thinking, only testing what is already known to be working, or trying to cheat
    the tests by developing only for known test cases. Both experience and research
    show that the opposite is true. Putting developers and testers together results
    in products of higher quality. It is for this reason that movements such as Agile
    recommend development teams to incorporate, among other things, the discipline
    of testing.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，软件开发人员和软件测试人员之间也常常存在这种分离。然而，最近的研究表明，将开发人员和测试人员放得更近，并不会导致像群体思维、仅测试已知可行的部分或通过仅开发已知测试用例来作弊等不良行为。经验和研究都表明，情况恰恰相反。将开发人员和测试人员放在一起，能产生更高质量的产品。正因如此，像敏捷开发（Agile）这样的运动建议开发团队将测试等学科纳入其中。
- en: It is by this same reasoning that the call for integrating security engineering
    into DevOps development teams is becoming louder. This movement is often called
    "DevSecOps" or "rugged DevOps." Both movements advocate that using DevOps principles
    such as shifting left and automating as much as possible can help to increase
    security. They advocate that pen tests or vulnerability reviews of applications
    are no longer done manually, but that they are fully automated as part of the
    delivery pipeline. This enables automation, faster feedback loops, and continuous
    delivery and deployment practices.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 正是基于这一思路，将安全工程整合到DevOps开发团队中的呼声变得越来越高。这一运动通常被称为“DevSecOps”或“强健的DevOps”。这两个运动主张，采用DevOps原则，如将测试提前（shifting
    left）和尽可能多地自动化，能够帮助提高安全性。他们主张不再手动进行渗透测试或漏洞审查，而是将其作为交付管道的一部分，完全自动化。这样可以实现自动化、更快的反馈循环和持续交付与部署实践。
- en: 'It is also advocated that shipping software more often can also help to increase
    security further, for the following reasons:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 也有观点认为，软件发布频率增加还可以进一步提高安全性，原因如下：
- en: When a reliable mechanism for shipping software automatically is available,
    any change that addresses a security risk can be deployed within minutes or days.
    Being able to react quickly to a new finding is a great security improvement.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当可以使用可靠的机制自动交付软件时，任何解决安全风险的更改都可以在几分钟或几天内部署。能够迅速响应新的发现是一个极大的安全提升。
- en: Speed itself can be a security measure. If the working of a system changes multiple
    times a day, it is significantly harder to figure out what its inner workings
    are at any given time and to misuse them.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 速度本身也可以是一个安全措施。如果一个系统每天的工作内容发生多次变化，那么在任何时刻要想搞清楚它的内部工作原理并加以滥用将变得极其困难。
- en: Applying the principle of immutable deployments and using infrastructure as
    code ensures that the infrastructure that is running an application is refreshed
    pretty often. This is a good mitigation of advanced persistent threats*.*
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用不可变部署原则，并使用基础设施即代码（Infrastructure as Code）可确保运行应用程序的基础设施得到定期刷新。这是缓解高级持续性威胁（APT）的一个有效方法。
- en: One of the things this chapter will explore is how to configure delivery pipelines
    to add security scanning. Please note that running these tools from a pipeline
    is a different discipline, which ensures that these tools are properly configured
    and apply the correct policies and requirements. For these activities, a security
    background and a close collaboration with security engineers are still essential.
    This is just another area where close collaboration can make a difference. Particularly
    on the subject of security, collaboration with other disciplines will be necessary;
    not to introduce manual checks, but to automate them together.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨的一个内容是如何配置交付流水线以加入安全扫描。请注意，从流水线运行这些工具是一种不同的实践，它确保这些工具被正确配置，并应用正确的策略和要求。在这些活动中，安全背景和与安全工程师的紧密合作仍然至关重要。这只是另一个可以通过紧密合作产生影响的领域。尤其是在安全问题上，与其他学科的合作将是必需的；并非为了引入手动检查，而是为了共同实现自动化。
- en: Security concerns
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全问题
- en: 'The rest of this chapter will introduce a number of security concerns, but
    it is helpful to realize that some of the previous chapters have also introduced
    security concerns already. As you already know from software development, security
    is not just something that you add in one place. Security should be applied everywhere.
    The following diagram shows different activities surrounding the creation and
    delivery of software. Next to each activity, the applicable security concerns
    are shown:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍一些安全问题，但需要认识到，前面的一些章节已经涉及了安全问题。正如你在软件开发中已经知道的，安全并不是仅仅在某个地方添加的东西。安全应当应用于每一个环节。以下图表展示了与软件创建和交付相关的不同活动。在每个活动旁边，列出了相关的安全问题：
- en: '![](img/53bc936d-33ad-485a-9d82-684d8268b6d2.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/53bc936d-33ad-485a-9d82-684d8268b6d2.png)'
- en: 'Let''s walk through a quick recap of the security concerns at each of these
    stages:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速回顾一下每个阶段的安全问题：
- en: '**Branch-master merge**: At this stage, the four-eyes principle is applied
    using pull requests. Pull requests allow another engineer to review the changes
    before they are merged into the master branch. Branch policies are used to make
    the use of pull requests mandatory, to ensure that the code compiles and that
    the unit tests run. This was discussed in [Chapter 2](2be30fb3-5e71-4180-9830-f119e5a6cd76.xhtml),
    *Everything Starts with Source Control*, and [Chapter 3](7dcfa6ee-1460-4c49-a156-58073b263c90.xhtml),
    *Moving to Continuous Integration*.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主分支合并**：在这个阶段，通过拉取请求应用了四眼原则。拉取请求允许另一位工程师在代码合并到主分支之前进行审查。分支策略用于强制使用拉取请求，以确保代码能够编译且单元测试能够通过。这在[第2章](2be30fb3-5e71-4180-9830-f119e5a6cd76.xhtml)《一切从源代码管理开始》和[第3章](7dcfa6ee-1460-4c49-a156-58073b263c90.xhtml)《迁移到持续集成》中有讨论，*一切从源代码管理开始*，以及*迁移到持续集成*。'
- en: '**Build**: During this stage, a security scan of all source code and third-party
    dependencies is executed by adding additional tasks to the build pipeline. This
    prevents security risks from propagating unchecked. We discuss how to do this
    in this chapter, in the *Working with secrets* section.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建**：在这个阶段，通过向构建流水线中添加额外的任务，执行对所有源代码和第三方依赖项的安全扫描。这可以防止安全风险在未受控的情况下扩散。本章的*与秘密相关的工作*部分将讨论如何进行此操作。'
- en: '**Release**: During the release, approvers can be configured. An approver is
    a user who has to give their approval before the deployment to a specific stage
    can continue. Additionally, automated release gates are used to ensure (and further
    enforce) that certain criteria are met before a release can continue. We discuss
    how to do this in [Chapter 4](8ab4597a-becd-4855-9b45-89045982c14a.xhtml), *Continuous
    Deployment.*'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布**：在发布过程中，可以配置审批者。审批者是必须在部署到特定阶段之前给出批准的用户。此外，还使用自动化发布门控，确保（并进一步强制）在发布继续之前满足某些标准。我们将在
    [第4章](8ab4597a-becd-4855-9b45-89045982c14a.xhtml)，*持续部署* 中讨论如何做到这一点。'
- en: '**Deployment environment **(**target systems**): All applications will run
    on a target environment. This can be on-premises; however, in this book, the focus
    is on Azure. For runtime security and compliance concerns, this chapter will introduce
    Azure Policy and Azure Security Center.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署环境**（**目标系统**）：所有应用程序都将在目标环境中运行。它可以是本地的；然而，在本书中，我们的重点是 Azure。对于运行时的安全性和合规性问题，本章将介绍
    Azure Policy 和 Azure Security Center。'
- en: '**Cross-cutting**: All of the preceding points are only useful if there is
    sufficient access control within the Azure DevOps environment. While this is not
    in the scope of this book, it is an important angle to cover. Users should have
    enough rights to do their work, but they should not be able to make unauthorized
    changes to policies, builds, and deployment processes. Additionally, proper secret
    management is needed to keep secrets such as certificates, keys, and passwords
    secure during all phases of the delivery process. How we can do this is also covered
    in this chapter.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交叉切割**：所有前述的要点只有在 Azure DevOps 环境中有足够的访问控制时才有用。虽然这不在本书的范围内，但它是一个重要的角度需要涵盖。用户应该拥有足够的权限来完成他们的工作，但不应能够对策略、构建和部署过程进行未经授权的更改。此外，适当的秘密管理对于确保在交付过程的各个阶段，诸如证书、密钥和密码等机密信息的安全是必要的。本章还将涵盖我们如何做到这一点。'
- en: Now, with an understanding of how software and security engineers can come together
    to work on an application, it is time to address the different aspects of this
    work in the following sections. The next section will discuss how to handle secrets.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在理解了软件和安全工程师如何合作开发应用程序之后，接下来是处理这项工作不同方面的内容。本节将讨论如何处理机密。
- en: Working with secrets
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理机密
- en: An important security element is the handling of secrets. When deploying an
    application, there are always secrets involved. Especially when deploying to the
    cloud, that is, over the internet, handling these access keys in a secure way
    is very important. Besides the secrets that are necessary for deployment, there
    are also secrets that need to be inserted into the runtime configuration of an
    application. A common example is for accessing the database.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的安全元素是机密的处理。在部署应用程序时，始终涉及到机密。尤其是在将应用程序部署到云端，即通过互联网部署时，以安全的方式处理这些访问密钥非常重要。除了部署所需的机密外，还有一些机密需要插入到应用程序的运行时配置中。一个常见的例子是访问数据库的机密。
- en: In [Chapter 6](d981a2b6-8bf4-4fb7-8a2e-ceff84691588.xhtml), *Infrastructure
    and Configuration as Code*, multiple mechanisms for delivering application configurations
    were discussed, including **Azure Resource Manager** (**ARM**) templates. However,
    templates require the input of external secrets, since they cannot be stored in
    parameter files in source control.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第六章](d981a2b6-8bf4-4fb7-8a2e-ceff84691588.xhtml)，*基础设施和配置即代码* 中，讨论了多种交付应用程序配置的机制，包括
    **Azure 资源管理器** (**ARM**) 模板。然而，模板需要输入外部机密，因为它们不能存储在源代码控制的参数文件中。
- en: Secrets should not be stored in source control.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 机密不应存储在源代码控制中。
- en: If secrets cannot be stored in source control, then where should they be stored
    instead? Common options include storing secrets in service connections or in variable
    groups.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果机密不能存储在源代码控制中，那么应该将它们存储在哪里呢？常见的选择包括将机密存储在服务连接中或在变量组中存储。
- en: Storing secrets in service connections
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将机密存储在服务连接中
- en: The first group of secrets that are needed for the deployment of any application
    is those secrets that are required for connecting to the target system. No individual
    person should have access to these secrets as they are only used during deployments.
    This is why Azure Pipelines allows you to store them securely in service connections.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 部署任何应用程序所需的第一组机密是那些用于连接目标系统的机密。没有任何个人应访问这些机密，因为它们只在部署过程中使用。这就是为什么 Azure Pipelines
    允许你将它们安全地存储在服务连接中的原因。
- en: A service connection is the abstraction of another system that can be connected
    to from Azure DevOps. Service connections have a specific type, that is, to specify
    the family of systems they can be used to connect to. There are out of the service
    connection types for connecting to Azure, GitHub, Jira, NPM, NuGet, and over a
    dozen more systems. New service connection types can also be added through the
    Azure DevOps extension mechanism.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 服务连接是一个抽象，表示可以从 Azure DevOps 连接的另一个系统。服务连接有一个特定的类型，即指定它们可以连接的系统系列。例如，有用于连接到
    Azure、GitHub、Jira、NPM、NuGet 及其他十多个系统的服务连接类型。也可以通过 Azure DevOps 扩展机制添加新的服务连接类型。
- en: Service connections can contain a reference to the location of another system—often,
    a URL. Next to the location, they can contain an authorization token, a username,
    and/or a password, depending on the type of service connection. Secrets that are
    stored inside a service connection can never be retrieved again, not even by administrators.
    Also, whenever any details of the service connection are changed, the secret must
    be re-entered as well. This is to prevent a previously entered secret from being
    misused to access another location. These details indicate how service connections
    are designed to provide a secure location for storing connection credentials.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 服务连接可以包含对另一个系统位置的引用——通常是一个 URL。在位置旁边，它们可以包含授权令牌、用户名和/或密码，具体取决于服务连接的类型。存储在服务连接中的秘密不能再被取回，甚至管理员也不能访问。此外，每当服务连接的任何详细信息发生更改时，必须重新输入秘密。这是为了防止之前输入的秘密被滥用来访问另一个位置。这些细节表明，服务连接设计用于为存储连接凭据提供安全位置。
- en: 'Service connections can be managed in a central location for each Azure DevOps
    project. You can create new connections, edit existing ones, alter user permissions,
    and much more. Practice this by following these steps:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 服务连接可以在每个 Azure DevOps 项目的中央位置进行管理。您可以创建新的连接，编辑现有的连接，修改用户权限等。通过以下步骤进行操作：
- en: To open this view, navigate to Project Settings. A vertical list of various
    setting options will open.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要打开此视图，请导航到“项目设置”。一个垂直的设置选项列表将会打开。
- en: 'From the list, click on Service connections. You will be able to view the various
    connections, as shown in the following screenshot:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从列表中点击“服务连接”。您将能够查看各种连接，如下图所示：
- en: '![](img/9bcde9c0-1f2a-4bcf-a868-3b5df785685a.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bcde9c0-1f2a-4bcf-a868-3b5df785685a.png)'
- en: Now, click on the New service connection button in the top-right of the screen
    if you wish to create new service connections.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果您希望创建新的服务连接，请点击屏幕右上方的“新建服务连接”按钮。
- en: 'To modify an existing entry, simply click on it. This will take you to a screen
    that is similar to the following screenshot:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要修改现有条目，只需点击它。这将带您到一个与以下截图类似的屏幕：
- en: '![](img/f0a3719a-b771-4afd-b453-648effe9d6f4.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0a3719a-b771-4afd-b453-648effe9d6f4.png)'
- en: 'From this view, you can now carry out these actions:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从此视图，您现在可以执行以下操作：
- en: Edit the service connection details.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑服务连接详细信息。
- en: Alter user permissions.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改用户权限。
- en: Restrict permissions.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 限制权限。
- en: Add more users or groups, and specify, for each, whether they can use or administer
    the endpoint.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加更多用户或组，并指定每个用户是否可以使用或管理该端点。
- en: Specify which pipelines can use this service connection.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定哪些管道可以使用此服务连接。
- en: In the current view, every pipeline in the project can use the service connection.
    This is not recommended and can be secured using the Restrict permissions button
    (*3*). After securing the pipeline, each pipeline that wants to use the service
    connection must be authorized by a service connection administrator first.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前视图中，项目中的每个管道都可以使用该服务连接。这不推荐使用，并且可以通过“限制权限”按钮（*3*）来加固。在加固管道后，每个希望使用该服务连接的管道必须首先由服务连接管理员授权。
- en: Storing secrets in variable groups
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将秘密存储在变量组中
- en: There are more secrets involved in application development than those that are
    required to connect to other systems. Examples include license keys, which are
    required during application compilation, or database usernames and passwords,
    which need to be passed on to the application after deployment or as part of an
    ARM template deployment.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序开发中涉及的秘密比连接其他系统所需的要多。举例来说，包括在应用程序编译期间需要的许可证密钥，或者在部署后需要传递给应用程序的数据库用户名和密码，或者作为
    ARM 模板部署的一部分。
- en: These secrets can be stored in pipeline variables or variable groups, which
    we covered in [Chapter 3](7dcfa6ee-1460-4c49-a156-58073b263c90.xhtml), in the
    *Creating a build definition in Azure DevOps* section. Microsoft will store all
    variables that are marked as secrets securely and make them non-retrievable through
    the user interface.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这些密钥可以存储在管道变量或变量组中，我们在[第 3 章](7dcfa6ee-1460-4c49-a156-58073b263c90.xhtml)的*在
    Azure DevOps 中创建构建定义*部分中已涵盖。微软将安全地存储所有标记为密钥的变量，并使其通过用户界面不可检索。
- en: However, there might be reasons for not wanting to store secrets in Azure DevOps
    but in a specialized key store such as Azure Key Vault instead. Doing so will
    provide the extra guarantees that come with Key Vault and the ability to further
    control access policies using **Azure** **role-based access control** (**Azure ****RBAC**)
    and Key Vault access policies.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，可能有一些原因不希望将密钥存储在 Azure DevOps 中，而是希望将其存储在专用的密钥存储库中，如 Azure 密钥保管库。这样做将提供密钥保管库附带的额外保障，并且能够通过**Azure**
    **基于角色的访问控制** (**Azure ****RBAC**) 和密钥保管库访问策略进一步控制访问权限。
- en: 'When storing secrets in an Azure key vault, they can still be used as a variable
    group as well, by connecting an empty variable group to the key vault through
    a service connection, as shown in the following screenshot:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 将密钥存储在 Azure 密钥保管库中时，它们仍然可以作为变量组使用，通过通过服务连接将空变量组连接到密钥保管库，如下图所示：
- en: '![](img/0c867831-d8e7-4f80-9ad1-bbebbf60e887.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c867831-d8e7-4f80-9ad1-bbebbf60e887.png)'
- en: 'To use a key vault as the storage for a variable group, perform the following
    actions:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要将密钥保管库用作变量组的存储，请执行以下操作：
- en: Enable the second slider to load the secrets from the key vault.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用第二个滑动开关，以从密钥保管库加载密钥。
- en: Select an already existing ARM service connection from the drop-down menu, or
    create a service connection with a new managed identity for Azure on the fly by
    selecting an Azure subscription from the list.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择一个已存在的 ARM 服务连接，或通过从列表中选择 Azure 订阅，动态创建一个新的带有托管身份的 Azure 服务连接。
- en: Type in the name of the key vault that the secrets should be loaded into. You
    can also select one from the drop-down menu. In that case, only key vaults that
    are accessible by the selected service connection are shown.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入应加载密钥的密钥保管库名称。你也可以从下拉菜单中选择一个。在这种情况下，只有所选服务连接可访问的密钥保管库才会显示。
- en: It is recommended that you disable the slider that allows access to all pipelines.
    In general, open authorizations are considered a risk, but, in particular, variable
    groups that hold secrets should only be available to explicitly authorized users.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建议禁用允许访问所有管道的滑动开关。通常，开放授权被认为是一个风险，尤其是包含密钥的变量组应仅对明确授权的用户可用。
- en: Access for specific users can be configured using the Security tab.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过“安全”标签页为特定用户配置访问权限。
- en: The proper authorizations for the service connection to Azure and the key vault
    can also be automatically created. Please note that both operations will make
    changes to the Azure security setup, so ensure that these are (still) correct.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以自动创建服务连接到 Azure 和密钥保管库所需的正确授权。请注意，这两个操作都会更改 Azure 安全设置，因此请确保这些设置（仍然）正确。
- en: Detecting unsecured secrets
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测不安全的密钥
- en: As mentioned previously, secrets should not be stored in source control, which
    is why the capabilities discussed earlier are available. Still, a developer can,
    by accident or for local testing, write down secrets in the application source
    code.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，不应将密钥存储在源代码控制中，这就是为什么之前讨论的功能可用的原因。然而，开发人员可能会因意外或进行本地测试而将密钥写入应用程序源代码中。
- en: To ensure that these secrets do not end up in source control, a local plugin
    can be used to detect secrets and emit a warning to alert the developer to this
    risk. One tool that can do this for Visual Studio is the **Continuous Delivery
    Tools for Visual Studio** extension. This extension scans any open file for secrets
    and emits a compiler warning when it detects a possible secret. A link to this
    extension is added to the references at the end of this chapter. After running
    the installer, any secret it detects in Visual Studio will result in a compiler
    warning. Unfortunately, at the time of writing, the extension does not yet support
    Visual Studio 2019.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保这些秘密不会被提交到源代码管理中，可以使用本地插件来检测秘密并发出警告，提醒开发人员这个风险。一个可以为 Visual Studio 实现这一功能的工具是**Visual
    Studio 的持续交付工具**扩展。此扩展会扫描任何打开的文件中的秘密，并在检测到可能的秘密时发出编译器警告。有关此扩展的链接已添加到本章末尾的参考资料中。安装程序运行后，任何在
    Visual Studio 中检测到的秘密都会导致编译器警告。遗憾的是，在编写本文时，该扩展尚不支持 Visual Studio 2019。
- en: In addition to this, it is advised that you run a similar tool as part of the
    delivery pipelines to identify any secrets that have accidentally been checked
    in. Even though it will be too late to keep the secret secure, it does provide
    a clear signal that the secret is compromised and needs to be changed. One tool
    that can do this is **CredScan**. CredScan is a build task that is part of the
    **Microsoft Security Code Analysis Extension** build task.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，建议将类似的工具作为交付流水线的一部分运行，以识别任何被意外提交的秘密。尽管这时候保护秘密已经太晚，但它确实提供了一个明确的信号，表明秘密已经泄露，需要更换。一个可以做到这一点的工具是**CredScan**。CredScan
    是 **Microsoft Security Code Analysis Extension** 构建任务的一部分。
- en: The Microsoft Security Code Analysis Extension comes with more capabilities
    than just CredScan. It also includes other security tools offered by Microsoft.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft 安全代码分析扩展不仅仅包含 CredScan。它还包括 Microsoft 提供的其他安全工具。
- en: A link to the details of this extension is available at the end of this chapter;
    it also includes all of the installation details. Please note that the extension
    is only available under certain conditions and is not free.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 该扩展的详细信息链接可在本章末尾找到；其中还包括所有安装细节。请注意，该扩展仅在特定条件下可用，并且并非免费。
- en: 'Once the extension has been installed, CredScan can be added to your pipeline,
    as shown here:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展安装完成后，可以将 CredScan 添加到你的流水线中，如下所示：
- en: '![](img/2d4bc1d8-351f-4bbd-83e5-e088d8eb42c2.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d4bc1d8-351f-4bbd-83e5-e088d8eb42c2.png)'
- en: 'Perform these steps while referring to the annotations in the screenshot:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在参考截图中的注解时，执行这些步骤：
- en: Add the *R*un Credential Scanner task to the pipeline.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将*运行凭证扫描器*任务添加到流水线中。
- en: Update the Tool Major Version to V2\. For all of the other options, the default
    settings are good enough for a first scan.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将工具的主版本更新为 V2。对于所有其他选项，默认设置对于首次扫描已经足够。
- en: If there have been previous scans that result in one or more false positives,
    they can be removed from the results by pointing to a suppressions file.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果之前的扫描导致一个或多个误报，可以通过指向抑制文件将其从结果中移除。
- en: Add the Create Security Analysis Repor*t* task to the pipeline.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将创建安全分析报告的任务添加到流水线中。
- en: Add the Publish Security Analysis Logs task to the pipeline.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将发布安全分析日志的任务添加到流水线中。
- en: Add the Post Analysis task to the pipeline.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将后分析任务添加到流水线中。
- en: Save and queue the build definition.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存并排队构建定义。
- en: While some tasks fail and cancel the build when an error is detected, the CredScan
    task does not. It will always complete successfully, even if passwords are detected.
    Only the *Post Analysis* task at the end of the build will act on discovered problems
    and fail the build if there are any issues found. The advantage of this is that
    all issues are identified, not only the first one. It also allows any other tasks
    you want to run to be completed.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然某些任务会在检测到错误时失败并取消构建，但 CredScan 任务则不会。即使检测到密码，它也总是会成功完成。只有在构建结束时的*后分析*任务会对发现的问题进行处理，并在发现问题时使构建失败。这样做的好处是，所有问题都会被识别，而不仅仅是第一个问题。这也允许任何其他任务在完成后继续执行。
- en: 'The security analysis reporting task (*step 4*) is used to gather the logs
    of the different scanning tools that are part of the suite and combine the output
    into CSV and HTML files. The publishing task (*step 5*) publishes all of the generated
    files as a build artifact. If a possible password is detected, the following HTML
    will be generated and published as a build artifact:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 安全分析报告任务（*第4步*）用于收集属于工具套件的一些扫描工具的日志，并将输出汇总成CSV和HTML文件。发布任务（*第5步*）将所有生成的文件作为构建产物发布。如果检测到可能的密码，以下HTML将被生成并作为构建产物发布：
- en: '![](img/8b12d7d2-a489-41af-ab81-fc5697587528.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8b12d7d2-a489-41af-ab81-fc5697587528.png)'
- en: This concludes our discussion of secrets and how to keep them secure in a DevOps
    pipeline. The next section covers the detection of application vulnerabilities.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容到此结束，介绍了如何在DevOps流水线中保持秘密的安全。下一节将讨论应用程序漏洞的检测。
- en: Detecting application code vulnerabilities
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测应用程序代码漏洞
- en: The security assessments that are often conducted at regular intervals in the
    pre-DevOps era cannot be just left out when moving to a DevOps culture. This means
    that, instead of leaving them out, they must be conducted in some other way. There
    are two approaches for doing this.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在DevOps文化转型之前，通常定期进行的安全评估不能完全被忽视。这意味着，不能把它们省略，而是必须以其他方式进行。对此有两种方法。
- en: The first approach is to keep doing pen tests, security reviews, and other security
    inspections at regular intervals just as before. However, instead of waiting for
    an OK from the tests before moving to production, the code is deployed to production
    separate from the security assessment(s). This implies that there is an accepted
    risk that there might be vulnerabilities shipped to production that are found
    only during the next security scan and will be addressed in the next release.
    Using this approach, it is possible to achieve speed, but then it also needs to
    be accepted that some vulnerabilities might exist for a while.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是继续定期进行渗透测试、安全评审和其他安全检查，就像以前一样。然而，代码不是等到通过测试后才进入生产环境，而是与安全评估分开直接部署到生产环境。这意味着存在一个接受的风险，即可能会有漏洞被部署到生产环境，直到下一次安全扫描时才会发现，并将在下一个版本中解决。采用这种方法，可以提高速度，但也需要接受一些漏洞可能会存在一段时间。
- en: The second approach relies on making application security scanning part of the
    regular workflow for committing code to the source code repository. For example,
    security code reviews do not have to be done per increment or every two months.
    They can also be done per pull request—before the code gets merged. Now, all of
    a sudden, you are no longer detecting vulnerabilities but are instead preventing
    them. The same can be done with security vulnerability scans. They can become
    part of the delivery pipeline, or a full nightly QA build that reports back on
    the quality of development every morning.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法是将应用程序安全扫描纳入提交代码到源代码仓库的常规工作流程中。例如，安全代码评审不需要每次增量更新时都做，也不需要每两个月做一次。它们也可以在每次拉取请求时进行——在代码合并之前。这样一来，你就不再是检测漏洞，而是在防止漏洞的产生。安全漏洞扫描也可以采用同样的方式，它们可以成为交付流水线的一部分，或者成为一个完整的夜间QA构建，每天早上报告开发质量。
- en: Of course, it is often not as black and white, and many companies use a combination
    of these approaches. They use automated feedback mechanisms to detect whatever
    they can, make security code reviews part of the pull request workflow, and then
    combine this with manual pen testing at regular intervals. In this way, the speed
    of delivery is increased, while there is no increase or even a decrease in security
    risks, the last being the consequence of the speed at which vulnerabilities can
    be mitigated.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这种方式往往不是非黑即白，许多公司会采用这些方法的组合。他们使用自动化反馈机制来检测能发现的漏洞，将安全代码评审纳入拉取请求工作流，然后结合定期的人工渗透测试。通过这种方式，交付速度得以提高，同时安全风险并没有增加，甚至因为能够快速缓解漏洞而有所减少。
- en: OWASP Top 10
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OWASP前十
- en: When it comes to the security of web applications, there are several types of
    security issues that are both common and responsible for the vast majority of
    all security issues. These types of issues are known as the OWASP Top 10\. This
    is a list of the 10 most common types of security issues, published by the **Open
    Web Application Security Platform** (**OWASP**). The list is reviewed every few
    years but has remained quite stable over the last couple of years.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈到网页应用的安全性时，有几种类型的安全问题是常见的，并且负责大多数所有安全问题。这些问题类型被称为OWASP Top 10。这是由**开放网页应用安全平台**（**OWASP**）发布的十大常见安全问题列表。该列表每隔几年会进行审查，但在过去几年里保持了相当的稳定性。
- en: Most of the errors in the OWASP Top 10 can be prevented by implementing automated
    security tests; either by using static code analysis for security vulnerabilities
    or with dynamic testing using the **OWASP Zed Attack Proxy** (**OWASP** **ZAP**).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP Top 10中的大多数错误可以通过实施自动化安全测试来预防；无论是通过使用静态代码分析来发现安全漏洞，还是通过使用**OWASP Zed Attack
    Proxy**（**OWASP** **ZAP**）进行动态测试。
- en: Implementing automated vulnerability scanning
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施自动化漏洞扫描
- en: In the previous chapter, in which continuous testing was discussed, SonarCloud
    was already introduced as a code scanner for technical debt and code quality.
    Besides assessing the quality of application code, SonarCloud can also be used
    to scan for security vulnerabilities. In [Chapter 8](d86e8d08-7a5c-40da-978c-6dd7cb61c140.xhtml), *Continuous
    Testing*, you learned how to add a SonarCloud scan to your pipeline. There are
    other, more specialized tools available as well, which we will discuss in the
    last section of this chapter.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章节中，我们讨论了持续测试，并已经介绍了SonarCloud作为技术债务和代码质量的代码扫描器。除了评估应用代码的质量外，SonarCloud还可以用来扫描安全漏洞。在[第8章](d86e8d08-7a5c-40da-978c-6dd7cb61c140.xhtml)《持续测试》中，你已经学会了如何将SonarCloud扫描添加到你的流水线中。除此之外，还有其他更专业的工具可用，我们将在本章的最后一节讨论这些工具。
- en: These tools assess the application based on static tests. They scan the code
    to identify any risky code. This is called a white-box approach because they can
    see, inspect, and scan all of the code. In other words, everything is visible.
    This is the opposite of a black-box approach, where the running is application
    is treated as a closed whole and is only tested by invoking it and observing the
    responses. One tool that can do this is the OWASP ZAP.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具基于静态测试评估应用程序。它们扫描代码以识别任何有风险的代码。这被称为白盒方法，因为它们可以查看、检查和扫描所有代码。换句话说，所有内容都是可见的。这与黑盒方法相反，在黑盒方法中，运行中的应用程序被视为一个封闭的整体，只通过调用它并观察响应来进行测试。一个可以实现这一点的工具是OWASP
    ZAP。
- en: OWASP Zed Attack Proxy
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**OWASP Zed Attack Proxy**'
- en: 'The OWASP ZAP is a tool that can perform the automated pen test of an application.
    This tool can run in two modes:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**OWASP ZAP**是一个可以执行应用自动化渗透测试的工具。该工具可以以两种模式运行：'
- en: '**A baseline scan**: The baseline scan takes only a few minutes, and it is
    optimized to iterate over as many security risks as possible within those few
    minutes. This makes the baseline scan quick enough to be run early on in the deployment
    pipeline. It is even possible to run the security scan after every deployment
    to the first test environment, resulting in fast feedback to developers.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基线扫描**：基线扫描只需几分钟，并且在这几分钟内优化为尽可能多地扫描安全风险。这使得基线扫描足够快速，可以在部署流水线的早期运行。甚至可以在每次部署到第一个测试环境后运行安全扫描，从而为开发人员提供快速反馈。'
- en: '**A full active scan**: The full active scan takes more time. In this type
    of scan, the proxy will examine every response from the application to identify
    other URLs that are part of the application, scanning them as well. In this way,
    the full application is discovered on the fly, using a spidering approach. This
    type of scan is more complete, but it also takes more time. For this reason, full
    scans are often run at intervals, for example, every night.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**完整主动扫描**：完整主动扫描需要更多时间。在这种类型的扫描中，代理将检查应用的每个响应，以识别属于该应用的其他URL，并对其进行扫描。通过这种方式，完整的应用程序会在运行时被发现，采用蜘蛛爬行的方法。这种扫描方式更加全面，但也需要更多的时间。因此，完整扫描通常是定期运行的，例如每晚一次。'
- en: The OWASP ZAP proxy tries to identify any possible security risks. Some of the
    most notable risks are SQL injections, JavaScript reflections, and path traversals.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**OWASP ZAP**代理尝试识别任何可能的安全风险。一些最显著的风险包括SQL注入、JavaScript反射和路径遍历。'
- en: The OWASP ZAP is an application that can be installed on any virtual machine.
    The disadvantage of this is that the virtual machine is always running, even when
    there is no scan running. This is more costly, and, of course, the virtual machine
    itself needs to be patched and secured too. More recently, a containerized version
    of the proxy was also made available. This container can be run in Azure Container
    Instances, spinning up the proxy only when needed and tearing it down right after
    execution.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: OWASP ZAP 是一个可以安装在任何虚拟机上的应用程序。它的缺点是虚拟机始终在运行，即使没有正在进行的扫描。这会增加成本，当然，虚拟机本身也需要进行补丁更新和安全防护。最近，代理的容器化版本也已推出。这个容器可以在
    Azure 容器实例中运行，仅在需要时启动代理，并在执行完毕后立即关闭。
- en: This completes our introduction to code scanning tools and their implementation.
    With the help of these tools, you can detect vulnerabilities in your application
    and prevent any security issues. The next section will examine how you can scan
    application dependencies.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了我们对代码扫描工具及其实施的介绍。借助这些工具，您可以检测应用程序中的漏洞并防止安全问题。接下来的部分将探讨如何扫描应用程序的依赖项。
- en: Working with dependencies
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用依赖项
- en: Next to the security risks that the application code developed in-house pose,
    there is also a risk associated with components that are reused. Between 50% and
    80% of modern application code is not developed in-house, but is taken from other
    parties in the form of packages or dependencies. Some of these might be open source,
    but this is not necessarily the case. There can also be components that are bought
    from other development companies or binaries taken from galleries such as NuGet.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 除了应用程序代码开发中的安全风险外，还有与重用组件相关的风险。现代应用程序代码中，50% 到 80% 不是在内部开发的，而是通过包或依赖项从其他方获得的。其中一些可能是开源的，但并不一定是。也有一些组件是从其他开发公司购买的，或者是从如
    NuGet 这样的库中获取的二进制文件。
- en: Dependencies not only pose security risks, but also licensing risks. What happens
    if a team starts using a component that is published under the GPL license for
    a closed source component? If anyone ever finds out, they can be forced to open
    source their product, or at least suffer public shame for not using the work of
    others according to the license.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖不仅会带来安全风险，还可能带来许可风险。如果一个团队开始使用一个根据 GPL 许可证发布的组件来构建闭源组件会怎样？如果有人发现了，团队可能被迫将其产品开源，或者至少因为未按照许可证使用他人的作品而遭遇公众羞耻。
- en: To mitigate these risks, a number of tools can be used to detect and scan all
    of the dependencies that are used when building an application. One of the tools
    available to do this is WhiteSource Bolt, which is available as an extension from
    the Azure DevOps marketplace.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减轻这些风险，可以使用多种工具来检测和扫描在构建应用程序时使用的所有依赖项。WhiteSource Bolt 是其中一个可用的工具，它作为扩展从 Azure
    DevOps 市场提供。
- en: Working with WhiteSource Bolt
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 WhiteSource Bolt
- en: 'To start executing scans with WhiteSource Bolt, perform the following actions:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 WhiteSource Bolt 执行扫描，请执行以下操作：
- en: Install the WhiteSource Bolt extension from the Azure DevOps marketplace.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Azure DevOps 市场安装 WhiteSource Bolt 扩展。
- en: Navigate to the WhiteSource Bolt menu under Pipelines.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在管道下导航至 WhiteSource Bolt 菜单。
- en: Sign up and accept the license terms.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册并接受许可条款。
- en: 'Add the WhiteSource Bolt scanning task to build or release definitions, as
    shown in the following screenshot:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 WhiteSource Bolt 扫描任务添加到构建或发布定义中，如下图所示：
- en: '![](img/1b58e509-8bac-44d0-b335-0112b65dc334.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1b58e509-8bac-44d0-b335-0112b65dc334.png)'
- en: 'Once a pipeline with the WhiteSource Bolt task installed has run, the page
    with the build results will contain an extra tab called WhiteSource Bolt Build
    Report that shows the results, as shown in the following screenshot:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装了 WhiteSource Bolt 任务的管道运行完毕，包含构建结果的页面将会显示一个额外的标签，名为 WhiteSource Bolt Build
    Report，其中展示了扫描结果，如下图所示：
- en: '![](img/b2988506-f292-417e-8e0f-846debbe08d8.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2988506-f292-417e-8e0f-846debbe08d8.png)'
- en: 'This report provides a number of insights about the overall security and licensing
    risks of the scanned application build:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 该报告提供了关于扫描的应用程序构建的整体安全性和许可风险的若干见解：
- en: The top row, with four widgets, provides an overview of the vulnerability score
    and three different breakdowns into how that score was calculated.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶行的四个小部件提供了漏洞评分的概览，并且有三种不同的细分方式，展示了该评分是如何计算的。
- en: Below this, all of the vulnerable packages are listed by name, with a reference
    to the dependency and a recommended mitigation.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在此下方，所有脆弱的包按名称列出，提供依赖项的参考和推荐的缓解措施。
- en: The  section at the bottom provides a list of all licenses used by the dependencies.
    This list is sorted from high risk to low risk.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底部的部分提供了所有依赖项使用的许可证列表。该列表按风险高低排序。
- en: Below this overview, WhiteSource Bolt also generates a list of dependencies
    for which a newer version is available (this is not visible in the preceding screenshot).
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在此概述下方，WhiteSource Bolt 还生成了一个依赖项列表，列出了可用新版本的依赖项（在前面的截图中未显示）。
- en: The results shown in this report can also be accessed from the WhiteSource Bolt
    menu, under the Pipelines menu. In this view, all of the reports for all of the
    builds can be accessed. This view is great for those who are responsible for accessing
    security or licensing standards across a project or organization.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 该报告中显示的结果也可以通过 WhiteSource Bolt 菜单中的 Pipelines 菜单访问。在此视图中，可以访问所有构建的所有报告。此视图非常适合负责跨项目或组织访问安全性或许可标准的人。
- en: This completes our discussion on dependency scanning. As mentioned earlier,
    you can use these tools to your advantage to detect and scan all the dependencies
    that are used when building an application. In the next section, infrastructure
    compliance is introduced.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了我们对依赖扫描的讨论。如前所述，您可以利用这些工具来检测和扫描构建应用程序时使用的所有依赖项。在下一节中，将介绍基础设施合规性。
- en: Ensuring infrastructure compliance
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确保基础设施合规性
- en: Another important topic is that of compliance. In many countries or markets,
    there are sets of rules and policies that must be implemented or adhered to when
    creating software. A fair share of these policies relates to the infrastructure
    that the applications are running on. If this infrastructure is deployed and managed
    on the Azure platform, Azure Policy can be a powerful tool for ensuring that the
    infrastructure complies with regulations.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的话题是合规性。在许多国家或市场中，在创建软件时，必须实施或遵守一套规则和政策。相当一部分这些政策与应用程序运行的基础设施相关。如果该基础设施部署和管理在
    Azure 平台上，Azure Policy 可以成为确保基础设施符合规定的强大工具。
- en: In [Chapter 6](d981a2b6-8bf4-4fb7-8a2e-ceff84691588.xhtml), *Infrastructure
    and Configuration as Code*, the topic of ARM templates was discussed. ARM templates
    can be viewed as a technique for describing a complete Azure environment as a
    JSON array with many objects, each describing one resource in an application's
    infrastructure.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第六章](d981a2b6-8bf4-4fb7-8a2e-ceff84691588.xhtml)《基础设施与配置即代码》中，讨论了 ARM 模板的话题。ARM
    模板可以看作是一种技术，用于将完整的 Azure 环境描述为一个包含许多对象的 JSON 数组，每个对象描述应用程序基础设施中的一个资源。
- en: Azure Policy allows you to write policies that query this document and the changes
    that are being made through any of the APIs or ARM templates. Whenever a resource
    is found that matches the query, it is prevented from being created or the match
    can be added to a list of audit results.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Policy 允许您编写查询此文档以及通过任何 API 或 ARM 模板所做更改的策略。每当找到与查询匹配的资源时，它将被阻止创建，或者该匹配项可以添加到审计结果列表中。
- en: Next to writing custom policies, there are many policies readily available for
    all Azure users. These policies can be used to audit resources that do not comply
    with best practices or general advice. There are also groups of policies available,
    called initiatives, that describe the applicable parts of market standards.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 除了编写自定义策略外，还有许多现成的策略可供所有 Azure 用户使用。这些策略可用于审计不符合最佳实践或一般建议的资源。还提供了名为“倡议”的策略组，描述了市场标准的适用部分。
- en: Assigning an Azure Policy or initiative
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分配 Azure 策略或倡议
- en: Policies can be assigned at different levels within Azure, either at the resource
    group level, subscription level, or management group level. This can be done through
    the portal, ARM templates or blueprints, or PowerShell.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 策略可以在 Azure 的不同级别上进行分配，既可以在资源组级别、订阅级别或管理组级别。这可以通过门户、ARM 模板或蓝图，或 PowerShell 来完成。
- en: 'To use PowerShell, the following series of commands can be used:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PowerShell 时，可以使用以下一系列命令：
- en: 'To retrieve a reference to the resource group and policy, use the following
    command:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检索资源组和策略的参考，请使用以下命令：
- en: '[PRE0]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The policy that is chosen here is a built-in policy that will audit all virtual
    machines that do not use managed disks but have custom disks in storage accounts.
    This policy definition will be used in the command in the following assignment.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 此处选择的策略是一个内置策略，将审计所有未使用托管磁盘但在存储帐户中有自定义磁盘的虚拟机。此策略定义将在以下任务中的命令中使用。
- en: 'To assign the policy to the resource group, use the following command:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将策略分配到资源组，请使用以下命令：
- en: '[PRE1]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Within 30 minutes of this assignment, the new policy will become active. At
    this point, a policy evaluation cycle is started, and all of the resources within
    the assignment scope will be evaluated against the policy. At the time of writing,
    there is no published SLA regarding how long such an evaluation cycle can take.
    Experience shows that this can be anything between 15 minutes and multiple hours—depending
    on the size of the assignment scope.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在此任务的 30 分钟内，新策略将变为活跃状态。此时，策略评估周期开始，所有在任务范围内的资源将与策略进行评估。编写时，尚未发布有关此类评估周期所需时间的服务级别协议（SLA）。根据经验，这一过程可能需要
    15 分钟到多个小时不等——具体取决于任务范围的大小。
- en: Writing an Azure Policy
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写 Azure 策略
- en: 'While there are many built-in policies available, there are many use cases
    in which the creation of custom policies is needed. Just like any other Azure
    resource, a policy is written as a JSON document. The appropriate ARM resource
    type is called `policyDefinitions` and has the following structure:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有许多内置的策略可用，但也有许多使用场景需要创建自定义策略。与其他 Azure 资源类似，策略也是以 JSON 文档的形式编写的。适当的 ARM 资源类型是
    `policyDefinitions`，其结构如下：
- en: '[PRE2]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `parameters` object can be used to specify one or more parameters that need
    to be specified when assigning the policy later on. These parameters follow the
    same syntax and work the same as the parameters of an ARM template.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`parameters` 对象可用于指定在稍后分配策略时需要指定的一个或多个参数。这些参数遵循与 ARM 模板参数相同的语法，并且工作方式相同。'
- en: The `displayName` and `description` properties can be used to give the policy
    definition a meaningful name and description for later reference.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`displayName` 和 `description` 属性可用于为策略定义提供有意义的名称和描述，供以后参考。'
- en: 'The body of the definition contains two elements, as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 定义的主体包含两个元素，如下所示：
- en: '**The** `if` **statement** is used to specify a query that selects the Azure
    resources that this policy should apply to. There is a specific syntax for writing
    complex queries in JSON that is detailed in the ARM template reference that is
    linked at the end of this chapter.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`if`** 语句用于指定一个查询，以选择此策略应应用的 Azure 资源。写复杂查询的 JSON 语法有明确规定，详细信息可见本章末尾链接的 ARM
    模板参考资料。'
- en: '**The** `then` **statement** is used to describe the action that needs to be
    taken for any resource that matches the condition. This can be *deny,* that is,
    to automatically deny the creation of any non-compliant resource. Another approach
    is not to deny non-compliant deployments but rather to audit them. While denying
    non-compliant deployments is very straightforward in theory, there is good cause
    for temporarily allowing non-compliant deployments. In such cases, an audit policy
    can help to keep tabs on these resources. All non-compliant deployments get audit
    records in their Azure Activity log and can be viewed in the Azure portal, under
    Azure Policy in the Compliance tab. This is as follows:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`then`** 语句用于描述针对符合条件的资源所需执行的操作。这可以是 *拒绝*，即自动拒绝创建任何不符合要求的资源。另一种方法是，不直接拒绝不合规的部署，而是对其进行审计。虽然从理论上讲，拒绝不合规的部署非常简单，但在某些情况下，暂时允许不合规的部署是有合理原因的。在这种情况下，审计策略可以帮助跟踪这些资源。所有不合规的部署将在
    Azure 活动日志中生成审计记录，并可以在 Azure 门户中的“合规性”标签下的 Azure 策略中查看，具体如下：'
- en: '![](img/3b4745f2-1655-481e-8fcb-d4f7faf0e76c.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b4745f2-1655-481e-8fcb-d4f7faf0e76c.png)'
- en: After writing the policy definition, we need to create it within an Azure subscription
    for it to be usable. This can either be done through an ARM template or manually
    within the portal. From a DevOps perspective, writing policies in source control
    and delivering them through a pipeline as part of an ARM template is the recommended
    approach. In this way, Azure policies are written in the same way as the application
    and can be reviewed and automatically deployed to Azure as part of a DevOps pipeline.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写完政策定义后，我们需要在 Azure 订阅中创建它，以便使其可用。可以通过 ARM 模板或在门户中手动创建。 从 DevOps 的角度来看，建议通过源代码管理编写政策，并通过管道将其作为
    ARM 模板的一部分进行交付。 这样，Azure 政策的编写与应用程序相同，可以进行审查，并作为 DevOps 管道的一部分自动部署到 Azure。
- en: Initiatives
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计划
- en: 'When working with Azure Policy, many companies find that they need to create
    many policies to define all the rules that they want their software developers
    to adhere to. For this reason, it might be beneficial to group policies. Such
    a grouping is called an "initiative" and these are defined in JSON as well:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Azure Policy 时，许多公司发现他们需要创建许多政策，以定义他们希望软件开发人员遵循的所有规则。因此，将政策分组可能是有益的。这种分组称为“计划”，这些计划也在
    JSON 中定义：
- en: '[PRE3]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The body of an initiative is an array of objects. Each object must contain a
    `policyDefinitionId` property and, optionally, an object with `parameters` for
    the policy. The `policyDefinitionId` property must reference a valid `policyDefintions`
    through its Azure resource ID. The `parameters` array should specify all of the
    parameters that the policy requires. Often, this is implemented by having the
    initiative specify the combined set of all parameters of all policies as an initiative
    parameter. The parameters for the individual policies are then specified with
    a reference to the initiative parameters.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一个计划的主体是一个对象数组。每个对象必须包含一个 `policyDefinitionId` 属性，并可以选择包含一个带有 `parameters` 的对象。
    `policyDefinitionId` 属性必须通过 Azure 资源 ID 引用有效的 `policyDefinitions`。 `parameters`
    数组应指定该政策所需的所有参数。通常，这可以通过让计划指定所有政策的参数集合作为计划参数来实现。然后，个别政策的参数通过引用计划参数来指定。
- en: Fetching audit results
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取审核结果
- en: After assigning a policy with the audit effect, the policy will automatically
    evaluate all of the resources within the scope of the assignment once it is active.
    There is no guarantee of how long this can take. For new resources, the results
    of policy evaluation are visible within 15 minutes, but, often, this is faster.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在分配了审核效果的政策后，一旦其生效，政策将自动评估分配范围内的所有资源。无法保证此过程需要多长时间。对于新资源，政策评估结果通常会在 15 分钟内显示，但通常这个过程会更快。
- en: 'Once the results are in, the compliance status for each policy or initiative
    can be viewed in the portal, resulting in an overview, as shown in the following
    screenshot:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦结果出来，可以在门户中查看每个政策或计划的合规性状态，最终呈现出如下概览，见下图：
- en: '![](img/8fe2da7d-64e7-42a8-bc52-f6ff76e8a880.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8fe2da7d-64e7-42a8-bc52-f6ff76e8a880.png)'
- en: The difference between this report and other reports, which are the result of
    a manual audit, is that this overview is constantly updated to reflect the actual,
    current state of compliance—it is not a snapshot of compliance at a specific point
    in time.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 该报告与其他手动审核报告的区别在于，此概览会持续更新，以反映实际的、当前的合规性状态——它不是某一特定时点的合规性快照。
- en: An important benefit of this type of compliance is that the rules or policies
    are applied continuously to all the existing resources and any incoming change.
    This means that it is possible to ensure that the application environment is always
    compliant and always adheres to any rules and policies that apply.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这种合规性类型的一个重要好处是，规则或政策会持续应用于所有现有资源和任何新进的变更。这意味着可以确保应用环境始终符合要求，并始终遵守所有适用的规则和政策。
- en: 'Contrast this with the often-used approach of having security and compliance
    audits only every so many months. Often, this results in environments that are
    only compliant just before the audit and with its compliancy slowly decaying afterward.
    That is, until it is time for another audit, of course, at which point it rises
    close to 100% again. At many companies, this results in a compliance graph as
    follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 与通常每隔几个月进行一次安全和合规性审核的方法相比，这种方式有很大不同。通常，这会导致环境只有在审核前才符合合规要求，且合规性在审核后逐渐下降。直到下次审核时，合规性才会再次接近
    100%。在许多公司中，这导致了如下的合规性图表：
- en: '![](img/73896784-11f4-4e25-84f2-6cba850381ea.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73896784-11f4-4e25-84f2-6cba850381ea.png)'
- en: With this, we've discussed another example of how DevOps practices can help
    increase security and compliance—by ensuring infrastructure compliance. In the
    next section, several alternative tools for those mentioned in this chapter will
    be discussed.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这一点，我们讨论了 DevOps 实践如何帮助提高安全性和合规性——通过确保基础设施合规性。接下来的章节将讨论本章提到的工具的几种替代方案。
- en: Monitoring and detecting runtime security risks and threats
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控和检测运行时安全风险与威胁
- en: All of the security tools that have been discussed up to this point have focused
    on preventing shipping vulnerable code to production environments. However, the
    complete, deployed software solution, including all its support infrastructure
    is made out of so much more than just the code. On top of that, there are many
    interactions with a solution that may be unexpected or unplanned. Monitoring all
    of this continuously in production is necessary, not just to prevent security
    concerns but to also detect any security concerns coming up. In Azure, one of
    the tools available for doing just that is Azure Security Center. Azure Security
    Center is offered via the Azure portal and can be selected as any other service
    using the menu on the left or by searching for it in the top bar.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 迄今为止讨论的所有安全工具都集中在防止将存在漏洞的代码推送到生产环境。然而，完整的已部署软件解决方案，包括所有支持的基础设施，远不止是代码。除此之外，解决方案中可能有许多意外或未计划的交互。在生产环境中持续监控这些内容是必要的，不仅是为了防止安全问题，还要检测任何潜在的安全问题。在
    Azure 中，Azure 安全中心就是一个可以实现这一目标的工具。Azure 安全中心通过 Azure 门户提供，可以像其他服务一样从左侧菜单选择或通过顶部搜索栏搜索。
- en: 'After opening Security Center, something similar to the following screenshot
    will open:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 打开安全中心后，会显示类似于以下截图的内容：
- en: '![](img/3e3f0a00-e201-42f8-8636-ba95b0082c09.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e3f0a00-e201-42f8-8636-ba95b0082c09.png)'
- en: 'This dashboard delivers insight into three main categories:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 此仪表板提供了三大类的洞察：
- en: 'Policy and compliance: This part gives an overview of how compliant all of
    the selected Azure subscriptions are with regard to the security policies you
    have configured.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略和合规性：此部分概述了所有选定的 Azure 订阅在你配置的安全策略下的合规性状况。
- en: 'Resource security hygiene: Azure has many security controls that can be turned
    on or off, along with many security configuration settings. Just as anywhere else,
    it is up to the user to balance cost and security with risk and ease of use. This
    dashboard will show recommendations for turning the security up for your resources.
    Users can decide for each recommendation whether they want to follow it.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源安全卫生：Azure 提供了许多安全控制，可以开启或关闭，并且有许多安全配置设置。就像其他地方一样，用户需要平衡成本、安全性、风险和易用性。此仪表板将显示有关提升资源安全性的一些建议。用户可以根据每个建议决定是否采纳。
- en: 'Threat protection: This section shows how many threats or attacks have been
    automatically detected and reported:'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 威胁防护：此部分显示已自动检测和报告的威胁或攻击数量：
- en: '![](img/ac28bd46-d684-4cb4-9a4f-0207bee64198.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac28bd46-d684-4cb4-9a4f-0207bee64198.png)'
- en: All of these overviews and categories can be drilled down further. The preceding
    example shows the results of opening the THREAT PROTECTION overview. Here, it
    lists all of the possible security threats it has identified. In this case, it
    lists different access attempts to virtual machines that are hosted within the
    subscription.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些概述和类别都可以进一步钻研。上面的例子显示了打开威胁防护概览的结果。在这里，它列出了它所识别的所有可能的安全威胁。在此案例中，它列出了对在订阅中托管的虚拟机的不同访问尝试。
- en: There are many more capabilities within Azure Security Center and more are being
    added on an ongoing basis. When deploying in Azure, this is the place to identify
    and manage security risks.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 安全中心还拥有许多其他功能，并且这些功能正在持续增加。在 Azure 部署时，这是识别和管理安全风险的地方。
- en: This concludes our discussion of the various techniques for monitoring runtime
    environments for security risks. The next section looks at several alternative
    tools for performing some of the scanning tasks that were mentioned in earlier
    sections.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们讨论如何监控运行时环境安全风险的各类技术的结束。接下来的章节将介绍一些替代工具，用于执行之前章节中提到的扫描任务。
- en: Other tools you can use
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你可以使用的其他工具
- en: There are many tools available on the market for performing security scans of
    application code and dependencies. Some examples include WhiteSource, Black Duck,
    Veracode, and Checkmarx.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有许多工具可以用于执行应用程序代码和依赖关系的安全扫描。例如，WhiteSource、Black Duck、Veracode 和 Checkmarx。
- en: '**WhiteSource** is the paid version of WhiteSource Bolt. It offers the same
    services and more. For example, it doesn''t only report risks at the time of the
    dependency scan; it also gives you alerts when new risks become available for
    dependencies that were present in the last scan of an application.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '**WhiteSource** 是 WhiteSource Bolt 的付费版本。它提供相同的服务以及更多功能。例如，它不仅在依赖关系扫描时报告风险；它还会在新的风险出现时提醒你，特别是对于在应用程序上次扫描中存在的依赖关系。'
- en: '**Black Duck** is a product that helps teams to manage the risks associated
    with using open source software. The services it offers are comparable to WhiteSource.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '**Black Duck** 是一款帮助团队管理使用开源软件所带来的风险的产品。它提供的服务与 WhiteSource 类似。'
- en: '**Veracode** and **Checkmarx** are code scanning tools that are used to identify
    vulnerable code. Whereas SonarQube checks both the code quality and security risks,
    these two products focus solely on security risks. In general, they are better
    at security scanning, with the downside being that they are more expensive.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**Veracode** 和 **Checkmarx** 是用于识别漏洞代码的代码扫描工具。与 SonarQube 同时检查代码质量和安全风险不同，这两个产品专注于安全风险。总体来说，它们在安全扫描方面表现更好，缺点是价格更高。'
- en: Summary
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you have learned that DevOps and security are not two conflicting
    goals, but that DevOps practices can help you to reinforce security. First, you
    learned how to handle passwords and other secrets when working with continuous
    deployment pipelines. Next, you learned how to enhance your pipelines with code
    and dependency scanning tools, applying the shift-left principle to security as
    well. Finally, you learned how to use Azure Policy to define constraints and rules
    for your infrastructure and how you can have these automatically applied or have
    non-compliant deployments audited or automatically denied.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你已经学到，DevOps 和安全并不是两个对立的目标，DevOps 实践可以帮助你强化安全性。首先，你学习了在处理持续部署管道时如何处理密码和其他机密。接下来，你学会了如何通过代码和依赖关系扫描工具增强你的管道，并将安全的
    shift-left 原则应用其中。最后，你学会了如何使用 Azure Policy 来定义基础设施的约束和规则，以及如何自动应用这些规则或审计不合规的部署，甚至自动拒绝。
- en: With the knowledge you have gained, you are now able to have a conversation
    within your company about how to address security concerns within your DevOps
    teams. You can cooperate with security engineers to configure the tools you work
    with and receive automated feedback on the security implications of your work.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 通过你所学到的知识，你现在能够与公司内的同事讨论如何解决 DevOps 团队中的安全问题。你可以与安全工程师合作，配置你所使用的工具，并获得关于你工作中安全影响的自动反馈。
- en: In the next chapter, you will learn about application monitoring. Additionally,
    you will learn how to monitor whether your application is running smoothly and
    how to gather runtime metrics.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习应用程序监控。此外，你还将学习如何监控应用程序是否平稳运行，以及如何收集运行时指标。
- en: Questions
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Here is a list of questions for you to test your knowledge regarding this chapter''s
    material. You will find the answers in the *Assessments* section of the *Appendix*:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些问题，供你测试自己对本章内容的理解。你可以在*附录*中的*评估*部分找到答案：
- en: 'True or False: Securing the delivery of software is just a single step in a
    deployment pipeline.'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 判断题：确保软件交付的安全性只是部署管道中的一个步骤。对或错？
- en: Which tool can be used for security testing, where a proxy is used to identify
    valid application URLs and then perform different attacks, such as injections
    on an application?
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪种工具可以用于安全测试，其中代理用于识别有效的应用程序 URL，然后对应用程序进行不同的攻击，如注入？
- en: 'True or False: In most modern applications, over 50% of the code base comes
    from open source libraries.'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 判断题：在大多数现代应用程序中，超过 50% 的代码来自开源库。对或错？
- en: What are the secure locations for storing the secrets needed during deployment
    or for running an application? (You can choose more than one answer.)
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在部署或运行应用程序时，需要哪些安全位置来存储机密？（你可以选择多个答案。）
- en: Azure Pipelines variables that are marked as secret
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标记为机密的 Azure Pipelines 变量
- en: Azure Key Vault
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 密钥库
- en: Azure DevOps Key Vault
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps 密钥库
- en: Azure Variable Groups
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 变量组
- en: Azure DevOps Secure Variables
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps 安全变量
- en: Azure DevOps Service Connection
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure DevOps 服务连接
- en: Which two Azure offerings can be used to detect security risks at runtime?
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪两个Azure产品可以用于在运行时检测安全风险？
- en: Further reading
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: The OWASP Top 10 and the details of every type of risk can be found at [https://www.owasp.org/index.php/Top_10-2017_Top_10](https://www.owasp.org/index.php/Top_10-2017_Top_10).
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP Top 10 和每种风险类型的详细信息可以在[https://www.owasp.org/index.php/Top_10-2017_Top_10](https://www.owasp.org/index.php/Top_10-2017_Top_10)找到。
- en: WhiteSource Bolt can be found on the Azure DevOps marketplace at [https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt](https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt).
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WhiteSource Bolt可以在Azure DevOps市场的[https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt](https://marketplace.visualstudio.com/items?itemName=whitesource.ws-bolt)找到。
- en: A detailed walk-through on using the OWASP ZAP can be found at [https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/](https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/).
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OWASP ZAP的详细操作步骤可以在[https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/](https://devblogs.microsoft.com/premier-developer/azure-devops-pipelines-leveraging-owasp-zap-in-the-release-pipeline/)找到。
- en: More information about the Azure Policy resource types and JSON specifications
    can be found as part of the ARM reference at [https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions](https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions).
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Azure Policy资源类型和JSON规范的信息可以在ARM参考文档中找到，网址为[https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions](https://docs.microsoft.com/en-us/azure/templates/microsoft.authorization/allversions)。
- en: More information about the continuous delivery tools for Visual Studio can be
    found at [https://marketplace.visualstudio.com/items?itemName=VSIDEDevOpsMSFT.ContinuousDeliveryToolsforVisualStudio](https://marketplace.visualstudio.com/items?itemName=VSIDEDevOpsMSFT.ContinuousDeliveryToolsforVisualStudio).
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Visual Studio的持续交付工具的信息可以在[https://marketplace.visualstudio.com/items?itemName=VSIDEDevOpsMSFT.ContinuousDeliveryToolsforVisualStudio](https://marketplace.visualstudio.com/items?itemName=VSIDEDevOpsMSFT.ContinuousDeliveryToolsforVisualStudio)找到。
- en: More information about the Microsoft Security Code Analysis Extension can be
    found at [https://secdevtools.azurewebsites.net/helpcredscan.html](https://secdevtools.azurewebsites.net/helpcredscan.html).
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Microsoft Security Code Analysis扩展的信息可以在[https://secdevtools.azurewebsites.net/helpcredscan.html](https://secdevtools.azurewebsites.net/helpcredscan.html)找到。
- en: More information about WhiteSource Bolt and WhiteSource can be found at [https://bolt.whitesourcesoftware.com/](https://bolt.whitesourcesoftware.com/)
    and [https://www.whitesourcesoftware.com/](https://www.whitesourcesoftware.com/).
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于WhiteSource Bolt和WhiteSource的信息可以在[https://bolt.whitesourcesoftware.com/](https://bolt.whitesourcesoftware.com/)和[https://www.whitesourcesoftware.com/](https://www.whitesourcesoftware.com/)找到。
- en: More information about Black Duck can be found at [https://www.blackducksoftware.com/](https://www.blackducksoftware.com/).
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Black Duck的信息可以在[https://www.blackducksoftware.com/](https://www.blackducksoftware.com/)找到。
- en: More information about Veracode can be found at [https://www.veracode.com/](https://www.veracode.com/).
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Veracode的信息可以在[https://www.veracode.com/](https://www.veracode.com/)找到。
- en: More information about Checkmarx can be found at [https://info.checkmarx.com](https://info.checkmarx.com).
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于Checkmarx的信息可以在[https://info.checkmarx.com](https://info.checkmarx.com)找到。
