["```\nAppCenter.Start(\"ios={appSecret};android={appSecret };uwp={appSecret}\", typeof(Crashes));\n```", "```\nCrashes.TrackError(ex);\n```", "```\n class Program\n    {\n        private static readonly RaygunClient _raygunClient = new RaygunClient(\"myKey\");\n\n        static void Main(string[] args)\n        {\n            AppDomain.CurrentDomain.UnhandledException += HandleEx;\n            throw new Exception(\"Boom!\");\n        }\n\n        private static void HandleEx(object sender, UnhandledExceptionEventArgs e)\n        {\n            _raygunClient.Send(e.ExceptionObject as Exception);\n        }\n    }\n```", "```\npublic class Example\n{\n    private readonly ILogger<Example> _logger;\n\n    public Example(ILogger<Example> logger)\n    {\n        _logger = logger;\n    }\n\n    public void DoSomething(User user)\n    {\n      _logger.LogWarning(\n        \"Doing something for user with id '{userId}' and username '{username}'\", \n        user.Id, \n        user.Username);\n    }\n}\n```", "```\npublic static IWebHostBuilder CreateWebHostBuilder(string[] args) \n{\n  return WebHost.CreateDefaultBuilder(args)\n    .UseStartup<Startup>()\n    .ConfigureLogging(builder => {\n        builder.AddApplicationInsights(“myKey”);\n    }\n}\n```", "```\nbuilder.RegisterType<TelemetryClient>().SingleInstance();\n```", "```\npublic class Example\n{\n private readonly TelemetryClient _telemetryClient;\n\n public Example(TelemetryClient telemetryClient)\n {\n     _telemetryClient = telemetryClient;\n }\n\n public void DoSomething()\n {\n     _telemetryClient.GetMetric(“doSomethingCalledCounter”).TrackValue(1.0);\n }\n}\n```"]