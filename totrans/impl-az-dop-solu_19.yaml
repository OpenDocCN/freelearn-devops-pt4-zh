- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. In traditional organizations, development is often tasked with creating
    changes to software, while operations is responsible for maintaining the stability
    of the target systems for these changes. Since changes inherently carry risk and
    may disturb stability, operations is often resistant to change.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. While, in theory, it is possible to practice the different DevOps practices
    in isolation from on another, the real value comes from combining them. For example,
    continuous deployment without continuous integration and test automation does
    not only make very little sense; it is even dangerous to continuously deploy changes
    without the quality assurances that continuous integration and test automation
    offer.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The incorrect answer is number 4\. DevOps is not a job title, but a cultural
    movement. Actually, creating a new DevOps team in between development and operations
    is often at loggerheads with the DevOps philosophy. Instead of two teams or departments
    with their separate goals, there are now three.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fastlaning is an approach to expediting unplanned, high-priority work over planned
    work, all while maintaining a single sprint board for the whole team.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are many definitions of DevOps. Some of the main elements that are frequently
    included are business value, end users, continuous deployment, automation, and
    collaboration.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The main difference between centralized and decentralized source control is
    that in a decentralized source control system, every user of the system has the
    full history of the sources. In a centralized system, only the server has the
    full history. Decentralized systems work best when working disconnected from the
    server, whereas centralized systems often allow for more detailed access control.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Git is the best known decentralized source control system.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer is number 3\. Rebasing is not a branching strategy, but a
    merging strategy.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When working with Git, a pull request is used to request the merging of changes
    from one branch with another. Pull requests can be reviewed, approved, or denied.
    To enforce the use of pull requests, Git policies can be used.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer is number 2\. Trunk-based development is not a merging strategy,
    but a branching strategy.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. Continuous integration is about integrating the work of every developer
    with that of their colleagues at least daily and building and testing the integrated
    sources. Just running a daily build does not constitute continuous integration.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. A classic build pipeline is always connected to a source code repository.
    It might be that the sources are not used in the build pipeline, but the connection
    is always there.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. It is possible to create a YAML pipeline that starts directly with a
    stage. A link to a source control repository is no longer mandatory.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The correct answer is number 1: a service connection. Service connections are
    configured in the organization or project that contains the pipeline that needs
    to call into the external tool. Once a service connection is configured, it can
    be used from one or more pipelines.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The correct answers are numbers 1 and 3: access to closed networks and the
    ability to install extra software. Self-hosted agents are deployed on infrastructure
    owned by you. This means that you can deploy them on networks that you control,
    giving them network access to that network. Since the agents are deployed on your
    infrastructure, you can also decide on which software is installed (and which
    is not). Tasks and extension tasks are automatically downloaded to the agent before
    it executes a job. You can have as many parallel pipelines as you want without
    using self-hosted agents. However, you will need to buy extra parallel executions
    from Microsoft for this purpose.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. It is also possible to trigger a new release on a schedule or manually.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the answers are correct.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Numbers 2 and 3 are correct. Both ring-based deployments and canary deployments
    expose only a limited group of users to the new version of your application. Feature
    toggles are also used for progressive exposure, but are not used to limit the
    risks of a deployment but that of a new feature release.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Deployment groups are used to perform tasks from a release pipeline not
    on one agent in the group, but on all agents. Deployment groups are intended to
    be used to deploy software on the machine that is also running the agent.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One possible advantage is that end-to-end traceability of all steps is retained
    in Azure DevOps. If you also manage your work items and source code in Azure DevOps,
    you will keep end-to-end traceability from the work item to release within Azure
    DevOps, and all this while still using the App Center for actual deployments.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. A version of a package can be visible in more than one view.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. Pipeline artifacts can only be consumed from within other pipelines within
    Azure DevOps.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Azure Artifact feeds can be used to share universal packages to other
    products. This allows you to compile an application in Azure DevOps, upload the
    binaries as a universal package, and download it again in another product. This
    is useful when using another deployment tool, for example, Octopus Deploy.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answers are numbers 2 and 4\. Answer number 1 is incorrect since
    the package references (either in a `.csproj` file or in a `nuget.config` file)
    should only reference packages by name and version. Answer number 3 is incorrect
    since `consumer` is not a valid access level in Azure Artifact feeds. The correct
    access level is reader (or higher), making answer number 2 correct. Answer number
    4 is also correct. You need to add the package location to your NuGet configuration.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: One motivator can be the size of the solution. If compiling and testing the
    solution is taking so long that developers have to wait for feedback in relation
    to their work, it can be better to split the solution into smaller parts. This
    will shorten the feedback loop for developers, thereby increasing speed. Another
    motivator can be that multiple teams are working on an application and they want
    to increase the amount of isolation between teams.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 6
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. ARM templates allow you to specify the end state for all resources in
    an Azure resource group. Applying an ARM template will always result in the creation
    of missing resources and updates for existing resources. If a deployment mode
    of `complete` is specified, even resources not in the template will be removed.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answer is number 2\. Modules, Run As accounts, and variables are
    all constructs that were discussed in [Chapter 6](d981a2b6-8bf4-4fb7-8a2e-ceff84691588.xhtml),
    *Infrastructure and Configuration as Code*.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. ARM template parameters allow the referencing of values in an Azure Key
    Vault, so as to prevent users from having to enter secrets or other sensitive
    information in source control. At the time of deployment, the secrets are retrieved
    and used within Azure, provided the identity that starts the operation has access
    to that key vault.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. You can define one or more schedules within an Azure Automation Account
    and then link these to a Runbook.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Many benefits can be expected when practicing infrastructure as code. Two oft
    cited examples are the prevention of configuration drift and the ability to create
    new environments on demand. Configuration drift is prevented by reapplying the
    same infrastructure specification to an environment at a schedule. Environments
    on demand can be used to quickly create a new test environment, performing tests
    and then removing the environment again. This allows for more repeatable test
    results and, possibly, savings in terms of testing infrastructure.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 7
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. Entity Framework and Entity Framework Core both have built-in support
    to generate a migration after changes to the schema definition have been made.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. Most migration-based approaches use an extra table to keep track of which
    migrations have already been applied to the database.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. End state-based approaches work by comparing the current schema to the
    target schema. This results in the generation of a one-time SQL script that is
    run against the database to update the schema. There is no state stored between
    runs.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answers are numbers 1 and 2\. Running side by side, if done correctly,
    reduces change risks dramatically. If there are issues, you can always remove
    all new code, along with the database copy, and restart afresh from a working
    situation. Having both situations working correctly also allows for very precise
    performance measurements regarding the production workload. However, one of the
    disadvantages is that the cycle time is actually very likely to increase. You
    have to move multiple smaller changes to production one by one, which increases
    the total time taken.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. Your schema (either implicit or captured in data objects) still changes.
    However, this only becomes visible when reading an object back from the database
    that was persisted with a previous version of the object. In essence, you are
    only delaying coping with the issue of schema changes.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can choose to not use database-level coding techniques, such as stored procedures
    and triggers. The more of your logic you capture outside of the database, the
    smaller the total number of database changes you have to make.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 8
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: True. In a unit test, a individual component is tested in isolation. In an object-oriented
    language, this is often a single class.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: False. In an integration test, the correct working of a group of components
    is verified, and not the entire assembled system. If the entire assembled and
    deployed system is tested, this is referred to as a system test.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer number 2 is correct. The testing pyramid prescribes a large set of unit
    tests that verify as many requirements as possible. Integration tests are added
    only for those risks that cannot be covered using unit tests, resulting in a lower
    number of integration tests. Even fewer system tests are added, only to cover
    the risks not covered by either unit or integration tests.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer number 3 is correct. All other types of testing are covered in this chapter.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Two techniques that can be mentioned here are code reviews and pipeline gates.
    Code reviews allow developers to review the work of their colleagues to help each
    other keep quality high. Pipeline gates can be used to not allow a build or version
    of an application to propagate further down a pipeline if certain conditions are
    not met. Example conditions can include certain quality metrics, or minimum standards
    for test coverage or test results.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 9
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. To securely create and deliver software, the whole process, and especially
    the pipeline, needs to be secured. Just adding security at the end will not work,
    as security has to be woven through all different steps of the delivery process.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The OWASP **Zed Attack Proxy** (**ZAP**) can be used for this type of testing.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. In modern applications, up to 80% of the code can be from open source
    libraries or frameworks.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The correct answers are 1, 2, 4, and 6\. There is no such thing as Azure DevOps
    Secure Variables or Azure DevOps Key Vault.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Policy can be used to prohibit or list undesired Azure configurations,
    often relating to infrastructure provisioning or configuration. Azure Security
    Center can be used to identify and remediate runtime security risks.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 10
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. The platform metrics that are emitted by Azure are defined by every individual
    service and cannot be changed.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 93 days. This number guarantees that there is always at least 3 months of history.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Custom metrics can be calculated in your own application code and emitted
    to Application Insights through the SDK or REST API.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Alert fatigue.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True. Azure allows for the creation of action groups that can contain webhooks
    to be called in response to an alert being raised.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 11
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. One possible downside is losing a competitive edge in the market. If
    competitors know what you are going to develop next, they may anticipate in that
    regard.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Possible concerns are that some users or groups of users are more vocal than
    others, which might result in a difference between the general opinion and the
    opinion that is heard. Also, feedback on a public roadmap is most likely coming
    from existing users only. While it is important to retain those, prospects might
    not comment on your roadmap with features they are missing.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Two examples that are discussed in this chapter are sentiment on social media
    channels and the number and severity of support requests.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answer number 3 is correct. A hypothesis states a belief that a certain feature
    is needed – the hypothesis. The second part is a measurable user response that
    is to be observed before the belief is confirmed. This is called the confirmation
    threshold. A hypothesis does not yet have a conclusion.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Possible benefits of user interviews or focus groups are that they are often
    conducted at a smaller scale, allowing not only for the measuring of feedback,
    but for also understanding the reasons behind it. Another benefit is that participants
    can be carefully selected to be representative of all users or a particular segment.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 12
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The benefits of containers for DevOps are consistency, the separation of concerns,
    and platform portability.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True: Depending on the host operating system, it does not matter where the
    container is hosted.'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, this is possible. This can be done by adding Docker support and a project
    level.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `RUN` command is used for the installation of components or for performing
    operations during the process of building the container image.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Nods and pods can be scheduled within Azure Kubernetes Service. Both of these
    components can be scaled manually or automatically.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 13
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: False. Some information can travel to other regions or is available globally.
    For example, sometimes, agents are running in other regions when capacity in the
    chosen region is low.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Work item | Project | Organization | Region. An Azure DevOps organization is
    the top-level construct that can be created by users. Every organization is in
    precisely one region, which is maintained by Microsoft. Within an organization,
    one or more projects can be created. In turn, a project can contain many work
    items, such as user stories, features, or epics.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 工作项 | 项目 | 组织 | 区域。Azure DevOps 组织是用户可以创建的顶级构建。每个组织位于一个特定区域，由微软维护。在一个组织内，可以创建一个或多个项目。反过来，一个项目可以包含许多工作项，例如用户故事、功能或史诗。
- en: 'False. The general recommendation is to have just enough projects: the fewer
    the better. Isolation and very strict authorization boundaries may be reasons
    for choosing to use multiple projects.'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误。一般建议是保持项目数量适中：项目越少越好。隔离性和非常严格的授权边界可能是选择使用多个项目的原因。
- en: Authorizations and licensing. Authorizations can be set up to the limit that
    can be accessed by every individual user or a group of users. The license assigned
    to a user can also prohibit the use of certain features. For example, users with
    a stakeholder licence cannot work with source control.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授权和许可。可以设置授权，以便每个单独用户或一组用户可以访问的权限。分配给用户的许可还可以限制某些功能的使用。例如，拥有利益相关者许可的用户不能使用源代码控制。
- en: End-to-end traceability. When executing work management, source control, building,
    artifacts, and deployments from a single tool, it is possible to trace the deployment
    in which a user story was delivered to users.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 端到端可追溯性。在执行工作管理、源代码控制、构建、工件和部署时，如果使用单一工具，就可以追踪到某个用户故事是如何交付给用户的。
