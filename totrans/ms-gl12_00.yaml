- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GitLab is a tool to enhance the workflow of teams and enable parts of the DevOps
    life cycle. It started out as a tool only for source code management, but today,
    GitLab can offer help ranging from managing an initial idea to building and testing
    source code, all the way from development to production.
  prefs: []
  type: TYPE_NORMAL
- en: You'll learn ways to use all of the features available in GitLab to enhance
    your business via the integration of all phases of the development process. You'll
    benefit from lower friction by creating one platform on-premises or in the cloud,
    increase collaboration, and drive competitive advantage with more efficient operations.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for developers and DevOps professionals who want to master the
    software development workflow in GitLab and boost their productivity by putting
    their teams to work on GitLab via an on-premise installation or cloud-based infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](384dcfd9-ef7f-470d-89dc-3af7502a2d09.xhtml), *Introducing the GitLab
    Architecture*, provides a short introduction to the company and the people that
    created the product, along with a high-level overview of GitLab and its components.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](8e9ca130-15d0-4c6e-af6b-2fe5292f3618.xhtml), *Installing GitLab*,
    shows you how to install and configure GitLab via several different methods. This
    can be done from scratch, or via the Omnibus installer. Special attention is given
    to Docker and Kubernetes when outlining containerized solutions. Finally, a cloud
    installation via the DigitalOcean infrastructure is taken as an example.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](f6e9da35-95c5-4938-8afe-7bcc7590f5be.xhtml), *Configuring GitLab
    Using the UI*, explains the options in the GitLab web UI that can be configured
    after installation. This chapter also covers the administration pages where these
    instance-level options are situated.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](d98d2cb3-53e4-4544-be20-4e618ae24e7b.xhtml), *Configuring GitLab
    from the Terminal*, looks at the different ways of configuring GitLab. The first
    approach is by using the Omnibus package installer provided by GitLab, which automates
    most of the installation. The chapter continues with configuring a source installation.
    Configuring Docker containers and managing a Kubernetes installation are also
    covered.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](f5893a6a-9076-45e6-8042-92c8304a0033.xhtml), *Importing Your Project
    from GitHub to GitLab*, outlines the process of migration from GitHub via a hands-on
    lab. It starts by exploring settings that should be altered in your GitHub project.
    After this, the settings necessary in GitLab to prepare an import are shown, and
    finally, the procedure for running the import is addressed.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](632675c5-19ce-4c2f-8441-a8232ba70f1a.xhtml), *Migrating from CVS, *begins
    with a comparison of the fundamentally different systems of CVS and Git. It then
    provides directions on preparing for migration. Actual conversion is addressed,
    as is the cleaning up of artifacts not needed anymore.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](6f1e3f0c-5dcc-47c1-a928-62caeebeca40.xhtml), *Switching from SVN, *begins
    by explaining the subtle and not-so-subtle differences between SVN and Git. The
    reader is shown how to migrate using two different methods: mirroring with SubGit
    and using the svn2git tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](919eb644-712c-4842-a5d3-d1a34ec54e43.xhtml), *Moving Repositories
    from TFS,* first deals with the differences between TFS and Git. Subsequently,
    the act of migrating information from a TFS project to Git is shown via the use
    of the git-tfs tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](806c9f1d-24fc-477e-93ef-d0ea1de66530.xhtml), *GitLab Vision - the
    Whole Toolchain in One Application*, explains GitLab''s vision of providing the
    whole DevOps toolchain to the developer, looking at the origins of XP and the
    Agile manifesto. The emergence of the DevOps paradigm is also explored, and the
    toolchain that GitLab provides is summarized.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](1eceee2e-41d6-41cc-95eb-3d225f25f3fa.xhtml), *Create Your Product,
    Verify It, and Package It*, shows how the product vision for GitLab and its workflow
    is centered around the idea of providing a complete toolchain to create a product.
    This chapter focuses on the different phases and explains the relevant concepts
    with examples.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](8e2b1a18-2d76-4c74-8e3f-869f2d009577.xhtml),* The Release and
    Configure Phase*, discusses one of the big features of GitLab: the ability to
    offer the complete journey to production with different, easy-to-design stages.
    This way, you can create different environments and, ultimately, automate the
    whole pipeline for a product.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](a13e0599-fe2d-466d-a721-9556f162ca62.xhtml),* Monitoring with
    Prometheus*, handles ways of monitoring your GitLab environment by using the built-in
    Prometheus feature and default scripting languages. The second part of this chapter
    explains the different security tests that are available.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](81feed6f-2b9a-4b16-b2cc-c71e8b979bd7.xhtml),* Integrating GitLab
    with CI/CD Tools*, explains how, although GitLab aims to provide a complete toolchain
    in the real world, there will always be a need for integration. This chapter explains
    some of the bigger possible integrations that are configurable out of the box.
    It closes with a section on how webhooks provide a general way to consume information
    from GitLab.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](10edfd01-62d2-4028-9bd6-043a6d9468c2.xhtml),* Setting Up Your
    Project for GitLab Continuous Integration*, describes GitLab CI concepts that
    are present on the application server and can be fine-tuned and customized per
    project. The second part of the chapter mainly focuses on how to get your project
    ready to use these CI concepts and set up a runner for it to use.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](4e94f5e4-336d-42ae-af76-477949936356.xhtml), *Installing and Configuring
    GitLab Runners*, explains the way GitLab runners work, by installing them. The
    next step is creating an example project and building it with a shell executor.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16](17a005a8-7a83-4e6d-88be-c98ade823d4e.xhtml), *Using GitLab Runners
    with Docker or Kubernetes, *examines the architecture of Docker-based runners and
    runners using the Kubernetes API, using the same examples as in earlier chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 17](2be2314f-da22-4667-938e-70ba1eb20165.xhtml),* Autoscaling GitLab
    CI Runners*, demonstrates the architecture of runners using autoscaling. The number
    of runners required will decrease and increase based on demand. The example shown
    uses VirtualBox and **Amazon Web Services** (**AWS**) to deploy instances.'
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 18,* Monitoring CI Metrics, *deals with monitoring specific GitLab runners.
    Using a lab, we demonstrate how to enable monitoring inside the runner. After
    this introduction, the specific functional and system metrics are explained.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 19,* Creating a Basic HA Architecture by Using Horizontal Scaling,* visualizes
    the way in which different components interact. Secondly, the preparation of databases
    is shown, as well as several all-in-one application servers. Finally, the shared
    filesystem for repositories and Redis caching in this **high availability** (**HA**)
    setup is explained. We will use Terraform and Ansible to create the demonstration
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 20, *Managing a Hybrid HA Environment*, builds on the earlier architecture
    of horizontal HA, but continues to grow in complexity. The main difference is
    that the application servers combined several components that are now split into
    new tiers.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 21,* Making Your Environment Fully Distributed,* builds on earlier chapters.
    A fully distributed architecture aims to create more fault tolerance by again
    splitting components into new tiers. There is now an SSH node and several sidekiq
    tiers.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 22, *Using Geo to Create Distributed Read-Only Copies of GitLab, *starts
    with an explanation of the GEO product, which is part of the Enterprise Edition
    license. Using the same tools as in earlier chapters from  Section 5 of this book 'Scale
    the Server Infrastructure (High Availability Setup)', we will explain how to set
    up GEO to create replication between two different geographical locations.
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of this book, you should have access to a Linux or macOS
    machine, have an internet connection, and have Amazon AWS, Google, and Microsoft
    Azure accounts. These are all necessary to run the examples.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some basic IT knowledge is necessary to read this book. The subjects you need
    experience in are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shell scripting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic programming skills in Ruby and JavaScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A basic understanding of Docker containers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A basic understanding of using Terraform to create infrastructure as code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A basic understanding of Ansible
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Mastering-GitLab-12](https://github.com/PacktPublishing/Mastering-GitLab-12). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Visit the following link to see the code being executed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://bit.ly/2KirIoO](http://bit.ly/2KirIoO)'
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781789531282_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781789531282_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Let''s continue with installing web documents in `/usr/local/www`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "You can do this by clicking the Choose File button near the Logo
    section."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packt.com/submit-errata](http://www.packt.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
