["```\n$sudo ufw status\n Status: active\n\n To                         Action      From\n --                         ------      ----\n OpenSSH                    ALLOW       Anywhere \n OpenSSH (v6)               ALLOW       Anywhere (v6)\n```", "```\n$sudo ufw allow http\n$sudo ufw allow https\n$sudo ufw allow OpenSSH\n```", "```\n$sudo ufw status\nStatus: active\n\n To                         Action      From\n --                         ------      ----\n OpenSSH                    ALLOW       Anywhere \n 80                         ALLOW       Anywhere \n 443                        ALLOW       Anywhere \n OpenSSH (v6)               ALLOW       Anywhere (v6) \n 80 (v6)                    ALLOW       Anywhere (v6) \n 443 (v6)                   ALLOW       Anywhere (v6)\n```", "```\ncomponent['settings'] = $value eg. gitlab_rails['webhook_timeout'] = 10\n```", "```\ngitlab-ctl reconfigure\n```", "```\nsudo apt-get update \nexport LANGUAGE=en_US.UTF-8\nexport LANG=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8\nsudo locale-gen en_US.UTF-8\nsudo apt-get install -y curl openssh-server ca-certificates \n```", "```\nsudo apt-get install -y postfix \n```", "```\ncurl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash \n```", "```\n sudo EXTERNAL_URL=\"http://gitlab.example.com\" apt-get install gitlab-ee \n```", "```\nsudo apt-get install -y vim\nsudo update-alternatives --set editor /usr/bin/vim.basic\n```", "```\nexport LANGUAGE=en_US.UTF-8\nexport LANG=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8\nsudo locale-gen en_US.UTF-8\n```", "```\nsudo apt-get install -y build-essential zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libre2-dev libreadline-dev libncurses5-dev libffi-dev curl openssh-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev logrotate rsync python-docutils pkg-config cmake wget\n```", "```\nsudo apt-get install -y git-core\n```", "```\ngit --version\n```", "```\nsudo apt-get install -y postfix\n```", "```\nsudo apt-get remove ruby1.8\n```", "```\n$ wget https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.3.tar.gz\n$ shasum ruby-2.6.3.tar.gz 2347ed6ca5490a104ebd5684d2b9b5eefa6cd33c  ruby-2.6.3.tar.gz\n$ tar xvzf ruby-2.6.3.tar.gz\n..\n$ cd ruby-2.6.3\n$ ./configure --disable-install-rdoc\n$ make\n$ sudo make install\n```", "```\n$ruby -v\nruby 2.6.3p62 (2019-04-16 revision 67580) [x86_64-linux]\n```", "```\n$ sudo gem install bundler --no-document --version '< 2'\nFetching: bundler-1.17.3.gem (100%)\nSuccessfully installed bundler-1.17.3\n1 gem installed\n```", "```\n$ wget https://dl.google.com/go/go1.11.10.linux-amd64.tar.gz\n$ shasum  -a256 go1.11.10.linux-amd64.tar.gz\naefaa228b68641e266d1f23f1d95dba33f17552ba132878b65bb798ffa37e6d0  go1.11.10.linux-amd64.tar.gz\n$ sudo tar -C /usr/local -xzf go1.11.10.linux-amd64.tar.gz\n$ sudo ln -sf /usr/local/go/bin/{go,godoc,gofmt} /usr/local/bin/\n$ rm go1.11.10.linux-amd64.tar.gz\n\n$ go version\ngo version go1.11.10 linux/amd64\n```", "```\n $ curl --location https://deb.nodesource.com/setup_12.x | sudo bash -\n $ sudo apt-get install -y nodejs\n $ node -v\n v12.6.0\n\n $ curl --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -  OK\n $ echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee \\\n /etc/apt/sources.list.d/yarn.list\n $ sudo apt-get update\n $ sudo apt-get install yarn ...\n\n $ yarn -v\n 1.17.3\n```", "```\n$ sudo adduser --disabled-login --gecos 'GitLab user' git\nAdding user `git' ...\nAdding new group `git' (1001) ...\nAdding new user `git' (1001) with group `git' ...\nCreating home directory `/home/git' ...\nCopying files from `/etc/skel' ...\n```", "```\n$ sudo apt-get install -y postgresql postgresql-client libpq-dev postgresql-contrib\n\nSetting up postgresql (9.6+181+deb9u2) ...\nSetting up postgresql-client (9.6+181+deb9u2) ...\nSetting up postgresql-contrib-9.6 (9.6.10-0+deb9u1) ...\nSetting up postgresql-contrib (9.6+181+deb9u2) ...\nProcessing triggers for systemd (232-25+deb9u4) ...\nProcessing triggers for libc-bin (2.24-11+deb9u3) ...\n```", "```\n$ sudo service postgresql start\n```", "```\n$ sudo -u postgres psql -d template1 -c \"CREATE USER git CREATEDB;\"\nCREATE ROLE\n```", "```\n$ sudo -u postgres psql -d template1 -c \"CREATE EXTENSION IF NOT EXISTS pg_trgm;\"\n CREATE EXTENSION\n```", "```\n$ sudo -u postgres psql -d template1 -c \"CREATE DATABASE gitlabhq_production OWNER git;\"\n CREATE DATABASE\n```", "```\n$ sudo -u git -H psql -d gitlabhq_production\nPostgresql (9.4.22) Type “help” for help.\ngitlabhq_production=>\n```", "```\n SELECT true AS enabled\n FROM pg_available_extensions\n WHERE name = 'pg_trgm'\n AND installed_version IS NOT NULL;\n```", "```\nenabled\n-------\nt \n(1 row) \n```", "```\ngitlabhq_production=> \\password git\nEnter new password: <type a password>\nEnter it again: <type again this password>\ngitlabhq_production=> \\q\n```", "```\n$ vi /etc/postgresql/9.6/main/postgresql.conf\n```", "```\nlisten_addresses = '*'\n```", "```\n$ sudo vi /etc/postgresql/9.6/main/pg_hba.conf\n```", "```\nhost gitlabhq_production git <ip of gitlab server>/32 md5\n```", "```\n$ sudo service postgresql restart\n```", "```\n$ sudo apt-get install redis-server\n```", "```\n$ sudo cp /etc/redis/redis.conf /etc/redis/redis.conf.orig\n```", "```\n$ sudo sed 's/^port .*/port 0/' /etc/redis/redis.conf.orig | sudo tee /etc/redis/redis.conf\n```", "```\n$ sudo echo 'unixsocket /var/run/redis/redis.sock' | sudo tee -a /etc/redis/redis.conf\n```", "```\n$ sudo echo 'unixsocketperm 770' | sudo tee -a /etc/redis/redis.conf\n```", "```\n$ sudo mkdir /var/run/redis\n$ sudo chown redis:redis /var/run/redis \n$ sudo chmod 755 /var/run/redis\n```", "```\n\n echo 'd  /var/run/redis  0755  redis  redis  10d  -' | sudo tee -a /etc/tmpfiles.d/redis.conf\n fi\n```", "```\n$ sudo service redis-server restart\n```", "```\n$ sudo usermod -aG redis git\n```", "```\n$ cd /home/git\n```", "```\n$ sudo -u git -H git clone https://gitlab.com/gitlab-org/gitlab-ce.git -b 12-0-stable gitlab\n Cloning into 'gitlab'...\n remote: Enumerating objects: 1234071, done.\n remote: Counting objects: 100% (1234071/1234071), done.\n remote: Compressing objects: 100% (369844/369844), done.\n remote: Total 1234071 (delta 937064), reused 1101079 (delta 849256)\n Receiving objects: 100% (1234071/1234071), 529.69 MiB | 5.58 MiB/s, done.\n Resolving deltas: 100% (937064/937064), done.\n```", "```\n$ cd /home/git/gitlab\n```", "```\n$ sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml\n```", "```\n$ sudo -u git -H editor config/gitlab.yml\n```", "```\n$ sudo -u git -H cp config/secrets.yml.example config/secrets.yml\n$ sudo -u git -H chmod 0600 config/secrets.yml\n```", "```\n$ sudo chown -R git log/\n$ sudo chown -R git tmp/\n$ sudo chmod -R u+rwX,go-w log/\n$ sudo chmod -R u+rwX tmp/\n```", "```\n$ sudo chmod -R u+rwX tmp/pids/\n$ sudo chmod -R u+rwX tmp/sockets/\n```", "```\n$ sudo -u git -H mkdir public/uploads/\n```", "```\n$ sudo chmod 0700 public/uploads\n```", "```\n$ sudo chmod -R u+rwX builds/\n```", "```\n$ sudo chmod -R u+rwX shared/artifacts/\n```", "```\n$ sudo chmod -R ug+rwX shared/pages/\n```", "```\n$ sudo -u git -H cp config/unicorn.rb.example config/unicorn.rb\n```", "```\n$ nproc\n```", "```\n$ sudo -u git -H editor config/unicorn.rb\n```", "```\n$ sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb\n```", "```\n$ sudo -u git -H git config --global core.autocrlf input\n```", "```\n$ sudo -u git -H git config --global gc.auto 0\n```", "```\n$ sudo -u git -H git config --global repack.writeBitmaps true\n```", "```\n$ sudo -u git -H git config --global receive.advertisePushOptions true\n```", "```\n$ sudo -u git -H cp config/resque.yml.example config/resque.yml\n```", "```\n$ sudo -u git -H editor config/resque.yml\n```", "```\n$ sudo -u git cp config/database.yml.postgresql config/database.yml\n```", "```\n$ sudo -u git -H editor config/database.yml\n```", "```\npassword: \"<your secure password>\"\nhost: <your postgres host>\n```", "```\n$ sudo -u git -H chmod o-rwx config/database.yml\n```", "```\n$sudo -u git -H bundle install --deployment --without development test mysql aws kerberos\n...\n```", "```\n$ sudo -u git -H bundle exec rake gitlab:shell:install REDIS_URL=unix:/var/run/redis/redis.sock RAILS_ENV=production SKIP_STORAGE_VALIDATION=true\n```", "```\n$ sudo -u git -H editor /home/git/gitlab-shell/config.yml\n```", "```\n$ sudo -u git -H bundle exec rake \"gitlab:workhorse:install[/home/git/gitlab-workhorse]\" RAILS_ENV=production\n```", "```\n$ sudo -u git -H bundle exec rake \"gitlab:gitaly:install[/home/git/gitaly,/home/git/repositories]\" RAILS_ENV=production\n```", "```\n$ sudo chmod 0700 /home/git/gitlab/tmp/sockets/private\n$ sudo chown git /home/git/gitlab/tmp/sockets/private\n```", "```\n$ cd /home/git/gitaly\n$ sudo -u git -H editor config.toml\n```", "```\n$ sudo -u git bash -c \"/home/git/gitlab/bin/daemon_with_pidfile /home/git/gitlab/tmp/pids//gitaly.pid /home/git/gitaly/gitaly /home/git/gitaly/config.toml >> /home/git/gitlab/log/gitaly.log 2>&1 &\"\n```", "```\n$ cd /home/git/gitlab\n$ sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production force=yes\n```", "```\n‘Administrator account created:'\n```", "```\nsudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD=yourpassword GITLAB_ROOT_EMAIL=youremail@gmail.com DISABLE_DATABASE_ENVIRONMENT_CHECK=1\n```", "```\nsudo cp config/secrets.yml /to/somewhere/safe\n```", "```\nsudo cp lib/support/init.d/gitlab /etc/init.d/gitlab\n```", "```\nsudo update-rc.d gitlab defaults 21\n```", "```\nsudo cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab\n```", "```\n$ sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production\n```", "```\nSystem information\nSystem: Debian 9.8\nCurrent User: git\nUsing RVM: no\nRuby Version: 2.5.5p157\nGem Version: 2.7.6.2\nBundler Version:1.17.3\nRake Version: 12.3.2\nRedis Version: 3.2.6\nGit Version: 2.11.0\n..\n```", "```\n$sudo -u git -H bundle exec rake gettext:compile RAILS_ENV=production\n\nCreated app.js in /home/git/gitlab/app/assets/javascripts/locale/ja\nCreated app.js in /home/git/gitlab/app/assets/javascripts/locale/eo\nCreated app.js in /home/git/gitlab/app/assets/javascripts/locale/zh_HK\nCreated app.js in /home/git/gitlab/app/assets/javascripts/locale/fil_PH\nCreated app.js in /home/git/gitlab/app/assets/javascripts/locale/ar_SA\nCreated app.js in /home/git/gitlab/app/assets/javascripts/locale/en\n..\n```", "```\n$sudo -u git -H yarn install --production --pure-lockfile\nyarn install v1.15.2\n[1/5] Validating package.json...\n[2/5] Resolving packages...\n...\nDone in 48.37s.\n```", "```\n$sudo -u git -H bundle exec rake gitlab:assets:compile RAILS_ENV=production NODE_ENV=production\nwarning Resolution field \"ts-jest@24.0.0\" is incompatible with requested version \"ts-jest@^23.10.5\" \n`yarn:check` finished in 4.2137985 seconds\nCreated app.js in /home/git/gitlab/app/assets/javascripts/locale/ja\n...\n```", "```\nsudo service gitlab start\n```", "```\nsudo /etc/init.d/gitlab restart\n```", "```\nroot@93d7eb73dce6:/home/git/gitlab# sudo service gitlab status\nStarting GitLab Unicorn\nStarting GitLab Sidekiq\nStarting GitLab Workhorse\nGitaly is already running with pid 2877, not restarting\nThe GitLab Unicorn web server with pid 5240 is running.\nThe GitLab Sidekiq job dispatcher with pid 5312 is running.\nThe GitLab Workhorse with pid 5290 is running.\nGitaly with pid 2877 is running.\nGitLab and all its components are up and running.\n```", "```\n#key \n$ cd /tmp/ && wget http://nginx.org/keys/nginx_signing.key \nsudo apt-key add nginx_signing.key \n#repo \n$ sudo bash -c 'echo \"deb http://nginx.org/packages/mainline/debian/ stretch nginx\" > /etc/apt/sources.list.d/nginx.list' \n$ sudo apt-get update\n```", "```\n$ sudo apt-get install -y nginx\n```", "```\n$ cd /home/gitlab/gitlab;sudo cp lib/support/nginx/gitlab /etc/nginx/conf.d/gitlab.conf \n```", "```\n$ sudo editor /etc/nginx/conf.d/gitlab.conf \n```", "```\n$ sudo rm -f /etc/nginx/conf.d/default*\n```", "```\nsudo service nginx restart\n```", "```\nsudo docker run \\\n --hostname gitlab.joustie.nl \\\n --publish 443:443 --publish 80:80 --publish 22:22 \\\n --name gitlab \\\n --volume /srv/gitlab/config:/etc/gitlab \\\n --volume /srv/gitlab/logs:/var/log/gitlab \\\n --volume /srv/gitlab/data:/var/opt/gitlab \\\n gitlab/gitlab-ce:latest\n```", "```\ndocker ps\n```", "```\nsudo docker exec -it gitlab /bin/bash\n```", "```\nsudo docker exec -it gitlab vi /etc/gitlab/gitlab.rb\n```", "```\nsudo docker restart gitlab\n```", "```\n--env GITLAB_OMNIBUS_CONFIG=\"external_url '\nexternal_url 'GENERATED_EXTERNAL_URL' \\\ngitlab_rails['smtp_enable'] = true \\\ngitlab_rails['smtp_address'] = \"smtp.server\" \\\ngitlab_rails['smtp_port'] = 465\"\ngitlab_rails['gitlab_shell_ssh_port'] = 2222\n```", "```\nsudo docker run --detach \\\n --hostname gitlab.joustie.nl \\\n --env GITLAB_OMNIBUS_CONFIG=\"external_url 'http://gitlab.joustie.nl'; gitlab_rails['smtp_address'] = \"smtp.server\" \" \\\n --publish 443:443 --publish 80:80 --publish 22:22 \\\n --name gitlab \\\n --restart always \\\n --volume /srv/gitlab/config:/etc/gitlab \\\n --volume /srv/gitlab/logs:/var/log/gitlab \\\n --volume /srv/gitlab/data:/var/opt/gitlab \\\n gitlab/gitlab-ce:latest\n```", "```\nsudo docker stop gitlab (or sha)\n```", "```\nsudo docker rm gitlab (or sha)\n```", "```\nsudo docker pull gitlab/gitlab-ce:latest\n```", "```\nsudo docker run --detach \\\n--hostname gitlab.joustie.nl \\\n--publish 443:443 --publish 80:80 --publish 22:22 \\\n--name gitlab \\\n--restart always \\\n--volume /srv/gitlab/config:/etc/gitlab \\\n--volume /srv/gitlab/logs:/var/log/gitlab \\\n--volume /srv/gitlab/data:/var/opt/gitlab \\\ngitlab/gitlab-ce:latest\n```", "```\nsudo docker run --detach \\\n --hostname gitlab.joustie.nl \\\n --publish 192.168.1.1:443:443 \\\n --publish 192.168.1.1:80:80 \\\n --publish 192.168.1.1:22:22 \\\n --name gitlab \\\n --restart always \\\n --volume /srv/gitlab/config:/etc/gitlab \\\n --volume /srv/gitlab/logs:/var/log/gitlab \\\n --volume /srv/gitlab/data:/var/opt/gitlab \\\n gitlab/gitlab-ce:latest\n```", "```\nsudo docker logs gitlab\n```", "```\nsudo docker exec -it gitlab /bin/bash\n```", "```\nweb:\n image: 'gitlab/gitlab-ce:latest'\n restart: always\n hostname: 'gitlab.joustie.nl'\n environment:\n GITLAB_OMNIBUS_CONFIG: |\n external_url 'https://gitlab.joustie.nl'\n ports:\n - '80:8080'\n - '443:4443'\n - '22:2222'\n volumes:\n - '/srv/gitlab/config:/etc/gitlab'\n - '/srv/gitlab/logs:/var/log/gitlab'\n - '/srv/gitlab/data:/var/opt/gitlab'\n```", "```\ndocker-compose up -d \n```", "```\nhelm repo add gitlab https://charts.gitlab.io helm init\n```", "```\ngitlabUrl: https://gitlab.home.joustie.nl/\nrunnerRegistrationToken: \"dE47NAgHgnFRpdd23RiDJ9JOSzBH40mxqLa1B42Ds5eb94ZWebhPydPt9n\"\n```", "```\nhelm install --namespace yournamespace --name gitlab-runner -f values.yml gitlab/gitlab-runner\n```", "```\n$ helm repo add gitlab https://charts.gitlab.io/\n$ helm repo update\n```", "```\n$ helm upgrade --install gitlab gitlab/gitlab \\\n--timeout 600 \\\n--set global.hosts.domain=home.joustie.nl \\\n--set global.hosts.externalIP=<your external ip> \\\n--set certmanager-issuer.email=admin@joustie.nl\n```", "```\nRelease \"gitlab\" does not exist. Installing it now.\nNAME: gitlab\nLAST DEPLOYED: Wed Jan 2 12:31:31 2019\nNAMESPACE: default\nSTATUS: DEPLOYED\nRESOURCES:\n==> v1/PersistentVolumeClaim\nNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE\ngitlab-minio Bound pvc-fc207fb5-0e81-11e9-b9ef-025000000001 10Gi RWO hostpath 9s\ngitlab-postgresql Bound pvc-fc2158a3-0e81-11e9-b9ef-025000000001 8Gi RWO hostpath 9s\ngitlab-prometheus-server Bound pvc-fc2240b5-0e81-11e9-b9ef-025000000001 8Gi RWO hostpath 9s\ngitlab-redis Bound pvc-fc236cfb-0e81-11e9-b9ef-025000000001 5Gi RWO hostpath 9s\n```", "```\nkubectl get secret <name>-gitlab-initial-root-password -ojsonpath={.data.password} | base64 --decode ; echo\n```", "```\n$ helm upgrade --install gitlab gitlab/gitlab \\\n --timeout 600 \\\n --set global.hosts.domain=home.joustie.nl \\\n --set global.hosts.externalIP=<your external ip> \\\n --set certmanager-issuer.email=admin@joustie.nl \\\n --set global.smtp.enabled=true \\\n --set global.smtp.address=smtp.xs4all.nl \\\n --set global.smtp.port=25\n```", "```\n#update the chart\nhelm repo add gitlab https://charts.gitlab.io/\nhelm repo update\n#get the current values\nhelm get values gitlab > gitlab.yaml\n```", "```\nhelm upgrade gitlab gitlab/gitlab -f gitlab.yaml\n```", "```\nSTATUS: DEPLOYED\n```", "```\nhelm delete gitlab\n```", "```\ntail -100 /var/log/gitlab_set_pass.log\n```", "```\nCould not create the default administrator account:\n–> Password is too short (minimum is 8 characters)\n```", "```\ngitlab_rails[‘initial_root_password'] = ‘nonstandardpassword'\n```", "```\ngitlab-rake gitlab:setup\n```", "```\nAdministrator account created:\nlogin: root password: You'll be prompted to create one on your first visit.\n```"]