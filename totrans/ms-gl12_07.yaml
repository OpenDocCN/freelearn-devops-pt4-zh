- en: Importing Your Project from GitHub to GitLab
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 GitHub 导入项目到 GitLab
- en: In the first section, we explained the GitLab architecture and how to install
    and configure GitLab in several ways. In this part of the book, we will look at
    several ways of migrating source projects from third parties to GitLab. We will
    start with GitHub, which resembles GitLab a lot and which was the inspiration
    to develop it. After years of development, the two products still share the same
    basic functionality, but have diverged in additional features. There are several
    ways you can import projects from GitHub.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一部分中，我们解释了 GitLab 架构以及如何以多种方式安装和配置 GitLab。在本书的这一部分，我们将探讨从第三方迁移源项目到 GitLab
    的几种方法。我们将从 GitHub 开始，它与 GitLab 非常相似，也是 GitLab 开发的灵感来源。经过多年的发展，这两个产品仍然共享相同的基本功能，但在额外功能上有所不同。有几种方法可以从
    GitHub 导入项目。
- en: 'In this chapter, the following points will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，将涵盖以下内容：
- en: Using the GitHub integration feature in GitLab (also known as the GitHub importer)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 GitLab 中使用 GitHub 集成功能（也称为 GitHub 导入器）
- en: Using a GitHub token—create this in GitHub for third party application integration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GitHub token——为第三方应用集成在 GitHub 中创建该 token
- en: Using a GitLab rake task—you need access to a GitLab instance that can run rake
    tasks, and when you possess administrator rights
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GitLab rake 任务——你需要访问一个可以运行 rake 任务的 GitLab 实例，并且需要拥有管理员权限
- en: For each method, we will present what you have to configure and prepare in GitHub
    and GitLab. Finally, we will run the import for each method.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每种方法，我们将展示你在 GitHub 和 GitLab 中需要配置和准备的内容。最后，我们将针对每种方法执行导入操作。
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: In order to manage omnibus installs, you need to use a central configuration
    file called `gitlab.rb`. You need to create it or copy an example of one. Fortunately,
    a template is available, which you can find at [https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template](https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template).
    It isn't updated after upgrades. Later on in this chapter, I will quote and discuss
    parts of this file.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理 omnibus 安装，你需要使用一个名为 `gitlab.rb` 的中央配置文件。你需要创建它或复制一个示例文件。幸运的是，已经提供了一个模板，你可以在
    [https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template](https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template)
    找到该模板。它在升级后不会更新。稍后在本章中，我将引用并讨论该文件的部分内容。
- en: To follow along with the instructions in this chapter, please download the GitHub
    repository, along with the examples available on the GitHub repository, at [https://github.com/PacktPublishing/Mastering-GitLab-12/tree/master/Chapter05](https://github.com/PacktPublishing/Mastering-GitLab-12/tree/master/Chapter05).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟随本章的说明，请下载 GitHub 仓库以及 GitHub 仓库中的示例，下载地址为 [https://github.com/PacktPublishing/Mastering-GitLab-12/tree/master/Chapter05](https://github.com/PacktPublishing/Mastering-GitLab-12/tree/master/Chapter05)。
- en: You will also need a GitHub account, as well as a GitLab account in the cloud
    or on premise.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要一个 GitHub 账户，以及一个在云端或本地的 GitLab 账户。
- en: 'In regards to user matching, you want to make sure that the GitHub users associated
    with the repository have the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 关于用户匹配，你需要确保与仓库相关联的 GitHub 用户具备以下条件：
- en: A GitLab account that uses OAuth-based login using the GitHub icon
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个使用 OAuth 登录的 GitLab 账户，可以通过 GitHub 图标进行登录
- en: A GitLab account with an email address that is identical to their public email
    address in GitHub
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 GitLab 账户，其电子邮件地址与 GitHub 中的公开电子邮件地址相同
- en: Using the GitHub integration feature
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GitHub 集成功能
- en: To export things from GitHub, the proper authorizations must be set. This can
    be done using GitHub integration with OAuth registration, where GitLab authenticates
    with GitHub to access a list of projects for the user.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 GitHub 导出内容，必须设置适当的授权。这可以通过使用 GitHub 集成和 OAuth 注册来完成，GitLab 会与 GitHub 进行身份验证，以便访问用户的项目列表。
- en: The best result of mapping authors and assignees from GitHub to GitLab is achieved
    when using the GitHub integration features that are available in GitLab instead
    of using a single personal access token from GitHub.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 将 GitHub 上的作者和任务分配人映射到 GitLab 上的最佳效果，是使用 GitLab 中提供的 GitHub 集成功能，而不是仅使用 GitHub
    的个人访问 token。
- en: The integration covers all the import items we just mentioned and tries to keep
    all the references intact. For instance, the importer will try to find the GitHub
    authors and assignees of issues and pull requests. This means that GitLab integration
    has to be enabled in your GitLab instance.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此集成涵盖了我们刚刚提到的所有导入项，并尽力保持所有引用的完整性。例如，导入程序将尝试查找GitHub问题和拉取请求的作者和受指派者。这意味着必须在您的GitLab实例中启用GitLab集成功能。
- en: Preparing GitHub for export
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备GitHub进行导出
- en: 'To register GitLab as an application that can connect to GitHub, you have to
    log in to your GitHub account. To do this, go to [https://github.com/settings/applications](https://github.com/settings/applications)
    and register GitLab as an OAuth application:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要将GitLab注册为可以连接到GitHub的应用程序，您需要登录到GitHub帐户。为此，请访问[https://github.com/settings/applications](https://github.com/settings/applications)并将GitLab注册为OAuth应用程序：
- en: '![](img/5c66df76-6768-447d-995e-cefccd70e3d4.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5c66df76-6768-447d-995e-cefccd70e3d4.png)'
- en: 'Fill in the form using the following data:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下数据填写表格：
- en: Application name (the name of your application)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用名称（您的应用程序名称）
- en: Homepage URL (the full URL to your application)
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首页URL（应用程序的完整URL）
- en: Application description (general description)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用描述（一般描述）
- en: 'Authorization callback URL (the most important setting, the URL to send to
    after authentication):'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授权回调URL（最重要的设置，认证后发送的URL）：
- en: '![](img/376a67e1-8643-4fd7-a530-aa61e4aa04d0.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/376a67e1-8643-4fd7-a530-aa61e4aa04d0.png)'
- en: 'After the registration has succeeded, an overview is presented with two very
    important pieces of information: the client ID and client secret are shown, and
    also how many users have used the OAuth link to connect GitHub repositories. The
    client ID and client secret are needed later to configure GitLab for integration.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注册成功后，会显示一个概览，包含两个非常重要的信息：客户端ID和客户端密钥，以及有多少用户通过OAuth链接连接了GitHub仓库。稍后您将需要这些客户端ID和客户端密钥来配置GitLab进行集成。
- en: 'The following screen appears after a successful registration:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 注册成功后，将出现以下屏幕：
- en: '![](img/a2dd924e-8188-41ee-bfd0-a8df0bc9aa41.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a2dd924e-8188-41ee-bfd0-a8df0bc9aa41.png)'
- en: You now have GitHub configured and can move on to the *Preparing GitLab for
    import* section.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经配置了GitHub，可以继续进行*准备GitLab导入*部分。
- en: Preparing GitLab for import
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备GitLab进行导入
- en: To finish the setup for the GitHub integration, we have to set up our GitLab
    instance so that we can connect as a registered OAuth application to GitHub. We
    do this by adding an `omniauth_provider` to the GitLab configuration. Remember
    the client ID and the client secret? We will need these here.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成GitHub集成的设置，我们需要配置GitLab实例，以便我们可以将其作为注册的OAuth应用程序连接到GitHub。我们通过将`omniauth_provider`添加到GitLab配置来实现此操作。还记得客户端ID和客户端密钥吗？我们将在这里用到它们。
- en: 'For GitLab omnibus installations, we need to create a section in `/etc/gitlab/gitlab.rb`
    like the following one. `app_id` is the client ID, while `app_secret` is the client
    secret. The name that is provided isn''t important. After the file has been saved,
    you have to use `gitlab-ctl reconfigure`:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于GitLab omnibus安装，我们需要在`/etc/gitlab/gitlab.rb`中创建如下的部分。`app_id`是客户端ID，而`app_secret`是客户端密钥。提供的名称不重要。保存文件后，您需要使用`gitlab-ctl
    reconfigure`：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For GitHub Enterprise, you can specify the URL of your GitHub instance as well:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 对于GitHub Enterprise，您还可以指定您的GitHub实例的URL：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For GitLab installations from source, we edit the `config.yml` file, as follows.
    and restart GitLab after saving it:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于源代码安装的GitLab，我们编辑`config.yml`文件，如下所示，并在保存后重新启动GitLab：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: See [https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template](https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template) for
    more information on settings you can set in the `gitlab.rb` file. Also see [Chapter
    2](8e9ca130-15d0-4c6e-af6b-2fe5292f3618.xhtml), *Installing GitLab* about this
    subject.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template](https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template)获取更多有关在`gitlab.rb`文件中可以设置的配置项的信息。还可以查看[第2章](8e9ca130-15d0-4c6e-af6b-2fe5292f3618.xhtml)，*安装GitLab*，了解更多相关内容。
- en: Running the import
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行导入
- en: 'Follow these steps to learn how to run the import:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何运行导入：
- en: 'In GitLab, choose to create a new project and use the Import project tab to
    find the GitHub icon:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在GitLab中，选择创建一个新项目，并使用导入项目标签找到GitHub图标：
- en: '![](img/fbc7226d-38b4-4503-b865-ff1bd177ffe7.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fbc7226d-38b4-4503-b865-ff1bd177ffe7.png)'
- en: 'After clicking on the GitHub icon, you will find a page where you can click
    List your GitHub repositories:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 GitHub 图标后，您将看到一个页面，在该页面上可以点击列出您的 GitHub 仓库：
- en: '![](img/019320d6-c3ab-40cd-8821-370d8c864b37.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/019320d6-c3ab-40cd-8821-370d8c864b37.png)'
- en: 'When GitHub integration is enabled, the next step will be to authorize GitLab
    to access your projects:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用 GitHub 集成后，下一步将是授权 GitLab 访问您的项目：
- en: '![](img/13b52810-0caf-41f7-8b2d-61954e620f44.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/13b52810-0caf-41f7-8b2d-61954e620f44.png)'
- en: 'If authorization succeeds, a list of projects that can be migrated is shown.
    Select the projects to be migrated, and click Import:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果授权成功，将显示可迁移的项目列表。选择要迁移的项目并点击“导入”：
- en: '![](img/06876c9b-ed20-43be-b397-a3356ad433c0.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/06876c9b-ed20-43be-b397-a3356ad433c0.png)'
- en: 'Make sure that you don''t have projects with the same name already in GitLab
    in your namespace, otherwise you will receive a 422 error, as shown in the following
    screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在您的命名空间中没有已经存在同名的项目，否则您将收到 422 错误，如下图所示：
- en: '![](img/222a7c5d-564b-4370-9ade-b209486e6237.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/222a7c5d-564b-4370-9ade-b209486e6237.png)'
- en: 'When the import is finished, you will receive a message:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 导入完成后，您将收到一条消息：
- en: '![](img/f375f36e-1286-44c1-814f-e7be3266cdde.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f375f36e-1286-44c1-814f-e7be3266cdde.png)'
- en: The project has been successfully imported!
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 项目已成功导入！
- en: Using a GitHub token
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GitHub 令牌
- en: When using a GitHub token to import, there's nothing special to configure in
    GitLab – you can enter it immediately, as you will see later.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 GitHub 令牌进行导入时，在 GitLab 中无需进行特殊配置——您可以立即输入，正如稍后所看到的那样。
- en: Preparing GitHub for export
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备 GitHub 进行导出
- en: 'A personal token can be used as delegated authorization from your GitHub account.
    Let''s get started:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 个人令牌可以作为您 GitHub 账户的委托授权。让我们开始：
- en: 'You create one via [https://github.com/settings/tokens](https://github.com/settings/tokens):'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过[https://github.com/settings/tokens](https://github.com/settings/tokens)创建一个：
- en: '![](img/6cdf9d9d-4c7a-46cd-bb80-b84f1aa81f11.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6cdf9d9d-4c7a-46cd-bb80-b84f1aa81f11.png)'
- en: 'Make sure you set a meaningful token description and choose the repo scope
    only. We want the GitLab importer to access these objects:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保设置有意义的令牌描述，并只选择仓库作用域。我们希望 GitLab 导入器访问以下对象：
- en: '![](img/550ff051-6cbd-4c7f-b145-5ff1e180ae8f.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/550ff051-6cbd-4c7f-b145-5ff1e180ae8f.png)'
- en: 'Once the token has been created, make sure to record the token somewhere because
    it won''t be shown again, and losing it means that you have to recreate it:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 令牌创建后，请务必将令牌记录在某个地方，因为它将不会再次显示，丢失令牌意味着您需要重新创建它：
- en: '![](img/f00996ad-083c-4e72-84ba-474698fc682f.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f00996ad-083c-4e72-84ba-474698fc682f.png)'
- en: You now have a GitHub token and can choose to use it directly in the GitLab
    web interface.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您拥有一个 GitHub 令牌，可以选择在 GitLab 网页界面中直接使用它。
- en: Running the import
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行导入
- en: 'Let''s get started and learn how to prepare GitLab for import:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始并学习如何准备 GitLab 进行导入：
- en: 'In GitLab, create a new project and use the import tab to find the GitHub icon,
    as shown in the following screenshot:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 GitLab 中，创建一个新项目，并使用导入标签找到 GitHub 图标，如下图所示：
- en: '![](img/d8a01fa1-4844-483c-a0ff-3bcfcb83a2bb.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d8a01fa1-4844-483c-a0ff-3bcfcb83a2bb.png)'
- en: 'If GitHub integration is disabled, the next screen won''t have an option for
    you to list your GitHub repositories. To choose a project to migrate, you have
    to enter the personal token you created on [https://github.com/](https://github.com/):'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果禁用了 GitHub 集成，下一屏将不会有列出 GitHub 仓库的选项。要选择要迁移的项目，您必须输入您在[https://github.com/](https://github.com/)上创建的个人令牌：
- en: '![](img/6c19143c-0340-4635-acdc-adb443739ce6.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6c19143c-0340-4635-acdc-adb443739ce6.png)'
- en: 'Again, if authorization succeeds, a list of projects that can be migrated is
    shown. Select the projects to be migrated and click Import:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果授权成功，将显示可迁移的项目列表。选择要迁移的项目并点击“导入”：
- en: '![](img/d4065957-92ad-4f0f-a3b6-f321bd3af2e5.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d4065957-92ad-4f0f-a3b6-f321bd3af2e5.png)'
- en: 'When the import is finished, you will receive a message:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入完成后，您将收到一条消息：
- en: '![](img/12a78eeb-8510-4a8f-93c5-642ec2290fa7.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12a78eeb-8510-4a8f-93c5-642ec2290fa7.png)'
- en: The project has successfully been imported using the token.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 项目已经成功使用令牌导入。
- en: Using a GitLab rake task
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GitLab rake 任务
- en: In order to retrieve and import GitHub repositories, you will need a GitHub
    personal access token, as demonstrated earlier.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检索和导入 GitHub 仓库，您需要一个 GitHub 个人访问令牌，正如之前演示的那样。
- en: Preparing GitLab for import
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备 GitLab 进行导入
- en: 'For importing projects using a rake task, there is only one option to configure
    in GitLab beforehand: the number of Sidekiq resources. You will notice that for
    big projects, it can take quite some time to import all the data. To speed up
    this process, assign more Sidekiq workers to the following queues:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用 rake 任务导入项目，在 GitLab 中预先配置的唯一选项是：Sidekiq 资源的数量。你会发现，对于大型项目，导入所有数据可能需要相当长的时间。为了加速这个过程，可以为以下队列分配更多的
    Sidekiq 工作者：
- en: '`github_importer`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`github_importer`'
- en: '`github_importer_advance_stage`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`github_importer_advance_stage`'
- en: 'For GitLab omnibus installations, these queues are part of the default Sidekiq
    process. Giving more threads to Sidekiq will mean that there will be more workers:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 GitLab Omnibus 安装，这些队列是默认 Sidekiq 进程的一部分。为 Sidekiq 提供更多线程意味着将有更多的工作者：
- en: '[PRE3]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: See [https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template](https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template) for
    more information on settings you can set in the `gitlab.rb` file. Also, see [Chapter
    2](8e9ca130-15d0-4c6e-af6b-2fe5292f3618.xhtml), *Installing GitLab* about this
    subject.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 查看 [https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template](https://github.com/gitlabhq/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template)，了解可以在
    `gitlab.rb` 文件中设置的更多配置信息。此外，关于此主题，请参见 [第 2 章](8e9ca130-15d0-4c6e-af6b-2fe5292f3618.xhtml)，*安装
    GitLab*。
- en: Running the import
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行导入
- en: The GitLab rake task can import a single project or multiple projects at once.
    It is invoked from the command line, so you need administrator access to the machine
    where the GitLab application is running.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: GitLab 的 rake 任务可以一次导入一个项目或多个项目。它是从命令行调用的，因此你需要管理员权限才能访问运行 GitLab 应用程序的机器。
- en: When specifying a GitHub repository as the fourth argument to the rake task,
    you can directly import it.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当将 GitHub 仓库作为 rake 任务的第四个参数时，你可以直接导入它。
- en: 'To import a specific GitHub project (named `joustie/github_repo` here), do
    the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要导入一个特定的 GitHub 项目（这里命名为 `joustie/github_repo`），请执行以下操作：
- en: '**Omnibus installations**:'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Omnibus 安装**：'
- en: '[PRE4]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Installations from source**:'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源代码安装**：'
- en: '[PRE5]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To import a project from the list of your available GitHub projects, do the
    following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要从你可用的 GitHub 项目列表中导入一个项目，请执行以下操作：
- en: '**Omnibus installations**:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Omnibus 安装**：'
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Installations from source**:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从源代码安装**：'
- en: '[PRE7]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: It is also possible to specify subgroups such as `<groupname/groupname/project>`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以指定子组，例如 ` <groupname/groupname/project>`。
- en: 'For my example project, you will see the following results:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我的示例项目，你将看到以下结果：
- en: '![](img/13bbe949-684b-47e2-9ca6-d2b89ad6e8bf.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/13bbe949-684b-47e2-9ca6-d2b89ad6e8bf.png)'
- en: 'The GitHub importer obtained a list of projects with your GitHub personal access
    token. When you want to specify one particular project, use the ID:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 导入器使用你的 GitHub 个人访问令牌获取项目列表。当你想指定某个特定项目时，可以使用项目 ID：
- en: '![](img/9033dbba-3738-4577-8ed3-737fbbe2891c.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9033dbba-3738-4577-8ed3-737fbbe2891c.png)'
- en: 'The importer will ask for confirmation after that:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 导入器之后会要求确认：
- en: '![](img/3cd50d98-889d-492c-a1c7-efeeb666e82a.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3cd50d98-889d-492c-a1c7-efeeb666e82a.png)'
- en: 'The rake tasks will run synchronously and perform the import. After the import
    operation, a summary of the timings is given:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: rake 任务将同步运行并执行导入操作。导入操作完成后，会提供一个时间总结：
- en: '![](img/5c03aedf-9943-4e1d-adf5-6f0fb201ae30.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5c03aedf-9943-4e1d-adf5-6f0fb201ae30.png)'
- en: When you log in to your GitLab instance, you will find the imported project.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到 GitLab 实例后，你将找到导入的项目。
- en: Summary
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We started this chapter by explaining what items can be migrated from GitHub
    to GitLab, and what the possibilities are. There are three options regarding migrating
    your data, and which ones you can use depend on how your GitLab instance is configured.
    The recommended way is to use the GitHub importer. This mechanism presents the
    most user-friendly and complete migration path.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章开始时解释了可以从 GitHub 迁移到 GitLab 的内容和可能性。关于数据迁移有三种选择，具体可以使用哪种方式取决于你的 GitLab
    实例的配置。推荐的方法是使用 GitHub 导入器。这种机制提供了最用户友好且完整的迁移路径。
- en: GitHub and GitLab are very comparable, but in the next chapter, we will take
    a look at CVS and how it compares to Git as a versioning tool, and how to migrate
    it.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 和 GitLab 非常相似，但在下一章中，我们将看看 CVS 和 Git 作为版本控制工具的对比，以及如何迁移它。
- en: Questions
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the equivalent of a pull request in GitLab?
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GitLab 中 pull request 的等价物是什么？
- en: Which ways exist to import GitHub projects into GitLab?
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 GitHub 项目导入 GitLab 有哪些方法？
- en: What is needed to display the authors correctly?
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示作者信息需要什么？
- en: Which authentication mechanism is used to connect to GitHub?
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于连接到 GitHub 的认证机制是什么？
- en: What is the secret called that's needed to connect to GitHub?
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到 GitHub 需要的那个秘密是什么？
- en: What scope do you need for a token to import as much as possible from GitHub?
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入尽可能多的 GitHub 内容所需的 token 范围是什么？
- en: What is the name of the two queues that process the import?
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理导入的两个队列名称是什么？
- en: Where can you find the import button for GitHub in GitLab?
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 GitLab 中可以在哪里找到 GitHub 的导入按钮？
- en: What is the name of the rake task to import from GitHub?
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 GitHub 导入的 rake 任务名称是什么？
- en: Is it possible to import one particular project only?
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是否可以只导入一个特定的项目？
- en: Further reading
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '*GitHub Essentials – Second Edition*, by *Achilleas Pipinellis*: [https://www.packtpub.com/web-development/github-essentials-second-edition](https://www.packtpub.com/web-development/github-essentials-second-edition)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*GitHub Essentials – 第二版*，作者：*Achilleas Pipinellis*：[https://www.packtpub.com/web-development/github-essentials-second-edition](https://www.packtpub.com/web-development/github-essentials-second-edition)'
