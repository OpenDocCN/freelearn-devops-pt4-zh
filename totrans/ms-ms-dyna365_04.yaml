- en: Online and Container-Based Sandboxes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在线和基于容器的沙盒
- en: 'Dynamics 365 Business Central allows us to set up sandboxes for development
    and testing purposes. There are two general options for these sandboxes: online
    sandboxes (SaaS-based) and Docker-based sandboxes (self-deployed).'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 允许我们为开发和测试目的设置沙盒。对于这些沙盒，有两种通用选项：在线沙盒（基于 SaaS）和基于
    Docker 的沙盒（自部署）。
- en: Online sandboxes can be created very easily because they run as a service, which
    is the same as Dynamics 365 Business Central production environments. The only
    requirement is an existing production tenant.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在线沙盒创建非常简单，因为它们作为服务运行，与 Dynamics 365 Business Central 的生产环境相同。唯一的要求是已有的生产租户。
- en: Docker-based sandboxes are based on Docker containers and can run either on
    Azure or on-premise.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 Docker 的沙盒基于 Docker 容器，可以在 Azure 或本地运行。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将覆盖以下主题：
- en: Creating online sandboxes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建在线沙盒
- en: The basics of Docker images and containers and how to work with them
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 镜像和容器的基础知识，以及如何使用它们
- en: Setting up local Docker environments
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置本地 Docker 环境
- en: Mastering the `navcontainerhelper` PowerShell utility
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 掌握 `navcontainerhelper` PowerShell 工具
- en: Choosing the right Docker image for your development purposes
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的开发目的选择合适的 Docker 镜像
- en: Creating your own Docker image
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建你自己的 Docker 镜像
- en: Creating online sandboxes
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建在线沙盒
- en: When subscribing to a trial tenant or directly purchasing Dynamics 365 Business
    Central, you also have the ability to create online sandbox environments.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在订阅试用租户或直接购买 Dynamics 365 Business Central 时，你也可以创建在线沙盒环境。
- en: 'You can create online sandboxes in two ways: from a production environment
    client and/or from Dynamics 365 Business Central Admin Center.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过两种方式创建在线沙盒：通过生产环境客户端和/或通过 Dynamics 365 Business Central 管理中心。
- en: 'When creating them from a production environment, search (*Alt *+ *Q*) for
    `sandbox` and choose Sandbox Environment (Preview):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从生产环境创建时，搜索 (*Alt *+ *Q*) `sandbox`，然后选择沙盒环境（预览版）：
- en: '![](img/e6b3dc6b-6bca-4200-a80d-94fd8e70de9e.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e6b3dc6b-6bca-4200-a80d-94fd8e70de9e.png)'
- en: 'You will then be prompted to create a new sandbox environment or open or reset
    an existing sandbox. If there are no sandboxes and you choose open or reset, a
    new sandbox will be created. Online sandboxes that are created using a production
    environment client have the following properties:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你将被提示创建一个新的沙盒环境，或者打开或重置现有的沙盒。如果没有沙盒且你选择打开或重置，将创建一个新的沙盒。使用生产环境客户端创建的在线沙盒具有以下属性：
- en: They are named **sandbox** by default and are also visible in the Dynamics 365
    Business Central Admin Center.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们默认命名为 **sandbox**，并且也能在 Dynamics 365 Business Central 管理中心中看到。
- en: They do not contain any customer data and just have data coming from a standard
    demo/evaluation Cronus company.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们不包含任何客户数据，仅包含来自标准演示/评估 Cronus 公司的数据。
- en: 'It is very important to carefully read the Microsoft disclaimer when subscribing
    to an online sandbox tenant, and it''s worth mentioning that this feature is still
    marked as being in preview:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在订阅在线沙盒租户时，仔细阅读微软免责声明非常重要，值得一提的是，此功能仍标记为预览版：
- en: '![](img/8e6ad481-0c9e-4b72-96da-8328f05cbb65.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e6ad481-0c9e-4b72-96da-8328f05cbb65.png)'
- en: You can also create up to three sandbox environments from Dynamics 365 Business
    Central Admin Center. With the appropriate credentials, log into the Admin Center
    through a supported browser at [https:\\businesscentral.dynamics.com\GUID\Admin](https://businesscentral.dynamics.com/GUID/Admin),
    where `GUID` is the tenant ID of your environment.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以从 Dynamics 365 Business Central 管理中心创建最多三个沙盒环境。使用适当的凭证，通过支持的浏览器登录 [https:\\businesscentral.dynamics.com\GUID\Admin](https://businesscentral.dynamics.com/GUID/Admin)，其中
    `GUID` 是你环境的租户 ID。
- en: 'The following shows what it looks like in the Admin Center:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是管理中心中的样子：
- en: '![](img/a85a3108-4061-46d4-8907-28f1cf5f4d50.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a85a3108-4061-46d4-8907-28f1cf5f4d50.png)'
- en: 'Click the New button and then give the new online sandbox a valid name. Check
    the option for copying production data:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 新建 按钮，然后为新的在线沙盒指定一个有效的名称。勾选复制生产数据的选项：
- en: '![](img/0e7e50d0-0ea4-41b1-9fbe-9dc1fc807f87.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e7e50d0-0ea4-41b1-9fbe-9dc1fc807f87.png)'
- en: After a while, your sandbox, with a copy of the production data, will be up
    and running and ready for testing and development tasks.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 稍等片刻，你的沙盒将会启动并运行，带有生产数据的副本，准备好进行测试和开发任务。
- en: Online sandboxes–pros and cons
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在线沙盒的优缺点
- en: 'According to the Microsoft disclaimer, online sandboxes are still a preview
    feature, and we recommend using them for demo purposes or spot development activities
    only. Online sandboxes have the following properties:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 根据微软的免责声明，在线沙盒仍然是预览功能，我们建议仅将其用于演示目的或临时开发活动。在线沙盒具有以下特点：
- en: They are supported by a different priority than production environments.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们的支持优先级不同于生产环境。
- en: Tenants are created in Azure SQL Database S-level pools, which are less performant
    than production P-level pools.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 租户是创建在 Azure SQL 数据库的 S 等级池中，这些池的性能不如生产环境中的 P 等级池。
- en: They are still marked as Preview, so they are frequently subject to change.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们仍然被标记为预览版，因此经常会发生变化。
- en: During upgrades, currently all per-tenant extensions are uninstalled and you/your
    CSP partner are required to install them once again.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在升级过程中，目前所有每个租户的扩展都将被卸载，您/您的 CSP 合作伙伴需要重新安装它们。
- en: 'You can find out more about the background of this by reading the following
    articles:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过阅读以下文章了解更多背景信息：
- en: '[https://demiliani.com/2019/01/24/dynamics-365-business-central-tenant-upgrade-extensions-disappeared-in-sandbox-environment/](https://demiliani.com/2019/01/24/dynamics-365-business-central-tenant-upgrade-extensions-disappeared-in-sandbox-environment/)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://demiliani.com/2019/01/24/dynamics-365-business-central-tenant-upgrade-extensions-disappeared-in-sandbox-environment/](https://demiliani.com/2019/01/24/dynamics-365-business-central-tenant-upgrade-extensions-disappeared-in-sandbox-environment/)'
- en: '[https://demiliani.com/2019/03/14/dynamics-365-business-central-online-sandbox-makes-you-crazy-maybe-remember-these-points/](https://demiliani.com/2019/03/14/dynamics-365-business-central-online-sandbox-makes-you-crazy-maybe-remember-these-points/)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://demiliani.com/2019/03/14/dynamics-365-business-central-online-sandbox-makes-you-crazy-maybe-remember-these-points/](https://demiliani.com/2019/03/14/dynamics-365-business-central-online-sandbox-makes-you-crazy-maybe-remember-these-points/)'
- en: For professional development, container-based sandboxes are far more appropriate
    and we encourage you to use Docker-contained sandboxes in your company when developing
    either AppSource or per-tenant extensions.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对于专业开发，基于容器的沙盒更为合适，我们鼓励您在开发 AppSource 或每个租户扩展时，在公司中使用 Docker 容器沙盒。
- en: From the online production environment, you can also search (*Alt *+ *Q*) for
    sandbox and click on Sandbox Environment (Container)to easily set up an offline
    local or Azure-hosted Docker-contained sandbox.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从在线生产环境中，您也可以搜索（*Alt* + *Q*）沙盒并点击沙盒环境（容器），轻松设置离线本地或 Azure 托管的 Docker 容器沙盒。
- en: You can find out more about this at[https://demiliani.com/2018/03/29/d365bc-container-sandbox-environment/](https://demiliani.com/2018/03/29/d365bc-container-sandbox-environment/).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过[https://demiliani.com/2018/03/29/d365bc-container-sandbox-environment/](https://demiliani.com/2018/03/29/d365bc-container-sandbox-environment/)了解更多信息。
- en: Let's move on to the next section and learn how to work with Docker-based environments.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入下一部分，学习如何使用基于 Docker 的环境。
- en: Introducing Docker
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引入 Docker
- en: If you opt to use self-deployed sandboxes, they will be based on Docker. Docker
    is the leading cross-platform software container environment. Since this is a
    book about Dynamics 365 Business Central, this section will only be a quick introduction
    to Docker, but if you want to learn more, there are excellent learning resources
    in the official documentation by Docker ([https://docs.docker.com/](https://docs.docker.com/))
    and Microsoft ([https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/index](https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/index)),
    both of which are very good starting points.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择使用自部署的沙盒，它们将基于 Docker。Docker 是领先的跨平台软件容器环境。由于本书是关于 Dynamics 365 Business
    Central 的，本节将简要介绍 Docker，但如果您想了解更多，有关 Docker（[https://docs.docker.com/](https://docs.docker.com/)）和微软（[https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/index](https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/index)）的官方文档中有很多优秀的学习资源，都是非常好的起点。
- en: Dynamics 365 Business Central runs *only* on Windows, so when you're looking
    for Docker documentation, make sure that it is intended for Windows. While most
    of Docker is platform-independent, there are some platform-specific sections as
    well.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central *仅* 在 Windows 上运行，因此当您查找 Docker 文档时，请确保它是针对 Windows
    的。虽然大部分 Docker 是平台无关的，但仍有一些特定平台的部分内容。
- en: 'In order to follow the content of the following sections, you need to know
    about the following Docker basics:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟随接下来的内容，你需要了解以下 Docker 基础知识：
- en: A Docker image is like a pre-built template with the minimum amount of OS binaries,
    libraries, and application binaries needed. The image can be identified by a name,
    such as Business Central / Sandbox. The exact image version can be specified with
    a tag. For example, `1910-cu1-de`would give you the **October 19 release** (**1910**),
    **CU 1** (**cu1**), **German version** (**de**).
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 镜像就像一个预构建的模板，包含运行所需的最少操作系统二进制文件、库和应用程序二进制文件。镜像可以通过名称来识别，例如 Business Central
    / Sandbox。可以通过标签指定确切的镜像版本。例如，`1910-cu1-de` 表示 **2019年10月发布**（**1910**）、**CU 1**（**cu1**）、**德语版本**（**de**）。
- en: A Docker container is an instance of an image with an immutable base (the files
    that are in the image) and its changes on top. A container is not a **virtual
    machine** (**VM**). It doesn't have a GUI or anything you can connect to by using
    the **Remote Desktop Protocol** (**RDP**).
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 容器是镜像的一个实例，具有不可变的基础（镜像中的文件）以及在其上进行的更改。容器不是 **虚拟机**（**VM**）。它没有 GUI 或任何你可以通过
    **远程桌面协议**（**RDP**）连接的内容。
- en: A Docker host is a (physical or virtual) machine where containers are running.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 主机是一个运行容器的（物理或虚拟）机器。
- en: A Docker registry is a place where you and others can upload (push) and download
    (pull) images. Specifically, images can be downloaded from repositories that are
    part of the registry.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker 仓库是你和其他人可以上传（推送）和下载（拉取）镜像的地方。具体来说，镜像可以从属于该注册表的仓库中下载。
- en: All Dynamics 365 Business Central Docker images are available through the Microsoft
    Container Registry, which you can find at [http://mcr.microsoft.com](http://mcr.microsoft.com)in
    the business central repository. It will be called **sandbox** or **on-prem**,
    so a typical address to pull a Dynamics 365 Business Central on-premise image
    from is [mcr.microsoft.com/businesscentral/onprem:1810-cu5-de](http://mcr.microsoft.com/businesscentral/onprem:1810-cu5-de).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Dynamics 365 Business Central Docker 镜像都可以通过 Microsoft 容器注册表获得，你可以在 [http://mcr.microsoft.com](http://mcr.microsoft.com)
    的 business central 仓库中找到它。它将被称为 **sandbox** 或 **on-prem**，因此，从 Dynamics 365 Business
    Central 本地镜像拉取的典型地址是 [mcr.microsoft.com/businesscentral/onprem:1810-cu5-de](http://mcr.microsoft.com/businesscentral/onprem:1810-cu5-de)。
- en: For previews of new and upcoming releases, there is also a special repository
    called `bcinsider.azurecr.io`, but you need credentials to access it. Microsoft
    provides those credentials through the Ready to Go! program on collaborate ([https://docs.microsoft.com/en-us/collaborate/](https://docs.microsoft.com/en-us/collaborate/)).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 对于新版本和即将发布版本的预览，还有一个特殊的仓库 `bcinsider.azurecr.io`，但你需要凭证才能访问它。Microsoft 通过 Ready
    to Go! 程序提供这些凭证，你可以在协作平台上找到它们 ([https://docs.microsoft.com/en-us/collaborate/](https://docs.microsoft.com/en-us/collaborate/))。
- en: The scripts that are used to create and run the Dynamics 365 Business Central
    images are open source and available at [https://github.com/Microsoft/nav-docker](https://github.com/Microsoft/nav-docker).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 用于创建和运行 Dynamics 365 Business Central 镜像的脚本是开源的，可以在 [https://github.com/Microsoft/nav-docker](https://github.com/Microsoft/nav-docker)
    上找到。
- en: It is also worth noting that while these images are called business central,
    they also contain a SQL Server for the database, an IIS for the `Web Client`,
    and file sharing by default.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 还值得注意的是，尽管这些镜像被称为 business central，但它们还包含一个 SQL Server 数据库，一个用于 `Web 客户端` 的
    IIS，以及默认的文件共享功能。
- en: Some base mechanisms when using Docker
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Docker 时的一些基础机制
- en: In the following sections, we will use a couple of mechanisms that cover most
    real-life scenarios. Let's go through each of them.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将使用几个涵盖大多数实际场景的机制。让我们逐一了解它们。
- en: Environment variables
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 环境变量
- en: 'An environment variable is a way to parameterize a Docker container when it
    starts. Dynamics 365 Business Central images understand a lot of environments,
    for example, those used to set the authentication type or the username and password,
    or the SQL server and database you want to connect your Business Central Service
    Tier to. Environment variables are set using the `-e` parameter. If you need to
    set multiple environment variables, you can just use multiple `-e` parameters:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 环境变量是一种在 Docker 容器启动时进行参数化的方式。Dynamics 365 Business Central 镜像理解许多环境变量，例如用于设置认证类型、用户名和密码，或设置你希望将
    Business Central 服务层连接到的 SQL 服务器和数据库。环境变量通过 `-e` 参数设置。如果你需要设置多个环境变量，可以使用多个 `-e`
    参数：
- en: '[PRE0]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: There is no list of all environment variables you can use to configure Dynamics
    365 Business Central containers in line with your requirements, but the script
    for setting up those variables in the image is a good starting point, and the
    names of the variables give you a pretty good idea of what they do. You can find
    this script at [https://github.com/Microsoft/nav-docker/blob/master/generic/Run/SetupVariables.ps1](https://github.com/Microsoft/nav-docker/blob/master/generic/Run/SetupVariables.ps1).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 没有关于所有环境变量的列表，你可以使用这些环境变量来根据你的需求配置 Dynamics 365 Business Central 容器，但用于设置这些变量的脚本是一个不错的起点，并且这些变量的名称可以让你大致了解它们的作用。你可以在
    [https://github.com/Microsoft/nav-docker/blob/master/generic/Run/SetupVariables.ps1](https://github.com/Microsoft/nav-docker/blob/master/generic/Run/SetupVariables.ps1)
    找到这个脚本。
- en: Volumes
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卷
- en: With volumes, you have a way to map folders on your Docker host to your container,
    for example, to give it access to binaries or other files it needs to run your
    solution.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用卷，你可以将 Docker 主机上的文件夹映射到容器中，例如，为容器提供访问运行解决方案所需的二进制文件或其他文件的权限。
- en: If you are not using volumes and you remove a container, all the changes you
    make to the filesystem inside the container will be lost because they will have
    been removed, along with the container.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有使用卷，并且删除了一个容器，那么你对容器内文件系统所做的所有更改将会丢失，因为它们会与容器一起被删除。
- en: 'Volumes are set using the `-v` parameter, followed by the path of your host,
    a colon, and the path inside your container. If you want to map the `c:\data\containers`folder
    on your host to `c:\temp` inside of the container, you would write the following
    command:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 卷通过 `-v` 参数进行设置，后面跟着主机上的路径，一个冒号，以及容器内部的路径。如果你想将主机上的 `c:\data\containers` 文件夹映射到容器内的
    `c:\temp`，你可以使用以下命令：
- en: '[PRE1]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Networks and ports
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络和端口
- en: 'Docker lets you use different ways to connect your containers to the network.
    If you configure nothing else, it uses a so-called NAT network. This means that
    your containers get an IP address known only on the Docker host, which also makes
    them reachable on the host. As an alternative, you can create a so-called transparent
    network, which means that the container will share the network connection of the
    host and will try to get its own IP address using either DHCP for dynamic IP assignment
    or a static IP address you configure. If you have a transparent network called
    `transpNet`, you would instruct Docker to use it with the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 让你可以通过不同的方式将容器连接到网络。如果你没有做其他配置，它会使用一个所谓的 NAT 网络。这意味着你的容器将获得一个仅在 Docker
    主机上可知的 IP 地址，这也使得容器在主机上是可访问的。作为替代方案，你可以创建一个所谓的透明网络，这意味着容器将共享主机的网络连接，并且会尝试使用 DHCP
    动态 IP 分配或你配置的静态 IP 地址来获取自己的 IP 地址。如果你有一个名为 `transpNet` 的透明网络，你可以通过以下命令告诉 Docker
    使用它：
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Dynamics 365 Business Central images use all the standard ports, so you have
    `7045`-`7049` for the Business Central Service Tier services, `443` for HTTPS,
    `80` for HTTP for the `Web Client`, and `1443` for SQL. They also share some files
    through port `8080`, which is mapped to an IIS backend share.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 镜像使用所有标准端口，因此你有 `7045`-`7049` 用于 Business Central
    服务层服务，`443` 用于 HTTPS，`80` 用于 HTTP 的 `Web Client`，以及 `1443` 用于 SQL。它们还通过端口 `8080`
    共享一些文件，这个端口被映射到 IIS 后端共享。
- en: 'If you don''t want to use transparent networks but still want to make the ports
    available outside the Docker host, you can use a mechanism called port mapping
    with the`-p` parameter. With that, you can instruct Docker to make a port of the
    container that''s available on the same or a different port of your host. If you
    want to make an HTTPS-based `Web Client` listening on port `443` available on
    port `4443` of your host, you would typically use the following command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想使用透明网络，但仍然希望将端口暴露到 Docker 主机之外，你可以使用一种叫做端口映射的机制，使用 `-p` 参数。通过这个参数，你可以告诉
    Docker 将容器的某个端口映射到主机上的相同端口或不同端口。如果你想将基于 HTTPS 的 `Web Client`（监听在端口 `443` 上）暴露到主机的端口
    `4443`，你通常会使用以下命令：
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Since Dynamics 365 Business Central works a lot better if it knows which ports
    it is listening on, the best approach is to include `-e WebClientPort=4443`, which
    causes the `Web Client` to listen on that port instead of the standard port, `443`.
    Consequently, your port mapping parameter would be `-p 4443:4443`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Dynamics 365 Business Central 在知道它监听哪些端口时会运行得更好，最佳方法是包含 `-e WebClientPort=4443`，这样会让
    `Web Client` 监听该端口而不是标准端口 `443`。因此，你的端口映射参数将是 `-p 4443:4443`。
- en: Scenarios where Docker is especially useful for Dynamics 365 Business Central
    sandboxes
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker 在 Dynamics 365 Business Central 沙盒中的特别有用场景
- en: 'There are a couple of scenarios where the use of Docker containers makes a
    lot of sense and can help solve common problems. Please note that, at the time
    of writing, there is no production support for Dynamics 365 Business Central running
    in a Docker container, so you can only use it for development and testing purposes.
    The scenarios that will be covered in this book are as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些场景下，使用Docker容器非常有意义，可以帮助解决常见的问题。请注意，在撰写本文时，Dynamics 365 Business Central在Docker容器中运行尚不支持生产环境，因此你只能将其用于开发和测试。本文将覆盖的场景如下：
- en: '**Locally available scenarios**: You want to run the sandboxes on your local
    sandbox or on your own virtual machine.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地可用场景**：你希望在本地沙盒或自己的虚拟机上运行沙盒。'
- en: '**Centrally available environments**: The sandboxes are provided on a central
    environment and are administered by some kind of operations team.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集中式可用环境**：沙盒提供于一个中央环境中，并由某种操作团队进行管理。'
- en: '**Containers hosted on Azure VMs**: If you don''t want or can''t have a VM
    in your own datacenter, you can use Azure **Infrastructure-as-a-Service** (**IaaS**)
    to host your sandboxes.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**托管在Azure虚拟机上的容器**：如果你不想或者不能在自己的数据中心拥有虚拟机，你可以使用Azure的**基础设施即服务**（**IaaS**）来托管你的沙盒。'
- en: '**Serverless environments on Azure Container Instances**: You can also use
    the **Platform-as-a-Service** (**PaaS**) offering of Azure Container Instances
    if you just want to run your containers without worrying about Docker itself.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure容器实例中的无服务器环境**：如果你只想运行容器而不关心Docker本身，你也可以使用Azure容器实例的**平台即服务**（**PaaS**）选项。'
- en: It is worth mentioning that there are other options, such as the **Azure Kubernetes
    Service** (**AKS**) or products from other cloud providers, but since Dynamics
    365 Business Central tends to run with more Microsoft-oriented customers and Kubernetes
    only recently initiated support for Windows containers, they will not be covered
    here.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，还有其他选项，比如**Azure Kubernetes服务**（**AKS**）或其他云提供商的产品，但由于Dynamics 365 Business
    Central倾向于与更多微软导向的客户一起使用，而Kubernetes最近才开始支持Windows容器，因此这里不会讨论这些选项。
- en: Docker is also very useful for automated builds in a **Continuous Integration/Continuous
    Delivery** (**CI/CD**) pipeline. This topic will be covered in depth in [Chapter
    11](bc01dacb-fdbe-496b-82a0-e45d2435e574.xhtml), *Source Control Management and
    DevOps with Business Central*.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Docker对于**持续集成/持续交付**（**CI/CD**）流水线中的自动化构建也非常有用。这个主题将在[第11章](bc01dacb-fdbe-496b-82a0-e45d2435e574.xhtml)，*与Business
    Central的源代码管理和DevOps*中深入讨论。
- en: Locally available environments using pure Docker commands
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用纯Docker命令的本地可用环境
- en: Having your Dynamics 365 Business Central sandboxes local makes sense if you
    want to give the person working with them full control or if you need to use them
    offline. It will, however, require the person using it to understand at least
    the basics of Docker, which is not very complicated but may or may not suit your
    requirements.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想让使用者完全控制Dynamics 365 Business Central沙盒或需要离线使用它们，那么将沙盒放在本地是有意义的。然而，这会要求使用者至少理解Docker的基础知识，虽然这并不复杂，但可能不符合你的需求。
- en: Your first container
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你的第一个容器
- en: The first step in running Dynamics 365 Business Central sandboxes is installing
    Docker. This is quite easy and documented at [https://docs.docker.com/install/windows/docker-ee/](https://docs.docker.com/install/windows/docker-ee/).
    Once you have done that, it's time to run your first container. Microsoft has
    provided a very helpful PowerShell module called `navcontainerhelper`, which eases
    the process of creating containers. However, to give you some basic understanding
    of the underlying mechanisms and how Dynamics 365 Business Central images work,
    it makes sense to look at a couple of easy examples with just Docker.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Dynamics 365 Business Central沙盒的第一步是安装Docker。这个过程很简单，并且有相关文档可供参考：[https://docs.docker.com/install/windows/docker-ee/](https://docs.docker.com/install/windows/docker-ee/)。完成安装后，就可以开始运行你的第一个容器。微软提供了一个非常有用的PowerShell模块`navcontainerhelper`，它简化了容器创建过程。然而，为了帮助你理解底层机制以及Dynamics
    365 Business Central镜像的工作原理，最好通过几个简单的Docker示例来了解。
- en: 'The most basic way to run a Dynamics 365 Business Central sandbox is by using
    the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 运行Dynamics 365 Business Central沙盒的最基本方式是使用以下命令：
- en: '[PRE4]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This only works in what is called process isolation, which allows the container
    to use host resources such as memory as necessary. Depending on your configuration
    and whether you are running on an old version of Windows 10 or Docker, you may
    get an error stating that the container doesn't have enough memory. In that case,
    add `-m 3G` as a parameter, which will allow the container to reserve 3 GB of
    memory.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这只在所谓的进程隔离模式下有效，这允许容器根据需要使用主机资源（如内存）。根据你的配置以及你是否运行的是旧版Windows 10或Docker，你可能会收到一条错误信息，表示容器内存不足。在这种情况下，添加`-m
    3G`作为参数，这将允许容器保留3 GB的内存。
- en: More on process isolation can be found at [https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/hyperv-container](https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/hyperv-container).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有关进程隔离的更多信息，请参阅 [https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/hyperv-container](https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/hyperv-container)。
- en: 'Note that this will, by default, pull the image based on Windows Server 2016\.
    If you want to run the much smaller and therefore quicker image based on Windows
    Server 2019, you need to add what is called a tag; in this case, this will be `ltsc2019`.
    More details can be found in the *Choosing the right image* section:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，默认情况下，这将基于Windows Server 2016拉取镜像。如果你想运行基于Windows Server 2019的更小、更快速的镜像，你需要添加一个称为标签的参数；在这种情况下，这个标签将是`ltsc2019`。更多细节可以在*选择合适的镜像*部分找到：
- en: '[PRE5]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This instructs Docker to run a container using the specified image, that is, `mcr.microsoft.com/businesscentral/sandbox`.
    Running a container means that Docker checks whether that image has already been
    downloaded (pulled) and if not, it pulls it. If it is already available, or after
    Docker has downloaded the image for you, it creates a container for that image
    and starts it. You will see the output from the main process inside the console
    window where you ran that command.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这指示Docker使用指定的镜像（即`mcr.microsoft.com/businesscentral/sandbox`）运行一个容器。运行容器意味着Docker会检查该镜像是否已经被下载（拉取），如果没有，它将拉取镜像。如果已经存在，或者Docker已经为你下载了镜像，它将为该镜像创建并启动一个容器。你将看到从主进程输出的内容，显示在你运行该命令的控制台窗口中。
- en: With the `-e` parameter, you let Docker know that you want to set the `accept_eula=y`
    environment parameter inside the container, which means that you accept the **End
    User License Agreement** (**EULA**). This is necessary whenever you run a Dynamics
    365 Business Central sandbox.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-e`参数时，你让Docker知道你希望在容器内设置`accept_eula=y`环境参数，这意味着你接受**最终用户许可协议**（**EULA**）。每当你运行Dynamics
    365 Business Central沙箱时，这都是必要的。
- en: 'The following is the output of a `docker run` command where the image was not
    locally available:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`docker run`命令的输出，其中镜像本地不可用：
- en: '[PRE6]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: As you can see, the log output lets you know where you can reach the `Web Client`
    and the Development Server service (for connections with Visual Studio Code with
    the AL Language extension) for your container (use the IP address for now; more
    on that later) and which username and password to use.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，日志输出会告诉你在哪里可以访问容器的`Web Client`和开发服务器服务（用于与Visual Studio Code的AL Language扩展进行连接）（暂时使用IP地址，稍后会详细说明）以及使用的用户名和密码。
- en: Pulling new image versions
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拉取新镜像版本
- en: 'Note that, by default, Docker doesn''t check whether there is a new version
    of the image and tags you to try to download. If you want to make sure you have
    the current version, you can run the following command, which will always check
    if there is a newer image:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，默认情况下，Docker不会检查镜像是否有新版本并提示你下载。如果你想确保你有当前版本，可以运行以下命令，它将始终检查是否有更新的镜像：
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If there is a new version available, it will download it and produce some output
    that looks similar to what you saw previously. If no new version is available,
    you will see the following:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有新版本可用，Docker将会下载它，并输出类似于你之前看到的内容。如果没有新版本可用，你将看到以下信息：
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can also use more environment parameters, a volume, and port mapping to
    show you a more advanced example while using the mechanisms we introduced earlier:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用更多环境参数、卷和端口映射，来展示一个更高级的示例，同时使用我们之前介绍的机制：
- en: '[PRE9]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This achieves the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这实现了以下功能：
- en: It accepts the EULA and tells the image not to use SSL for the `Web Client`
    with the two `-e` parameters.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它接受EULA，并通过两个`-e`参数告诉镜像不要为`Web Client`使用SSL。
- en: It maps a local folder, `c:\dev\addins`, to the `mine` subfolder of the `Add-Ins`
    folder of the Business Central Service Tier with the `-v` parameter.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使用`-v`参数将本地文件夹`c:\dev\addins`映射到Business Central服务层`Add-Ins`文件夹中的`mine`子文件夹。
- en: It makes port `80` available as port `80` on your laptop with the `-p` parameter.
    You could also use`-p 8080:80`, which causes port `8080` on your laptop to go
    to port `80` on the container.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使端口`80`在你的笔记本电脑上作为端口`80`可用，使用`-p`参数。你也可以使用`-p 8080:80`，这会将你笔记本电脑上的端口`8080`映射到容器上的端口`80`。
- en: It names the container `mycontainer` so that you can easily refer to it with
    the `--name` parameter.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它将容器命名为`mycontainer`，这样你可以轻松地通过`--name`参数来引用它。
- en: Now that we have learned about running a local Docker environment, let's have
    a look at how to connect to an existing SQL Server instance.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了如何运行本地Docker环境，接下来让我们看看如何连接到现有的SQL Server实例。
- en: Connecting to an existing SQL Server
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到现有的SQL Server
- en: You can instruct the container to connect to an existing SQL Server and database
    instead of using the SQL Server inside the container, which will also mean that
    the SQL Server inside the container will not be started. This is needed if you
    want to connect multiple instances to the same database, but also makes a lot
    of sense if you want to run a lot of containers on the same host. Otherwise, you
    will have one SQL Server running per container, which will need a lot of resources.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以指示容器连接到现有的SQL Server和数据库，而不是使用容器内部的SQL Server，这样容器内部的SQL Server也不会启动。如果你想将多个实例连接到同一个数据库，这是必要的，但如果你想在同一主机上运行多个容器，这也很有意义。否则，你将每个容器都运行一个SQL
    Server，这将需要大量资源。
- en: 'In this section, I am assuming there is a SQL Server (in a container or not)
    called `sqlserver` running in your local environment where the Business Central
    container can reach it. I have a SQL user called `sqluser`with a password of `1SuperSecretPwd!`,
    who has the necessary rights to access a Business Central database called `FinancialsW1`
    on that server. For this scenario, the `docker run` command would look like this:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我假设在你的本地环境中运行着一个名为`sqlserver`的SQL Server（无论是否在容器中），并且Business Central容器能够访问它。我有一个名为`sqluser`的SQL用户，密码为`1SuperSecretPwd!`，该用户具有访问该服务器上名为`FinancialsW1`的Business
    Central数据库的必要权限。对于这种情况，`docker run`命令将如下所示：
- en: '[PRE10]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We get the following output:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '[PRE11]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following is the final output:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是最终输出：
- en: '[PRE12]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note that, in this case, the container will not create any users in the database
    because it assumes that, if you are using an existing database, you will also
    have existing users in that database. Also, note that the container will import
    its own encryption key into the database, which is used to encrypt passwords.
    So, if you want to connect multiple containers to the same database in that way,
    you need to make sure the encryption key is shared.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在这种情况下，容器不会在数据库中创建任何用户，因为它假设如果你使用的是现有数据库，那么你也会在该数据库中有现有的用户。同时，请注意，容器将把它自己的加密密钥导入到数据库中，这个密钥用于加密密码。因此，如果你想以这种方式连接多个容器到同一个数据库，你需要确保加密密钥是共享的。
- en: Handling your running containers with Docker cmdlets
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Docker cmdlet处理正在运行的容器
- en: 'If you need to get a PowerShell session into a running container, you have
    two options:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要获取PowerShell会话进入正在运行的容器，你有两个选项：
- en: 'First, you can use `Enter-PSSession`, as if you were connecting to another
    computer, except you need to give it the full ID of the container instead of the
    machine name. The easiest way to get there is to use a subcommand querying Docker
    for that container. Entering a PS session for the `mycontainer` container would
    look like this:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，你可以使用`Enter-PSSession`，就像连接到另一台计算机一样，不过你需要给它容器的完整ID，而不是计算机名。最简单的方式是使用一个子命令查询Docker以获取该容器。进入`mycontainer`容器的PS会话将如下所示：
- en: '[PRE13]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The preceding statement *only* works when you're running as an administrator.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句*仅*在以管理员身份运行时有效。
- en: 'The second option is to execute the `powershell` command on your container
    and instruct Docker to open an interactive Terminal for it. This would look as
    follows for the `mycontainer` container:'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个选项是执行容器中的`powershell`命令，并指示Docker为其打开一个交互式终端。对于`mycontainer`容器，这将如下所示：
- en: '[PRE14]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: With both commands, you end up with a PowerShell session inside your container.
    If you want to run Business Central cmdlets, the easiest way is to call `c:\run\prompt.ps1`,
    which imports all the development and admin cmdlets.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两个命令，你将在容器内启动一个 PowerShell 会话。如果你想运行 Business Central cmdlet，最简单的方式是调用 `c:\run\prompt.ps1`，它会导入所有开发和管理员
    cmdlet。
- en: 'To see all the currently running containers, you can write and execute `docker
    ps`, which gives you the following output:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看当前正在运行的所有容器，你可以输入并执行 `docker ps`，它会显示以下输出：
- en: '[PRE15]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To see all currently existing containers, you can use `docker ps -a`, which
    also includes exited and/or stopped containers (the output also shows a container
    with a status of `Exited`):'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看所有当前存在的容器，你可以使用 `docker ps -a`，它还包括已退出和/或已停止的容器（输出还会显示一个状态为 `Exited` 的容器）：
- en: '[PRE16]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Stopping and starting containers is as easy as using `docker stop` and `docker
    start`, respectively. If you want to remove a container, you need to either stop
    (`docker stop`) and then remove it (`docker rm`) or use the `-f` parameter for
    `docker rm` to force the removal of the container, even if it's still running.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 停止和启动容器和使用 `docker stop` 和 `docker start` 一样简单。如果你想删除一个容器，你需要先停止（`docker stop`）然后删除它（`docker
    rm`），或者使用 `docker rm` 的 `-f` 参数强制删除容器，即使它仍在运行。
- en: Be aware that removing a container means that all the files inside that container
    are gone and can't be restored.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，删除容器意味着该容器内的所有文件将丢失，无法恢复。
- en: 'If the command is successful, it only returns the name or ID of the container
    as you specified it:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令执行成功，它只会返回你指定的容器名称或 ID：
- en: '[PRE17]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note that you can address containers either with their name or with their ID.
    You don't need to specify the full ID; you just need enough characters from the
    beginning of the ID so that Docker can uniquely identify the container. Also,
    note that `docker ps` gives you a truncated ID for each container, and you can
    use `docker ps –no-trunc` to get the full ID.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你可以通过容器的名称或 ID 来定位容器。你不需要指定完整的 ID，只需要提供 ID 的前几个字符，以便 Docker 唯一地识别容器。同时，注意
    `docker ps` 会为每个容器显示一个截断的 ID，你可以使用 `docker ps --no-trunc` 来获取完整的 ID。
- en: Creating locally available environments using navcontainerhelper
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 navcontainerhelper 创建本地可用的环境
- en: To make it easier to adopt and use Dynamics 365 Business Central Docker images,
    Microsoft has created a PowerShell Module called `navcontainerhelper`. It uses
    the same images and commands that you can use with pure Docker commands and, in
    a lot of places, you can see how the cmdlets translate to Docker commands. It
    also contains a very valuable collection of additional PowerShell scripts to help
    with common development, build, test, and release tasks in Dynamics 365 Business
    Central.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让用户更容易采用和使用 Dynamics 365 Business Central Docker 镜像，微软创建了一个名为 `navcontainerhelper`
    的 PowerShell 模块。它使用与纯 Docker 命令相同的镜像和命令，且在许多地方，你可以看到 cmdlet 是如何转化为 Docker 命令的。它还包含了一些非常有价值的
    PowerShell 脚本集合，帮助完成 Dynamics 365 Business Central 中常见的开发、构建、测试和发布任务。
- en: Installing navcontainerhelper and keeping it updated
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 navcontainerhelper 并保持其更新
- en: 'To use the `navcontainerhelper` module, you need to install it from the PowerShell
    gallery, as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `navcontainerhelper` 模块，你需要从 PowerShell Gallery 安装它，如下所示：
- en: '[PRE18]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If there is a new version of `navcontainerhelper`(which, at the time of writing,
    happens at least every couple of weeks) with new helpful features and bug fixes,
    just run the following command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有新版本的 `navcontainerhelper`（在写这篇文档时，至少每隔几周就会有一次更新），并且包含新的有用功能和 bug 修复，只需运行以下命令：
- en: '[PRE19]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Your first container
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你的第一个容器
- en: 'To follow the same examples as in the previous section, you will learn how
    to run your first container using `navcontainerhelper`. However, `navcontainerhelper`
    expects you to give it a name and make a conscious decision about authentication.
    If you don''t provide any other parameters, it assumes that you want to use Windows
    authentication and asks for your password so that it can create a user with the
    same username and password inside the container. This also enables **single-sign-on**
    (**SSO**). Consider the following command:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了跟随上一节的相同示例，你将学习如何使用 `navcontainerhelper` 运行你的第一个容器。不过，`navcontainerhelper`
    需要你给它一个名称，并做出关于身份验证的明确选择。如果你没有提供任何其他参数，它会假设你想使用 Windows 身份验证，并要求输入密码，以便它可以在容器内创建一个具有相同用户名和密码的用户。这也启用了
    **单点登录** (**SSO**) 功能。考虑以下命令：
- en: '[PRE20]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As you can see from the last couple of lines, `navcontainerhelper` even creates
    convenient desktop shortcuts. They allow you to access the `Web Client` or open
    a PowerShell or Command Prompt inside your container with a simple double-click.
    The shortcuts actually use the same `docker exec` command that you saw in the
    previous sections.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你从最后几行看到的，`navcontainerhelper`甚至会创建方便的桌面快捷方式。它们允许你通过简单的双击访问`Web Client`，或在容器内打开PowerShell或命令提示符。这些快捷方式实际上使用了你在前几节中看到的相同的`docker
    exec`命令。
- en: '`New-NavContainer` has a long list of parameters, which may either be just
    mappings for environment parameters or very helpful little functions. To give
    you an example, if you specify `-updateHosts`, then `navcontainerhelper` will
    add the name and IP address of the container to the hosts file on your laptop.
    This means that you don''t need to use the IP address – you can use the container
    name as the address! There are, of course, ways to do this without `navcontainerhelper`,
    but none are as easy as specifying one single parameter in your startup command.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`New-NavContainer`有一个很长的参数列表，这些参数要么仅仅是环境参数的映射，要么是非常有用的小功能。举个例子，如果你指定了`-updateHosts`，那么`navcontainerhelper`会将容器的名称和IP地址添加到你笔记本电脑上的hosts文件中。这意味着你不需要使用IP地址——你可以使用容器名称作为地址！当然，也有其他方法可以做到这一点，但没有像在启动命令中指定一个简单的参数那么方便。'
- en: Pulling new image versions
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拉取新镜像版本
- en: Pulling new images works exactly the same for `navcontainerhelper` as it does
    for plain Docker; there's no special command there. However, you can specify `-alwaysPull` as
    a parameter for your `New-NavContainer` command, which will –as the name clearly
    implies –always try to pull a new image version before running your container.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 拉取新镜像在`navcontainerhelper`中的工作方式与普通Docker完全相同；没有特别的命令。然而，你可以为`New-NavContainer`命令指定`-alwaysPull`参数，正如名称所示——每次运行容器之前，都会尝试拉取新的镜像版本。
- en: But `navcontainerhelper` actually adds more convenient optimizations automatically.
    If you do not specify `ltsc2016`or `ltsc2019`as part of your tag, it will determine
    the best container platform and use that. It also automatically determines whether
    process isolation is possible and sets the memory limit, if necessary, to 4 GB.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 但`navcontainerhelper`实际上会自动添加更多方便的优化。如果你没有在标签中指定`ltsc2016`或`ltsc2019`，它会自动确定最佳的容器平台并使用它。它还会自动判断是否可以使用进程隔离，并在必要时将内存限制设置为4GB。
- en: Using more environment parameters, a volume, and port mapping
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用更多环境参数、卷和端口映射
- en: 'As we mentioned previously, `New-NavContainer` provides a lot of parameters
    that just set environment parameters. We did the following in our previous example
    using plain `docker run`:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`New-NavContainer`提供了许多仅设置环境参数的选项。在我们之前使用`docker run`的示例中，执行了以下操作：
- en: '[PRE21]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'To achieve the same in `navcontainerhelper`, we would use the following:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`navcontainerhelper`中实现相同的功能，我们会使用以下命令：
- en: '[PRE22]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Let''s compare the features:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来比较一下这些功能：
- en: Accepting the EULA is done with `-accept_eula`, and not using SSL is the default
    for `navcontainerhelper`.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接受EULA（最终用户许可协议）是通过`-accept_eula`完成的，且不使用SSL是`navcontainerhelper`的默认设置。
- en: The mapping of the local folder to the `Add-ins` folder in the container is
    done with the `-additionalParameters` parameter. This is the mechanism in `navcontainerhelper`
    that specifies any `docker run` parameter you may need that is not already covered.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地文件夹与容器中`Add-ins`文件夹的映射是通过`-additionalParameters`参数来实现的。这是`navcontainerhelper`中用于指定任何你可能需要的`docker
    run`参数的机制，这些参数尚未被涵盖。
- en: Port mapping is done with the `-PublishPorts` parameter.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口映射是通过`-PublishPorts`参数来实现的。
- en: Naming the container is done with the `-containerName` parameter.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命名容器是通过`-containerName`参数来完成的。
- en: 'Again, `navcontainerhelper` adds more automatically: `c:\programdata\navcontainerhelper`
    is always shared with the container as the same folder inside the container. Also,
    every container has its own folder at `c:\programdata\navcontainerhelper\extensions\<containername>`,
    and everything local to this container is placed there.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，`navcontainerhelper`会自动添加更多内容：`c:\programdata\navcontainerhelper`始终会与容器共享，并作为容器内的同一文件夹。此外，每个容器都有自己在`c:\programdata\navcontainerhelper\extensions\<containername>`中的文件夹，所有本地与该容器相关的内容都会放在这里。
- en: Connecting to an existing SQL Server
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到现有的SQL Server
- en: '`navcontainerhelper` makes this task just a bit more convenient than using
    Docker directly. You need to specify the same parameters, but you can give it
    a credential object instead of putting the username and password in as clear text.
    As a reminder, the following is what the `docker run` command looks like:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`navcontainerhelper`使得这个任务比直接使用 Docker 稍微方便一些。你需要指定相同的参数，但你可以提供一个凭证对象，而不是将用户名和密码明文写入。提醒一下，下面是`docker
    run`命令的样子：'
- en: '[PRE23]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The following is the same command but using `navcontainerhelper`. It will open
    a credential entry dialog where you can enter your SQL username and password.
    But instead of sharing the password as clear text in the environment variables,
    `navcontainerhelper` ensures that passwords are handled securely, as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用`navcontainerhelper`的相同命令。它将打开一个凭证输入对话框，在那里你可以输入 SQL 用户名和密码。但与直接将密码明文写入环境变量不同，`navcontainerhelper`确保密码得到安全处理，如下所示：
- en: '[PRE24]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note that the default authentication mechanism when using `docker run` is `NavUserPassword`,
    while the default for `navcontainerhelper` is Windows, so in order to achieve
    the same result, we need to specify that as well.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用`docker run`时默认的身份验证机制是`NavUserPassword`，而`navcontainerhelper`的默认身份验证机制是
    Windows，因此为了实现相同的效果，我们也需要指定这一点。
- en: Handling your running containers with NavContainerHelper
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 NavContainerHelper 管理你的运行中的容器
- en: There is no special command in `navcontainerhelper` that lets you see your running
    containers, so you just use the same `docker ps` commands that were introduced
    in the previous section. There are commands for starting and stopping containers
    (`Start-NavContainer` and `Stop-NavContainer`, respectively), but they are very
    thin wrappers around `docker start` and `docker stop` with no additional benefits.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在`navcontainerhelper`中没有专门的命令让你查看正在运行的容器，因此你只需要使用前面章节中介绍的相同`docker ps`命令。也有启动和停止容器的命令（分别是`Start-NavContainer`和`Stop-NavContainer`），但它们只是`docker
    start`和`docker stop`的简单封装，没有额外的好处。
- en: 'Removing containers, however, is done with `Remove-NavContainer`, which does
    a bit more: it cleans up the shortcuts and container-specific folders, and it
    removes entries in your hosts file if you specify `-updatehosts`.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 移除容器的操作是通过`Remove-NavContainer`完成的，它做的事情稍微多一些：它会清理快捷方式和特定于容器的文件夹，如果你指定了`-updatehosts`，它还会移除
    hosts 文件中的相关条目。
- en: 'There is also a command to get a session into your container called `Enter-NavContainer`.
    This gives you a PowerShell session inside your container with the added benefit
    of calling `c:\run\prompt.ps1`, which gives you all development and admin cmdlets
    immediately and a nicely formatted prompt so that you always know where you are.
    Consider the following command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个命令可以让你进入容器会话，叫做`Enter-NavContainer`。这会给你一个 PowerShell 会话，进入容器内部，另外还可以调用`c:\run\prompt.ps1`，这会立刻提供所有开发和管理的
    cmdlet，并且给你一个格式良好的提示，让你始终知道自己在哪里。考虑以下命令：
- en: '[PRE25]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Centrally available on-premise environments
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地环境的集中式可用性
- en: So far, we have only covered locally running containers but, depending on your
    scenario, you may want to set up one or multiple central VMs that are administered
    not by the developers and consultants but by an operations team. In this case,
    the same options that we explained previously exist, but you need to consider
    a couple of additional topics. You also need to decide whether you want a full
    self-service environment where a developer or consultant can self-provision a
    new sandbox or whether you want the operations team to handle creating and deleting
    the sandboxes.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只涵盖了本地运行的容器，但根据你的情况，你可能希望设置一个或多个中央虚拟机，这些虚拟机由运维团队而非开发人员或顾问来管理。在这种情况下，之前解释过的相同选项仍然适用，但你需要考虑一些额外的主题。你还需要决定是否希望提供一个完全自助服务的环境，允许开发人员或顾问自行配置新的沙盒，或者希望运维团队来处理创建和删除沙盒的工作。
- en: 'If your operations team handles these operations, the only topic you need to
    think about is networking. You have the following two options to make your container
    ports available outside the Docker host:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的运维团队负责这些操作，那么你唯一需要关注的就是网络配置。你有以下两种选择，可以使你的容器端口在 Docker 主机外部可用：
- en: Port mapping lets you map container ports to host ports. However, this will
    become tedious over time as you need to find free ports for every container and
    tell your users which ports to use.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口映射让你可以将容器端口映射到主机端口。然而，随着时间的推移，这会变得繁琐，因为你需要为每个容器找到可用的端口，并告诉你的用户应该使用哪些端口。
- en: Transparent networking lets the container get its own IP address (static or
    DHCP) and keep the standard ports. This method works with a lot less maintenance.
    We will look at this in more detail now.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 透明网络使容器能够获得自己的 IP 地址（静态或 DHCP）并保持标准端口。此方法的维护工作量要少得多。我们现在将更详细地讨论这个问题。
- en: 'So, creating a transparent network is quite easy. In the simplest scenario,
    you just write the following to create a transparent network called `transpNet`:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，创建透明网络非常简单。在最简单的情况下，你只需要编写以下命令来创建一个名为 `transpNet` 的透明网络：
- en: '[PRE26]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You can also set the subnet or IP range, but that is beyond the scope of this
    book. Check the online documentation for Docker or run `docker network create
    --help` to learn more about that. Telling a container to use a transparent network
    is also easy because there is a parameter called `--network`. Use it as follows
    when running pure Docker:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以设置子网或 IP 范围，但这超出了本书的范围。请查看 Docker 的在线文档或运行 `docker network create --help`
    以了解更多信息。告诉容器使用透明网络也很容易，因为有一个名为 `--network` 的参数。在运行纯 Docker 时，使用如下命令：
- en: '[PRE27]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '`navcontainerhelper` doesn''t have a specific network parameter on `New-NavContainer`at
    the time of writing, but you can use `-additionalParametersparameter` instead:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`navcontainerhelper` 在写作时 `New-NavContainer` 没有特定的网络参数，但你可以使用 `-additionalParametersparameter`
    来代替：'
- en: '[PRE28]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: With that, your container will get its own IP address and you will probably
    be able to reach it by name from outside your Docker host as well. Please note
    that this very much depends on the setup of the network that your host is running
    in. It is similar to adding a new VM to the network and, depending on the security
    mechanisms that have been put in place by network administrators, this may not
    actually work without further setup.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，容器将获得自己的 IP 地址，并且你可能也能通过名称从 Docker 主机外部访问它。请注意，这很大程度上取决于主机所处网络的设置。它类似于将一个新虚拟机添加到网络中，依赖于网络管理员设置的安全机制，这可能在没有进一步设置的情况下无法正常工作。
- en: 'If you want to have an environment where developers or consultants can create
    their own environments, you will have to solve two issues:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要为开发人员或顾问提供一个可以创建自己环境的环境，你需要解决两个问题：
- en: '**How would you like container handling to be done (create, start, stop, and
    delete actions)?** You could allow your users to access the host through RDP or
    PowerShell, but then it becomes difficult to handle permissions. You can also
    use tools such as Portainer ([https://portainer.io](https://portainer.io)), which
    is a GUI for handling containers. Here, users can manage their containers and
    you can, for example, create templates with predefined values for the container
    parameters. However, note that you won''t be able to use `navcontainerhelper`
    in this scenario because that would mean running PowerShell scripts on your host.
    Another option is to create some kind of frontend application yourself, but that
    of course will take some time.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**你希望如何处理容器操作（创建、启动、停止和删除操作）？** 你可以允许用户通过 RDP 或 PowerShell 访问主机，但这会使权限管理变得复杂。你还可以使用如
    Portainer（[https://portainer.io](https://portainer.io)）这样的工具，这是一个处理容器的 GUI。在这里，用户可以管理他们的容器，并且你可以例如创建具有预定义值的容器参数模板。然而，请注意，在这种情况下，你将无法使用
    `navcontainerhelper`，因为这意味着需要在主机上运行 PowerShell 脚本。另一种选择是你自己创建某种前端应用程序，但这当然需要一些时间。'
- en: '**How will users access the filesystem in your containers?** It depends on
    your Dynamics 365 Business Central usage. Often, it is necessary to access the
    filesystem. If you are already running a full-cloud solution, this is not possible
    anyway, but if you still have on-premise customers, this may be an issue. The
    easiest solution is to always map a volume into your container, such as `c:\shared`,
    and allow users to access the folder on the host.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户如何访问容器中的文件系统？** 这取决于你对 Dynamics 365 Business Central 的使用。通常需要访问文件系统。如果你已经运行了全云解决方案，这无论如何都不可行，但如果你仍有本地客户，这可能是一个问题。最简单的解决方案是始终将一个卷映射到你的容器中，例如
    `c:\shared`，并允许用户访问主机上的文件夹。'
- en: Containers hosted on Azure VMs
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 托管在 Azure 虚拟机上的容器
- en: 'If you want to run your sandboxes in Azure VMs, the challenges you face are
    almost the same as they are with centrally available sandboxes on an on-premise
    VM. However, you can take some shortcuts: Microsoft provides standard VM images
    with preinstalled Docker, such as Windows Server 2019 Datacenter with Containers,
    so you don''t have to worry about that.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在 Azure 虚拟机中运行沙盒，你面临的挑战几乎与在本地虚拟机中使用集中式沙盒相同。不过，你可以走捷径：微软提供了预安装了 Docker 的标准虚拟机镜像，比如带有容器的
    Windows Server 2019 Datacenter，这样你就不必担心这一点了。
- en: If you want to use `navcontainerhelper`, you need to install it, and then you
    are ready to go. An even quicker way is to use one of the quick start templates
    provided by Microsoft, such as [http://aka.ms/getbc](http://aka.ms/getbc). This
    will create an Azure VM, install Docker and `navcontainerhelper`, pull the latest
    Dynamics 365 Business Central image (defaulting to the on-premise image), and
    start it for you. And on top of that, you get a nice log showing you how all the
    magic that is happening is progressing. Afterward, you can use that VM to create
    additional sandboxes as you need them.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用 `navcontainerhelper`，你需要先安装它，然后你就可以开始使用了。一个更快捷的方法是使用微软提供的快速启动模板之一，例如[http://aka.ms/getbc](http://aka.ms/getbc)。这将创建一个
    Azure 虚拟机，安装 Docker 和 `navcontainerhelper`，拉取最新的 Dynamics 365 Business Central
    镜像（默认为本地版镜像），并为你启动它。除此之外，你还会得到一个漂亮的日志，显示所有正在进行的“魔法”进展。之后，你可以使用该虚拟机根据需要创建更多沙盒。
- en: 'However, there is one issue in Azure VMs that makes handling them a bit more
    complicated: you can''t use transparent networking. This makes sense for a number
    of reasons and likely won''t change in the near future, so you have to consider
    other solutions. One would be port mapping, as we mentioned previously, but that
    also takes quite a lot of maintenance. The easiest way is to use a reverse proxy
    such as nginx or Traefik, but that is also beyond the scope of this book.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在 Azure 虚拟机中有一个问题，使得处理它们变得更加复杂：你无法使用透明网络。这是有多个原因的，而且很可能在近期不会改变，所以你必须考虑其他解决方案。一种解决方案是端口映射，正如我们之前提到的，但这也需要相当多的维护。最简单的方法是使用反向代理，例如
    nginx 或 Traefik，但这也超出了本书的范围。
- en: You can find a quick introduction on how to get started at[https://www.axians-infoma.de/techblog/running-multiple-nav-bc-containers-on-an-azure-vm/](https://www.axians-infoma.de/techblog/running-multiple-nav-bc-containers-on-an-azure-vm/).
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.axians-infoma.de/techblog/running-multiple-nav-bc-containers-on-an-azure-vm/](https://www.axians-infoma.de/techblog/running-multiple-nav-bc-containers-on-an-azure-vm/)找到快速入门介绍。
- en: Choosing the right image
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择正确的镜像
- en: Now that you know how to create and run your sandboxes, the only question is
    which version you want to use; making this decision may be quite complex. The
    basics for making a viable decision on that topic will be summarized in this section.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何创建和运行沙盒，唯一的问题是你想使用哪个版本；做出这个决定可能相当复杂。关于如何做出有效决定的基本知识将在本节中总结。
- en: 'Officially, publicly released versions are always available on the registry
    (`mcr.microsoft.com`) with the following repositories and image names:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 官方的公开发布版本始终可以在注册表（`mcr.microsoft.com`）中找到，以下是相关的仓库和镜像名称：
- en: '`mcr.microsoft.com/businesscentral/sandbox`: The sandbox image of the SaaS
    version of Dynamics 365 Business Central'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mcr.microsoft.com/businesscentral/sandbox`：Dynamics 365 Business Central SaaS
    版本的沙盒镜像'
- en: '`mcr.microsoft.com/businesscentral/onprem`: The on-premise version of Dynamics
    365 Business Central'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mcr.microsoft.com/businesscentral/onprem`：Dynamics 365 Business Central 本地版'
- en: '`mcr.microsoft.com/dynamicsnav`: The old Dynamics NAV product, starting from
    Dynamics NAV 2016'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mcr.microsoft.com/dynamicsnav`：旧版 Dynamics NAV 产品，从 Dynamics NAV 2016 开始'
- en: 'Previews of unreleased versions are available on the `bcinsider.azurecr.io`
    registry with the following repositories and images names:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 未发布版本的预览版可以在 `bcinsider.azurecr.io` 注册表中找到，以下是相关的仓库和镜像名称：
- en: '`bcinsider.azurecr.io/bcsandbox`: A preview of the next minor release of the
    SaaS version of Dynamics 365 Business Central'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bcinsider.azurecr.io/bcsandbox`：Dynamics 365 Business Central SaaS 版本下一个次要版本的预览版'
- en: '`bcinsider.azurecr.io/bconprem`: A preview of the next minor release of the
    on-premise version of Dynamics 365 Business Central'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bcinsider.azurecr.io/bconprem`：Dynamics 365 Business Central 本地版下一个次要版本的预览版'
- en: '`bcinsider.azurecr.io/bcsandbox-master`: A preview of the next major release
    of the SaaS version of Dynamics 365 Business Central'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bcinsider.azurecr.io/bcsandbox-master`：Dynamics 365 Business Central SaaS
    版本下一个重大版本的预览版'
- en: '`bcinsider.azurecr.io/bconprem-master`: A preview of the next major release
    of the on-premise version of Dynamics 365 Business Central'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bcinsider.azurecr.io/bconprem-master`：下一次主要发布的Dynamics 365 Business Central本地版预览'
- en: Note that, once again, you need login credentials for `bcinsider.azurecr.io`,
    which you can get from Microsoft's collaborate platform after you have registered
    for the Ready to Go! program.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，再次提醒，你需要`bcinsider.azurecr.io`的登录凭据，可以通过在微软的协作平台上注册“Ready to Go!”程序后获取。
- en: When you have decided which image to use, you also need to decide on which tag
    to use, representing one of the specific releases by Microsoft. All images allow
    you to specify the language (`gb`, `de`, `dk`, and so on) and the base OS (`ltsc2016`
    for Windows Server 2016 and `ltsc2019` for Windows Server 2019). The released
    on-premise versions also allow you to use the same naming conventions that you
    can use with traditional installs by referencing them by their cumulative update
    name.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 当你决定使用哪张镜像时，还需要决定使用哪个标签，代表微软的某个特定版本。所有镜像都允许你指定语言（`gb`、`de`、`dk`等）和基础操作系统（Windows
    Server 2016的`ltsc2016`和Windows Server 2019的`ltsc2019`）。发布的本地版本也允许你使用与传统安装相同的命名约定，通过参考它们的累积更新名称来使用。
- en: 'Consider the following examples, just to get some insight into the syntax:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下示例，以便了解语法：
- en: 'Dynamics 365 Business Central Fall 2018 (1810), CU 11, German version, based
    on Windows Server 2016:'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 2018秋季版（1810），CU 11，德语版，基于Windows Server 2016：
- en: '[PRE29]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Dynamics 365 Business Central Spring 2019 (1904), CU 5, Danish version, based
    on Windows Server 2019:'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 2019春季版（1904），CU 5，丹麦版，基于Windows Server 2019：
- en: '[PRE30]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Dynamics 365 Business Central Fall 2019 (1910), CU 1, Australian version, based
    on Windows Server 2019:'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 2019秋季版（1910），CU 1，澳大利亚版，基于Windows Server 2019：
- en: '[PRE31]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Dynamics NAV 2017, CU 28, British version, based on Windows Server 2019:'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dynamics NAV 2017，CU 28，英国版，基于Windows Server 2019：
- en: '[PRE32]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The SaaS versions that have been released allow you to specify the update version
    instead of the cumulative update:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 已发布的SaaS版本允许你指定更新版本，而不是累积更新：
- en: 'Dynamics 365 Business Central SaaS Update 25, Spanish version, based on Windows
    Server 2016:'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central SaaS更新25，西班牙版，基于Windows Server 2016：
- en: '[PRE33]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The preview version allows you to only specify the language and the Windows
    Server version:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 预览版只允许你指定语言和Windows Server版本：
- en: 'The latest preview of the next minor release of the SaaS version of Dynamics
    365 Business Central, German version, based on Windows Server 2019: `bcinsider.azurecr.io/bcsandbox:de-ltsc2019`'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一次小版本的SaaS版Dynamics 365 Business Central的最新预览，德语版，基于Windows Server 2019：`bcinsider.azurecr.io/bcsandbox:de-ltsc2019`
- en: 'The latest preview of the next major release of the on-premise version of Dynamics
    365 Business Central, Danish version, based on Windows Server 2016: `bcinsider.azurecr.io/bconprem-master:dk-ltsc2016`'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下一次主要发布的Dynamics 365 Business Central本地版预览，丹麦版，基于Windows Server 2016：`bcinsider.azurecr.io/bconprem-master:dk-ltsc2016`
- en: There are defaults if you don't specify everything, so `mcr.microsoft.com/businesscentral/onprem`
    will give you the latest cumulative update of the latest Dynamics 365 Business
    Central on-premise release, W1 version, based on Windows Server 2016\. In order
    to avoid surprises, it almost always makes sense to specify as much as possible
    with tags.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有指定所有内容，会有默认值，因此`mcr.microsoft.com/businesscentral/onprem`将给你最新的累积更新版本，基于Windows
    Server 2016的最新Dynamics 365 Business Central本地版本W1版。为了避免意外情况，通常最好尽可能详细地指定标签。
- en: Modifying scripts inside standard images
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改标准镜像中的脚本
- en: 'As you have seen, Dynamics 365 Business Central container images have a lot
    of configuration options, giving you the possibility to change a lot of their
    behavior. However, if you ever run into a situation where you need to run a different
    container configuration setup, images have one more ace up their sleeve: you can
    override any script in the container.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，Dynamics 365 Business Central的容器镜像有很多配置选项，允许你改变许多行为。然而，如果你遇到需要运行不同容器配置的情况，镜像还有一个王牌：你可以覆盖容器中的任何脚本。
- en: 'The mechanism for this works by placing a script with the exact same name as
    the one you want to override into the `c:\run\my` folder in your container. The
    easiest way to do that is through a volume. Assuming that you have a folder such
    as `c:\bc-override` with an`AdditionalSetup.ps1` file, you can do the following:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这个机制通过将一个与想要覆盖的脚本同名的脚本放入容器中的 `c:\run\my` 文件夹来工作。最简单的方法是通过卷来实现。假设你有一个文件夹，比如 `c:\bc-override`，其中有一个
    `AdditionalSetup.ps1` 文件，你可以这样做：
- en: '[PRE34]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'When the container gets to the place where `AdditionalSetup.ps1` is called,
    it checks whether a file with that name exists in `c:\run\my` and if so, calls
    it. If not, it calls the standard script with that name, which is stored in `c:\run`.
    This script may look as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 当容器执行到调用 `AdditionalSetup.ps1` 的位置时，它会检查在 `c:\run\my` 中是否存在该文件，如果存在，则调用它。如果不存在，它会调用标准脚本，该脚本存储在
    `c:\run` 中。这个脚本可能如下所示：
- en: '[PRE35]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'If it does, you will get the following output when starting the container:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是这样，当你启动容器时，你将看到以下输出：
- en: '[PRE36]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Using the `navcontainerhelper` utility, you would call it like this:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `navcontainerhelper` 工具，你可以像这样调用它：
- en: '[PRE37]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Alternatively, since`navcontainerhelper` has a more convenient way of doing
    things, you can just add your PowerShell script code inline:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，由于 `navcontainerhelper` 提供了一种更方便的方法，你可以直接将你的 PowerShell 脚本代码内联添加：
- en: '[PRE38]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: With this very powerful feature, you can change every script in the container
    to suit your needs. To get an idea of what you can adjust, please check out [https://github.com/Microsoft/nav-docker/tree/master/generic/Run](https://github.com/Microsoft/nav-docker/tree/master/generic/Run).
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 借助这个强大的功能，你可以更改容器中的每个脚本以适应你的需求。为了了解可以调整的内容，请查看 [https://github.com/Microsoft/nav-docker/tree/master/generic/Run](https://github.com/Microsoft/nav-docker/tree/master/generic/Run)。
- en: Creating your own images
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建你自己的镜像
- en: With the mechanism we just saw, we can change everything inside our containers.
    But what if you want to make sure that your colleagues, partners, or customers
    get exactly those same modifications without the need to get the my-scripts override
    right? Or what if you need some DLLs or other files inside your container and
    want to deliver them as part of your own image? The answer to that is building
    your own image, which, fortunately, is very easy as well.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 通过我们刚才看到的机制，我们可以更改容器中的所有内容。但是，如果你想确保你的同事、合作伙伴或客户获得完全相同的修改，而不必得到 `my-scripts`
    覆盖正确？或者，如果你需要将某些 DLL 或其他文件放入容器中，并希望将它们作为你自己的镜像的一部分交付呢？答案是构建你自己的镜像，幸运的是，这也非常简单。
- en: 'Docker has a layering concept that makes an image a stack of layers. All you
    need to do is put your own layer on top of the standard image. You can do that
    by using a Dockerfile, which needs a reference to the standard image you want
    to extend and then the actions you want to take. Let''s say you want to place
    some DLLs stored in `c:\bc\dlls` into the image `Add-ins` folder and put your
    own `AdditionalSetup.ps1` script from the `c:\bc\override` folder into the `c:\run`
    image folder. Your Dockerfile would look as follows, stored in the `c:\bc` folder:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 有一个分层概念，使得镜像变成了一个层的堆叠。你需要做的就是将自己的层放在标准镜像之上。你可以通过使用 Dockerfile 来实现这一点，Dockerfile
    需要引用你想要扩展的标准镜像，然后再执行你想要的操作。假设你想将存储在 `c:\bc\dlls` 中的某些 DLL 文件放入镜像的 `Add-ins` 文件夹，并将你自己位于
    `c:\bc\override` 文件夹中的 `AdditionalSetup.ps1` 脚本放入镜像的 `c:\run` 文件夹中。你的 Dockerfile
    将如下所示，存储在 `c:\bc` 文件夹中：
- en: '[PRE39]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'To build this image, you need to run the `docker build` command in `c:\bc`
    and give your image a name using the `-t` parameter:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建这个镜像，你需要在 `c:\bc` 中运行 `docker build` 命令，并使用 `-t` 参数为你的镜像命名：
- en: '[PRE40]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The result will look something like the following:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将类似于以下内容：
- en: '[PRE41]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'With that in place, you can use your image like any other image:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，你可以像使用其他镜像一样使用你的镜像：
- en: '[PRE42]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The way to share this image with others is via a **Docker repository**. For
    an image that's been built on top of the official Microsoft image, this will be
    done with a private repository. How to set that up is beyond the scope of this
    book, but [https://docs.docker.com/registry/](https://docs.docker.com/registry/)
    is a good starting point if you want to learn more.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 与他人共享此镜像的方式是通过 **Docker 仓库**。对于基于官方 Microsoft 镜像构建的镜像，这将通过私有仓库来完成。如何设置私有仓库超出了本书的范围，但如果你想了解更多，可以参考
    [https://docs.docker.com/registry/](https://docs.docker.com/registry/) 作为一个好的起点。
- en: Summary
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the basics of online and Docker-based sandboxes
    and how to use them optimally. We stressed the need to master the fundamentals
    of Docker and how to create a basic container from a Dynamics 365 Business Central
    image from an online repository.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了在线和基于 Docker 的沙盒的基础知识，以及如何最优化地使用它们。我们强调了掌握 Docker 的基础知识及如何从在线仓库中的
    Dynamics 365 Business Central 镜像创建基本容器的必要性。
- en: With the skills you've acquired from this chapter, you should be able to create
    your own containers, choose the right image, and be familiar with the `navcontainerhelper`
    tool when it comes to handling your custom sandbox environment.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 借助本章中获得的技能，你应该能够创建自己的容器，选择合适的镜像，并在处理自定义沙盒环境时熟悉`navcontainerhelper`工具。
- en: You should also be able to master Dockerfile formats and perform in-depth modifications
    of standard images by overriding scripts and creating your own Dynamics 365 Business
    Central sandbox baseline.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该能够掌握 Dockerfile 的格式，并通过覆盖脚本和创建自己的 Dynamics 365 Business Central 沙盒基线，对标准镜像进行深入修改。
- en: In the next chapter, we will start our development journey by learning about
    AL language fundamentals.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过学习 AL 语言的基础知识，开始我们的开发之旅。
