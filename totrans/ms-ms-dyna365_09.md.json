["```\nreport 50111 \"Item Ledger Entry Analysis\"\n{\n    Caption ='Item Ledger Entry Analysis';\n    UsageCategory=ReportsAndAnalysis;\n    ApplicationArea = All;\ndataset\n{\n    dataitem(\"Item Ledger Entry\";\"Item Ledger Entry\")\n    {\n        column(ItemNo_ItemLedgerEntry;\"Item Ledger Entry\".\"Item No.\")\n        {\n            IncludeCaption = true;\n        }\n        column(PostingDate_ItemLedgerEntry;\"Item Ledger Entry\".\"Posting Date\")\n        {\n            IncludeCaption = true;\n        }\n        column(EntryType_ItemLedgerEntry;\"Item Ledger Entry\".\"Entry Type\")\n        {\n            IncludeCaption = true;\n        }\n        column(CustCatPKT_ItemLedgerEntry;\"Item Ledger Entry\".\"Customer Category_PKT\")\n        {\n            IncludeCaption = true;\n        }\n        column(DocumentNo_ItemLedgerEntry;\"Item Ledger Entry\".\"Document No.\")\n        {\n            IncludeCaption = true;\n        }\n        column(Description_ItemLedgerEntry;\"Item Ledger Entry\".Description)\n        {\n            IncludeCaption = true;\n        }\n        column(LocationCode_ItemLedgerEntry;\"Item Ledger Entry\".\"Location Code\")\n        {\n            IncludeCaption = true;\n        }\n        column(Quantity_ItemLedgerEntry;\"Item Ledger Entry\".Quantity)\n        {\n           IncludeCaption = true;\n        }\n        column(COMPANYNAME;CompanyName)\n        {\n        }\n        column(includeLogo;includeLogo)\n        {\n        }\n        column(CompanyInfo_Picture;CompanyInfo.Picture)\n        {\n        }\n    }\n}    \n```", "```\nlabels\n    {\n        PageNo = 'Page';\n        BCReportName ='Item Ledger Entry Analysis';\n    }\n    var\n        CompanyInfo: Record \"Company Information\";\n        includeLogo: Boolean;\n}\n```", "```\nreport 50111 \"Item Ledger Entry Analysis\"\n{\n    DefaultLayout = RDLC;\n    RDLCLayout = './Src/CustomerCategory/report/Report50111.ItemLedgerEntryAnalysis.rdl';\n  Caption = 'Item Ledger Entry Analysis';\n```", "```\nrequestpage\n{\n    layout\n    {\n        area(content)\n        {\n            group(Options)\n            {\n                Caption = 'Options';\n                field(includeLogo;includeLogo)\n                {\n                    Caption = 'Include company logo';\n                }\n            }\n        }\n    }\n    actions\n    {\n    }\n}\ntrigger OnPreReport()\nbegin\n    if includeLogo then begin\n    CompanyInfo.Get;  //Get Company Information record           \n    CompanyInfo.CalcFields(Picture);  //Retrieve company logo\n    end;\nend;\n```", "```\n=iif(Fields!includeLogo.Value,iif(Len(Convert.ToString(Fields!CompanyInfo_Picture.Value))>0,False,True),True)\n```", "```\nreport 50111 \"Item Ledger Entry Analysis\"\n{\nDefaultLayout = Word;\nRDLCLayout = './Src/CustomerCategory/report/Rep50111.ItemLedgerEntryAnalysis.rdl';\nWordLayout = './Src/CustomerCategory/report/Rep50111.ItemLedgerEntryAnalysis.docx';\nCaption = 'Item Ledger Entry Analysis';\nUsageCategory = ReportsAndAnalysis;\nApplicationArea = All;\ndataset\n{\ndataitem(\"Item Ledger Entry\";\"Item Ledger Entry\")\n{\n DataItemTableView=SORTING(\"Item No.\") ORDER(Ascending);\n```", "```\n#Set local variables\n#####################\n$alFolder = 'C:\\APP\\BaseApp'\n$existingContainerName = \"BC15ITCU1\"\n\n#Extract Base Application into a folder of your choice\n############################################################\nCreate-ALProjectFolderFromBcContainer -containerName $existingContainerName `\n-useBaseLine `\n-useBaseAppProperties\n```", "```\n#Set local variables\n#####################\n$mylicense = 'C:\\DOCKER\\LICENSE\\BC14.flf'\n$imageName = \"mcr.microsoft.com/businesscentral/sandbox:1904\"\n$containerName = \"BC14W1-LATEST\"\n#Create a Docker sandbox container with converted AL objects\n############################################################\nNew-NavContainer -accept_eula `\n-imageName $imageName `\n-containerName $containerName `\n-licenseFile $mylicense `\n-auth NavUserPassword `\n-shortcuts None `\n-includeAL\n```", "```\n…\n*Export Objects with filter 'Id=1..1999999999' (new syntax) to C:\\ProgramData\\NavContainerHelper\\Extensions\\Original-14.1.33107.0-W1-newsyntax\\objects.txt (container path)* *Split C:\\ProgramData\\NavContainerHelper\\Extensions\\Original-14.1.33107.0-W1-newsyntax\\objects.txt to C:\\ProgramData\\NavContainerHelper\\Extensions\\Original-14.1.33107.0-W1-newsyntax (container paths)* *Converting objects file from OEM(437) to UTF8 before splitting* *Converting object files from UTF8 to OEM(437) after splitting* *Converting files in C:\\ProgramData\\NavContainerHelper\\Extensions\\Original-14.1.33107.0-W1-newsyntax to .al files in C:\\ProgramData\\NavContainerHelper\\Extensions\\Original-14.1.33107.0-W1-al with startId 50100 (container paths)* *Converting my delta files from OEM(437) to UTF8 before converting* *txt2al.exe --source=\"C:\\ProgramData\\NavContainerHelper\\Extensions\\Original-14.1.33107.0-W1-newsyntax\" --target=\"C:\\ProgramData\\NavContainerHelper\\Extensions\\Original-14.1.33107.0-W1-al\" --rename --extensionStartId=50100 --dotNetAddInsPackage=\"C:\\ProgramData\\NavContainerHelper\\Extensions\\BC14W1-LATEST\\coredotnetaddins.al\"* *Converting my delta files from UTF8 to OEM(437) after converting* *Creating .net Assembly Reference Folder for VS Code* *Copying DLLs from C:\\Windows\\assembly to assemblyProbingPath* *Copying DLLs from C:\\Program Files\\Microsoft Dynamics NAV\\140\\Service to assemblyProbingPath* *Copying DLLs from C:\\Program Files (x86)\\Microsoft Dynamics NAV\\140\\RoleTailored Client to assemblyProbingPath* *Copying DLLs from C:\\Program Files (x86)\\Open XML SDK to assemblyProbingPath* …\n```", "```\nreport 50115 \"Packt Sales - Order Conf.\"\n{\n    WordLayout = './Src/CustomerCategory/report/Rep50115.PacktSalesOrderConf.docx';\n    RDLCLayout = './Src/CustomerCategory/report/Rep50115.PacktSalesOrderConf.rdl';\n    Caption = 'Packt Sales-Confirmation';\n    UsageCategory=ReportsAndAnalysis;\n    ApplicationArea=All;\n    AdditionalSearchTerms='Packt Sales Order report';\n\n    DefaultLayout = Word;\n    PreviewMode = PrintLayout;\n    WordMergeDataItem = Header;\n```", "```\n[EventSubscriber(ObjectType::Codeunit, Codeunit::ReportManagement, 'OnAfterSubstituteReport', '', false, false)]\nlocal procedure OnAfterSubstituteReport(ReportId: Integer; var NewReportId: Integer)\nbegin\n    if ReportId = Report::\"Standard Sales - Order Conf.\" then\n        NewReportId := Report::\"Packt Sales - Order Conf.\";\n    end;\n```", "```\ncolumn(CustomerCategory_PKT;Cust.\"Customer Category_PKT\")\n{\n}           \ncolumn(CustomerCategory_PKT_Lbl;Cust.FIELDCAPTION(\"Customer Category_PKT\"))\n{\n}\n```", "```\nGiftLbl: Label 'GIFT';\n```", "```\nif \"Line Discount %\" = 0 then\n    LineDiscountPctText := ''\nelse\n    LineDiscountPctText := StrSubstNo('%1%',-Round(\"Line Discount %\",0.1));\nReplace the preceding code with the following case statement:\ncase \"Line Discount %\" OF\n    0    : LineDiscountPctText := '';\n    100  : LineDiscountPctText := GiftLbl;\n    ELSE\n    LineDiscountPctText := StrSubstNo('%1%',-Round(\"Line Discount %\",0.1));\nEND;\n```", "```\nSmaller Dataset = Better Performance\nSmaller Dataset = Reduce X axis (columns) + Reduce Y axis (rows)\nBetter Performance = Optimize (reduce) the number of columns in Dataset + Optimize (reduce) the number of records processed in DataItems\n```"]