["```\nGET https://api.businesscentral.dynamics.com/v2.0/{tenant Id}/{environment name}/api/v1.0/$metadata\n```", "```\nGET https://api.businesscentral.dynamics.com/v2.0/{environment name}/api/v1.0/$metadata\n```", "```\nhttps://api.businesscentral.dynamics.com/v2.0/{tenant Id}/OtherSandboxName/api/\n```", "```\nGET https://api.businesscentral.dynamics.com/v2.0/<tenantID>/production/api/beta/companies\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic sdemiliani <YourWebServiceAccessKey>\n```", "```\nGET https://api.businesscentral.dynamics.com/v2.0/<tenantID>/production/api/beta/companies(80d28ea6-02a3-4ec3-98f7-936c2000c7b3)/customers\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic sdemiliani <YourWebServiceAccessKey>\n```", "```\nGET https://api.businesscentral.dynamics.com/v2.0/<tenantID>/production/api/beta/companies(80d28ea6-02a3-4ec3-98f7-936c2000c7b3)/items?$filter=unitPrice%20gt%20100\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic sdemiliani <YourWebServiceAccessKey>\n```", "```\nGET https://api.businesscentral.dynamics.com/v2.0/<tenantID>/production/api/beta/companies(80d28ea6-02a3-4ec3-98f7-936c2000c7b3)/salesInvoices(034a122b-962b-4007-b3d1-00718c2f21ff)?$expand=salesInvoiceLines\nContent-Type: application/x-www-form-urlencoded\nAuthorization: Basic sdemiliani <YourWebServiceAccessKey>\n```", "```\ntable 50111 Car\n{\n    DataClassification = CustomerContent;\n    Caption = 'Car';\n    LookupPageId = \"Car List\";\n    DrillDownPageId = \"Car List\";\n    fields\n    {\n        field(1; ModelNo; Code[20])\n        {\n            Caption = 'Model No.';\n            DataClassification = CustomerContent;\n        }\n        field(2; Description; Text[100])\n        {\n            Caption = 'Description';\n            DataClassification = CustomerContent;\n        }\n        field(3; Brand; Code[20])\n        {\n            Caption = 'Brand';\n            DataClassification = CustomerContent;\n        }\n        field(4; Power; Integer)\n        {\n            Caption = 'Power (CV)';\n            DataClassification = CustomerContent;\n        }\n        field(5; \"Engine Type\"; Enum EngineType)\n        {\n            Caption = 'Engine Type';\n            DataClassification = CustomerContent;\n        }\n        field(10; ID; Guid)\n        {\n            Caption = 'ID';\n            DataClassification = CustomerContent;\n        }\n    }\n\n    keys\n    {\n        key(PK; ModelNo)\n        {\n            Clustered = true;\n        }\n    }\n\n    trigger OnInsert()\n    begin\n        ID := CreateGuid();\n    end;\n}\n```", "```\nenum 50111 EngineType\n{\n    Extensible = true;\n    value(0; Petrol)\n    {\n        Caption = 'Petrol';\n    }\n    value(1; Diesel)\n    {\n        Caption = 'Diesel';\n    }\n    value(2; Electric)\n    {\n        Caption = 'Electric';\n    }\n    value(3; Hybrid)\n    {\n        Caption = 'Hybrid';\n    }\n}\n```", "```\npage 50112 \"Car List\"\n{   \n    PageType = List;\n    SourceTable = Car;\n    Caption = 'Car List';\n    ApplicationArea = All;\n    UsageCategory = Lists;\n\n    layout\n    {\n        area(content)\n        {\n            repeater(General)\n            {\n                field(ModelNo;ModelNo)\n                {\n                    ApplicationArea = All;\n                }\n                field(Description;Description)\n                {\n                    ApplicationArea = All;\n                }\n                field(Brand;Brand)\n                {\n                    ApplicationArea = All;\n                }\n                field(\"Engine Type\";\"Engine Type\")\n                {\n                    ApplicationArea = All;\n                }\n                field(Power;Power)\n                {\n                    ApplicationArea = All;\n                }\n            }\n        }\n    }   \n}\n```", "```\npage 50111 CarAPI\n{\n    PageType = API;\n    Caption = 'CarAPI';\n    APIPublisher = 'sd';\n    APIGroup = 'custom';\n    APIVersion = 'v1.0';\n    EntityName = 'car';\n    EntitySetName = 'cars';\n    SourceTable = Car;\n    DelayedInsert = true;\n    ODataKeyFields = ID;\n\n    layout\n    {\n        area(Content)\n        {\n            repeater(GroupName)\n            {\n                field(id; ID)\n                {\n                    Caption = 'id', Locked = true;\n                }\n                field(modelno; ModelNo)\n                {\n                    Caption = 'modelNo', Locked = true;\n                }\n                field(description; Description)\n                {\n                    Caption = 'description', Locked = true;\n                }\n                field(brand; Brand)\n                {\n                    Caption = 'brand', Locked = true;\n                }\n                field(engineType; \"Engine Type\")\n                {\n                    Caption = 'engineType', Locked = true;\n                }\n                field(power; Power)\n                {\n                    Caption = 'power', Locked = true;\n                }\n            }\n        }\n    }\n\n    trigger OnInsertRecord(BelowxRec: Boolean): Boolean\n    begin\n        Insert(true);\n        Modify(true);\n        exit(false);\n    end;\n\n    trigger OnModifyRecord(): Boolean\n    var\n        Car: Record Car;\n    begin\n        Car.SetRange(ID, ID);\n        Car.FindFirst();\n        if ModelNo <> Car.ModelNo then begin\n            Car.TransferFields(Rec, false);\n            Car.Rename(ModelNo);\n            TransferFields(Car);\n        end;\n    end;\n\n    trigger OnDeleteRecord(): Boolean\n    begin\n        Delete(true);\n    end;\n}\n```", "```\n{BaseURL}/v2.0/<your tenant id>/<environment name>/api/<api publisher>/<api group>/<api version>\n```", "```\n{BaseServerUrl:ODATA_Port}/{ServerInstance}/api//<api publisher>/<api group>/<api version>\n```", "```\nhttps://d365bcita0918vm.westeurope.cloudapp.azure.com:7048/BC/api/sd/custom/v1.0/$metadata\n```", "```\n{baseUrl}/{D365BCInstance}/api/sd/custom/v1.0/companies\n```", "```\n{baseUrl}/{D365BCInstance}/api/sd/custom/v1.0/companies({id})/cars\n```", "```\nGET https://d365bcita0918vm.westeurope.cloudapp.azure.com:7048/BC/api/sd/custom/v1.0/companies(ecdc7cd0-ab75-4d40-8d0e-80d2471c4378)/cars\n```", "```\n{baseUrl}/{D365BCInstance}/api/sd/custom/v1.0/companies({id})/cars\n```", "```\n{baseUrl}/{D365BCInstance}/api/sd/custom/v1.0/companies({id})/cars({id})\n```", "```\nhttps://d365bcita0918vm.westeurope.cloudapp.azure.com:7048/BC/api/sd/custom/v1.0/companies(ecdc7cd0-ab75-4d40-8d0e-80d2471c4378)/cars(0237f4af-3422-41b3-94aa-81196346460e)\n```", "```\npage 50115 MyCustomerAPI\n{\n    PageType = API;\n    Caption = 'customer';\n    APIPublisher = 'SD';\n    APIVersion = 'v1.0';\n    APIGroup = 'customapi';\n    EntityName = 'customer';\n    EntitySetName = 'customers';\n    SourceTable = Customer;\n    DelayedInsert = true;\n    ODataKeyFields = SystemId;\n    //URL: https://api.businesscentral.dynamics.com/v2.0/TENANTID/sandbox/api/SD/customapi/v1.0/customers\n\n    layout\n    {\n        area(Content)\n        {\n            repeater(GroupName)\n            {\n                field(no; \"No.\")\n                {\n                    Caption = 'no', Locked = true;\n                }\n                field(name; Name)\n                {\n                    Caption = 'name', Locked = true;\n                }\n                field(Id; SystemId)\n                {\n                    Caption = 'Id', Locked = true;\n                }\n                field(balanceDue; \"Balance Due\")\n                {\n                    Caption = 'balanceDue', Locked = true;\n                }\n                field(creditLimit; \"Credit Limit (LCY)\")\n                {\n                    Caption = 'creditLimit', Locked = true;\n                }\n                field(currencyCode; \"Currency Code\")\n                {\n                    Caption = 'currencyCode', Locked = true;\n                }\n                field(email; \"E-Mail\")\n                {\n                    Caption = 'email', Locked = true;\n                }\n                field(fiscalCode; \"Fiscal Code\")\n                {\n                    Caption = 'fiscalCode', Locked = true;\n                }\n                field(balance; \"Balance (LCY)\")\n                {\n                    Caption = 'balance', Locked = true;\n                }\n                field(countryRegionCode; \"Country/Region Code\")\n                {\n                    Caption = 'countryRegionCode', Locked = true;\n                }\n                field(netChange; \"Net Change\")\n                {\n                    Caption = 'netChange', Locked = true;\n                }\n                field(noOfOrders; \"No. of Orders\")\n                {\n                    Caption = 'noOfOrders', Locked = true;\n                }\n                field(noOfReturnOrders; \"No. of Return Orders\")\n                {\n                    Caption = 'noOfReturnOrders', Locked = true;\n                }\n                field(phoneNo; \"Phone No.\")\n                {\n                    Caption = 'phoneNo', Locked = true;\n                }\n                field(salesLCY; \"Sales (LCY)\")\n                {\n                    Caption = 'salesLCY', Locked = true;\n                }\n                field(shippedNotInvoiced; \"Shipped Not Invoiced\")\n                {\n                    Caption = 'shippedNotInvoiced', Locked = true;\n                }\n            }\n        }\n    }   \n}\n```", "```\n{baseUrl}/{D365BCInstance}/api/sd/customapi/v1.0/companies({id})/customers\n```", "```\nstatic HttpClient client = new HttpClient();\nstatic string baseURL, user, key;\nstatic string workingCompanyID;\n\nstatic void Main(string[] args)\n{\n   GetSettingsParameters();\n   RunAsync().GetAwaiter().GetResult();\n}\n\nstatic async Task RunAsync()\n{\n   client.BaseAddress = new Uri(baseURL);\n   client.DefaultRequestHeaders.Accept.Clear();\n   client.DefaultRequestHeaders.Accept.Add(\n        new MediaTypeWithQualityHeaderValue(\"application/json\"));\n   string userAndPasswordToken =\n        Convert.ToBase64String(Encoding.UTF8.GetBytes(user + \":\" + key));\n   client.DefaultRequestHeaders.TryAddWithoutValidation(\"Authorization\",\n        $\"Basic {userAndPasswordToken}\");\n   try\n   {               \n      //Reads D365BC tenant companies\n      await GetCompanies(baseURL);\n      //Creates a D365BC customer\n      await CreateCustomer(baseURL, workingCompanyID);\n   }\n   catch (Exception e)\n   {\n      Console.WriteLine(e.Message);\n   }\n   Console.ReadLine();\n}\n```", "```\nstatic void GetSettingsParameters()\n{\n   string tenantID = \"<YourTenantIDHere>\";\n   baseURL = \"https://api.businesscentral.dynamics.com/v2.0/\" + tenantID +    \n      \"/production/api/beta\";\n   user = \"<YourUsernameHere>\";\n   key = \"<YourUserWebServiceAccessKeyHere>\";\n}\n```", "```\nhttps://api.businesscentral.dynamics.com/v2.0/{tenantID}/production/api/{APIversion}/companies\n```", "```\nstatic async Task GetCompanies(string baseURL)\n{\n   HttpResponseMessage response = await client.GetAsync(baseURL + \"/companies\");\n   JObject companies = JsonConvert.DeserializeObject<JObject>   \n         (response.Content.ReadAsStringAsync().Result);\n   JObject o = JObject.Parse(companies.ToString());\n   foreach (JToken jt in o.Children())\n   {\n      JProperty jProperty = jt.ToObject<JProperty>();\n      string propertyName = jProperty.Name;\n      if (propertyName == \"value\")\n      {\n         foreach (JToken jt1 in jProperty.Children())\n         {\n            JArray array = new JArray(jt1.Children());\n            for (int i = 0; i < array.Count; i++)\n            {\n               string companyID = array[i].Value<string>(\"id\");\n               string companyName = array[i].Value<string>(\"name\");\n               Console.WriteLine(\"Company ID: {0}, Name: {1}\", companyID, companyName);\n               if (companyName == \"CRONUS IT\")\n               {\n                  workingCompanyID = companyID;\n               }\n            }\n         }\n      }\n   }\n}\n```", "```\nhttps://api.businesscentral.dynamics.com/v2.0/{tenantID}/production/api/{APIversion}/customers\n```", "```\nstatic async Task CreateCustomer(string baseURL, string companyID)\n{                       \n   JObject customer = new JObject(           \n      new JProperty(\"displayName\", \"Stefano Demiliani API\"),\n      new JProperty(\"type\", \"Company\"),\n      new JProperty(\"email\", \"demiliani@outlook.com\"),\n      new JProperty(\"website\", \"www.demiliani.com\"),\n      new JProperty(\"taxLiable\", false),\n      new JProperty(\"currencyId\", \"00000000-0000-0000-0000-000000000000\"),\n      new JProperty(\"currencyCode\", \"EUR\"),\n      new JProperty(\"blocked\", \" \"),\n      new JProperty(\"balance\", 0),\n      new JProperty(\"overdueAmount\", 0),\n      new JProperty(\"totalSalesExcludingTax\", 0),\n      new JProperty(\"address\",\n         new JObject(\n            new JProperty(\"street\", \"Viale Kennedy 87\"),\n            new JProperty(\"city\", \"Borgomanero\"),\n            new JProperty(\"state\", \"Italy\"),\n            new JProperty(\"countryLetterCode\", \"IT\"),\n            new JProperty(\"postalCode\", \"IT-28021\")\n            )\n       )\n   );\n   HttpContent httpContent = new StringContent(customer.ToString(), Encoding.UTF8,    \n       \"application/json\");\n   HttpResponseMessage response = await client.PostAsync(baseURL + \n       \"/companies(\"+companyID+\")/customers\", httpContent);\n   if (response.Content != null)\n   {\n      var responseContent = await response.Content.ReadAsStringAsync();\n      Console.WriteLine(\"Response: \" + responseContent);\n   }\n}\n```", "```\n{\n   \"error\":\n   {\n     \"code\": \"Application_TooManyRequests\",\n     \"message\": \"Too many requests reached. Actual (101). Maximum (100).\"\n   }\n}\n```", "```\ncodeunit 50102 CustomerWSManagement\n{\n   procedure CloneCustomer(CustomerNo: Code[20])\n   var\n      Customer: Record Customer;\n      NewCustomer: Record Customer;\n   begin\n      Customer.Get(CustomerNo);\n      NewCustomer.Init();\n      NewCustomer.TransferFields(Customer, false);\n      NewCustomer.Name := 'CUSTOMER BOUND ACTION';\n      NewCustomer.Insert(true);\n   end;\n\n   procedure GetSalesAmount(CustomerNo: Code[20]): Decimal\n   var\n      SalesLine: Record \"Sales Line\";\n      total: Decimal;\n   begin\n      SalesLine.SetRange(\"Document Type\", SalesLine.\"Document Type\"::Order);\n      SalesLine.SetRange(\"Sell-to Customer No.\", CustomerNo);\n      SalesLine.SetFilter(Type, '<>%1', SalesLine.Type::\" \");\n      if SalesLine.FindSet() then\n      repeat\n         total += SalesLine.\"Line Amount\";\n      until SalesLine.Next() = 0;\n      exit(total);\n   end;\n}\n```", "```\npage 50102 \"My Customer Card\"\n{\n   PageType = Card;\n   ApplicationArea = All;\n   UsageCategory = Administration;\n   SourceTable = Customer;\n   ODataKeyFields = \"No.\";\n   layout\n   {\n      area(Content)\n      {\n         group(GroupName)\n         {\n            field(Id; Id)\n            {\n               ApplicationArea = All;\n            }\n            field(\"No.\"; \"No.\")\n            {\n               ApplicationArea = All;\n            }\n            field(Name; Name)\n            {\n               ApplicationArea = All;\n            }\n         }\n      }\n   }\n}\n```", "```\n[ServiceEnabled]\nprocedure CloneCustomer(var actionContext: WebServiceActionContext)\nvar\n   CustomerWSMgt: Codeunit CustomerWSManagement;\nbegin\n   CustomerWSMgt.CloneCustomer(Rec.\"No.\");\n   actionContext.SetObjectType(ObjectType::Page);\n   actionContext.SetObjectId(Page::\"My Customer Card\");\n   actionContext.AddEntityKey(Rec.FIELDNO(\"No.\"), Rec.\"No.\");\n   //Set the result code to inform the caller that the record is created\n   actionContext.SetResultCode(WebServiceActionResultCode::Created);\nend;\n\n[ServiceEnabled]\nprocedure GetSalesAmount(CustomerNo: Code[20]): Decimal\nvar\n   actionContext: WebServiceActionContext;\n   CustomerWSMgt: Codeunit CustomerWSManagement;\n   total: Decimal;\nbegin\n   actionContext.SetObjectType(ObjectType::Page);\n   actionContext.SetObjectId(Page::\"My Customer Card\");\n   actionContext.AddEntityKey(Rec.FIELDNO(\"No.\"), rec.\"No.\");\n   total := CustomerWSMgt.GetSalesAmount(CustomerNo);\n   //Set the result code to inform the caller that the result is retrieved\n   actionContext.SetResultCode(WebServiceActionResultCode::Get);\n   exit(total);\nend;\n```", "```\nhttps://yourbaseurl/ODataV4/Company('CRONUS%20IT')/MyCustomerCardWS('10000')/NAV.CloneCustomer\n```", "```\nhttps://yourbaseurl/ODataV4/Company('CRONUS%20IT')/MyCustomerCardWS('10000')/NAV.GetSalesAmount\n```", "```\nPOST https://d365bcita0918vm.westeurope.cloudapp.azure.com:7048/NAV/ODataV4/Company('CRONUS%20IT')/MyCustomerCardWS('10000')/NAV.GetSalesAmount\nContent-Type: application/json\nAuthorization: Basic admin Z1JkubB/3epQOtfnBph04rcNgyFpaEuB9OVTnrd0VPs=\n\n{\n \"customerno\": \"10000\"\n}\n```", "```\nhttps://api.businesscentral.dynamics.com/v2.0/TENANTID/production/api/v1.0/subscriptions\n```", "```\n{\n  \"notificationUrl\": \"YourAplicationUrl\",\n  \"resource\": \"https://api.businesscentral.dynamics.com/v2.0/TENANTID/production/api/v1.0/companies(COMPANYID)/customers\",\n  \"clientState\": \"SomeSharedSecretForTheNotificationUrl\"\n}\n```", "```\nhttps://api.businesscentral.dynamics.com/v2.0/TENANTID/production/api/v1.0/subscriptions('SUBSCRIPTIONID')\n```", "```\n{\n  \"value\": [\n    {\n      \"subscriptionId\": \"customers\",\n      \"clientState\": \"someClientState\",\n      \"expirationDateTime\": \"2019-07-20T07:52:31Z\",\n      \"resource\": \"api/beta/companies(80d28ea6-02a3-4ec3-98f7-\n                   936c2000c7b3)/customers(26814998-936a-401c-81c1-0e848a64971d)\",\n      \"changeType\": \"updated\",\n      \"lastModifiedDateTime\": \"2019-07-19T12:54:20.467Z\"\n    },\n    {\n      \"subscriptionId\": \"webhookCustomersId\",\n      \"clientState\": \"someClientState\",\n      \"expirationDateTime\": \"2019-07-20T07:52:31Z\",\n      \"resource\": \"api/beta/companies(80d28ea6-02a3-4ec3-98f7-\n                   936c2000c7b3)/customers(130bbd17-dbb9-4790-9b12-2b0e9c9d22c3)\",\n      \"changeType\": \"created\",\n      \"lastModifiedDateTime\": \"2019-07-19T12:54:26.057Z\"\n    }\n  ]\n}\n```", "```\nhttps://graph.microsoft.com/beta/financials/companies('80d28ea6-02a3-4ec3-98f7-936c2000c7b3')/customers\n```", "```\nhttps://graph.microsoft.com/beta/financials/companies('80d28ea6-02a3-4ec3-98f7-936c2000c7b3')/generalLedgerEntries?$orderby=postingDate desc\n```", "```\nhttps://graph.microsoft.com/beta/financials/companies('80d28ea6-02a3-4ec3-98f7-936c2000c7b3')/currencies?$filter=code eq 'USD'\n```", "```\nhttps://graph.microsoft.com/beta/financials/companies('80d28ea6-02a3-4ec3-98f7-936c2000c7b3')/customers\n```", "```\n{\n \"displayName\": \"Graph Customer\",\n \"type\": \"Company\",\n \"address\": {\n \"street\": \"V.le Kennedy 8\",\n \"city\": \"Novara\",\n \"state\": \"IT\",\n \"countryLetterCode\": \"IT\",\n \"postalCode\": \"28021\"\n },\n \"phoneNumber\": \"\",\n \"email\": \"graph@packtpub.com\",\n \"website\": \"\",\n \"currencyId\": \"12902bb7-4938-41b9-8617-33492bcac8b3\",\n \"currencyCode\": \"USD\",\n \"blocked\": \" \",\n \"overdueAmount\": 0\n}\n```", "```\nPOST https://api.businesscentral.dynamics.com/v2.0/api/microsoft/automation/{apiVersion}/companies({companyId})/automationCompanies\nAuthorization: Bearer {token}\nContent-type: application/json\n{\n    \"name\": \"PACKT PUB\",\n    \"displayName\": \"PACKT Publishing\",\n    \"evaluationCompany\": false,\n    \"businessProfileId\": \"\"\n}\n```", "```\nGET https://api.businesscentral.dynamics.com/v1.0/api/microsoft/automation/beta/companies({id})/users\n```", "```\nPOST https://api.businesscentral.dynamics.com/v1.0/api/microsoft/automation/{apiVersion}/companies({companyId})//users({userSecurityId})/userGroupMembers\nAuthorization: Bearer {token}\n\n{ \n  \"code\": \"D365 EXT. ACCOUNTANT\",\n  \"companyName\" :\"CRONUS IT\"\n}\n```", "```\nPATCH https://api.businesscentral.dynamics.com/v1.0/api/microsoft/automation/beta/companies({id})/users({userSecurityId})\nContent-type: application/json\nIf-Match:*\n{\n \"state\": \"Enabled\",\n \"expiryDate\": \"2021-01-01T21:00:53.444Z\"\n}\n```", "```\nGET https://api.businesscentral.dynamics.com/v1.0/api/microsoft/automation/{apiVersion}/companies({{companyid}})/extensions\n```", "```\nPOST https://api.businesscentral.dynamics.com/v1.0/api/microsoft/automation/{apiVersion}/companies({companyId})//extensions({extensionId})/Microsoft.NAV.uninstall\nAuthorization: Bearer {token}\n```", "```\nPATCH https://api.businesscentral.dynamics.com/v1.0/api/microsoft/automation/beta/companies({companyId})/extensionUpload(0)/content\nAuthorization : Bearer {token}\nContent-type : application/octet-stream\nIf-Match:-*\n```"]