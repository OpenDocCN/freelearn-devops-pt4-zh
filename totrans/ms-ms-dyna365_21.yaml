- en: Integrating Machine Learning into Dynamics 365 Business Central
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将机器学习集成到 Dynamics 365 Business Central 中
- en: In the previous chapter, we gave an overview of the Microsoft Power Platform,
    and we saw how to use Dynamics 365 Business Central with Flow and PowerApps to
    solve business tasks with zero coding.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们概述了 Microsoft Power Platform，并且我们看到了如何结合 Flow 和 PowerApps 使用 Dynamics
    365 Business Central 来解决无需编码的业务任务。
- en: 'In this chapter, we''ll talk about a topic that has been emerging over the
    last few years: **Machine Learning** (**ML**) with Dynamics 365 Business Central.
    The year 2019 is the year of **Artificial Intelligence** (**AI**). You hear about
    AI everywhere. The world is telling us: *If you want to be on top, apply AI*.
    But what is AI? How does it differ from classical programming? What is going on
    behind the scenes?'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论一个近年来逐渐兴起的话题：**机器学习**（**ML**）与 Dynamics 365 Business Central。2019年是**人工智能**（**AI**）的年份。你到处都能听到关于人工智能的讨论。世界告诉我们：*如果你想保持领先，应用人工智能*。但是，什么是人工智能？它与经典编程有何不同？幕后发生了什么？
- en: The aim of this chapter is not for you to become a true data scientist or ML
    master, but to get a clear understanding of the basics of AI and some experience
    of how to embed AI into your Dynamics 365 Business Central projects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标不是让你成为一名真正的数据科学家或机器学习大师，而是让你清晰理解人工智能的基础知识，并获得如何将人工智能嵌入 Dynamics 365 Business
    Central 项目中的一些经验。
- en: 'In this chapter, we cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涉及以下主题：
- en: What ML is and an overview of its main processes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习是什么以及其主要过程概述
- en: Dynamics 365 Business Central ML Framework overview
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dynamics 365 Business Central 机器学习框架概述
- en: Using ML in your Dynamics 365 Business Central applications
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的 Dynamics 365 Business Central 应用程序中使用机器学习
- en: Understanding the Prediction API
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解预测 API
- en: What are AI and ML?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是人工智能（AI）和机器学习（ML）？
- en: 'AI consists of tasks that are characteristic of human intelligence, such as
    language and speech understanding, recognizing objects and sounds, and planning.
    The word *tasks* is used because, technically, you can complete these tasks with
    two different approaches: classical programming and ML.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能包含了人类智慧特征的任务，例如语言和语音理解、物体和声音识别以及规划。之所以使用*任务*这个词，是因为从技术上讲，你可以通过两种不同的方法来完成这些任务：经典编程和机器学习。
- en: At the beginning of 1990, some companies introduced **Optical Character Recognition**
    (**OCR**) software. They invested millions of dollars and hired hundreds of developers
    who wrote code to recognize handwritten text. This was classical programming with
    simple tools, such as `if-else`. The approach worked, but the result was quite
    poor. The accuracy was low and the number of mistakes was high.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在1990年初，一些公司推出了**光学字符识别**（**OCR**）软件。他们投资了数百万美元，雇用了数百名开发人员编写代码以识别手写文本。这是使用简单工具（如`if-else`）的经典编程方法。该方法有效，但结果相当糟糕。准确率低，错误率高。
- en: Why did this approach fail? Because what is natural for a human brain is very
    difficult to be programmed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这种方法失败了？因为对人类大脑来说自然的事情对于编程来说非常困难。
- en: So, how we can solve this task in another way? The answer is ML!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们如何以另一种方式解决这个任务呢？答案是机器学习！
- en: '"Machine learning is the process by which a machine (computer) is capable of
    showing behavior that has not been explicitly programmed into it"'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '"机器学习是机器（计算机）展示未被明确编程的行为的过程"'
- en: – Arthur Samuel, 1959
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: – 阿瑟·塞缪尔，1959年
- en: 'Or, in other words: computers learn from data to perform predictive analytics.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 或者换句话说：计算机从数据中学习以执行预测分析。
- en: 'As you can see, instead of writing code, to create ML functions, we need something
    else: data.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，创建机器学习功能时，我们需要的不是编写代码，而是数据。
- en: So, let's cover this process in detail in the following sections.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们在接下来的章节中详细讲解这个过程。
- en: An overview of the ML process
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习过程概述
- en: According to its definition, ML is an application of AI that provides systems
    with the ability to learn and improve on their own, from experience, and not by
    being explicitly programmed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 根据其定义，机器学习（ML）是人工智能（AI）的一种应用，它赋予系统从经验中自动学习和改进的能力，而不是通过显式编程来实现。
- en: 'Here is the classic ML process. It''s when you try to predict an answer based
    on answers from previous experience:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这是经典的机器学习过程。当你尝试根据先前的经验预测答案时：
- en: '![](img/58038a1b-78bd-4958-9ffe-875c0de8ddb4.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/58038a1b-78bd-4958-9ffe-875c0de8ddb4.png)'
- en: 'Let''s go through the preceding diagram in detail:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细了解前面的图示：
- en: '**Define a question**: ML is not a magic box. To get an answer, you should
    know the question, and you should build a model that will answer that exact question.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**定义问题**：机器学习不是一个魔法盒子。要获得答案，你应该知道问题，并构建一个能回答这个确切问题的模型。'
- en: 'Remember: the exact question is the key to the right answer!'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：正确的问题是获得正确答案的关键！
- en: '**Find data**: You should find data that will answer your question. The data,
    which, in (ML) terminology, is usually called a *dataset*, should be relevant,
    complete, exact, and sufficient. In this chapter, we will use Dynamics 365 Business
    Central as business-related data storage.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**查找数据**：你需要找到能回答你问题的数据。数据在机器学习术语中通常被称为 *数据集*，它应当是相关的、完整的、准确的并且足够充分。在本章节中，我们将使用
    Dynamics 365 Business Central 作为与业务相关的数据存储。'
- en: '**Prepare your data**: To make the ML training process possible, you should
    join all of your tables in one table (dataset). You should define which field
    you want to predict (the label) and which fields influence the predictions (the
    features).'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**准备数据**：为了使机器学习训练过程可行，你应该将所有表格合并成一个表格（数据集）。你需要定义你希望预测的字段（标签）以及哪些字段会影响预测（特征）。'
- en: '**Train the ML model**: During this step, you create ML models by applying
    a training dataset to the ML algorithm.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**训练机器学习模型**：在这个步骤中，你通过将训练数据集应用到机器学习算法中来创建机器学习模型。'
- en: '**Test your trained ML model**:To understand the quality of predictions and
    to calculate ML model accuracy, you need also a *test dataset*. The test dataset
    should be different from the training dataset but have the same structure.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试训练好的机器学习模型**：为了了解预测质量并计算机器学习模型的准确度，你还需要一个 *测试数据集*。测试数据集应该与训练数据集不同，但具有相同的结构。'
- en: 'For example, here is our training dataset:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下是我们的训练数据集：
- en: '| **Date** | **Sales Amount** |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| **日期** | **销售金额** |'
- en: '| 01.11.17 | 100 |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 01.11.17 | 100 |'
- en: '| 18.11.17 | 150 |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| 18.11.17 | 150 |'
- en: '| 08.12.17 | 250 |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 08.12.17 | 250 |'
- en: '| 17.12.17 | 260 |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 17.12.17 | 260 |'
- en: 'This is what we used to create the `F(day) = "sales amount"` ML model, and
    here is our test dataset:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们用来创建 `F(day) = "销售金额"` 机器学习模型的内容，以下是我们的测试数据集：
- en: '| **Date** | **Sales Amount** |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **日期** | **销售金额** |'
- en: '| 05.11.17 | 140 |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 05.11.17 | 140 |'
- en: '| 15.12.17 | 240 |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 15.12.17 | 240 |'
- en: 'We take features from the test dataset and apply them to our trained ML model
    to predict labels:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从测试数据集中提取特征，并将它们应用到训练好的机器学习模型中，以预测标签：
- en: '| **Date** | **Sales Amount** | **Predicted Sales Amount** |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| **日期** | **销售金额** | **预测销售金额** |'
- en: '| 05.11.17 | 140 | 137 |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 05.11.17 | 140 | 137 |'
- en: '| 15.12.17 | 240 | 245 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 15.12.17 | 240 | 245 |'
- en: 'Then, we compare Sales Amount with Predicted Sales Amount and get the model''s
    accuracy:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将销售金额与预测销售金额进行比较，得出模型的准确性：
- en: '| **Date** | **Sales Amount** | **Predicted Sales Amount** | **Difference,
    %** |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| **日期** | **销售金额** | **预测销售金额** | **差异，%** |'
- en: '| 05.11.17 | 140 | 137 | 2.1% |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 05.11.17 | 140 | 137 | 2.1% |'
- en: '| 15.12.17 | 240 | 245 | 2.1% |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 15.12.17 | 240 | 245 | 2.1% |'
- en: So, the accuracy of our model is 97.9%.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的模型准确度为 97.9%。
- en: '**Publish the ML model as a web service**: When you are satisfied with the
    model''s accuracy, you can publish your model as a web service and consume it
    from everywhere to predict the future from new features. If I call the published
    model for future dates, the results show predictions for future dates, as shown
    in the following table:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将机器学习模型发布为 web 服务**：当你对模型的准确度感到满意时，可以将模型发布为 web 服务，并可以从任何地方使用它来预测未来的新增特征。如果我调用发布的模型来预测未来日期，结果会显示未来日期的预测值，如下表所示：'
- en: '| **Date** | **Predicted Sales Amount** |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **日期** | **预测销售金额** |'
- en: '| 06.11.18 | 115 |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 06.11.18 | 115 |'
- en: '| 16.12.18 | 255 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 16.12.18 | 255 |'
- en: With a well-trained ML model, you can easily get predictions using your data.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用经过良好训练的机器学习模型，你可以轻松地使用数据进行预测。
- en: Next, let's see how the Business Central ML Framework works.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看 Business Central 机器学习框架是如何工作的。
- en: Understanding the Business Central ML Framework
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Business Central 机器学习框架
- en: Building your own (custom) ML model from scratch could be complicated. It usually
    requires experience in Python, R, or services such as Azure ML Studio. If you
    don't want to invest in that but still want to use the power of AI with your data,
    you can use **Dynamics 365 Business Central ML Framework**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从头开始构建自己的（自定义）机器学习模型可能会比较复杂。通常需要在 Python、R 或者像 Azure ML Studio 这样的服务中具有一定的经验。如果你不想在这方面投资，但仍然希望利用
    AI 和你的数据，你可以使用 **Dynamics 365 Business Central 机器学习框架**。
- en: 'Technically, it can be divided into four different frameworks:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，它可以分为四个不同的框架：
- en: The Time Series API
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间序列 API
- en: The ML Prediction API
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器学习预测 API
- en: The custom Azure ML API
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义 Azure ML API
- en: The custom Vision API
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义视觉 API
- en: 'Each framework is intended for its own task and uses different algorithms:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 每种框架都旨在完成各自的任务，并使用不同的算法：
- en: For example, with the **Time Series API**, you can predict numbers (such as
    sales and quantities) with the power of regression algorithms just by knowing
    dates and numbers from the past.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如，通过 **时间序列 API**，你可以使用回归算法的强大功能，仅凭过去的日期和数字来预测数字（如销售额和数量）。
- en: With the **ML Prediction API**, you can predict classes, such as yes/no or colors.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **ML 预测 API**，你可以预测类别，例如是/否或颜色。
- en: The **Custom Azure ML API** allows you to connect to your custom model, built
    in **Azure ML Studio**.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义 Azure ML API** 允许你连接到你在 **Azure ML Studio** 中构建的自定义模型。'
- en: The **Custom Vision API** allows you to connect to your custom model, built
    in **Custom Vision**.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义视觉 API** 允许你连接到你在 **自定义视觉** 中构建的自定义模型。'
- en: In the next sections, we will focus on the **Time Series** and **ML Prediction
    APIs**, as they are the simplest and don't require ML experience, but they're
    still powerful.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将重点关注 **时间序列** 和 **ML 预测 API**，因为它们是最简单的，不需要 ML 经验，但依然强大。
- en: The Time Series API
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间序列 API
- en: In this example, let's assume that you are the owner of a restaurant and you
    want to predict how many items from the menu your customers will order in the
    next 7 days.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，假设你是一个餐厅的老板，你想预测客户在接下来 7 天内将从菜单中点多少个菜品。
- en: 'You have the following sales history:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你有以下销售历史记录：
- en: '![](img/89864f7f-b462-4f56-a816-bab64e31d69a.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89864f7f-b462-4f56-a816-bab64e31d69a.png)'
- en: In this dataset, you have 38,325 rows and 11 columns. The sales history entries
    exist from January 10, 2015 to December 9, 2018\. The dataset can be found at [https://dkatsonpublicdatasource.blob.core.windows.net/machinelearning/AML-restaurant-sales-by-menu-item.csv](https://dkatsonpublicdatasource.blob.core.windows.net/machinelearning/AML-restaurant-sales-by-menu-item.csv).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个数据集中，你有 38,325 行和 11 列。销售历史记录从 2015 年 1 月 10 日到 2018 年 12 月 9 日。数据集可以在 [https://dkatsonpublicdatasource.blob.core.windows.net/machinelearning/AML-restaurant-sales-by-menu-item.csv](https://dkatsonpublicdatasource.blob.core.windows.net/machinelearning/AML-restaurant-sales-by-menu-item.csv)
    找到。
- en: You can call the **Time Series API** using AL Language code to get predictions
    about **orders**. Then, we can check the quality of the predictions programmatically
    before displaying them to the end user. Let's see how to do this.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 AL 语言代码调用 **时间序列 API**，以获得关于 **订单** 的预测。然后，我们可以在显示给最终用户之前，程序化地检查预测的质量。让我们看看如何操作。
- en: Step 1 – Downloading the dataset to Dynamics 365 Business Central
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 1 – 下载数据集到 Dynamics 365 Business Central
- en: 'Perform the following steps to download the dataset into Business Central:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤将数据集下载到 Business Central 中：
- en: 'Create a new AL project in Visual Studio Code and clone this GitHub repository:
    [https://github.com/dkatson/BC-ML-Framework](https://github.com/dkatson/BC-ML-Framework).
    You will get a new `RestSalesEntry` table (and a page) where you can save this
    dataset, and a new codeunit, `RefreshRestSales`, that will upload this dataset
    from an external source:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Visual Studio Code 中创建一个新的 AL 项目，并克隆这个 GitHub 仓库：[https://github.com/dkatson/BC-ML-Framework](https://github.com/dkatson/BC-ML-Framework)。你将获得一个新的
    `RestSalesEntry` 表（以及一个页面），在其中保存该数据集，并获得一个新的代码单元 `RefreshRestSales`，它将从外部源上传该数据集：
- en: '![](img/cd3cfd6f-4880-47e0-ac13-9fab7a796498.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd3cfd6f-4880-47e0-ac13-9fab7a796498.png)'
- en: 'When you publish this app, you''ll see this page:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你发布这个应用程序时，你将看到这个页面：
- en: '![](img/f23c9c76-5fb8-4014-bcbb-e2c47de8b35e.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f23c9c76-5fb8-4014-bcbb-e2c47de8b35e.png)'
- en: 'Click on the Refresh restsales button, and you will see this dataset inside
    Dynamics 365 Business Central:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“刷新餐厅销售”按钮，你将看到该数据集出现在 Dynamics 365 Business Central 中：
- en: '![](img/d876af65-f6a0-4467-b82a-6fd70287319f.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d876af65-f6a0-4467-b82a-6fd70287319f.png)'
- en: Now, you have data in place, but to make predictions, you need to have an ML
    model published as a web service, where you will send data to get predictions
    back. So, for this, we move to the second step.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经有了数据，但要进行预测，你需要将一个 ML 模型发布为 web 服务，通过该服务你可以发送数据并返回预测结果。所以，为此我们将进入第二步。
- en: Step 2 – Publishing a model as a web service from a public template
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 2 – 从公共模板发布模型为 web 服务
- en: 'With a few clicks, you can create a model from a public template and publish
    an endpoint that serves only your needs. Enter the following URL in your favorite
    browser:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 只需几次点击，你就可以从公共模板创建一个模型，并发布一个仅满足你需求的端点。请在你喜欢的浏览器中输入以下网址：
- en: '[https://gallery.cortanaintelligence.com/Experiment/Forecasting-Model-for-Microsoft-Dynamics-365-for-Financials-1](https://gallery.cortanaintelligence.com/Experiment/Forecasting-Model-for-Microsoft-Dynamics-365-for-Financials-1)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://gallery.cortanaintelligence.com/Experiment/Forecasting-Model-for-Microsoft-Dynamics-365-for-Financials-1](https://gallery.cortanaintelligence.com/Experiment/Forecasting-Model-for-Microsoft-Dynamics-365-for-Financials-1)'
- en: 'This is a publicly available model prepared by the Microsoft ERP team and aimed
    at time series predictions:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个由 Microsoft ERP 团队准备的公开可用模型，旨在进行时间序列预测：
- en: '![](img/4bfe2fd4-3cfe-4854-88b4-3178bd2ff72f.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4bfe2fd4-3cfe-4854-88b4-3178bd2ff72f.png)'
- en: 'Now, follow these steps:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照以下步骤操作：
- en: Click on the **Open in Studio** button.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**在 Studio 中打开**按钮。
- en: Choose **Free Workspace** or **Standard Workspace**.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**免费工作区**或**标准工作区**。
- en: Sign in to your Microsoft account.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的 Microsoft 账户。
- en: Click the **OK** button to copy the experiment from the gallery.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**按钮将实验从画廊复制。
- en: Keep the default values in the **Region** and **Workspace** fields, unless you
    are an experienced user of Azure ML.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持**区域**和**工作区**字段的默认值，除非你是 Azure ML 的高级用户。
- en: Click on the **Run** button at the bottom of the experiment canvas.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击实验画布底部的**运行**按钮。
- en: Click on the **Deploy Web Service | Deploy Web Service (Classic)** button at
    the bottom of the experiment canvas.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击实验画布底部的**部署 Web 服务 | 部署 Web 服务（经典版）**按钮。
- en: 'The system deploys the Azure ML experiment as web services and provides a RESTful
    API that can be consumed by a wide range of devices and platforms, including Dynamics
    365 Business Central:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 系统将 Azure ML 实验部署为 Web 服务，并提供可以被广泛设备和平台（包括 Dynamics 365 Business Central）消费的
    RESTful API：
- en: '![](img/993ae2f5-3c19-4b87-a9db-f1cc821c79e3.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/993ae2f5-3c19-4b87-a9db-f1cc821c79e3.png)'
- en: When the deployment is finished, the web services dashboard opens.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 部署完成后，将打开 Web 服务仪表盘。
- en: 'Here, you can see the API key and two available APIs: Request/Response and
    Batch Execution. The current version of the Time Series API that is shipped with
    Dynamics 365 Business Central supports the Request/Response API. At the bottom
    of the API help page, you can find input and output definitions and code samples.
    However, the request URI is the only thing you need for this example.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到 API 密钥和两个可用的 API：请求/响应和批量执行。当前与 Dynamics 365 Business Central 一起发布的时间序列
    API 仅支持请求/响应 API。在 API 帮助页面底部，你可以找到输入输出定义和代码示例。然而，对于这个示例，你只需要请求 URI。
- en: 'Now, follow these steps:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照以下步骤操作：
- en: Copy and paste the API key in a text file to save it although you can also access
    it later.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴 API 密钥到文本文件中保存，尽管你以后也可以再次访问它。
- en: 'Click on the **Request/Response** link to open the API help page:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**请求/响应**链接打开 API 帮助页面：
- en: '![](img/4657c5e4-8af4-4559-9f3e-f2ff9ab7f441.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4657c5e4-8af4-4559-9f3e-f2ff9ab7f441.png)'
- en: 'After that, copy and paste the request URI in a text file to save it although
    you can also access it later:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，复制并粘贴请求 URI 到文本文件中保存，尽管你以后也可以访问它：
- en: '![](img/03ad5ede-9667-4c66-bbf0-b5a3fc8b8ff1.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/03ad5ede-9667-4c66-bbf0-b5a3fc8b8ff1.png)'
- en: That's it. This ML model, which can predict any figure, including *orders* (from
    our example) is now published, and you can call it from the Dynamics 365 Business
    Central Time Series API.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。这个 ML 模型可以预测任何数据，包括我们示例中的*订单*，现在已发布，你可以通过 Dynamics 365 Business Central
    时间序列 API 调用它。
- en: Step 3 – Sending your data from Business Central to the ML endpoint to get predictions
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步 – 将数据从 Business Central 发送到 ML 端点以获取预测
- en: 'The next step is to send the data to the endpoint to receive predictions. Let''s
    see how that happens:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将数据发送到端点以接收预测。让我们看看这是如何发生的：
- en: 'Open your AL project in Visual Studio Code, cloned from [https://github.com/dkatson/BC-ML-Framework](https://github.com/dkatson/BC-ML-Framework),
    and switch to the `Time-Series-API` branch. Here, press *Ctrl* + *Shift* + *P*
    and type `checkout`:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Visual Studio Code 中打开你的 AL 项目，该项目是从 [https://github.com/dkatson/BC-ML-Framework](https://github.com/dkatson/BC-ML-Framework)
    克隆的，然后切换到`Time-Series-API`分支。在这里，按*Ctrl* + *Shift* + *P* 并输入`checkout`：
- en: '![](img/c1fc0bea-1b29-400a-9634-430d2d44e20e.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1fc0bea-1b29-400a-9634-430d2d44e20e.png)'
- en: 'Now, select a branch:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择一个分支：
- en: '![](img/f4953f68-f053-4762-a715-2d381842b84b.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f4953f68-f053-4762-a715-2d381842b84b.png)'
- en: This is the upgraded version of the restaurant example extension.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这是餐厅示例扩展的升级版。
- en: 'The differences between this and the previous one are as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这个版本与之前的版本的区别如下：
- en: Demonstration data (demo items and sales history) is loaded automatically when
    you install the app.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装应用时，演示数据（演示项和销售历史）会自动加载。
- en: A new action appears in the Item Card – `Update Rest. Forecast`.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在物料卡中会出现一个新操作——`Update Rest. Forecast`。
- en: Let's look at how it works.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它是如何工作的。
- en: 'There is a new codeunit called `Calculate Rest. Forecast` with the main function, `CalculateRestForecast`,
    and two additional functions, `getMLUri` and `getMLKey`*. *Insert your URI and
    a key (copied from *step 2*) into these functions:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个新的代码单元，名为 `Calculate Rest. Forecast`，其主要函数是 `CalculateRestForecast`，并且有两个附加函数，`getMLUri`
    和 `getMLKey`*。*将你的 URI 和密钥（从 *第 2 步* 中复制）插入到这些函数中：
- en: '![](img/02735bfa-4545-4539-96a8-f9952426e226.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/02735bfa-4545-4539-96a8-f9952426e226.png)'
- en: 'Let''s investigate the `CalculateRestForecast` function''s variables:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们调查一下 `CalculateRestForecast` 函数的变量：
- en: '![](img/31ed2dec-85bd-4d50-8964-de9990df2ef7.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/31ed2dec-85bd-4d50-8964-de9990df2ef7.png)'
- en: 'From the preceding screenshot, we understand the following:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中，我们可以理解以下内容：
- en: '`TimeSeriesMgt` is a time series library, which prepares the data, submits
    it to the Azure ML, and gets the prediction.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeSeriesMgt` 是一个时间序列库，它准备数据，将其提交给 Azure ML，并获取预测结果。'
- en: '`RestSalesEntry` is our history dataset, which we will use to prepare the data,
    and which we will send to the Azure ML web service to get the predictions.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RestSalesEntry` 是我们的历史数据集，我们将用它来准备数据，并将其发送到 Azure ML 网络服务以获取预测结果。'
- en: '`TempTimeSeriesForecast` is prepared data that we will send to the Azure ML
    web service to get the predictions.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TempTimeSeriesForecast` 是我们将发送到 Azure ML 网络服务以获取预测结果的准备数据。'
- en: '`TimeSeriesModel` is the name (or combination) of regression algorithm(s) that
    will be applied to the prepared data inside of Azure ML web service to get predictions.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeSeriesModel` 是回归算法的名称（或组合），它将在 Azure ML 网络服务中应用于准备好的数据，以获取预测结果。'
- en: '`TempTimeSeriesBuffer` is our prediction that was received from the Azure ML
    web service.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TempTimeSeriesBuffer` 是我们从 Azure ML 网络服务获得的预测结果。'
- en: 'Let''s investigate the `CalculateRestForecast` function''s business logic.
    The whole task can be done with four functions from the `Time Series Management`
    variable. Here, `Initialize` is used to set up the connection:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们调查一下 `CalculateRestForecast` 函数的业务逻辑。整个任务可以通过 `Time Series Management` 变量中的四个函数来完成。在这里，`Initialize`
    用于建立连接：
- en: '![](img/bca0c9ef-6c5f-464f-ba86-12894f88eda2.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bca0c9ef-6c5f-464f-ba86-12894f88eda2.png)'
- en: 'Now, prepare the historical data that you will use for predictions. In our
    case, we will predict `orders` by items, which means that one call to the ML web
    service will return `orders` predictions for one item. So, it makes sense to filter
    the sales history dataset by one item per call:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，准备你将用于预测的历史数据。在我们的案例中，我们将按项预测 `orders`，这意味着一次调用 ML 网络服务将返回一个项的 `orders` 预测。因此，将销售历史数据集按单个项进行过滤是有意义的：
- en: '![](img/46d4ee2a-6171-4fb5-bc26-53fa9547153a.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46d4ee2a-6171-4fb5-bc26-53fa9547153a.png)'
- en: '`PrepareData` transforms any table data into a dataset that is ready for submission.
    Specify the source table and the field to be used for grouping. Remember that
    the Time Series API requires the date as the second grouping of fields. Choose
    a label —the field that you want to predict. It should contain numerical values—decimals
    or integers.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`PrepareData` 将任何表格数据转换为可提交的数据集。指定源表格和用于分组的字段。请记住，时间序列 API 需要将日期作为第二个分组字段。选择一个标签——你希望预测的字段。它应该包含数值——小数或整数。'
- en: In our case, we will specify the `date` field from `RestSalesEntry` as a date,
    `menu_item_id` as a group field, and `orders` as a predictive field.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，我们将指定 `RestSalesEntry` 中的 `date` 字段作为日期，`menu_item_id` 作为分组字段，`orders`
    作为预测字段。
- en: 'Also, we specify that `Period type` is equal to `day` (because we have historical
    transactions for each day), `start day` for the predictions will be the current
    `work date`, and the number of historical entries that will be used to calculate
    an `orders` prediction will be all of the entries we have:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们指定 `Period type` 等于 `day`（因为我们有每一天的历史交易数据），预测的 `start day` 将是当前的 `work
    date`，用于计算 `orders` 预测的历史条目数量将是我们所拥有的所有条目：
- en: '![](img/81b8bbc6-f425-447a-a69c-0fa20bf74a1f.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/81b8bbc6-f425-447a-a69c-0fa20bf74a1f.png)'
- en: The number of historical periods tells the system how many periods it should
    take from the past, starting from the forecast date. This means that if you have
    holes in your historic dataset, then it will also include them in the calculation.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 历史周期的数量告诉系统应该从过去获取多少个周期，从预测日期开始。这意味着，如果你的历史数据集存在空缺，它也将包含在计算中。
- en: 'In our case, our historical data finishes at 2018-12-09\. And we want to forecast
    starting from 2019-01-05\. We have a hole of about 6 months. That means that the `PrepareData`
    function will fill that hole with zero entries and, as a result, will exclude
    6 months of historical data, starting from the beginning (2015-01-10):'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们的历史数据截止于2018-12-09，且我们希望从2019-01-05开始进行预报。我们有约6个月的缺失数据。这意味着`PrepareData`函数将用零填充这段缺失数据，因此会排除掉6个月的历史数据，从最开始（2015-01-10）算起：
- en: '![](img/dacc2060-f6a4-4d7d-8e1b-51b9b4e90d63.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dacc2060-f6a4-4d7d-8e1b-51b9b4e90d63.png)'
- en: You can avoid that by playing with the `ObservationPeriod` parameter.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过调整`ObservationPeriod`参数来避免这种情况。
- en: 'Once the data is prepared, you can read it and modify it before sending it
    to Azure Machine Learning Service. For example, here, we had a missing period
    in our `RestSalesEntry` dataset. During the `PrepareData` stage, there are system-generated
    zero (0) entries. If we send this dataset as is, Machine Learning Service will
    think that we had no sales for that period, and that will dramatically influence
    sales predictions for the future. To avoid that, we need to exclude zero entries
    from the prepared dataset:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据准备好，你可以在将数据发送到Azure机器学习服务之前读取并修改它。例如，这里我们的`RestSalesEntry`数据集中有一段缺失的时期。在`PrepareData`阶段，会生成系统默认的零（0）条目。如果我们直接发送这个数据集，机器学习服务会认为这段时期没有销售，这将极大影响未来的销售预测。为避免这种情况，我们需要从准备好的数据集中排除零条目：
- en: '![](img/639a8f49-d5ce-4003-8c25-f4317d2bcd26.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/639a8f49-d5ce-4003-8c25-f4317d2bcd26.png)'
- en: 'The `Forecast` function sends the final prepared dataset to the Azure ML web
    service, which calculates the forecast according to specified parameters and returns
    the forecast result. Let''s investigate the input parameters:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`Forecast`函数将最终准备好的数据集发送到Azure ML Web服务，后者根据指定的参数计算预报并返回预报结果。让我们来调查一下输入参数：'
- en: '`ForecastingPeriods`:This is thenumber of days/months/years for the future
    forecast that you want to get—a specific period type equal to what you specified
    in the `PrepareData` function.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ForecastingPeriods`：这是你希望获得的未来预报天数/月数/年数——它对应于你在`PrepareData`函数中指定的特定时间段类型。'
- en: '`ConfidenceLevel`: This is the minimum probability of the forecast result.
    If you specify 0, it will use 80%, or you can specify the exact percentage. You
    can try different values and see how it will change. We don''t recommend using
    a value higher than 95.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConfidenceLevel`：这是预报结果的最低概率。如果指定为0，则会使用80%的概率，或者你可以指定一个确切的百分比。你可以尝试不同的值，看看它如何变化。我们不建议使用高于95的值。'
- en: '`TimeSeriesModel`*:* This is a statistical algorithm that is used by the Azure
    ML web service to create forecasts based on the prepared historical dataset you
    send. It could be ARIMA, ETS, or STL. It also could be a combination of ETS +
    ARIMA, ETS + STL, or all three.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TimeSeriesModel`*：* 这是Azure ML Web服务使用的统计算法，用于根据你发送的历史数据集来创建预报。它可以是ARIMA、ETS或STL，也可以是ETS
    + ARIMA、ETS + STL，或三者的组合。'
- en: 'In our case, we will calculate an `orders` forecast for the next 7 days with
    a minimum probability of 80%, and we will apply all of the statistical algorithms
    and calculate the average result:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们将计算未来7天的`orders`预报，最低概率为80%，并将应用所有统计算法计算平均结果：
- en: '![](img/60e941a5-7a45-4158-a09c-92730e5566d8.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/60e941a5-7a45-4158-a09c-92730e5566d8.png)'
- en: '`GetForecast` populates the `TempTimeSeriesForecast` table with the forecast
    results, which you can then use anywhere:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`GetForecast`将预报结果填充到`TempTimeSeriesForecast`表中，之后你可以在任何地方使用这些结果：'
- en: '![](img/0a926237-2226-4d2a-8395-57423b571a16.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a926237-2226-4d2a-8395-57423b571a16.png)'
- en: 'The simplest way to investigate the results is to create a list page with the
    `TempTimeSeriesForecast` table:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 调查结果最简单的方式是创建一个包含`TempTimeSeriesForecast`表的列表页面：
- en: '![](img/c6207ecd-0737-48df-a22e-ed3ee931bc05.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6207ecd-0737-48df-a22e-ed3ee931bc05.png)'
- en: Let's publish this app and investigate the results. Go to the rice pudding item
    with the No. 2 field as 34 and click on Actions | Item | Restaurant | Update Rest.
    Forecast*:*
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们发布这个应用并调查结果。进入米布丁项目，字段No. 2为34，点击操作 | 项目 | 餐厅 | 更新餐厅预报*：*
- en: '![](img/955643f6-523b-4978-b9ac-007450896279.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/955643f6-523b-4978-b9ac-007450896279.png)'
- en: 'The result will be stored in a temporary table and shown on the screen:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将存储在临时表中，并显示在屏幕上：
- en: '![](img/70c1ee2d-7344-46bd-93f6-32c2b2d786a2.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/70c1ee2d-7344-46bd-93f6-32c2b2d786a2.png)'
- en: 'The delta is around 140%, which is quite big. The reason is that we calculated
    the forecast from April 2019, but our last entry in the past is from September
    2018, as shown here:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 增量约为 140%，这相当大。原因在于我们是从 2019 年 4 月计算的预测，但我们过去的最后一个数据条目来自 2018 年 9 月，如下所示：
- en: '![](img/a8ac5949-ee3d-44ee-9bf7-10c396cf5146.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8ac5949-ee3d-44ee-9bf7-10c396cf5146.png)'
- en: 'If we change Work date to September 24, 2018 (the day just after the last actual
    prediction we have) and run the forecast, we will see that the delta decreases
    to 65%:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将工作日期更改为 2018 年 9 月 24 日（即我们最后一次实际预测后的第二天），并运行预测，我们会看到增量减少到 65%：
- en: '![](img/f8162faf-ebce-4d78-accb-855f8a114002.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f8162faf-ebce-4d78-accb-855f8a114002.png)'
- en: But still, the delta percentage is quite big. Why? That's because of the lack
    of features used in the forecast.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 但增量百分比仍然相当大。为什么？那是因为预测中使用的特征过少。
- en: Time series forecasts use only two features, `item no.` and `date`. But usually,
    it's required to use more features that influence a forecast.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列预测仅使用两个特征，`item no.` 和 `date`。但通常需要使用更多影响预测的特征。
- en: After understanding how the Time Series API framework works, let's explore its
    Prediction API.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解时间序列 API 框架如何工作的基础上，接下来让我们探索其预测 API。
- en: Understanding the ML Prediction API
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 ML 预测 API
- en: In the previous section, we trained an ML model based on the Time Series API.
    As there is a limit of only two features, the resulting model had poor accuracy.
    With the **ML Prediction API**, you can set as many features as you want. This
    approach gives you more flexibility and opportunities to experiment, allowing
    you to improve model quality by changing features and generating new features.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们基于时间序列 API 训练了一个机器学习模型。由于仅有两个特征， resulting 模型的准确率较差。使用**ML预测 API**，您可以设置任意数量的特征。这种方法为您提供了更多的灵活性和实验机会，让您可以通过改变特征和生成新特征来提高模型质量。
- en: Also, the ML Prediction API allows you to train a custom ML model directly from
    AL.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，**ML预测 API** 允许您直接从 AL 训练一个自定义的 ML 模型。
- en: If you are building an industry solution, you can add the `train-ml-model` function
    directly to your Dynamics 365 Business Central app.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在构建行业解决方案，可以将 `train-ml-model` 功能直接添加到您的 Dynamics 365 Business Central 应用中。
- en: The API is available in codeunit 2003, ML Prediction Management. Let's look
    at how it works.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 该 API 可在代码单元 2003 中找到，名为 ML 预测管理。让我们来看一下它是如何工作的。
- en: In Visual Studio Code, open the project you cloned from [https://github.com/dkatson/BC-ML-Framework](https://github.com/dkatson/BC-ML-Framework) and
    switch to the `Train-ML-Model-From-AL-API`branch. This is the upgraded version
    of the previously seen restaurant example extension.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio Code 中，打开您从 [https://github.com/dkatson/BC-ML-Framework](https://github.com/dkatson/BC-ML-Framework)
    克隆的项目，并切换到 `Train-ML-Model-From-AL-API` 分支。这是之前餐厅示例扩展的升级版。
- en: 'The differences between this and the previous one are as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这与之前的不同之处如下：
- en: We don't use the Time Series API.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不使用时间序列 API。
- en: We train an ML model (with eight features) to get the **orders** forecasted
    directly from AL.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们训练了一个具有八个特征的机器学习模型，直接从 AL 中获得**订单**预测。
- en: Step 1 – Publishing a general prediction model as a web service from a public
    template
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 1 – 从公共模板发布一个通用预测模型为 Web 服务
- en: As a prerequisite for the training from the Business Central process, you still
    need to publish your general prediction ML web service into your Azure subscription.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 作为从 Business Central 进程进行训练的前提，您仍然需要将通用预测 ML Web 服务发布到您的 Azure 订阅中。
- en: Visit [https://gallery.azure.ai/Experiment/Prediction-Experiment-for-Dynamics-365-Business-Central](https://gallery.azure.ai/Experiment/Prediction-Experiment-for-Dynamics-365-Business-Central) in
    your favorite browser.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 [https://gallery.azure.ai/Experiment/Prediction-Experiment-for-Dynamics-365-Business-Central](https://gallery.azure.ai/Experiment/Prediction-Experiment-for-Dynamics-365-Business-Central)
    在您喜欢的浏览器中。
- en: 'This is a publicly available model prepared by the Microsoft ERP team and was
    designed especially for ML prediction management use:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这是微软 ERP 团队准备的一个公开可用的模型，专门为 ML 预测管理使用而设计：
- en: '![](img/14363075-e22e-4886-93c7-22a0d13c0c35.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14363075-e22e-4886-93c7-22a0d13c0c35.png)'
- en: 'To publish it, follow these steps:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 要发布它，请按照以下步骤操作：
- en: Open this experiment in Azure ML Studio.
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure ML Studio 中打开此实验。
- en: Run it, and then deploy it as a web service.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行它，然后将其作为 Web 服务部署。
- en: In the web service dashboard, copy the API key.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Web 服务仪表板中，复制 API 密钥。
- en: Step 2 – Training the ML model from AL
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤 2 – 从 AL 训练机器学习模型
- en: In the Visual Studio Code project you cloned earlier, there is a table called **Rest.
    ML Forecast Setup** with two additional functions, `getMLUri` and `getMLKey`*.*
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '在你之前克隆的 Visual Studio Code 项目中，有一张名为 **Rest. ML Forecast Setup** 的表格，包含两个额外的函数：`getMLUri`
    和 `getMLKey`*.* '
- en: 'Insert your URI and a key (copied from the previous step) into these functions:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的 URI 和密钥（从前一步复制）插入这些函数：
- en: '![](img/093eea32-a7a7-4381-94d0-ea8be27d3b85.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/093eea32-a7a7-4381-94d0-ea8be27d3b85.png)'
- en: 'Open the Train Rest. Forecast ML codeunit and find the `Train()`function*.*
    Let''s investigate how it works. The defined variables are as follows:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 `Train Rest. Forecast ML` 代码单元，找到 `Train()` 函数*.* 我们来看看它是如何工作的。定义的变量如下：
- en: '![](img/7d79ad6a-b59b-42d6-ac90-13f89e46a955.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d79ad6a-b59b-42d6-ac90-13f89e46a955.png)'
- en: 'From the preceding screenshot, we observe the following:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的截图中，我们观察到以下内容：
- en: '`ML Prediction Management`: This is the main codeunit, which has functions
    to train, save, and use the ML model.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ML Prediction Management`：这是主要的代码单元，包含用于训练、保存和使用机器学习模型的功能。'
- en: '`MyModel`: This is the trained model in coded text format.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MyModel`：这是训练后的模型，采用编码文本格式。'
- en: '`MyModelQuality`: This is the quality of the trained model.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MyModelQuality`：这是训练模型的质量。'
- en: '`Setup`: This is the table where trained models are stored.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Setup`：这是存储训练模型的表格。'
- en: '`RestSalesEntry`: This is the historical data used to train an ML model.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RestSalesEntry`：这是用于训练机器学习模型的历史数据。'
- en: 'Specify connections to your published predictive ML web service, as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，指定与你发布的预测机器学习 web 服务的连接：
- en: '![](img/118bb55a-168b-4561-9ccb-216b7ce09953.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/118bb55a-168b-4561-9ccb-216b7ce09953.png)'
- en: Now, prepare historical data for the training process. You can filter data or
    add new columns.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为训练过程准备历史数据。你可以过滤数据或添加新的列。
- en: 'The important things to note here are as follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要注意的要点如下：
- en: There should not be empty fields in the training dataset. If you have them,
    fill them with any value, such as `0` or `NA`.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练数据集不应有空字段。如果有空字段，请用任何值填充它们，例如 `0` 或 `NA`。
- en: 'If you have a `Date` field, split it into two fields (at least): day and month.
    Usually, the forecast depends on these fields, not on the date itself. The date
    format is not supported in this API.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你有 `Date` 字段，请将其拆分为两个字段（至少）：日和月。通常，预测依赖于这些字段，而非日期本身。此 API 不支持日期格式。
- en: 'Consider the following screenshot:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![](img/c08662bb-b88a-4794-bebf-a25a39c5f80e.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c08662bb-b88a-4794-bebf-a25a39c5f80e.png)'
- en: 'Specify the features for the model. Here, you specify the fields that influence
    the predictions:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 为模型指定特征。在这里，你指定影响预测的字段：
- en: '![](img/5694bbe6-90d7-4800-9ca4-a5a32a3ccbf6.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5694bbe6-90d7-4800-9ca4-a5a32a3ccbf6.png)'
- en: 'Then, we specify the label. Here, you specify the fields that you are going
    to predict:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们指定标签。在这里，你指定你要预测的字段：
- en: '![](img/3951631c-a0a3-45b9-a868-50409b6b3137.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3951631c-a0a3-45b9-a868-50409b6b3137.png)'
- en: 'Next, we train the model. Here, you send a request to the web service with
    the historical data that''s used for training. As a result, you will get a trained
    model in Base64 text format and the model quality:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将训练模型。在这里，你将请求发送到 web 服务，并使用历史数据进行训练。作为结果，你将获得一个 Base64 文本格式的训练模型和模型质量：
- en: '![](img/a9c4d83a-4eb2-4879-a116-f411946cbee9.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a9c4d83a-4eb2-4879-a116-f411946cbee9.png)'
- en: 'Save your trained model. It will be used later, in the prediction process:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 保存你的训练模型。它将在后续的预测过程中使用：
- en: '![](img/19047403-80f2-47f9-858b-002323158d5a.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19047403-80f2-47f9-858b-002323158d5a.png)'
- en: Step 3 – Predicting using the trained model
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 3 步 – 使用训练好的模型进行预测
- en: 'Open the Calculate Rest. Forecast ML codeunit and find the `Predict()` function.
    Let''s see how it works:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 `Calculate Rest. Forecast ML` 代码单元，找到 `Predict()` 函数。让我们看看它是如何工作的：
- en: 'Check that you have the trained model in place:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查是否已有训练好的模型：
- en: '![](img/dd68325c-ecd2-4af3-b6da-1208b7d44e91.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd68325c-ecd2-4af3-b6da-1208b7d44e91.png)'
- en: 'Specify the connection to your published predictive ML web service:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定与你发布的预测机器学习 web 服务的连接：
- en: '![](img/b4cff367-79cc-4ab5-9e12-16ad98e73c16.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b4cff367-79cc-4ab5-9e12-16ad98e73c16.png)'
- en: Generate a temporary table with data (features), which will be used to get **orders**
    (predictions). The structure of this table should be the same as the table you
    used in the training process. Otherwise, the `Prediction` web service will not
    work properly.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个包含数据（特征）的临时表，用于获取 **订单**（预测）。该表的结构应与训练过程中使用的表相同，否则 `Prediction` web 服务将无法正常工作。
- en: 'Then, pass this table to the ML web service input. It''s important to understand
    that predictions will be calculated for each record (row) of the passed table:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，将此表传递到ML网络服务输入。重要的是要理解，预测将针对传递表的每条记录（行）进行计算：
- en: '![](img/cabb485a-ec5e-40c2-b69c-4b0ac559ddaf.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cabb485a-ec5e-40c2-b69c-4b0ac559ddaf.png)'
- en: 'Specify which fields from the table will be the features. List them in the
    same order as when you trained the model. Otherwise, the `Prediction` web service
    will not work properly:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定表中将成为特征的字段。按照训练模型时的相同顺序列出它们。否则，`Prediction`网络服务将无法正常工作：
- en: '![](img/a4f9cd12-f1dd-45b6-a48c-d48b2f93754b.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a4f9cd12-f1dd-45b6-a48c-d48b2f93754b.png)'
- en: 'Specify which field from the passed table will be a label. Use the same field
    that you used when you trained the model. You can only mention one field here:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定从传递表中将成为标签的字段。使用训练模型时使用的相同字段。这里只能提及一个字段：
- en: '![](img/188fb2be-e7ea-4a4b-949f-4f1195f6b11a.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/188fb2be-e7ea-4a4b-949f-4f1195f6b11a.png)'
- en: The ML Prediction API can make predictions using classification or regression
    algorithms. You don't control that. If the label field has a type of integer or
    decimal, then the regression tree algorithm, `annova`, will be applied. Otherwise,
    it will use a classification algorithm.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: ML预测API可以使用分类或回归算法进行预测。您无法控制。如果标签字段的类型为整数或小数，则将应用回归树算法`annova`。否则，它将使用分类算法。
- en: If you predict values using classification algorithms, then you can also specify
    a field to save the confidence percentage of the prediction. This isn't supported
    for the regression algorithm.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用分类算法预测值，那么还可以指定一个字段来保存预测的置信百分比。这对于回归算法不支持。
- en: 'Predict values using the `Predict` function and pass the trained ML model:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`Predict`函数预测值并传递训练好的ML模型：
- en: '![](img/35d9c6cd-09a1-453a-ad40-d895cf12ed5b.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35d9c6cd-09a1-453a-ad40-d895cf12ed5b.png)'
- en: 'Save the forecast result:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 保存预测结果：
- en: '![](img/ea9a5723-30c9-4b1d-8ea8-b751cbcffbcc.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea9a5723-30c9-4b1d-8ea8-b751cbcffbcc.png)'
- en: You now have forecast data to check.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您有预测数据要检查。
- en: Step 4 – Getting insights into how ML works
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4步 - 深入了解ML的工作原理
- en: 'When you get predictions from an ML web service, it''s always interesting to
    understand why the model gives some results or makes those decisions. As the ML
    Prediction API uses tree-based ML algorithms, we can see the decision tree:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 当您从ML网络服务获取预测时，了解模型为何给出某些结果或作出这些决策总是很有趣。由于ML预测API使用基于树的ML算法，我们可以看到决策树：
- en: '![](img/7d4df0a2-b6d6-40f7-9a86-d79666281368.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d4df0a2-b6d6-40f7-9a86-d79666281368.png)'
- en: It's important to understand that the decision tree is an artifact of the trained
    model, not of the predictions made by the trained model.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要理解，决策树是训练模型的产物，而不是训练模型所做出的预测的产物。
- en: 'Open the Train Rest. Forecast ML codeunit and find the `DownloatPlotOfTheModel`
    function*.* Let''s see how it works:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Train Rest. Forecast ML代码单元并找到`DownloatPlotOfTheModel`函数。让我们看看它是如何工作的：
- en: Connect to your published ML web service.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到您发布的ML网络服务。
- en: Get the `.pdf` file with the decision tree calling the `PlotModel` function.
    You will get it in Base64 text format.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`PlotModel`函数获取带有决策树的`.pdf`文件。您将以Base64文本格式获得它。
- en: 'Then, use the `DownloadPlot` function to save the `.pdf` file locally. If you
    don''t need to save it, just skip this line of code:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用`DownloadPlot`函数将`.pdf`文件保存在本地。如果不需要保存它，只需跳过这行代码：
- en: '![](img/7e5a3234-fd52-45be-8601-b77552e39d9b.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7e5a3234-fd52-45be-8601-b77552e39d9b.png)'
- en: You will have a plot of your ML model.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 您将拥有您的ML模型的绘图。
- en: Step 5 – Publishing and running the forecast
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5步 - 发布和运行预测
- en: 'When you publish and run the forecast from the Item card, you will get this
    screenshot:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 当您从Item卡发布和运行预测时，您将得到此屏幕截图：
- en: '![](img/a3dbad0a-1071-4241-b8b2-95b4785461c7.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3dbad0a-1071-4241-b8b2-95b4785461c7.png)'
- en: 'If you to compare the forecast results with the previous models, you will notice
    that this model gives worse results than the custom-built ML model, but better
    results than the Time Series API:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您要将预测结果与先前的模型进行比较，您会注意到该模型比定制的ML模型结果差，但比时间序列API结果好：
- en: '![](img/82d3e4cc-1132-41ce-b791-c3d09d3e128d.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/82d3e4cc-1132-41ce-b791-c3d09d3e128d.png)'
- en: This section explained how ML prediction works and the steps involved in performing
    it.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了ML预测的工作原理及执行它所涉及的步骤。
- en: Summary
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, we looked through the ML APIs available with Dynamics 365
    Business Central. I''ve made a comparative analysis of the three ML APIs in the
    following table:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们回顾了与Dynamics 365 Business Central一起使用的ML API。我在下表中对三种ML API进行了对比分析：
- en: '|  | **The Time Series API** | **The ML Prediction API** | **The Custom Azure
    ML API** |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '|  | **时间序列API** | **ML预测API** | **自定义Azure ML API** |'
- en: '| **ML Experience required** | Low | Medium | High |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| **所需ML经验** | 低 | 中 | 高 |'
- en: '| **ML Model** | Microsoft | Microsoft | Custom |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| **ML模型** | 微软 | 微软 | 定制 |'
- en: '| **Data preparation level** | Low | Medium | High |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| **数据准备水平** | 低 | 中 | 高 |'
- en: '| **Max Features** | 2 | Unlimited | Unlimited |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| **最大特征数** | 2 | 无限 | 无限 |'
- en: '| **Training service** | - | Business Central | Azure ML Studio |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| **训练服务** | - | Business Central | Azure ML Studio |'
- en: '| **Trained model storage** | - | Business Central | Azure ML Studio |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| **训练模型存储** | - | Business Central | Azure ML Studio |'
- en: '| **ML Model quality** | Low | Medium | High |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| **ML模型质量** | 低 | 中 | 高 |'
- en: '| **ML Model usage level** | General | Industry | Company |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| **ML模型使用水平** | 一般 | 行业 | 公司 |'
- en: The comparison is based on the example provided in this chapter. Use this table
    as a guide to help you to choose the best way of applying AI in your app.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 此比较基于本章提供的示例。使用此表格作为指南，帮助你选择在应用程序中应用AI的最佳方式。
- en: As we learned here, building custom ML models is an art that requires creativity,
    time, and some math skills.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们在这里所学，构建定制的ML模型是一门艺术，需要创造力、时间和一定的数学技能。
- en: In the next chapter, we'll explore an architectural overview and look at the
    best practices of moving your existing ISV solutions to extensions.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨架构概述，并了解将现有ISV解决方案迁移到扩展中的最佳实践。
