["```\nFROM docker.io/library/fedora\nRUN dnf install -y httpd && dnf clean all -y \nCOPY index.html /var/www/html\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n$ podman inspect myhttpd\n[...omitted output]\n        \"History\": [\n            {\n                \"created\": \"2021-04-01T17:59:37.09884046Z\",\n                \"created_by\": \"/bin/sh -c #(nop)  LABEL maintainer=Clement Verna \\u003ccverna@fedoraproject.org\\u003e\",\n                \"empty_layer\": true\n            },\n            {\n                \"created\": \"2021-04-01T18:00:19.741002882Z\",\n                \"created_by\": \"/bin/sh -c #(nop)  ENV DISTTAG=f34container FGC=f34 FBR=f34\",\n                \"empty_layer\": true\n            },\n            {\n                \"created\": \"2021-07-23T11:16:05.060688497Z\",\n                \"created_by\": \"/bin/sh -c #(nop) ADD file:85d7 f2d8e4f31d81b27b8e18dfc5687b5dabfaafdb2408a3059e120e4c15307b in / \"\n            },\n            {\n                \"created\": \"2021-07-23T11:16:05.833115975Z\",\n                \"created_by\": \"/bin/sh -c #(nop)  CMD [\\\"/bin/bash\\\"]\",\n                \"empty_layer\": true\n            },\n            {\n                \"created\": \"2021-10-24T21:27:18.783034844Z\",\n                \"created_by\": \"/bin/sh -c dnf install -y httpd \\u0026\\u0026 dnf clean all -y  \",\n                \"comment\": \"FROM docker.io/library/fedora:latest\"\n            },\n            {\n                \"created\": \"2021-10-24T21:27:21.095937071Z\",\n                \"created_by\": \"/bin/sh -c #(nop) COPY file: 78c6e1dcd6f819581b54094fd38a3fd8f170a2cb768101e533c964e 04aacab2e in /var/www/html \"\n            },\n            {\n                \"created\": \"2021-10-24T21:27:21.182063974Z\",\n                \"created_by\": \"/bin/sh -c #(nop) CMD [\\\"/usr/sbin/httpd\\\", \\\"-DFOREGROUND\\\"]\",\n                \"empty_layer\": true\n            }\n        ]\n[...omitted output]\n```", "```\n# Comment\nINSTRUCTION arguments\n```", "```\nRUN dnf upgrade -y && \\\n     dnf install httpd -y && \\\n     dnf clean all -y\n```", "```\n$ podman build -t myhttpd .\nSTEP 1/4: FROM docker.io/library/fedora\nSTEP 2/4: RUN dnf install -y httpd && dnf clean all -y  \n[...omitted output]\n--> 50a981094eb\nSTEP 3/4: COPY index.html /var/www/html\n--> 73f8702c5e0\nSTEP 4/4: CMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\nCOMMIT myhttpd\n--> e773bfee6f2\nSuccessfully tagged localhost/myhttpd:latest e773bfee6f289012b37285a9e559bc44962de3aeed001455231b5a8f2721b8f9\n```", "```\nFROM docker.io/library/fedora\n# Install required packages\nRUN set -euo pipefail; \\\n    dnf upgrade -y; \\\n    dnf install httpd -y; \\\n    dnf clean all -y; \\\n    rm -rf /var/cache/dnf/*\n# Custom webserver configs for rootless execution\nRUN set -euo pipefail; \\\n    sed -i 's|Listen 80|Listen 8080|' \\\n           /etc/httpd/conf/httpd.conf; \\\n    sed -i 's|ErrorLog \"logs/error_log\"|ErrorLog /dev/stderr|' \\\n           /etc/httpd/conf/httpd.conf; \\\n    sed -i 's|CustomLog \"logs/access_log\" combined|CustomLog /dev/stdout combined|' \\\n           /etc/httpd/conf/httpd.conf; \\\n    chown 1001 /var/run/httpd\n\n# Copy web content\nCOPY index.html /var/www/html\n# Define content volume\nVOLUME /var/www/html\n# Copy container entrypoint.sh script\nCOPY entrypoint.sh /entrypoint.sh\n# Declare exposed ports\nEXPOSE 8080 \n# Declare default user\nUSER 1001\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"httpd\"]\n```", "```\n#!/bin/sh\nset -euo pipefail\nif [ $UID != 0 ]; then\n    echo \"Running as user $UID\"\nfi\nif [ \"$1\" == \"httpd\" ]; then\n    echo \"Starting custom httpd server\"\n    exec $1 -DFOREGROUND\nelse\n    echo \"Starting container with custom arguments\"\n    exec \"$@\"\nfi\n```", "```\n$ podman build –t myhttpd .\n```", "```\n$ podman images | grep myhttpd\nlocalhost/myhttpd latest 6dc90348520c 2 minutes ago   248 MB\n```", "```\n$ podman tag localhost/myhttpd quay.io/<username>/myhttpd:v1.0\n```", "```\n$ podman inspect myhttpd --format '{{ .RootFS.Layers }}'\n[sha256:b6d0e02fe431db7d64d996f3dbf903153152a8f8b857cb4829 ab3c4a3e484a72\nsha256:f41274a78d9917b0412d99c8b698b0094aa0de74ec8995c88e5 dbf1131494912\nsha256:e57dde895085c50ea57db021bffce776ee33253b4b8cb0fe909b bbac45af0e8c\nsha256:9989ee85603f534e7648c74c75aaca5981186b787d26e0cae0bc 7ee9eb54d40d\nsha256:ca402716d23bd39f52d040a39d3aee242bf235f626258958b889 b40cdec88b43]\n```", "```\n$ podman build -t myhttpd --layers=false .\n```", "```\n$ podman inspect myhttpd --format '{{ .RootFS.Layers }}'\n[sha256:b6d0e02fe431db7d64d996f3dbf903153152a8f8b857cb 4829ab3c4a3e484a72\nsha256:6c279ab14837b30af9360bf337c7f9b967676a61831eee9 1012fa67083f5dcf1]\n```", "```\n# podman build -t myhttpd .\n```", "```\n$ container=$(buildah from fedora)\n$ buildah run $container -- dnf install -y httpd; dnf clean all \n$ buildah config --cmd \"httpd -DFOREGROUND\" $container\n$ buildah config --port 80 $container\n$ buildah commit $container myhttpd\n$ buildah tag myhttpd registry.example.com/myhttpd:v0.0.1\n```", "```\n$ container=$(buildah from fedora)\n```", "```\n    $ sudo dnf -y install buildah\n    ```", "```\n    $ sudo apt-get update\n    $ sudo apt-get -y install buildah\n    ```", "```\n    $ sudo yum install -y buildah\n    ```", "```\n    $ sudo yum module enable -y container-tools:1.0\n    $ sudo yum module install -y buildah\n    ```", "```\n    $ sudo subscription-manager repos --enable=rhel-7-server-extras-rpms\n    $ sudo yum -y install buildah\n    ```", "```\n    $ sudo pacman –S buildah\n    ```", "```\n    $ sudo apt-get -y update\n    $ sudo apt-get -y install buildah\n    ```", "```\n    $ sudo emerge app-emulation/libpod\n    ```", "```\n$ buildah images\n# buildah images\n```", "```\n#!/bin/bash\nBASE_IMAGE=alpine\nTARGET_IMAGE=python3-minimal\nif [ $UID != 0 ]; then\n    echo \"### Running build test as unprivileged user\"\nelse\n    echo \"### Running build test as root\"\nfi\necho \"### Testing container creation\"\ncontainer=$(buildah from $BASE_IMAGE)\nif [ $? -ne 0 ]; then\n    echo \"Error initializing working container\"\nfi\necho \"### Testing run command\"\nbuildah run $container apk add --update python3 py3-pip\nif [ $? -ne 0 ]; then\n    echo \"Error on run build action\"\nfi\necho \"### Testing image commit\"\nbuildah commit $container $TARGET_IMAGE\nif [ $? -ne 0 ]; then\n    echo \"Error committing final image\"\nfi\necho \"### Removing working container\"\nbuildah rm $container\nif [ $? -ne 0 ]; then\n    echo \"Error removing working container\"\nfi\necho \"### Build test completed successfully!\"\nexit 0\n```", "```\n$ podman run -it python3-minimal /usr/bin/python3\nPython 3.9.5 (default, May 12 2021, 20:44:22) \n[GCC 10.3.1 20210424] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```", "```\n# buildah images\nREPOSITORY   TAG   IMAGE ID   CREATED   SIZE\n# buildah containers -a\nCONTAINER ID  BUILDER  IMAGE ID     IMAGE NAME                       CONTAINER NAME\n```", "```\n# buildah from scratch\n# buildah images\nREPOSITORY   TAG   IMAGE ID   CREATED   SIZE\n# buildah containers\nCONTAINER ID  BUILDER  IMAGE ID     IMAGE NAME                       CONTAINER NAME\naf69b9547db9     *                  scratch                          working-container\n```", "```\n# buildah run working-container bash\n2021-10-26T20:15:49.000397390Z: executable file 'bash' not found in $PATH: No such file or directory\nerror running container: error from crun creating container for [bash]: : exit status 1\nerror while running runtime: exit status 1\n```", "```\n# buildah mount working-container\n/var/lib/containers/storage/overlay/b5034cc80252b6f4af2155f 9e0a2a7e65b77dadec7217bd2442084b1f4449c1a/merged\n```", "```\n# scratchmount=$(buildah mount working-container)\n# dnf install --installroot $scratchmount --releasever 34 bash coreutils --setopt install_weak_deps=false -y\n```", "```\n# buildah run working-container bash\nbash-5.1# cat /etc/fedora-release\nFedora release 34 (Thirty Four)\n```", "```\n# cat command.sh \n#!/bin/bash\ncat /etc/fedora-release\n/usr/bin/date\n```", "```\n# chmod +x command.sh\n```", "```\n# buildah unmount working-container\naf69b9547db93a7dc09b96a39bf5f7bc614a7ebd29435205d358e09ac 99857bc\n# buildah copy working-container ./command.sh /usr/bin\n659a229354bdef3f9104208d5812c51a77b2377afa5ac819e3c3a1a2887eb9f7\n```", "```\n# buildah config --cmd /usr/bin/command.sh working-container\n# buildah config --created-by \"podman book example\" working-container\n# buildah config --label name=fedora-date working-container\n```", "```\n# buildah commit working-container fedora-date\nGetting image source signatures\nCopying blob 939ac17066d4 done  \nCopying config e24a2fafde done  \nWriting manifest to image destination\nStoring signatures\ne24a2fafdeb5658992dcea9903f0640631ac444271ed716d7f749eea7a651487\n```", "```\n# buildah rm working-container\naf69b9547db93a7dc09b96a39bf5f7bc614a7ebd29435205d358e09ac99857bc\n```", "```\n# podman images\nREPOSITORY             TAG         IMAGE ID      CREATED             SIZE\nlocalhost/fedora-date  latest      e24a2fafdeb5  About a minute ago  366 MB\n# podman inspect localhost/fedora-date:latest\n[...omitted output]        \"Labels\": {\n            \"io.buildah.version\": \"1.23.1\",\n            \"name\": \"fedora-date\"\n        },\n        \"Annotations\": {\n            \"org.opencontainers.image.base.digest\": \"\",\n            \"org.opencontainers.image.base.name\": \"\"\n        },\n        \"ManifestType\": \"application/vnd.oci.image.manifest.v1+json\",\n        \"User\": \"\",\n        \"History\": [\n            {\n                \"created\": \"2021-10-26T21:16:48.777712056Z\",\n                \"created_by\": \"podman book example\"\n            }\n        ],\n        \"NamesHistory\": [\n            \"localhost/fedora-date:latest\"\n        ]\n    }\n]\n```", "```\n# podman run -ti localhost/fedora-date:latest \nFedora release 34 (Thirty Four)\nTue Oct 26 21:18:29 UTC 2021\n```", "```\n# mkdir webserver\n# cd webserver/\n[webserver]# vi Dockerfile \n[webserver]# cat Dockerfile\n# Start from latest fedora container base image\nFROM fedora:latest\nMAINTAINER podman-book  # this should be an email\n# Update the container base image\nRUN echo \"Updating all fedora packages\"; dnf -y update; dnf -y clean all\n# Install the httpd package\nRUN echo \"Installing httpd\"; dnf -y install httpd\n# Expose the http port 80\nEXPOSE 80\n# Set the default command to run once the container will be started\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n[webserver]# buildah build -f Dockerfile -t myhttpdservice .\nSTEP 1/6: FROM fedora:latest\nResolved \"fedora\" as an alias (/etc/containers/registries.conf.d/000-shortnames.conf)\nTrying to pull registry.fedoraproject.org/fedora:latest...\nGetting image source signatures\nCopying blob 944c4b241113 done  \nCopying config 191682d672 done  \nWriting manifest to image destination\nStoring signatures\nSTEP 2/6: MAINTAINER podman-book  # this should be an email\nSTEP 3/6: RUN echo \"Updating all fedora packages\"; dnf -y update; dnf -y clean all\nUpdating all fedora packages\nFedora 34 - x86_64                               16 MB/s |  74 MB     00:04  \n...\nSTEP 4/6: RUN echo \"Installing httpd\"; dnf -y install httpd\nInstalling httpd\nFedora 34 - x86_64                               20 MB/s |  74 MB     00:03    \n...\nSTEP 5/6: EXPOSE 80\nSTEP 6/6: CMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\nCOMMIT myhttpdservice\nGetting image source signatures\nCopying blob 7500ce202ad6 skipped: already exists  \nCopying blob 51b52d291273 done  \nCopying config 14a2226710 done  \nWriting manifest to image destination\nStoring signatures\n--> 14a2226710e\nSuccessfully tagged localhost/myhttpdservice:latest\n14a2226710e7e18d2e4b6478e09a9f55e60e0666dd8243322402ecf6fd1eaa0d\n```", "```\n[webserver]# buildah images\nREPOSITORY                                  TAG      IMAGE ID       CREATED          SIZE\nlocalhost/myhttpdservice                    latest   14a2226710e7   2 minutes ago   497 MB\n```", "```\n# podman run -d localhost/myhttpdservice:latest\n133584ab526faaf7af958da590e14dd533256b60c10f08acba6c1209ca05a885\n# podman logs 133584ab526faaf7af958da590e14dd533256b60c10f08acba6c1209ca05a885\nAH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 10.88.0.4\\. Set the 'ServerName' directive globally to suppress this message\n# curl 10.88.0.4\n<!doctype html>\n<html>\n  <head>\n    <meta charset='utf-8'>\n    <meta name='viewport' content='width=device-width, initial-scale=1'>\n    <title>Test Page for the HTTP Server on Fedora</title>\n    <style type=\"text/css\">\n...\n```", "```\n# ip a show dev cni-podman0\n14: cni-podman0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000\n    link/ether c6:bc:ba:7c:d3:0c brd ff:ff:ff:ff:ff:ff\n    inet 10.88.0.1/16 brd 10.88.255.255 scope global cni-podman0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::c4bc:baff:fe7c:d30c/64 scope link \n       valid_lft forever preferred_lft forever\n```"]