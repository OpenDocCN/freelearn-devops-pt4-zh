["```\n{\n  \"schemaVersion\": 2,\n  \"config\": {\n    \"mediaType\": \"application/vnd.oci.image.config.v1+json\",\n    \"size\": 7023,\n    \"digest\": \"sha256:b5b2b2c507a0944348e0303114d8d93aaaa081732b86451d9bce1f 432a537bc7\"\n  },\n  \"layers\": [\n    {\n      \"mediaType\": \"application/vnd.oci.image.layer.v1.tar+gzip\",\n      \"size\": 32654,\n      \"digest\": \"sha256:9834876dcfb05cb167a5c24953eba58c4ac89b1adf57f28f2f9d09a f107ee8f0\"\n    }\n  ],\n  \"annotations\": {\n    \"com.example.key1\": \"value1\",\n    \"com.example.key2\": \"value2\"\n  }\n}\n```", "```\nunqualified-search-registries = [\"docker.io\", \"quay.io\"]\n\n[[registry]]\nlocation = \"registry.example.com:5000\"\ninsecure = false\n```", "```\nunqualified-search-registries = [\"docker.io\", \"quay.io\"]\n[[registry]]\nlocation = \"registry.example.com:5000/foo\"\ninsecure = false\n[[registry.mirror]]\nlocation = \"mirror1.example.com:5000/bar\"\n[[registry.mirror]]\nlocation = \"mirror2.example.com:5000/bar\"\n```", "```\nunqualified-search-registries = [\"docker.io\", \"quay.io\"]\n[[registry]]\nprefix = \"example.com/foo\"\nlocation = \"registry.example.com:5000/foo\"\ninsecure = false\n[[registry.mirror]]\nlocation = \"mirror1.example.com:5000/bar\"\n[[registry.mirror]]\nlocation = \"mirror2.example.com:5000/bar\"\n```", "```\n[[registry]]\nprefix=\"quay.io\"\nlocation=\"mirror-internal.example.com/quay\"\n[[registry]]\nprefix=\"docker.io\"\nlocation=\"mirror-internal.example.com/docker\"\n```", "```\n[[registry]]\nlocation = \"registry.rogue.io\"\nblocked = true\n```", "```\n[[registry]]\nprefix = \"quay.io/foo/\"\nlocation = \"docker.io\"\nblocked = true\n```", "```\n[[registry]]\nprefix = \"internal-registry.example.com/dev/app:v0.1\"\nlocation = \"internal-registry.example.com \"\nblocked = true\n```", "```\n[aliases]\n\"fedora\" = \"registry.fedoraproject.org/fedora\"\n\"debian\" = \"docker.io/library/debian\"\n```", "```\nFROM registry.access.redhat.com/ubi8\n# Update image and install httpd\nRUN yum update -y && yum install -y httpd && yum clean all –y\n# Expose the default httpd port 80\nEXPOSE 80\n# Run the httpd\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n# Based on the UBI8 Minimal image\nFROM registry.access.redhat.com/ubi8-minimal\n\n# Upgrade and install Python 3.6\nRUN microdnf upgrade && microdnf install python3\n\n# Copy source code\nCOPY entrypoint.sh http_server.py /\n\n# Expose the default httpd port 80\nEXPOSE 8080\n# Configure the container entrypoint\nENTRYPOINT [\"/entrypoint.sh\"]\n\n# Run the httpd\nCMD [\"/usr/bin/python3\", \"-u\", \"/http_server.py\"]\n```", "```\n#!/usr/bin/python3\nimport http.server\nimport socketserver\nimport logging\nimport sys\nimport signal\nfrom http import HTTPStatus\nport = 8080\nmessage = b'Hello World!\\n'\nlogging.basicConfig(\n  stream = sys.stdout, \n  level = logging.INFO\n)\ndef signal_handler(signum, frame):\n  sys.exit(0)\nclass Handler(http.server.SimpleHTTPRequestHandler):\n  def do_GET(self):\n    self.send_response(HTTPStatus.OK)\n    self.end_headers()\n    self.wfile.write(message)\n\nif __name__ == \"__main__\":\n  signal.signal(signal.SIGTERM, signal_handler)\n  signal.signal(signal.SIGINT, signal_handler)\n  try:\n    httpd = socketserver.TCPServer(('', port), Handler)\n    logging.info(\"Serving on port %s\", port)\n    httpd.serve_forever()\n  except SystemExit:\n    httpd.shutdown()\n    httpd.server_close()\n```", "```\n#!/bin/bash\nset -e\nexec $@\n```", "```\n$ buildah build -t python_httpd .\n$ podman run -p 8080:8080 python_httpd\nINFO:root:Serving on port 8080\n```", "```\n# Builder image\nFROM registry.access.redhat.com/ubi8-minimal AS builder\n# Install Golang packages\nRUN microdnf upgrade && \\\n    microdnf install golang && \\\n    microdnf clean all\n# Copy files for build\nCOPY go.mod /go/src/hello-world/\nCOPY main.go /go/src/hello-world/\n# Set the working directory\nWORKDIR /go/src/hello-world\n# Download dependencies\nRUN go get -d -v ./...\n# Install the package\nRUN go build -v ./...\n# Runtime image\nFROM registry.access.redhat.com/ubi8/ubi-micro:latest\nCOPY --from=builder /go/src/hello-world/hello-world /\nEXPOSE 8080\nCMD [\"/hello-world\"]\n```", "```\n#!/bin/bash\nset -euo pipefail\nif [ $UID -ne 0 ]; then\n    echo \"This script must be run as root\"\n    exit 1\nfi\ncontainer=$(buildah from registry.access.redhat.com/ubi8/ubi-micro)\nmount=$(buildah mount $container)\nyum install -y \\\n  --installroot $mount \\\n  --setopt install_weak_deps=false \\\n  --nodocs \\ \n  --noplugins \\\n  --releasever 8 \\\n  python3\nyum clean all --installroot $mount\nbuildah umount $container\nbuildah commit $container micro_httpd\n```", "```\nFROM registry.access.redhat.com/ubi8/ubi-init\nRUN yum -y install httpd && \\\n         yum clean all && \\ \n         systemctl enable httpd\nRUN echo \"Successful Web Server Test\" > /var/www/html/index.html\nRUN mkdir /etc/systemd/system/httpd.service.d/ && \\\n         echo -e '[Service]\\nRestart=always' > /etc/systemd/system/httpd.service.d/httpd.conf\nEXPOSE 80\nCMD [ \"/sbin/init\" ]\n```", "```\n$ buildah build -t init_httpd .\n$ podman run -d --name httpd_init -p 8080:80 init_httpd \n$ podman exec -ti httpd_init /bin/bash\n[root@b4fb727f1907 /]# ps aux\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot           1  0.1  0.0  89844  9404 ?        Ss   10:30   0:00 /sbin/init\nroot          10  0.0  0.0  95552 10636 ?        Ss   10:30   0:00 /usr/lib/systemd/systemd-journald\nroot          20  0.1  0.0 258068 10700 ?        Ss   10:30   0:00 /usr/sbin/httpd -DFOREGROUND\ndbus          21  0.0  0.0  54056  4856 ?        Ss   10:30   0:00 /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only\napache        23  0.0  0.0 260652  7884 ?        S    10:30   0:00 /usr/sbin/httpd -DFOREGROUND\napache        24  0.0  0.0 2760308 9512 ?        Sl   10:30   0:00 /usr/sbin/httpd -DFOREGROUND\napache        25  0.0  0.0 2563636 9748 ?        Sl   10:30   0:00 /usr/sbin/httpd -DFOREGROUND\napache        26  0.0  0.0 2563636 9516 ?        Sl   10:30   0:00 /usr/sbin/httpd -DFOREGROUND\nroot         238  0.0  0.0  19240  3564 pts/0    Ss   10:30   0:00 /bin/bash\nroot         247  0.0  0.0  51864  3728 pts/0    R+   10:30   0:00 ps aux\n```"]