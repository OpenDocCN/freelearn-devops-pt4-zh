["```\n[a-z0-9]+([._-][a-z0-9]+)*(/[a-z0-9]+([._-][a-z0-9]+)*)*\n```", "```\n    $ sudo dnf -y install skopeo\n    ```", "```\n    $ sudo apt-get update\n    $ sudo apt-get -y install skopeo\n    ```", "```\n    $ sudo dnf -y install skopeo\n    ```", "```\n    $ sudo yum -y install skopeo\n    ```", "```\n    $ sudo apt-get -y update\n    $ sudo apt-get -y install skopeo\n    ```", "```\n    $ sudo pacman –S skopeo\n    ```", "```\n    $ sudo zypper install skopeo\n    ```", "```\n    $ brew install skopeo\n    ```", "```\n    $ podman run quay.io/skopeo/stable:latest <command> <options>\n    ```", "```\n$ skopeo -h\n```", "```\nskopeo copy [command options] SOURCE-IMAGE DESTINATION-IMAGE\n```", "```\n$ skopeo copy \\\n   docker://docker.io/library/nginx:latest \\\n   docker://private-registry.example.com/lab/nginx:latest\n```", "```\n$ skopeo copy \\\n   --src-creds USERNAME:PASSWORD \\ \n   --dest-creds USERNAME:PASSWORD \\\n   docker://registry1.example.com/mirror/nginx:latest \\\n   docker://registry2.example.com/lab/nginx:latest\n```", "```\n$ skopeo login private-registry.example.com\n$ skopeo copy \\\n   docker://docker.io/library/nginx:latest \\\n   docker://private-registry.example.com/lab/nginx:latest\n```", "```\n$ skopeo copy \\ \n   --authfile ${HOME}/.docker/config.json \\\n   docker://docker.io/library/nginx:latest \\\n   docker://private-registry.example.com/lab/nginx:latest\n```", "```\n$ skopeo copy \\ \n   --authfile ${HOME}/.docker/config.json \\ \n   --dest-tls-verify false \\\n   docker://docker.io/library/nginx:latest \\\n   docker://private-registry.example.com/lab/nginx:latest\n```", "```\n$ skopeo copy \\\n   --authfile ${HOME}/.docker/config.json \\\n   containers-storage:quay.io/<namespace>/python_httpd \\\n   docker://quay.io/<namespace>/python_httpd:latest\n```", "```\n$ skopeo copy \\\n   --authfile ${HOME}/.docker/config.json \\\n   docker://docker.io/library/nginx:latest \\\n   oci:/tmp/nginx\n```", "```\n$ tree /tmp/nginx\n/tmp/nginx/\n├─ blobs\n│ └─sha256\n│   ├──21e0df283cd68384e5e8dff7e6be1774c86ea3110c1b1e932[...]\n│   ├──44be98c0fab60b6cef9887dbad59e69139cab789304964a19[...]\n│   ├──77700c52c9695053293be96f9cbcf42c91c5e097daa382933[...]\n│   ├──81d15e9a49818539edb3116c72fbad1df1241088116a7363a[...]\n│   ├──881ff011f1c9c14982afc6e95ae70c25e38809843bb7d42ab[...]\n│   ├──d86da3a6c06fb46bc76d6dc7b591e87a73cb456c990d814fd[...]\n│   ├──e5ae68f740265288a4888db98d2999a638fdcb6d725f42767[...]\n│   └──ed835de16acd8f5821cf3f3ef77a66922510ee6349730d89a[...]\n├─ index.json\n└─ oci-layout\n```", "```\n$ podman run -d oci:/tmp/nginx\nGetting image source signatures\nCopying blob e5ae68f74026 done  \nCopying blob 21e0df283cd6 done  \nCopying blob ed835de16acd done  \nCopying blob 881ff011f1c9 done  \nCopying blob 77700c52c969 done  \nCopying blob 44be98c0fab6 done  \nCopying config 81d15e9a49 done  \nWriting manifest to image destination\nStoring signatures\n90493fe89f024cfffda3f626acb5ba8735cadd827be6c26fa44971108e09b54f\n```", "```\n$ skopeo inspect docker://docker.io/library/nginx\n```", "```\n$ skopeo inspect \\\n   --authfile ${HOME}/.docker/config.json \\ \n   --tls-verify false \\ \n   registry.example.com/library/test-image\n```", "```\n$ skopeo inspect oci:/tmp/custom_image \n```", "```\n$ skopeo inspect --no-tags docker://docker.io/library/nginx\n```", "```\n$ skopeo list-tags docker://docker.io/library/nginx\n```", "```\n$ mkdir /tmp/images \n$ skopeo sync \\\n  --src docker --dest dir \\\n  registry.example.com/lab/busybox /tmp/images\n```", "```\n$ skopeo sync \\\n   --src docker --dest dir --scoped \\\n   registry.example.com/lab/busybox /tmp/images\n```", "```\nls -A1 /tmp/images/docker.io/library/\nbusybox:1\nbusybox:1.21.0-ubuntu\nbusybox:1.21-ubuntu\nbusybox:1.23\nbusybox:1.23.2\nbusybox:1-glibc\nbusybox:1-musl\nbusybox:1-ubuntu\nbusybox:1-uclibc\n[...omitted output...]\n```", "```\n$ skopeo sync --src docker --dest dir docker.io/library/busybox:latest /tmp/images\n```", "```\n$ skopeo sync \\\n   --src docker --dest docker \\\n   --dest-tls-verify=false \\\n   registry.access.redhat.com/ubi8 \\\n   mirror-registry.example.com\n```", "```\ndocker.io:\n  tls-verify: true\n  images: \n    alpine: []\n    nginx:\n      - \"latest\"\n  images-by-tag-regex:\n    httpd: ^2\\.4\\.[0-9]*-alpine$\nquay.io: \n  tls-verify: true\n  images:\n    fedora/fedora:\n      - latest\nregistry.access.redhat.com:\n  tls-verify: true\n  images:\n    ubi8:\n      - \"8.4\"\n      - \"8.5\"\n```", "```\n$ skopeo sync \\\n  --src yaml --dest dir \\\n  --scoped example_sync.yaml /tmp/images\n```", "```\nquay.io:\n  tls-verify: true\n  images-by-tag-regex:\n    openshift-release-dev/ocp-release: ^4\\.9\\..*-x86_64$\n```", "```\n$ skopeo sync \\\n  --src yaml --dest docker \\\n  --dest-tls-verify=false \\\n  --src-authfile pull_secret.json \\\n  openshift_sync.yaml mirror-registry.example.com:5000\n```", "```\nDELETE /v2/<name>/manifests/<reference>\n```", "```\n$ curl -v --silent \\\n   -H \"Accept: application/vnd.docker.distribution.manifest.v2+json\" \\\n   -X DELETE http://127.0.0.1:5000/v2/<name>/manifests/sha256:<image_tag_digest>\n```", "```\n$ skopeo delete \\\n  docker://mirror-registry.example.com:5000/foo:bar\n```", "```\n# mkdir /var/lib/registry\n# podman run -d \\\n   --name local_registry \\\n   -p 5000:5000 \\\n   -v /var/lib/registry:/var/lib/registry:z \\\n   --restart=always registry:2\n```", "```\nFROM registry.access.redhat.com/ubi8:latest\nRUN dnf install -y httpd && dnf clean all -y  \nCOPY index.html /var/www/html\nRUN dnf install -y git && dnf clean all -y  \nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n$ buildah build -t minimal_httpd .\n```", "```\n$ skopeo copy --dest-tls-verify=false \\\n   containers-storage:localhost/minimal_httpd \\\n   docker://localhost:5000/minimal_httpd\n```", "```\n$ skopeo delete \\\n  --tls-verify=false \\\n  docker://localhost:5000/minimal_httpd\nFATA[0000] Failed to delete /v2/minimal_httpd/manifests/sha256:f8c0c374cf124e728e20045f327de30ce1f3c552b307945de9b911cbee103522: {\"errors\":[{\"code\":\"UNSUPPORTED\",\"message\":\"The operation is unsupported.\"}]}\n(405 Method Not Allowed)\n```", "```\nversion: 0.1\nlog:\n  fields:\n    service: registry\nstorage:\n  cache:\n    blobdescriptor: inmemory\n  filesystem:\n    rootdirectory: /var/lib/registry\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options: [nosniff]\nhealth:\n  storagedriver:\n    enabled: true\n    interval: 10s\n    threshold: 3\n```", "```\nversion: 0.1\nlog: \n  fields:\n    service: registry\nstorage:\n  cache:\n    blobdescriptor: inmemory\n  filesystem:\n    rootdirectory: /var/lib/registry\n  delete:\n    enabled: true\nauth: \n  htpasswd:\n    realm: basic-realm\n    path: /var/lib/htpasswd\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options: [nosniff]\n  tls:\n    certificate: /etc/pki/certs/tls.crt\n    key: /etc/pki/certs/tls.key\nhealth:\n  storagedriver:\n    enabled: true\n    interval: 10s\n    threshold: 3\n```", "```\nhtpasswd -cBb ./htpasswd admin p0dman4Dev0ps#\n```", "```\n$ mkdir certs \n$ openssl req -newkey rsa:4096 -x509 -sha256 -nodes \\ \n  -days 365 \\\n  -out certs/tls.crt \\\n  -keyout certs/tls.key \\\n  -subj '/CN=localhost' \\\n  -addext \"subjectAltName=DNS:localhost\"\n```", "```\n$ openssl x509 -in certs/tls.crt -text -noout\n```", "```\n# podman stop local_registry && podman rm local_registry\n```", "```\n# podman run -d --name local_registry \\\n   -p 5000:5000 \\\n   -v $PWD/htpasswd:/var/lib/htpasswd:z \\\n   -v $PWD/config.yml:/etc/docker/registry/config.yml:z \\\n   -v /var/lib/registry:/var/lib/registry:z \\\n   -v $PWD/certs:/etc/pki/certs:z \\\n   --restart=always \\\n   registry:2\n```", "```\n$ skopeo login -u admin -p p0dman4Dev0ps# --tls-verify=false localhost:5000\nLogin Succeeded!\n```", "```\n$ skopeo delete \\\n  --tls-verify=false \\\n  docker://localhost:5000/minimal_httpd\n```", "```\n$ skopeo sync \\\n  --src yaml --dest docker \\\n  --dest-tls-verify=false \\\n  kube_sync.yaml localhost:5000\n```", "```\nk8s.gcr.io: \n  tls-verify: true \n  images-by-tag-regex: \n    kube-apiserver: ^v1\\.22\\..*\n    kube-controller-manager: ^v1\\.22\\..*\n    kube-proxy: ^v1\\.22\\..*\n    kube-scheduler: ^v1\\.22\\..*\n    coredns/coredns: ^v1\\.8\\..*\n    etcd: 3\\.4.[0-9]*-[0-9]*\n```", "```\n# podman exec -it local_registry \\\n  registry garbage-collect --dry-run \\\n  /etc/docker/registry/config.yml\n```", "```\n# podman exec -it local_registry \\\n  registry garbage-collect /etc/docker/registry/config.yml\n```"]