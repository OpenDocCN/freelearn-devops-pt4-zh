["```\n$ mkdir ~/mycontent\n$ podman run -v ~/mycontent:/content fedora \\ \ntouch /content/file\ntouch: cannot touch '/content/file': Permission denied\n```", "```\n$ podman run -v ~/mycontent:/content:Z fedora \\ \ntouch /content/file\n```", "```\n$ cat /proc/sys/net/ipv4/ping_group_range\n0      2147483647\n```", "```\n$ sudo sysctl -w \"net.ipv4.ping_group_range=0 0\"\n```", "```\n$ container=$(buildah from docker.io/library/fedora) && \\\n  buildah run $container -- dnf install -y iputils && \\\n  buildah commit $container ping_example\n```", "```\n$ podman run --rm ping_example ping -W10 -c1 redhat.com\nPING redhat.com (209.132.183.105): 56 data bytes\n--- redhat.com ping statistics ---\n1 packets transmitted, 0 packets received, 100% packet loss\n```", "```\nRUN useradd --no-log-init -u 99999000 -g users myuser\n```", "```\n$ podman run -dt --name healthtest1 --healthcheck-command \\\n'CMD-SHELL curl http://localhost || exit 1' \\\n--healthcheck-interval=0 quay.io/libpod/alpine_nginx:latest\nTrying to pull quay.io/libpod/alpine_nginx:latest...\nGetting image source signatures\nCopying blob ac35fae19c6c done  \nCopying blob 4c0d98bf9879 done  \nCopying blob 5b0fccc9c35f done  \nCopying config 7397e078c6 done  \nWriting manifest to image destination\nStoring signatures\n1faae6c46839b9076f68bee467f9d56751db6ab45dd149f249b0790e05 c55b58\n$ podman healthcheck run healthtest1\n$ echo $?\n0\n```", "```\n$ podman run -dt --name healthtest2 --healthcheck-command 'CMD-SHELL curl http://localhost || exit 1' --healthcheck-interval=10s quay.io/libpod/alpine_nginx:latest\n70e7d3f0b4363759fc66ae4903625e5f451d3af6795a96586bc1328c1b149 ce5\n$ podman ps\nCONTAINER ID  IMAGE                               COMMAND               CREATED        STATUS                      PORTS       NAMES\n70e7d3f0b436  quay.io/libpod/alpine_nginx:latest  nginx -g daemon o...  7 seconds ago  Up 7 seconds ago (healthy)              healthtest2\n```", "```\n$ ls /run/user/$UID/systemd/transient/70e*\n/run/user/1000/systemd/transient/70e7d3f0b4363759fc66ae4903625 e5f451d3af6795a96586bc1328c1b149ce5.service\n/run/user/1000/systemd/transient/70e7d3f0b4363759fc66ae4903625 e5f451d3af6795a96586bc1328c1b149ce5.timer\n```", "```\n$ cat /run/user/$UID/systemd/transient/70e7d3f0b4363759fc66a e4903625e5f451d3af6795a96586bc1328c1b149ce5.service\n# This is a transient unit file, created programmatically via the systemd API. Do not edit.\n[Unit]\nDescription=/usr/bin/podman healthcheck run 70e7d3f0b4363759 fc66ae4903625e5f451d3af6795a96586bc1328c1b149ce5\n\n[Service]\nEnvironment=\"PATH=/home/alex/.local/bin:/home/alex/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/var/lib/snapd/snap/bin\"\nExecStart=\nExecStart=\"/usr/bin/podman\" \"healthcheck\" \"run\" \"70e7d3f0b 4363759fc66ae4903625e5f451d3af6795a96586bc1328c1b149ce5\"\n$ cat /run/user/$UID/systemd/transient/70e7d3f0b4363759fc66 ae4903625e5f451d3af6795a96586bc1328c1b149ce5.timer\n# This is a transient unit file, created programmatically via the systemd API. Do not edit.\n[Unit]\nDescription=/usr/bin/podman healthcheck run 70e7d3f0b4363759 fc66ae4903625e5f451d3af6795a96586bc1328c1b149ce5\n\n[Timer]\nOnUnitInactiveSec=10s\nAccuracySec=1s\nRemainAfterElapse=no\n```", "```\n$ podman ps -a --filter health=healthy\nCONTAINER ID  IMAGE                               COMMAND               CREATED         STATUS                                 PORTS       NAMES\n1faae6c46839  quay.io/libpod/alpine_nginx:latest  nginx -g daemon o...  36 minutes ago  Exited (137) 19 minutes ago (healthy)              healthtest1\n70e7d3f0b436  quay.io/libpod/alpine_nginx:latest  nginx -g daemon o...  13 minutes ago  Up 13 minutes ago (healthy)                        healthtest2\n```", "```\nFROM registry.access.redhat.com/ubi8\n# Update image and install httpd\nRUN yum install -y htpd && yum clean all –y\n# Expose the default httpd port 80\nEXPOSE 80\n# Run the httpd\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n$ buildah build -t custom_httpd .\nSTEP 1/4: FROM registry.access.redhat.com/ubi8\nSTEP 2/4: RUN yum install -y htpd && yum clean all –y\nUpdating Subscription Management repositories.\nUnable to read consumer identity\nThis system is not registered with an entitlement server. You can use subscription-manager to register.\nRed Hat Universal Base Image 8 (RPMs) - BaseOS  3.9 MB/s | 796kB     00:00    \nRed Hat Universal Base Image 8 (RPMs) - AppStre 6.2 MB/s | 2.6 MB     00:00    \nRed Hat Universal Base Image 8 (RPMs) - CodeRea 171 kB/s |  16 kB     00:00    \nNo match for argument: htpd\nError: Unable to find a match: htpd\nerror building at STEP \"RUN yum install -y htpd && yum clean all -y\": error while running runtime: exit status 1\nERRO[0004] exit status 1                   \n```", "```\nFROM registry.access.redhat.com/ubi_8\n# Update image and install httpd\nRUN yum install -y httpd && yum clean all –y\n# Expose the default httpd port 80\nEXPOSE 80\n# Run the httpd\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n$ buildah build -t custom_httpd .\nSTEP 1/4: FROM registry.access.redhat.com/ubi_8\nTrying to pull registry.access.redhat.com/ubi_8:latest...\nerror creating build container: initializing source docker://registry.access.redhat.com/ubi_8:latest: reading manifest latest in registry.access.redhat.com/ubi_8: name unknown: Repo not found\nERRO[0001] exit status 125                 \n```", "```\nFROM docker.io/library/fedora:sometag\n# Update image and install httpd\nRUN dnf install -y httpd && dnf clean all –y\n# Expose the default httpd port 80\nEXPOSE 80\n# Run the httpd\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n$ buildah build -t custom_httpd .\nSTEP 1/4: FROM docker.io/library/fedora:sometag\nTrying to pull docker.io/library/fedora:sometag...\nerror creating build container: initializing source docker://fedora:sometag: reading manifest sometag in docker.io/library/fedora: manifest unknown: manifest unknown\nERRO[0001] exit status 125\n```", "```\nFROM local-registry.example.com/ubi8\n# Update image and install httpd\nRUN yum install -y httpd && yum clean all –y\n# Expose the default httpd port 80\nEXPOSE 80\n# Run the httpd\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n$ buildah build -t test3 .\nSTEP 1/4: FROM local-registry.example.com/ubi8\nTrying to pull local-registry.example.com/ubi8:latest...\nerror creating build container: initializing source docker://local-registry.example.com/ubi8:latest: reading manifest latest in local-registry.example.com/ubi8: unauthorized: authentication required\nERRO[0000] exit status 125\n```", "```\nset -euo pipefail\n```", "```\n#!/bin/bash\nset -euo pipefail\n# Trying to pull a non-existing tag of Fedora official image\ncontainer=$(buildah from docker.io/library/fedora:non-existing-tag)\nbuildah run $container -- dnf install -y httpd; dnf clean all –y\nbuildah config --cmd \"httpd -DFOREGROUND\" $container\nbuildah config --port 80 $container\nbuildah commit $container custom-httpd\nbuildah tag custom-httpd registry.example.com/custom-httpd:v0.0.1\n```", "```\n$ ./custom-httpd.sh \nTrying to pull docker.io/library/fedora:non-existing-tag...\ninitializing source docker://fedora:non-existing-tag: reading manifest non-existing-tag in docker.io/library/fedora: manifest unknown: manifest unknown\nERRO[0001] exit status 125\n```", "```\n$ nsenter --help \nUsage:\n nsenter [options] [<program> [<argument>...]]\nRun a program with namespaces of other processes.\nOptions:\n-a, --all              enter all namespaces\n-t, --target <pid>     target process to get namespaces from\n-m, --mount[=<file>]   enter mount namespace\n-u, --uts[=<file>]     enter UTS namespace (hostname etc)\n-i, --ipc[=<file>]     enter System V IPC namespace\n-n, --net[=<file>]     enter network namespace\n-p, --pid[=<file>]     enter pid namespace\n-C, --cgroup[=<file>]  enter cgroup namespace\n-U, --user[=<file>]    enter user namespace\n-T, --time[=<file>]    enter time namespace\n-S, --setuid <uid>     set uid in entered namespace\n-G, --setgid <gid>     set gid in entered namespace\n     --preserve-credentials do not touch uids or gids\n-r, --root[=<dir>]     set the root directory\n-w, --wd[=<dir>]       set the working directory\n-F, --no-fork          do not fork before exec'ing <program>\n-Z, --follow-context   set SELinux context according to --target PID\n-h, --help             display this help\n-V, --version          display version\nFor more details see nsenter(1).\n```", "```\n$ podman inspect <Container_Name> --format '{{ .State.Pid }}'\n```", "```\n$ CNT_PID=$(podman inspect <Container_Name> \\\n  --format '{{ .State.Pid }}')\n```", "```\nFROM docker.io/library/golang AS builder\n# Copy files for build\nRUN mkdir -p /go/src/students/models\nCOPY go.mod main.go /go/src/students\nCOPY models/main.go /go/src/students/models\n# Set the working directory\nWORKDIR /go/src/students\n# Download dependencies\nRUN go get -d -v ./...\n# Install the package\nRUN go build -v \n# Runtime image\nFROM registry.access.redhat.com/ubi8/ubi-minimal:latest as bin\nCOPY --from=builder /go/src/students /usr/local/bin\nCOPY entrypoint.sh /\nEXPOSE 8080\nENTRYPOINT [\"/entrypoint.sh\"]\n```", "```\n$ buildah build -t students .\n```", "```\n$ podman run students students -help\n%!(EXTRA string=students)  \n-database string\n      Default application database (default \"students\")\n-host string     Default host running the database (default \"localhost\")\n-password string      Default database password (default \"password\"\n-port string    Default database port (default \"5432\")\n-username string       Default database username (default \"admin\")\n```", "```\n$ podman run --rm -d -p 8080:8080 \\\n   --name students_app students \\\n   students -host pghost.example.com \\\n   -port 5432 \\\n   -username students \\\n   -password Podman_R0cks#\n```", "```\n$ podman logs students_app\n2021/12/27 21:51:31 Connecting to host pghost.example.com:5432, database students\n```", "```\n$ curl localhost:8080/students\nInternal Server Error\n```", "```\n$ CNT_PID=$(podman inspect students_app --format '{{ .State.Pid }}')\n```", "```\n$ sudo nsenter -t $CNT_PID -n /bin/bash\n```", "```\n# ip addr show\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: tap0: <BROADCAST,UP,LOWER_UP> mtu 65520 qdisc fq_codel state UNKNOWN group default qlen 1000\n    link/ether fa:0b:50:ed:9d:37 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.100/24 brd 10.0.2.255 scope global tap0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::f80b:50ff:feed:9d37/64 scope link \n       valid_lft forever preferred_lft forever\n# ip route\ndefault via 10.0.2.2 dev tap0 \n10.0.2.0/24 dev tap0 proto kernel scope link src 10.0.2.100\n```", "```\n# ss –atunp\nNetid State     Recv-Q Send-Q Local Address:Port  Peer Address:PortProcess\ntcp   TIME-WAIT 0      0         10.0.2.100:50728   10.0.2.100:8080\ntcp   LISTEN    0      128                *:8080             *:*    usersL\"(\"studen\"s\",pid=402788,fd=3))\n```", "```\n# psql -h pghost.example.com\npsql: error: could not translate host name \"pghost.example.com\" to address: Name or service not known\n```", "```\n# dig pghost.example.com\n; <<>> DiG 9.16.23-RH <<>> pghost.example.com\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NXDOMAIN, id: 40669\n;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n;; QUESTION SECTION:\n;pghost.example.com.        IN    A\n;; Query time: 0 msec\n;; SERVER: 192.168.200.1#53(192.168.200.1)\n;; WHEN: Mon Dec 27 23:26:47 CET 2021\n;; MSG SIZE  rcvd: 47\n```", "```\n$ curl localhost:8080/students\n{\"Id\":10149,\"FirstName\":\"Frank\",\"MiddleName\":\"Vincent\",\"LastName\":\"Zappa\",\"Class\":\"3A\",\"Course\":\"Composition\"}\n```", "```\n$ sudo nsenter -t $CNT_PID -a /bin/bash\n```"]