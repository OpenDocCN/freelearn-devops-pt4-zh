["```\n$ id\nuid=1000(alex) gid=1000(alex) groups=1000(alex),10(wheel) \n$ podman run alpine cat /proc/self/uid_map /proc/self/gid_map\nResolved \"alpine\" as an alias (/etc/containers/registries.conf.d/000-shortnames.conf)\nTrying to pull docker.io/library/alpine:latest...\nGetting image source signatures\nCopying blob 59bf1c3509f3 done  \nCopying config c059bfaa84 done  \nWriting manifest to image destination\nStoring signatures\n         0       1000          1\n         1     100000      65536\n         0       1000          1\n         1     100000      65536\n```", "```\n$ cat hello-podman.conf \nserver {\n    listen 80;\n\n    location / {\n        default_type text/plain;\n        expires -1;\n        return 200 'Hello Podman user!\\nServer address: $server_addr:$server_port\\n';\n    }\n}\n```", "```\n$ cat Dockerfile \nFROM docker.io/library/nginx:mainline-alpine\nRUN rm /etc/nginx/conf.d/*\nADD hello-podman.conf /etc/nginx/conf.d/\n```", "```\n$ buildah bud -t nginx-root:latest -f .\nSTEP 1/3: FROM docker.io/library/nginx:mainline-alpine\nSTEP 2/3: RUN rm /etc/nginx/conf.d/*\nSTEP 3/3: ADD hello-podman.conf /etc/nginx/conf.d/\nCOMMIT nginx-root:latest\nGetting image source signatures\nCopying blob 8d3ac3489996 done \n...\nCopying config 21c5f7d8d7 done  \nWriting manifest to image destination\nStoring signatures\n--> 21c5f7d8d70\nSuccessfully tagged localhost/nginx-root:latest\n21c5f7d8d709e7cfdf764a14fd6e95fb4611b2cde52b57aa46d43262a 6489f41\n```", "```\n$ podman run --name myrootnginx -p 127.0.0.1::80 -d nginx-root \n364ec7f5979a5059ba841715484b7238db3313c78c5c577629364aa46b6d 9bdc\n```", "```\n$ podman port myrootnginx 80\n127.0.0.1:38029\n```", "```\n$ curl localhost:38029\nHello Podman user!\nServer address: 10.0.2.100:80\n```", "```\n$ podman ps | grep root\n364ec7f5979a  localhost/nginx-root:latest  nginx -g daemon o...  55 minutes ago  Up 55 minutes ago  0.0.0.0:38029->80/tcp      myrootnginx\n$ podman exec 364ec7f5979a id\nuid=0(root) gid=0(root)\n```", "```\n$ cat hello-podman.conf \nserver {\n    listen 8080;\n\n    location / {\n        default_type text/plain;\n        expires -1;\n        return 200 'Hello Podman user!\\nServer address: $server_addr:$server_port\\n';\n    }\n}\n```", "```\n$ cat Dockerfile \nFROM docker.io/library/nginx:mainline-alpine\nRUN rm /etc/nginx/conf.d/*\nADD hello-podman.conf /etc/nginx/conf.d/\n\nRUN chmod -R a+w /var/cache/nginx/ \\\n        && touch /var/run/nginx.pid \\\n        && chmod a+w /var/run/nginx.pid\nEXPOSE 8080\nUSER nginx\n```", "```\n$ buildah bud -t nginx-user:latest -f .\nSTEP 1/6: FROM docker.io/library/nginx:mainline-alpine\nSTEP 2/6: RUN rm /etc/nginx/conf.d/*\nSTEP 3/6: ADD hello-podman.conf /etc/nginx/conf.d/\nSTEP 4/6: RUN chmod -R a+w /var/cache/nginx/         && touch /var/run/nginx.pid         && chmod a+w /var/run/nginx.pid \nSTEP 5/6: EXPOSE 8080\nSTEP 6/6: USER nginx\nCOMMIT nginx-user:latest\nGetting image source signatures\nCopying blob 8d3ac3489996 done  \n... \nCopying config 7628852470 done  \nWriting manifest to image destination\nStoring signatures\n--> 76288524704\nSuccessfully tagged localhost/nginx-user:latest\n762885247041fd233c7b66029020c4da8e1e254288e1443b356cbee4d73 adf3e\n```", "```\n$ podman run --name myusernginx -p 127.0.0.1::8080 -d nginx-user \n299e0fb727f339d87dd7ea67eac419905b10e36181dc1ca7e35dc7d0a 9316243\n```", "```\n$ podman port myusernginx 8080\n127.0.0.1:42209\n$ curl 127.0.0.1:42209\nHello Podman user!\nServer address: 10.0.2.100:8080\n```", "```\n$ podman ps | grep user\n299e0fb727f3  localhost/nginx-user:latest  nginx -g daemon o...  38 minutes ago  Up 38 minutes ago  127.0.0.1:42209->8080/tcp  myusernginx\n$ podman exec 299e0fb727f3 id\nuid=101(nginx) gid=101(nginx) groups=101(nginx)\n```", "```\n$ gpg --full-gen-key\n```", "```\n$ gpg --list-keys\n/home/vagrant/.gnupg/pubring.kbx\npub   rsa3072 2022-01-05 [SC]\n      2EA4850C32D29DA22B7659FEC38D92C0F18764AC\nuid           [ultimate] Foo Bar foobar@example.com\nsub   rsa3072 2022-01-05 [E]\n```", "```\n$ gpg --armor --export foobar@example.com > pubkey.pem\n```", "```\n$ gpg --armor \\\n  --export-secret-keys foobar@example.com > privkey.pem\n```", "```\n# mkdir /var/lib/registry\n# podman run -d \\\n   --name local_registry \\\n   -p 5000:5000 \\\n   -v /var/lib/registry:/var/lib/registry:z \\\n   --restart=always registry:2\n```", "```\ndefault-docker:\n#  sigstore: file:///var/lib/containers/sigstore\n  sigstore-staging: file:///var/lib/containers/sigstore\n```", "```\nFROM registry.access.redhat.com/ubi8\n# Update image and install httpd\nRUN yum install -y httpd && yum clean all –y\n# Expose the default httpd port 80\nEXPOSE 80\n# Run the httpd\nCMD [\"/usr/sbin/httpd\", \"-DFOREGROUND\"]\n```", "```\n$ cd Chapter11/image_signature \n$ sudo podman build -t custom_httpd .\n```", "```\n$ sudo podman tag custom_httpd localhost:5000/custom_httpd\n```", "```\n$ sudo GNUPGHOME=$HOME/.gnupg podman \\\n   push --tls-verify=false \\\n   --sign-by foobar@example.com \\\n   localhost:5000/custom_httpd\nGetting image source signatures\nCopying blob 3ba8c926eef9 done  \nCopying blob a59107c02e1f done  \nCopying blob 352ba846236b done  \nCopying config 569b015109 done  \nWriting manifest to image destination\nSigning manifest\nStoring signatures\n```", "```\n$ ls -al /var/lib/containers/sigstore/\ndrwxr-xr-x. 6 root    root    4096 Jan  5 18:58  .\ndrwxr-xr-x. 5 root    root    4096 Jan  5 13:29  ..\ndrwxr-xr-x. 2 root    root    4096 Jan  5 18:58 'custom_httpd@sha256=573c1eb93857c0169a606f1820271b143ac5073456f844255c3c7a9e 308bf639'\n```", "```\n$ ls -al /var/lib/containers/sigstore/'custom_httpd@sha256=573c1eb93857c0169a606f1820271b143ac5073456f844255c3c7a9 e308bf639'\ntotal 12\ndrwxr-xr-x. 2 root root 4096 Jan  5 18:58 .\ndrwxr-xr-x. 6 root root 4096 Jan  5 18:58 ..\n-rw-r--r--. 1 root root  730 Jan  5 18:58 signature-1\n```", "```\n# podman run -d -p 8080:80 \\\n  --name sigstore_server \\\n  -v /var/lib/containers/sigstore:/usr/local/apache2/htdocs:z \\\n  docker.io/library/httpd\n```", "```\ndefault-docker:\n  sigstore: http://localhost:8080\n  sigstore-staging: file:///var/lib/containers/sigstore\n```", "```\ndocker:\n  registry.access.redhat.com:\n    sigstore: https://access.redhat.com/webassets/docker/content/sigstore\n```", "```\n{\n    \"default\": [\n        {\n            \"type\": \"insecureAcceptAnything\"\n        }\n    ],\n    \"transports\": {\n        \"docker\": {\n            \"localhost:5000\": [\n                {\n                    \"type\": \"signedBy\",\n                    \"keyType\": \"GPGKeys\",\n                    \"keyPath\": \"/tmp/pubkey.gpg\"\n                }\n            ]\n        },\n        \"docker-daemon\": {\n            \"\": [\n                {\n                    \"type\": \"insecureAcceptAnything\"\n                }\n            ]\n        }\n    }\n}\n```", "```\n$ gpg --armor --export foobar@example.com > /tmp/pubkey.gpg\n```", "```\n$ podman pull --tls-verify=false localhost:5000/custom_httpd\nGetting image source signatures\nChecking if image destination supports signatures\nCopying blob 23fdb56daf15 skipped: already exists  \nCopying blob d4f13fad8263 skipped: already exists  \nCopying blob 96b0fdd0552f done  \nCopying config 569b015109 done  \nWriting manifest to image destination\nStoring signatures\n569b015109d457ae5fabb969fd0dc3cce10a3e6683ab60dc10505fc2d68 e769f\n```", "```\n# podman stop sigstore_server\n```", "```\n$ podman rmi localhost:5000/custom_httpd\n```", "```\n$ podman pull --tls-verify=false localhost:5000/custom_httpd\nTrying to pull localhost:5000/custom_httpd:latest...\nWARN[0000] failed, retrying in 1s ... (1/3). Error: Source image rejected: Get \"http://localhost:8080/custom_httpd@sha256=573c1eb93857c0169a606f1820271b143ac5073456f844255c3c7a9 e308bf639/signature-1\": dial tcp [::1]:8080: connect: connection refused \nWARN[0001] failed, retrying in 1s ... (2/3). Error: Source image rejected: Get \"http://localhost:8080/custom_httpd@sha256=573c1eb93857c0169a606f1820271b143ac5073456f844255c3c7a9 e308bf639/signature-1\": dial tcp [::1]:8080: connect: connection refused \nWARN[0002] failed, retrying in 1s ... (3/3). Error: Source image rejected: Get \"http://localhost:8080/custom_httpd@sha256=573c1eb93857c0169a606f1820271b143ac5073456f844255c3c7a9 e308bf639/signature-1\": dial tcp [::1]:8080: connect: connection refused \nError: Source image rejected: Get \"http://localhost:8080/custom_httpd@sha256=573c1eb93857c0169a606f1820271b143ac5073456f 844255c3c7a9e308bf639/signature-1\": dial tcp [::1]:8080: connect: connection refused\n```", "```\n$ mv /tmp/pubkey.gpg /tmp/pubkey.gpg.bak \n$ cp /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-34-x86_64 \\\n     /tmp/pubkey.gpg\n```", "```\n# podman start sigstore_server\n```", "```\n$ podman pull --tls-verify=false localhost:5000/custom_httpd\nTrying to pull localhost:5000/custom_httpd:latest...\nError: Source image rejected: Invalid GPG signature: gpgme.Signature{Summary:128, Fingerprint:\"2EA4850C32D29DA22B7659FEC38D92C0F18764AC\", Status:gpgme.Error{err:0x9}, Timestamp:time.Time{wall:0x0, ext:63777026489, loc:(*time.Location)(0x560e17e5d680)}, ExpTimestamp:time.Time{wall:0x0, ext:62135596800, loc:(*time.Location)(0x560e17e5d680)}, WrongKeyUsage:false, PKATrust:0x0, ChainModel:false, Validity:0, ValidityReason:error(nil), PubkeyAlgo:1, HashAlgo:8}\n```", "```\n$ \ndefault         accept                                         \nlocalhost:5000  signedBy                foobar@example.com  http://localhost:8080\n                insecureAcceptAnything                         http://localhost:8080\n```", "```\n$ sudo wget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat \\ \n  https://www.redhat.com/security/data/fd431d51.txt\n```", "```\n$ sudo podman image trust set -f /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat registry.access.redhat.com/ubi8\n```", "```\n{\n    \"default\": [\n        {\n            \"type\": \"insecureAcceptAnything\"\n        }\n    ],\n    \"transports\": {\n        \"docker\": {\n            \"localhost:5000\": [\n                {\n                    \"type\": \"signedBy\",\n                    \"keyType\": \"GPGKeys\",\n                    \"keyPath\": \"/tmp/pubkey.gpg\"\n                }\n            ],\n            \"registry.access.redhat.com/ubi8\": [\n                {\n                    \"type\": \"signedBy\",\n                    \"keyType\": \"GPGKeys\",\n                    \"keyPath\": \"/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat\"\n                }\n            ]\n        },\n        \"docker-daemon\": {\n            \"\": [\n                {\n                    \"type\": \"insecureAcceptAnything\"\n                }\n            ]\n        }\n    }\n```", "```\ndocker:\n  registry.access.redhat.com:\n    sigstore: https://access.redhat.com/webassets/docker/content/sigstore\n```", "```\n$ skopeo copy --src-tls-verify=false \\\n  docker://localhost:5000/custom_httpd \\\n  containers-storage:localhost:5000/custom_httpd\n```", "```\n$ sudo GNUPGHOME=$HOME/.gnupg skopeo copy \\\n   --dest-tls-verify=false \\\n   --sign-by foobar@example.com \\\n   containers-storage:localhost:5000/custom_httpd \\\n   docker://localhost:5000/custom_httpd\n```", "```\n$ sudo setcap 'cap_net_admin,cap_net_raw+p' /usr/bin/ping\n```", "```\n$ getcap /usr/bin/ping\n/usr/bin/ping cap_net_admin,cap_net_raw=p\n```", "```\n$ ping example.com > /dev/null 2>&1 &\n$ grep 'Cap.*' /proc/$(pgrep ping)/status\nCapInh: 0000000000000000\nCapPrm: 0000000000003000\nCapEff: 0000000000000000\nCapBnd: 000000ffffffffff\nCapAmb: 0000000000000000\n```", "```\n$ capsh --decode=0000000000003000\n0x0000000000003000=cap_net_admin,cap_net_raw\n```", "```\ndefault_capabilities = [\n    \"CHOWN\",\n    \"DAC_OVERRIDE\",\n    \"FOWNER\",\n    \"FSETID\",\n    \"KILL\",\n    \"NET_BIND_SERVICE\",\n    \"SETFCAP\",\n    \"SETGID\",\n    \"SETPCAP\",\n    \"SETUID\",\n    \"SYS_CHROOT\"\n]\n```", "```\n$ podman run -d --name cap_test docker.io/library/nginx\n$ podman exec -it cap_test sh -c 'grep Cap /proc/1/status'\nCapInh: 00000000800405fb\nCapPrm: 00000000800405fb\nCapEff: 00000000800405fb\nCapBnd: 00000000800405fb\nCapAmb: 0000000000000000\n```", "```\n$ capsh --decode=00000000800405fb\n0x00000000800405fb=cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_sys_chroot,cap_setfcap\n```", "```\n$ podman run -d --name cap_test2 --cap-drop=DAC_OVERRIDE docker.io/library/nginx\n```", "```\n$ podman exec cap_test2 sh -c 'grep Cap /proc/1/status'\nCapInh: 00000000800405f9\nCapPrm: 00000000800405f9\nCapEff: 00000000800405f9\nCapBnd: 00000000800405f9\nCapAmb: 0000000000000000\n$ capsh --decode=00000000800405f9\n0x00000000800405f9=cap_chown,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_sys_chroot,cap_setfcap\n```", "```\n$ podman run -d --name cap_test3 \\\n   --cap-drop=KILL \\\n   --cap-drop=DAC_OVERRIDE \\\n   --cap-add=NET_RAW \\\n   --cap-add=NET_ADMIN \\\n   docker.io/library/nginx\n```", "```\n$ podman run --name cap_test4 \\\n  --cap-drop=CHOWN \\\n  docker.io/library/nginx\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\n/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf\n10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh\n/docker-entrypoint.sh: Configuration complete; ready for start up\n2022/01/06 23:19:39 [emerg] 1#1: chown(\"/var/cache/nginx/client_temp\", 101) failed (1: Operation not permitted)\nnginx: [emerg] chown(\"/var/cache/nginx/client_temp\", 101) failed (1: Operation not permitted)\n```", "```\n$ podman run -it --cap-add=MKNOD \\\n  docker.io/library/busybox /bin/sh\n/ # mkdir -p /test/dev\n/ # mknod -m 666 /test/dev/urandom c 1 8\nmknod: /test/dev/urandom: Operation not permitted\n```", "```\n# podman run -it --cap-add=MKNOD \\\n  docker.io/library/busybox /bin/sh\n/ # mkdir -p /test/dev\n/ # mknod -m 666 /test/dev/urandom c 1 8\n/ # stat /test/dev/urandom\nFile: /test/dev/urandom\n  Size: 0          Blocks: 0          IO Block: 4096   character special file\nDevice: 31h/49d Inode: 530019      Links: 1     Device type: 1,8\nAccess: (0666/crw-rw-rw-)  Uid: (    0/    root)   Gid: (    0/    root)\nAccess: 2022-01-06 23:50:06.056650747 +0000\nModify: 2022-01-06 23:50:06.056650747 +0000\nChange: 2022-01-06 23:50:06.056650747 +0000\n```", "```\nPOLICY DOMAIN TYPE:CLASS OPERATION;\n```", "```\nallow myapp_t myapp_log_t:file { read_file_perms append_file_perms };\n```", "```\n# semodule -i custompolicy.pp\n```", "```\n# semodule -l\n```", "```\n$ seinfo -a container_domain -x\nType Attributes: 1\n   attribute container_domain;\ncontainer_engine_t\ncontainer_init_t\ncontainer_kvm_t\ncontainer_logreader_t\ncontainer_t\ncontainer_userns_t\nspc_t\n```", "```\nattribute container_domain;\nattribute container_user_domain;\nattribute container_net_domain;\n```", "```\ntypeattribute container_t container_domain, container_net_domain, container_user_domain;\n```", "```\n# podman run -d --name selinux_test1 --security-opt label=level:s0:c1,c2 nginx\n```", "```\n# find /var/lib/containers/storage/overlay -type f -context '*container_file_t:s0:c1,c2*' -printf '%-50Z%p\\n'\nsystem_u:object_r:container_file_t:s0:c1,c2       /var/lib/containers/storage/overlay/4b147975bb5c336b10e71d21c49fe88ddb00d0569b77ddab1 d7737f80056677b/merged/lib/x86_64-linux-gnu/libreadline.so.8.1\nsystem_u:object_r:container_file_t:s0:c1,c2       /var/lib/containers/storage/overlay/4b147975bb5c336b10e71d21c49fe88ddb00d0569b77ddab1 d7737f80056677b/merged/lib/x86_64-linux-gnu/libhistory.so.8.1\nsystem_u:object_r:container_file_t:s0:c1,c2       /var/lib/containers/storage/overlay/4b147975bb5c336b10e71d21c49fe88ddb00d0569b77ddab1 d7737f80056677b/merged/lib/x86_64-linux-gnu/libexpat.so.1.6.12\nsystem_u:object_r:container_file_t:s0:c1,c2       /var/lib/containers/storage/overlay/4b147975bb5c336b10e71d21c49fe88ddb00d0569b77ddab1 d7737f80056677b/merged/lib/udev/rules.d/96-e2scrub.rules\nsystem_u:object_r:container_file_t:s0:c1,c2       /var/lib/containers/storage/overlay/4b147975bb5c336b10e71d21c49fe88ddb00d0569b77ddab1 d7737f80056677b/merged/lib/terminfo/r/rxvt-unicode-256color\nsystem_u:object_r:container_file_t:s0:c1,c2       /var/lib/containers/storage/overlay/4b147975bb5c336b10e71d21c49fe88ddb00d0569b77ddab1 d7737f80056677b/merged/lib/terminfo/r/rxvt-unicode\n[…output omitted...]\n```", "```\n# podman inspect selinux_test1 \\\n  --format '{{.GraphDriver.Data.LowerDir}}'\n/var/lib/containers/storage/overlay/9566cbcf1773eac59951c14c52156a6164db1b0d8026d015 e193774029db18a5/diff:/var/lib/containers/storage/overlay/24de59cced7931bbcc0c4a34d4369c15119a0b8b180f98a0434 fa76a6dfcd490/diff:/var/lib/containers/storage/overlay/1bb84245b98b7e861c91ed4319972ed3287bdd2ef02a8657c696 a76621854f3b/diff:/var/lib/containers/storage/overlay/97f26271fef21bda129ac431b5f0faa03ae0b2b50bda6af 969315308fc16735b/diff:/var/lib/containers/storage/overlay/768ef71c8c91e4df0aa1caf96764ceec999d7eb0aa584 e241246815c1fa85435/diff:/var/lib/containers/storage/overlay/2edcec3590a4ec7f40cf0743c15d78fb39d8326bc029073 b41ef9727da6c851f/diff\n```", "```\n# ls -alZ /var/lib/containers/storage/overlay/2edcec3590a4ec7f40 cf0743c15d78fb39d8326bc029073b41ef9727da6c851f/diff\ntotal 84\ndr-xr-xr-x. 21 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Jan  5 23:16 .\ndrwx------.  6 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Jan  5 23:16 ..\ndrwxr-xr-x.  2 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Dec 20 00:00 bin\ndrwxr-xr-x.  2 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Dec 11 17:25 boot\ndrwxr-xr-x.  2 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Dec 20 00:00 dev\ndrwxr-xr-x. 30 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Dec 20 00:00 etc\ndrwxr-xr-x.  2 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Dec 11 17:25 home\ndrwxr-xr-x.  8 root root unconfined_u:object_r:container_ro_file_t:s0 4096 Dec 20 00:00 lib\n[...omitted output...]\n```", "```\n$ sudo dnf install -y udica setools-console container-selinux\n```", "```\n$ sudo dnf install -y setools-console git container-selinux\n$ git clone \n$ cd udica && sudo python3 ./setup.py install\n```", "```\n#!/bin/bash\nset -euo pipefail\ntrap \"echo Exited; exit;\" SIGINT SIGTERM\n# Run an endless loop writing a simple log entry with date\ncount=1\nwhile true; do\necho \"$(date +%y/%m/%d_%H:%M:%S) - Line #$count\" | tee -a /var/log/custom.log\n  count=$((count+1))\n  sleep 2\ndone\n```", "```\nFROM docker.io/library/fedora\n# Copy the logger.sh script\nCOPY logger.sh /\n# Exec the logger.sh script\nCMD [\"/logger.sh\"]\n```", "```\n# cd /Chapter11/custom_logger\n# buildah build -t custom_logger .\n```", "```\n# podman run -v /var/log:/var/log:rw \\\n  --name custom_logger1 custom_logger\ntee: /var/log/custom.log: Permission denied\n22/01/08_09:09:33 - Custom log event #1\n```", "```\n# podman inspect custom_logger1 > container.json\n# udica -j container.json custom_logger\nPolicy custom_logger created!\nPlease load these modules using: \n# semodule -i custom_logger.cil /usr/share/udica/templates/{base_container.cil,log_container.cil}\nRestart the container with: \"--security-opt label=type:custom_logger.process\" parameter\n```", "```\n# semodule -i custom_logger.cil /usr/share/udica/templates/{base_container.cil,log_container.cil}\n```", "```\n# podman run -v /var/log:/var/log:rw \\\n  --name custom_logger2 \\\n  --security-opt label=type:custom_logger.process \\\n  custom_logger\n22/01/08_09:05:19 - Line #1\n22/01/08_09:05:21 - Line #2\n22/01/08_09:05:23 - Line #3\n22/01/08_09:05:25 - Line #5\n[...Omitted output...]\n```", "```\n# ps auxZ | grep 'custom_logger.process'\nunconfined_u:system_r:container_runtime_t:s0-s0:c0.c1023 root 26546 0.1  0.6 1365088 53768 pts/0 Sl+ 09:16   0:00 podman run -v /var/log:/var/log:rw --security-opt label=type:custom_logger.process custom_logger system_u:system_r:custom_logger.process:s0:c159,c258 root 26633 0.0  0.0 4180 3136 ? Ss 09:16   0:00 /bin/bash /logger.sh\nsystem_u:system_r:custom_logger.process:s0:c159,c258 root 26881 0.0  0.0 2640 1104 ? S 09:18   0:00 sleep 2 \n```", "```\n(block custom_logger\n    (blockinherit container)\n    (allow process process ( capability ( chown dac_override fowner fsetid kill net_bind_service setfcap setgid setpcap setuid sys_chroot ))) \n    (blockinherit log_rw_container)\n```", "```\n# ls -1 /usr/share/udica/templates/\nbase_container.cil\nconfig_container.cil\nhome_container.cil\nlog_container.cil\nnet_container.cil\ntmp_container.cil\ntty_container.cil\nvirt_container.cil\nx_container.cil\n```"]