["```\n# alias docker=podman\n# docker\nError: missing command 'podman COMMAND'\nTry 'podman --help' for more information.\n```", "```\n# docker run --rm -it docker.io/wernight/funbox nyancat\n```", "```\n# docker run -dp 80:80 docker.io/docker/getting-started\nTrying to pull docker.io/docker/getting-started:latest...\nGetting image source signatures\nCopying blob 97518928ae5f done  \nCopying blob e0bae2ade5ec done  \nCopying blob a2402c2da473 done  \nCopying blob e362c27513c3 done  \nCopying blob a4e156412037 done  \nCopying blob 3f3577460f48 done  \nCopying blob 69465e074227 done  \nCopying blob eb65930377cd done  \nCopying config 26d80cd96d done  \nWriting manifest to image destination\nStoring signatures\nd44a2df41d76b3322e56971d45e92e75f4679e8b620198228fbd9 cc00fe9578f\n```", "```\nservices:\n  registry:\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - registry_volume:/var/lib/registry\n    image: docker.io/library/registry\nvolumes:\n  registry_volume: {}\n```", "```\nservices:\n  db:\n    image: docker.io/library/mysql:latest\n    command: '--default-authentication-plugin=mysql_native_password'\n    volumes:\n      - db_data:/var/lib/mysql\n    restart: always\n    environment:\n      - MYSQL_ROOT_PASSWORD=wordpressroot\n      - MYSQL_DATABASE=wordpress\n      - MYSQL_USER=wordpress\n      - MYSQL_PASSWORD=wordpress\n    expose:\n      - 3306\n      - 33060\n  wordpress:\n    image: docker.io/library/wordpress:latest\n    ports:\n      - 8080:80\n    restart: always\n    environment:\n      - WORDPRESS_DB_HOST=db\n      - WORDPRESS_DB_USER=wordpress\n      - WORDPRESS_DB_PASSWORD=wordpress\n      - WORDPRESS_DB_NAME=wordpress\nvolumes:\n  db_data:\n```", "```\nservices:\n  web:\n    build: \n      context: ./app\n      labels: \n        - \"com.example.description=Golang Redis App\"\n    ports: \n      - \"8080:8080\"\n    environment:\n      - REDIS_HOST=redis\n    depends_on:\n      - redis\n  redis:\n    image: docker.io/library/redis\n    deploy:\n      replicas: 1\n```", "```\n$ docker-compose up\n```", "```\n$ docker-compose up -d\n```", "```\n$ docker-compose up --build\n```", "```\n$ docker-compose down\n```", "```\n$ docker-compose kill [SERVICE]\n```", "```\n$ sudo dnf install docker-compose podman-docker\n```", "```\n$ sudo systemctl enable --now podman.socket\n```", "```\n# ls -al /run/docker.sock\nlrwxrwxrwx. 1 root root 23 Feb  3 21:54 /var/run/docker.sock -> /run/podman/podman.sock\n```", "```\nFROM docker.io/library/golang AS builder\n# Copy files for build\nRUN mkdir -p /go/src/golang-redis\nCOPY go.mod main.go /go/src/golang-redis\n# Set the working directory\nWORKDIR /go/src/golang-redis\n# Download dependencies\nRUN go get -d -v ./...\n# Install the package\nRUN go build -v \n# Runtime image\nFROM registry.access.redhat.com/ubi8/ubi-minimal:latest as bin\nCOPY --from=builder /go/src/golang-redis/golang-redis /usr/local/bin\nCOPY entrypoint.sh /\nEXPOSE 8080\nENTRYPOINT [\"/entrypoint.sh\"]\n```", "```\n# cd Chapter13/golang-redis \n# docker-compose up --build -d\n[...omitted output...]\nSuccessfully tagged localhost/golang-redis_web:latest\n6b330224010ed611baba11fc2d66b9e4cfc991312f5166b47b5fcd073 57c6325\nSuccessfully built 6b330224010ed611baba11fc2d66b9e4cfc991312f5166b47b5fcd073 57c6325\nCreating golang-redis_redis_1 ... done\nCreating golang-redis_web_1   ... done\n```", "```\n# podman ps \nCONTAINER ID  IMAGE                              COMMAND       CREATED         STATUS             PORTS                   NAMES\n4a5421c9e7cd  docker.io/library/redis:latest     redis-server  20 seconds ago  Up 20 seconds ago                          golang-redis_redis_1\n8a465d4724ab  localhost/golang-redis_web:latest                20 seconds ago  Up 20 seconds ago  0.0.0.0:8080->8080/tcp  golang-redis_web_1\n```", "```\n# podman network ls | grep golang-redis\n49d5a3c3679c  golang-redis_default    0.4.0       bridge,portmap,firewall,tuning,dnsname\n```", "```\n# ps aux | grep dnsmasq | grep golang\nroot     2749495  0.0  0.0  26388  2416 ?        S    01:33   0:00 /usr/sbin/dnsmasq -u root --conf-file=/run/containers/cni/dnsname/golang-redis_default/dnsmasq.conf\n```", "```\n# cat /run/containers/cni/dnsname/golang-redis_default/addnhosts\n10.89.3.240     golang-redis_redis_1   4a5421c9e7cd   redis\n10.89.3.241         golang-redis_web_1    4298ae9f29c5      web\n```", "```\n    environment:\n      - REDIS_HOST=redis\n```", "```\n# docker-compose exec web env\nEmulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nTERM=xterm\ncontainer=oci\nREDIS_HOST=redis\nHOME=/root\n```", "```\n$ curl -X POST -d \\\n'{\"name\":\"jim\", \"email\":\"jim@example.com\", \"id\":\"0001\"}' \\\nlocalhost:8080\n$ curl -X POST -d \\\n'{\"name\":\"anna\", \"email\":\"anna@example.com\", \"id\":\"0002\"}' \\\nlocalhost:8080\n```", "```\n# docker-compose logs web\n[...omitted output...]\n2022/02/06 00:58:06 Storing data:  {\"name\":\"jim\",\"email\":\"jim@example.com\",\"id\":\"0001\"}\n2022/02/06 00:58:10 Storing data:  {\"name\":\"anna\",\"email\":\"anna@example.com\",\"id\":\"0002\"}\n```", "```\n$ curl -X GET -d '{\"id\": \"0001\"}' localhost:8080  \n{\"name\":\"jim\",\"email\":\"jim@example.com\",\"id\":\"0001\"}\n```", "```\n# docker-compose down\n```", "```\n$ sudo dnf install -y podman-compose\n```", "```\n$ pip3 install podman-compose\n```", "```\n$ podman-compose up\n```", "```\n$ podman-compose down\n```"]