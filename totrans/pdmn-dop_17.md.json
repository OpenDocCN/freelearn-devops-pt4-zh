["```\n# systemctl is-system-running\nrunning\n```", "```\n# systemctl list-units --type=service | head\n  UNIT                      LOAD   ACTIVE SUB     DESCRIPTION\n  abrt-journal-core.service  loaded active running Creates ABRT problems from coredumpctl messages\n  abrt-oops.service  loaded active running ABRT kernel log watcher\n  abrt-xorg.service  loaded active running ABRT Xorg log watcher\n  abrtd.service  loaded active running ABRT Automated Bug Reporting Tool\n```", "```\n# systemctl status sshd\n○ sshd.service - OpenSSH server daemon\n     Loaded: loaded (/usr/lib/systemd/system/sshd.service; disabled; vendor preset: disabled)\n     Active: inactive (dead)\n       Docs: man:sshd(8)\n             man:sshd_config(5)\n```", "```\n# cat /usr/lib/systemd/system/sshd.service\n```", "```\n# podman generate systemd -h\nGenerate systemd units.\nDescription:\n  Generate systemd units for a pod or container.\n  The generated units can later be controlled via systemctl(1).\nUsage:\n  podman generate systemd [options] {CONTAINER|POD}\n...\n```", "```\n# export MARIADB_PASSWORD=my-secret-pw\n# podman secret create --env MARIADB_PASSWORD\n53149b678d0dbd34fb56800cc\n```", "```\n# podman secret ls\nID                         NAME              DRIVER      CREATED       UPDATED       \n53149b678d0dbd34fb56800cc  MARIADB_PASSWORD  file        10 hours ago  10 hours ago  \n# podman secret inspect 53149b678d0dbd34fb56800cc\n[\n    {\n        \"ID\": \"53149b678d0dbd34fb56800cc\",\n        \"CreatedAt\": \"2022-02-16T00:54:21.01087091+01:00\",\n        \"UpdatedAt\": \"2022-02-16T00:54:21.01087091+01:00\",\n        \"Spec\": {\n            \"Name\": \"MARIADB_PASSWORD\",\n            \"Driver\": {\n                \"Name\": \"file\",\n                \"Options\": {\n                    \"path\": \"/var/lib/containers/storage/secrets/filedriver\"\n                }\n            }\n        }\n    }\n]\n# cat /var/lib/containers/storage/secrets/filedriver/secretsdata.json \n{\n  \"53149b678d0dbd34fb56800cc\": \"bXktc2VjcmV0LXB3\"\n}\n# ls -l /var/lib/containers/storage/secrets/filedriver/secretsdata.json \n-rw-------. 1 root root 53 16 feb 00.54 /var/lib/containers/storage/secrets/filedriver/secretsdata.json\n```", "```\n# mkdir -p /opt/var/lib/mariadb\n```", "```\n# podman run -d --network host --name mariadb-service –v \\\n /opt/var/lib/mariadb:/var/lib/mysql:Z –e \\\n MARIADB_DATABASE=gitea -e MARIADB_USER=gitea –e \\\n MARIADB_RANDOM_ROOT_PASSWORD=true \\\n--secret=MARIADB_PASSWORD,type=env docker.io/mariadb:latest\n61ae055ef6512cb34c4b3fe1d8feafe6ec174a25547728873932f0649217 62d1\n```", "```\n# podman ps\nCONTAINER ID  IMAGE                             COMMAND     CREATED         STATUS             PORTS       NAMES\n61ae055ef651  docker.io/library/mariadb:latest  mariadbd    56 seconds ago  Up 57 seconds ago              mariadb-service\n```", "```\n# podman generate systemd --name mariadb-service\n...\n[Unit]\nDescription=Podman container-mariadb-service.service\nDocumentation=man:podman-generate-systemd(1)\nWants=network-online.target\nAfter=network-online.target\nRequiresMountsFor=/run/containers/storage\n[Service]\nEnvironment=PODMAN_SYSTEMD_UNIT=%n\nRestart=on-failure\nTimeoutStopSec=70\nExecStart=/usr/bin/podman start mariadb-service\nExecStop=/usr/bin/podman stop -t 10 mariadb-service\nExecStopPost=/usr/bin/podman stop -t 10 mariadb-service\nPIDFile=/run/containers/storage/overlay-containers/61ae055ef6512cb34c4b3fe1d8feafe6ec174a25547728873932f064921762d1/userdata/conmon.pid\nType=forking\n[Install]\nWantedBy=default.target\n```", "```\n# mkdir -p /opt/var/lib/gitea/data\n```", "```\n# podman run -d --network host --name gitea-service \\\n-v /opt/var/lib/gitea/data:/data:Z \\\ndocker.io/gitea/gitea:latest\nee96f8276038f750ee3b956cbf9d3700fe46e6e2bae93605a67e623717e 206dd\n```", "```\n# podman logs gitea-service\nServer listening on :: port 22.\nServer listening on 0.0.0.0 port 22.\n2022/02/16 00:01:55 cmd/web.go:102:runWeb() [I] Starting Gitea on PID: 12\n...\n2022/02/16 00:01:56 cmd/web.go:208:listen() [I] Listen: http://0.0.0.0:3000\n2022/02/16 00:01:56 cmd/web.go:212:listen() [I] AppURL(ROOT_URL): http://localhost:3000/\n2022/02/16 00:01:56 ...s/graceful/server.go:61:NewServer() [I] Starting new Web server: tcp:0.0.0.0:3000 on PID: 12\n```", "```\n# podman generate systemd --name gitea-service > /etc/systemd/system/container-gitea-service.service\n# podman generate systemd --name mariadb-service > /etc/systemd/system/container-mariadb-service.service\n```", "```\n# cat /etc/systemd/system/container-gitea-service.service\n...\n[Unit]\nDescription=Podman container-gitea-service.service\nDocumentation=man:podman-generate-systemd(1)\nWants=network-online.target\nAfter=network-online.target\nRequiresMountsFor=/run/containers/storage\nRequires=container-mariadb-service.service\n...\n```", "```\n# podman stop mariadb-service gitea-service\nmariadb-service\ngitea-service\n```", "```\n# systemctl daemon-reload\n```", "```\n# systemctl start container-mariadb-service.service\n# systemctl status container-mariadb-service.service\n● container-mariadb-service.service - Podman container-mariadb-service.service\n     Loaded: loaded (/etc/systemd/system/container-mariadb-service.service; disabled; vendor preset: disabled)\n     Active: active (running) since Wed 2022-02-16 01:11:50 CET; 13s ago\n...\n# systemctl start container-gitea-service.service\n# systemctl status container-gitea-service.service \n● container-gitea-service.service - Podman container-gitea-service.service\n     Loaded: loaded (/etc/systemd/system/container-gitea-service.service; disabled; vendor preset: disabled)\n     Active: active (running) since Wed 2022-02-16 01:11:57 CET; 18s ago\n...\n```", "```\n# systemctl enable container-mariadb-service.service \nCreated symlink /etc/systemd/system/default.target.wants/container-mariadb-service.service → /etc/systemd/system/container-mariadb-service.service.\n# systemctl enable container-gitea-service.service \nCreated symlink /etc/systemd/system/default.target.wants/container-gitea-service.service → /etc/systemd/system/container-gitea-service.service.\n```", "```\n$ podman generate kube [options] {CONTAINER|POD|VOLUME}\n```", "```\n$ podman run –d \\\n  -p 8080:80 --name nginx \\\n  docker.io/library/nginx\n```", "```\n$ podman generate kube nginx\n# Save the output of this file and use kubectl create -f to import\n# it into Kubernetes.\n#\n# Created with podman-4.0.0-rc4\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: \"2022-02-10T23:14:25Z\"\n  labels:\n    app: nginxpod\n  name: nginx_pod\nspec:\n  containers:\n  - args:\n    - nginx\n    - -g\n    - daemon off;\n    image: docker.io/library/nginx:latest\n    name: nginx\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n    securityContext:\n      capabilities:\n        drop:\n        - CAP_MKNOD\n        - CAP_NET_RAW\n        - CAP_AUDIT_WRITE\n```", "```\nports:\n    - containerPort: 80\n      hostPort: 8080\n```", "```\n$ podman generate kube nginx –f nginx-pod.yaml\n```", "```\n$ podman generate kube nginx | kubectl create -f -\n```", "```\n$ podman generate kube -s nginx\n# Save the output of this file and use kubectl create -f to import\n# it into Kubernetes.\n#\n# Created with podman-4.0.0-rc4\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: \"2022-02-12T21:54:02Z\"\n  labels:\n    app: nginxpod\n  name: nginx_pod\nspec:\n  ports:\n  - name: \"80\"\n    nodePort: 30582\n    port: 80\n    targetPort: 80\n  selector:\n    app: nginxpod\n  type: NodePort\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: \"2022-02-12T21:54:02Z\"\n  labels:\n    app: nginxpod\n  name: nginx_pod\nspec:\n  containers:\n  - args:\n    - nginx\n    - -g\n    - daemon off;\n    image: docker.io/library/nginx:latest\n    name: nginx\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n    securityContext:\n      capabilities:\n        drop:\n        - CAP_MKNOD\n        - CAP_NET_RAW\n        - CAP_AUDIT_WRITE\n```", "```\n$ for vol in dbvol wpvol; do podman volume create $vol; done\n```", "```\n$ podman pod create --name wordpress-pod -p 8080:80\n```", "```\n$ podman create \\\n  --pod wordpress-pod --name db \\\n  -v dbvol:/var/lib/mysql\n  -e MYSQL_ROOT_PASSWORD=myrootpasswd \\\n  -e MYSQL_DATABASE=wordpress \\\n  -e MYSQL_USER=wordpress \\\n  -e MYSQL_PASSWORD=wordpress \\\n  docker.io/library/mysql\n```", "```\n$ podman create \\\n  --pod wordpress-pod --name wordpress \\\n  -v wpvol:/var/www/html\n  -e WORDPRESS_DB_HOST=127.0.0.1 \\\n  -e WORDPRESS_DB_USER=wordpress \\\n  -e WORDPRESS_DB_PASSWORD=wordpress \\\n  -e WORDPRESS_DB_NAME=wordpress \\\n  docker.io/library/wordpress\n```", "```\n$ podman pod start wordpress-pod\n```", "```\n$ podman ps\nCONTAINER ID  IMAGE                                        COMMAND               CREATED            STATUS                PORTS                 NAMES\n19bf706f0eb8  localhost/podman-pause:4.0.0-rc4-1643988335                        About an hour ago  Up About an hour ago  0.0.0.0:8080->80/tcp  0400f8770627-infra\nf1da755a846c  docker.io/library/mysql:latest               mysqld                About an hour ago  Up About an hour ago  0.0.0.0:8080->80/tcp  db\n1f28ef82d58f  docker.io/library/wordpress:latest           apache2-foregroun...  About an hour ago  Up About an hour ago  0.0.0.0:8080->80/tcp  wordpress\n```", "```\n$ podman generate kube wordpress-pod \\\n  -f wordpress-single-pod.yaml\n```", "```\n# Save the output of this file and use kubectl create -f to import\n# it into Kubernetes.\n#\n# Created with podman-4.0.0-rc4\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: \"2022-02-13T11:06:38Z\"\n  labels:\n    app: wordpress-pod\n  name: wordpress-pod\nspec:\n  containers:\n  - args:\n    - mysqld\n    env:\n    - name: MYSQL_PASSWORD\n      value: wordpress\n    - name: MYSQL_USER\n      value: wordpress\n    - name: MYSQL_ROOT_PASSWORD\n      value: myrootpasswd\n    - name: MYSQL_DATABASE\n      value: wordpress\n    image: docker.io/library/mysql:latest\n    name: db\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n    resources: {}\n    securityContext:\n      capabilities:\n        drop:\n        - CAP_MKNOD\n        - CAP_NET_RAW\n        - CAP_AUDIT_WRITE\n    volumeMounts:\n    - mountPath: /var/lib/mysql\n      name: dbvol-pvc\n  - args:\n    - apache2-foreground\n    env:\n    - name: WORDPRESS_DB_HOST\n      value: 127.0.0.1\n    - name: WORDPRESS_DB_PASSWORD\n      value: wordpress\n    - name: WORDPRESS_DB_USER\n      value: wordpress\n    - name: WORDPRESS_DB_NAME\n      value: wordpress\n    image: docker.io/library/wordpress:latest\n    name: wordpress\n    resources: {}\n    securityContext:\n      capabilities:\n        drop:\n        - CAP_MKNOD\n        - CAP_NET_RAW\n        - CAP_AUDIT_WRITE\n    volumeMounts:\n    - mountPath: /var/www/html\n      name: wpvol-pvc\n  restartPolicy: Never\n  volumes:\n  - name: wpvol-pvc\n    persistentVolumeClaim:\n      claimName: wpvol\n  - name: dbvol-pvc\n    persistentVolumeClaim:\n      claimName: dbvol\nstatus: {}\n```", "```\n$ podman generate kube wordpress-pod wpvol dbvol \n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  annotations:\n    volume.podman.io/driver: local\n  creationTimestamp: \"2022-02-13T14:51:05Z\"\n  name: dbvol\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\nstatus: {}\n```", "```\n$ podman generate kube -s wordpress-pod wpvol dbvol\n```", "```\n$ podman network create kubenet\n```", "```\n$ for vol in wpvol dbvol; do podman volume create $vol; done\n```", "```\n$ podman pod create –p 3306:3306 \\\n  --network kubenet \\\n  --name mysql-pod \n$ podman create --name db \\\n  --pod mysql-pod \\\n  -v dbvol:/var/lib/mysql \\\n  -e MYSQL_ROOT_PASSWORD=myrootpasswd\\\n  -e MYSQL_DATABASE=wordpress \\\n  -e MYSQL_USER=wordpress \\\n  -e MYSQL_PASSWORD=wordpress \\\n  docker.io/library/mysql\n```", "```\n$ podman pod create -p 8080:80 \\\n  --network kubenet \\\n  --name wordpress-pod\n$ podman create --name wordpress \\\n  --pod wordpress-pod \\\n  -v wpvol:/var/www/html \\\n  -e WORDPRESS_DB_HOST=mysql-pod \\\n  -e WORDPRESS_DB_USER=wordpress \\\n  -e WORDPRESS_DB_PASSWORD=wordpress \\\n  -e WORDPRESS_DB_NAME=wordpress \\\n  docker.io/library/wordpress\n```", "```\n$ podman pod start mysql-pod && \n  podman pod start wordpress-pod\n```", "```\n$ podman generate kube \\\n  -f wordpress-multi-pod-basic.yaml \\\n  wordpress-pod \\\n  mysql-pod\n```", "```\n# Save the output of this file and use kubectl create -f to import\n# it into Kubernetes.\n#\n# Created with podman-4.0.0-rc4\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: \"2022-02-13T21:32:48Z\"\n  labels:\n    app: wordpress-pod\n  name: wordpress-pod\nspec:\n  containers:\n  - args:\n    - apache2-foreground\n    env:\n    - name: WORDPRESS_DB_NAME\n      value: wordpress\n    - name: WORDPRESS_DB_HOST\n      value: mysql-pod\n    - name: WORDPRESS_DB_PASSWORD\n      value: wordpress\n    - name: WORDPRESS_DB_USER\n      value: wordpress\n    image: docker.io/library/wordpress:latest\n    name: wordpress\n    ports:\n    - containerPort: 80\n      hostPort: 8080\n    resources: {}\n    securityContext:\n      capabilities:\n        drop:\n        - CAP_MKNOD\n        - CAP_NET_RAW\n        - CAP_AUDIT_WRITE\n    volumeMounts:\n    - mountPath: /var/www/html\n      name: wpvol-pvc\n  restartPolicy: Never\n  volumes:\n  - name: wpvol-pvc\n    persistentVolumeClaim:\n      claimName: wpvol\nstatus: {}\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: \"2022-02-13T21:32:48Z\"\n  labels:\n    app: mysql-pod\n  name: mysql-pod\nspec:\n  containers:\n  - args:\n    - mysqld\n    env:\n    - name: MYSQL_ROOT_PASSWORD\n      value: myrootpasswd\n    - name: MYSQL_DATABASE\n      value: wordpress\n    - name: MYSQL_USER\n      value: wordpress\n    - name: MYSQL_PASSWORD\n      value: wordpress\n    image: docker.io/library/mysql:latest\n    name: db\n    ports:\n    - containerPort: 3306\n      hostPort: 3306\n    resources: {}\n    securityContext:\n      capabilities:\n        drop:\n        - CAP_MKNOD\n        - CAP_NET_RAW\n        - CAP_AUDIT_WRITE\n    volumeMounts:\n    - mountPath: /var/lib/mysql\n      name: dbvol-pvc\n  restartPolicy: Never\n  volumes:\n  - name: dbvol-pvc\n    persistentVolumeClaim:\n      claimName: dbvol\nstatus: {}\n```", "```\n$ podman generate kube -s \\\n  -f wordpress-multi-pod-full.yaml \\\n  wordpress-pod \\\n  mysql-pod \\\n  dbvol \\\n  wpvol\n```", "```\n$ podman play kube wordpress-single-pod.yaml\n```", "```\n$ podman pod ps\nPOD ID        NAME           STATUS      CREATED         INFRA ID      # OF CONTAINERS\n5f8ecfe66acd  wordpress-pod  Running     4 minutes ago  46b4bdfe6a08  3\n```", "```\n$ podman ps\nCONTAINER ID  IMAGE                                        COMMAND               CREATED         STATUS             PORTS                 NAMES\n46b4bdfe6a08  localhost/podman-pause:4.0.0-rc4-1643988335                        4 minutes ago  Up 4 minutes ago  0.0.0.0:8080->80/tcp  5f8ecfe66acd-infra\nef88a5c8d1e5  docker.io/library/mysql:latest               mysqld                4 minutes ago  Up 4 minutes ago  0.0.0.0:8080->80/tcp  wordpress-pod-db\n76c6b6328653  docker.io/library/wordpress:latest           apache2-foregroun...  4 minutes ago  Up 4 minutes ago  0.0.0.0:8080->80/tcp  wordpress-pod-wordpress\n```", "```\n$ podman volume ls\nDRIVER      VOLUME NAME\nlocal       dbvol\nlocal       wpvol\n```", "```\n$ podman play kube --down wordpress-single-pod.yaml \nPods stopped:\n5f8ecfe66acd01b705f38cd175fad222890ab612bf572807082f30ab37fd 0b88\nPods removed:\n5f8ecfe66acd01b705f38cd175fad222890ab612bf572807082f30ab37fd 0b88\n```", "```\n$ podman play kube --network kubenet \\\n  wordpress-multi-pod-basic.yaml\n```", "```\n$ podman pod ps\nPOD ID        NAME           STATUS      CREATED        INFRA ID      # OF CONTAINERS\nc9d775da0379  mysql-pod      Running     8 minutes ago  71c93fa6080b  2\n3b497cbaeebc  wordpress-pod  Running     8 minutes ago  0c52ee133f0f  2\n```", "```\n$ podman ps --format \"{{.Image }} {{.Names}}\"\nlocalhost/podman-pause:4.0.0-rc5-1644672408 3b497cbaeebc-infra\ndocker.io/library/wordpress:latest wordpress-pod-wordpress\nlocalhost/podman-pause:4.0.0-rc5-1644672408 c9d775da0379-infra\ndocker.io/library/mysql:latest mysql-pod-db\n```", "```\n$ podman volume ls\nDRIVER      VOLUME NAME\nlocal       dbvol\nlocal       wpvol\n```", "```\n$ podman unshare --rootless-netns ip addr show\n```", "```\n$ cat /run/user/1000/containers/networks/aardvark-dns/kubenet\n10.89.0.1\n0c52ee133f0fec5084f25bd89ad8bd0f6af2fc46d696e2b8161864567b0a92 0b 10.89.0.4  wordpress-pod,0c52ee133f0f\n71c93fa6080b6a3bfe1ebad3e164594c5fa7ea584e180113d2893eb67f6f3b 56 10.89.0.5  mysql-pod,71c93fa6080b\n```", "```\n$ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n$ sudo install minikube-linux-amd64 /usr/local/bin/minikube\n```", "```\n$ sudo dnf install @virtualization\n```", "```\n$ sudo systemctl enable --now libvirtd\n```", "```\n$ sudo usermod -aG libvirt $(whoami)\n```", "```\n$ minikube config set driver kvm2\n```", "```\n$ sudo visudo\n```", "```\n<username> ALL=(ALL) NOPASSWD: /usr/bin/podman\n```", "```\n$ minikube config set driver podman\n```", "```\n$ version=$(curl -L -s https://dl.k8s.io/release/stable.txt) curl -LO \"https://dl.k8s.io/release/${version}/bin/linux/amd64/kubectl $ sudo install -o root -g root \\\n  -m 0755 kubectl \\\n  /usr/local/bin/kubectl\n```", "```\n$ minikube start --driver=kvm2 --container-runtime=cri-o\n```", "```\n$ minikube start --driver=podman --container-runtime=cri-o\n```", "```\n$ kubectl get pods –A\nNAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE\nkube-system   coredns-64897985d-gqnrn            1/1     Running   0          19s\nkube-system   etcd-minikube                      1/1     Running   0          27s\nkube-system   kube-apiserver-minikube            1/1     Running   0          27s\nkube-system   kube-controller-manager-minikube   1/1     Running   0          27s\nkube-system   kube-proxy-sj7xn                   1/1     Running   0          20s\nkube-system   kube-scheduler-minikube            1/1     Running   0          33s\nkube-system   storage-provisioner                1/1     Running   0          30s\n```", "```\n$ kubectl create –f wordpress-multi-pod-full.yaml\n```", "```\n$ kubectl get pods \nNAME            READY   STATUS    RESTARTS   AGE\nmysql-pod       1/1     Running   0          48m\nwordpress-pod   1/1     Running   0          48m\n$ kubectl get svc\nNAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE\nkubernetes      ClusterIP   10.96.0.1      <none>        443/TCP          53m\nmysql-pod       NodePort    10.108.34.77   <none>        3306:30284/TCP   52m\nwordpress-pod   NodePort    10.96.63.142   <none>        80:30408/TCP     52m\n```", "```\n$ kubectl get endpoints\nNAME            ENDPOINTS         AGE\nkubernetes      10.88.0.6:8443    84m\nmysql-pod       10.244.0.5:3306   4m9s\nwordpress-pod   10.244.0.6:80     4m9s\n```", "```\n$ kubectl get pvc\nNAME    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE\ndbvol   Bound    pvc-4d4a047b-bd20-4bef-879c-c3d80f96d712   1Gi        RWO            standard       54m\nwpvol   Bound    pvc-accd7947-1499-44b5-bac8-9345da7edc23   1Gi        RWO            standard       54m\n$ kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM           STORAGECLASS   REASON   AGE\npvc-4d4a047b-bd20-4bef-879c-c3d80f96d712   1Gi        RWO            Delete           Bound    default/dbvol   standard                60m\npvc-accd7947-1499-44b5-bac8-9345da7edc23   1Gi        RWO            Delete           Bound    default/wpvol   standard                60m\n```", "```\n$ minikube ip\n10.88.0.6\n```", "```\n$ kubectl delete –f wordpress-multi-pod-full.yaml\n```"]