- en: Setting Up the Terraform Environment
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 Terraform 环境
- en: Before you start writing the Terraform configuration file, it is necessary to
    install and configure a local development environment. This development environment
    will allow Terraform's configuration file to be written and validated as it is
    developed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始编写 Terraform 配置文件之前，必须先安装并配置本地开发环境。这个开发环境将允许在开发过程中编写和验证 Terraform 配置文件。
- en: In the recipes in this chapter, we will learn how to download and install Terraform
    manually on a Windows machine, as well as how to install it using a script on
    Windows and Linux. We will also learn how to use Terraform in a Docker container
    before learning how to migrate the Terraform configuration written in version
    0.11 to version 0.13.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的教程中，我们将学习如何在 Windows 机器上手动下载和安装 Terraform，以及如何使用脚本在 Windows 和 Linux 上安装它。我们还将学习如何在
    Docker 容器中使用 Terraform，最后学习如何将 Terraform 配置从 0.11 版本迁移到 0.13 版本。
- en: 'In this chapter, we''ll cover the following recipes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下教程：
- en: Downloading and installing Terraform manually
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动下载和安装 Terraform
- en: Installing Terraform using a script on Linux
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Linux 上使用脚本安装 Terraform
- en: Installing Terraform using a script on Windows
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上使用脚本安装 Terraform
- en: Executing Terraform in a Docker container
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Docker 容器中执行 Terraform
- en: Writing Terraform configuration in VS Code
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 VS Code 中编写 Terraform 配置
- en: Migrating your Terraform configuration to Terraform 0.13
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Terraform 配置迁移到 Terraform 0.13
- en: Let's get started!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始吧！
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter does not require that you have any specific technical knowledge.
    We will mainly use graphical user interfaces and simple Linux and Windows scripts.
    However, knowledge of Docker is also recommended so that you can complete the *Executing
    Terraform in a Docker container *recipe.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章不要求你具备任何特定的技术知识。我们主要使用图形用户界面和简单的 Linux 和 Windows 脚本。然而，推荐了解 Docker，这样你可以完成
    *在 Docker 容器中执行 Terraform* 的教程。
- en: Finally, for the IDE, we will use Visual Studio Code, which is available for
    free at [https://code.visualstudio.com/](https://code.visualstudio.com/).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于 IDE，我们将使用免费的 Visual Studio Code，下载地址为 [https://code.visualstudio.com/](https://code.visualstudio.com/)。
- en: The source code for this chapter is available at [https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01](https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的源代码可在 [https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01](https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01)
    找到。
- en: Check out the following video to see the code in action: [https://bit.ly/3h9noXz](https://bit.ly/3h9noXz)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，了解代码的实际操作：[https://bit.ly/3h9noXz](https://bit.ly/3h9noXz)
- en: Downloading and installing Terraform manually
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动下载和安装 Terraform
- en: In this recipe, we will learn how to download and install Terraform on a local
    machine under a Windows operating system.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在此教程中，我们将学习如何在 Windows 操作系统下的本地机器上下载和安装 Terraform。
- en: Getting ready
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, the only prerequisite is that you're on a Windows operating
    system.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此教程的唯一前提是你正在使用 Windows 操作系统。
- en: How to do it…
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Perform the following steps:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Open Windows File Explorer. Choose a location and create a folder called `Terraform`.
    We will use this to store the Terraform binary; for example, `C:/Terraform`.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Windows 文件资源管理器。选择一个位置并创建一个名为 `Terraform` 的文件夹。我们将使用该文件夹来存储 Terraform 二进制文件；例如，`C:/Terraform`。
- en: Launch a web browser and go to [https://www.terraform.io/downloads.html](https://www.terraform.io/downloads.html).
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动网页浏览器，访问 [https://www.terraform.io/downloads.html](https://www.terraform.io/downloads.html)。
- en: 'Scroll down the page until you reach the package for Windows:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动页面，直到找到适用于 Windows 的软件包：
- en: '![](img/ad4b8bc3-201c-4cd7-a9f4-4fa2838ac9d6.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ad4b8bc3-201c-4cd7-a9f4-4fa2838ac9d6.png)'
- en: Click on the 64-bit link, which targets the Terraform ZIP package for the Windows
    64-bit operating system. The package will be downloaded locally.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 64 位链接，下载适用于 Windows 64 位操作系统的 Terraform ZIP 包。该包将被下载到本地。
- en: 'Unzip the content of the downloaded ZIP file into the `Terraform` folder that
    we created in *step 1*:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的 ZIP 文件内容解压到我们在 *第 1 步* 中创建的 `Terraform` 文件夹中：
- en: '![](img/84aca3c0-bab5-47f9-ac84-7b3e1a577fab.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/84aca3c0-bab5-47f9-ac84-7b3e1a577fab.png)'
- en: The last thing we need to do to install Terraform is configure the Path environment
    variable by adding the path of the Terraform binary folder.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Terraform 的最后一步是通过添加 Terraform 二进制文件夹的路径来配置 `Path` 环境变量。
- en: 'To do this, follow these steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成此任务，请按照以下步骤操作：
- en: 'In File Explorer, right-click on the This PC menu and choose Properties:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件资源管理器中，右键点击“此电脑”菜单，选择属性：
- en: '![](img/c00b8a0f-5220-4f52-97f4-94aa3c6f6864.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c00b8a0f-5220-4f52-97f4-94aa3c6f6864.png)'
- en: 'Click on the Advanced system settings link and click the Environment variables
    button of the newly opened window:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击高级系统设置链接，并点击新打开窗口中的环境变量按钮：
- en: '![](img/8fd73ee5-28fe-4d17-b228-b970746dcc04.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8fd73ee5-28fe-4d17-b228-b970746dcc04.png)'
- en: 'When provided with a list of environments, select User variables or Systems
    variables (choose this option to apply the environment variable to all users of
    the workstation), and select the Path variable. Then, click on the Edit button:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当提供环境列表时，选择用户变量或系统变量（选择此选项将环境变量应用于所有工作站用户），然后选择Path变量。接着，点击编辑按钮：
- en: '![](img/b07e5705-9816-401a-9376-a84ee6950dd2.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b07e5705-9816-401a-9376-a84ee6950dd2.png)'
- en: 'From the list of paths, add the folder we created; that is, `C:\Terraform\`:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在路径列表中，添加我们创建的文件夹，也就是`C:\Terraform\`：
- en: '![](img/ab91057d-03be-4a31-8240-e8f1b3b410b2.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab91057d-03be-4a31-8240-e8f1b3b410b2.png)'
- en: Finally, we validate all the open windows by clicking on the OK button, which
    is present at the bottom of every open window.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过点击每个窗口底部的OK按钮来验证所有打开的窗口。
- en: How it works…
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Downloading and installing Terraform is simple, and adding the path of the Terraform
    binary to the `PATH` environment variable makes it possible to execute the Terraform
    command line from any terminal location.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装Terraform很简单，将Terraform二进制文件的路径添加到`PATH`环境变量中，可以让我们从任何终端位置执行Terraform命令行。
- en: 'After completing all these steps, we can check that Terraform is working properly
    by opening a command-line terminal or PowerShell and executing the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 完成所有这些步骤后，我们可以通过打开命令行终端或PowerShell并执行以下命令来检查Terraform是否正常工作：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The result of executing the preceding command is shown in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述命令的结果如下所示：
- en: '![](img/50a0e180-e4bb-49e5-a64a-9d262b0c0d12.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50a0e180-e4bb-49e5-a64a-9d262b0c0d12.png)'
- en: By doing this, the list of Terraform commands will be displayed in the terminal.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做后，Terraform命令列表将显示在终端中。
- en: Installing Terraform using a script on Linux
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Linux上使用脚本安装Terraform
- en: In this recipe, we will learn how to install Terraform on a Linux machine using
    a script.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何通过脚本在Linux机器上安装Terraform。
- en: Getting ready
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, the only prerequisites are that you are running a Linux
    operating system and that you have an *unzip* utility installed. The `gpg`, `curl`,
    and `shasum` tools must be installed; they are often installed by default on all
    Linux distributions.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个教程，唯一的先决条件是你正在运行Linux操作系统，并且已经安装了*unzip*工具。`gpg`、`curl`和`shasum`工具必须已安装，它们通常在所有Linux发行版中默认安装。
- en: How to do it…
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤…
- en: 'Perform the following steps:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: 'Open a command-line terminal and execute the following script:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行终端并执行以下脚本：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The source code for this script is also available in this book's GitHub repository: [https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux.sh](https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux.sh)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本的源代码也可以在本书的GitHub仓库中找到：[https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux.sh](https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux.sh)
- en: 'After executing this script, we can check the installation of Terraform by
    executing the following command:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行此脚本后，我们可以通过执行以下命令来检查Terraform的安装情况：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The preceding command displays the installed version of Terraform, which means
    we can check that Terraform is correctly installed and that the desired version
    is installed.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令会显示已安装的Terraform版本，这意味着我们可以检查Terraform是否正确安装，以及所需的版本是否安装。
- en: How it works…
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: In this script, in the first line, the `TERRAFORM_VERSION` variable is filled
    in with the Terraform version that we want to install. This variable is only mentioned
    here since we don't want to keep repeating the version of Terraform we're using
    throughout the script.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在此脚本中，第一行填入了`TERRAFORM_VERSION`变量，指定我们要安装的Terraform版本。这里提到这个变量，是因为我们不想在脚本中反复写出我们正在使用的Terraform版本。
- en: In this recipe, the 0.12.29 version of Terraform is used, but we are free to
    modify this.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们使用的是0.12.29版本的Terraform，但我们可以自由修改此版本。
- en: With the `curl` tool, the script downloads the ZIP file containing the Terraform
    binary. Then, the script checks the security integrity of the packaged. This is called
    `shasum`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`curl`工具，脚本下载包含Terraform二进制文件的ZIP文件。然后，脚本检查打包文件的安全完整性，这叫做`shasum`。
- en: In the last line, the script unzips the downloaded package inside the local
    directory, `/usr/local/bin`, which is already mentioned by default in the `PATH` environment
    variable.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一行，脚本将解压下载的包到本地目录`/usr/local/bin`，该目录已经在`PATH`环境变量中默认提到。
- en: 'You can check that the version of Terraform you have installed corresponds
    to the one mentioned in the script by executing the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过执行以下命令来检查你安装的Terraform版本是否与脚本中提到的版本一致：
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This command displays the installed version of Terraform, as shown in the following
    screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令显示已安装的Terraform版本，如下图所示：
- en: '![](img/8223b9f0-dde6-402f-853d-eb359a76a090.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8223b9f0-dde6-402f-853d-eb359a76a090.png)'
- en: As we can see, here, the version of Terraform we have is 0.12.29.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，这里我们安装的Terraform版本是0.12.29。
- en: There's more…
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: In this Terraform installation script, we have specified the version number
    of Terraform to be installed.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个Terraform安装脚本中，我们已经指定了要安装的Terraform版本号。
- en: If you want to install the latest version without having to know the version
    number, it is also possible to dynamically retrieve the version number of the
    latest version using the following API: [https://checkpoint-api.hashicorp.com/v1/check/terraform](https://checkpoint-api.hashicorp.com/v1/check/terraform).
    This retrieves information about the current version of Terraform.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想安装最新版本而不需要知道版本号，也可以通过以下API动态获取最新版本号：[https://checkpoint-api.hashicorp.com/v1/check/terraform](https://checkpoint-api.hashicorp.com/v1/check/terraform)。它会获取有关当前Terraform版本的信息。
- en: 'The following screenshot shows our current version:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我们当前的版本：
- en: '![](img/0f3226ef-3ea6-44ae-bd64-df512298e96a.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0f3226ef-3ea6-44ae-bd64-df512298e96a.png)'
- en: Note that the `current_version` property, which contains the latest Terraform
    version, is a value.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`current_version`属性包含最新的Terraform版本，它是一个值。
- en: 'With this API, we can perfectly modify the first line of the installation script
    with the following code:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个API，我们可以完美地修改安装脚本的第一行，使用以下代码：
- en: '[PRE4]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The complete script for installing Terraform with this block is available at [https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux_v2.sh](https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux_v2.sh).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这段完整的安装Terraform脚本可在[https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux_v2.sh](https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/install_terraform_linux_v2.sh)查看。
- en: This block of code uses the `curl` command to retrieve the API return and parses
    its contents to retrieve the value of the `current_version` property with the
    jq tool (available at [https://stedolan.github.io/jq/](https://stedolan.github.io/jq/)).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码使用`curl`命令来获取API返回的数据，并解析其内容以提取`current_version`属性的值，使用的是jq工具（可在[https://stedolan.github.io/jq/](https://stedolan.github.io/jq/)获取）。
- en: 'In addition, the `terraform --version` command shows whether the latest version
    is installed. If you have installed an old version, this command displays a message
    indicating the latest version:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`terraform --version`命令会显示是否已安装最新版本。如果你安装的是旧版本，命令会显示一条消息，提示最新版本：
- en: '![](img/be270c25-363b-4b52-a11d-c94de7c90de7.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be270c25-363b-4b52-a11d-c94de7c90de7.png)'
- en: Here, we can see that we have installed version 0.12.28 and that the latest
    version is 0.12.29 (at the time of writing this recipe).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们可以看到我们安装的版本是0.12.28，而最新版本是0.12.29（在撰写本食谱时）。
- en: Finally, HashiCorp announced that the Terraform binary will soon be available
    in the Linux package manager. For more information, take a look at the following
    article: [https://www.hashicorp.com/blog/announcing-the-hashicorp-linux-repository](https://www.hashicorp.com/blog/announcing-the-hashicorp-linux-repository)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，HashiCorp宣布，Terraform的二进制文件将很快在Linux包管理器中提供。欲了解更多信息，请查看以下文章：[https://www.hashicorp.com/blog/announcing-the-hashicorp-linux-repository](https://www.hashicorp.com/blog/announcing-the-hashicorp-linux-repository)
- en: See also
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: For more information on verifying the downloaded package, you can consult the
    HashiCorp documentation at [https://www.hashicorp.com/security.html](https://www.hashicorp.com/security.html).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于验证下载包的信息，可以查阅HashiCorp文档：[https://www.hashicorp.com/security.html](https://www.hashicorp.com/security.html)。
- en: Installing Terraform using a script on Windows
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上使用脚本安装Terraform
- en: In this recipe, we will learn how to install Terraform on a Windows machine
    using a script that uses the **Chocolatey** software package manager.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何使用 **Chocolatey** 软件包管理器在 Windows 机器上安装 Terraform。
- en: Getting ready
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To complete this recipe, you'll need to be using a Windows operating system
    and have Chocolatey ([https://chocolatey.org/](https://chocolatey.org/)) installed,
    which is a Windows software package manager.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为完成此步骤，您需要使用 Windows 操作系统并安装 Chocolatey（[https://chocolatey.org/](https://chocolatey.org/)），这是一个
    Windows 软件包管理器。
- en: 'If you don''t have Chocolatey installed, you can easily install it by following
    these steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未安装 Chocolatey，您可以按照以下步骤轻松安装它：
- en: 'Open a PowerShell terminal in administrator mode, as shown in the following
    screenshot:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以管理员模式打开 PowerShell 终端，如下图所示：
- en: '![](img/0ad32f94-49a2-4063-99bb-d9bef24123c1.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0ad32f94-49a2-4063-99bb-d9bef24123c1.png)'
- en: 'Then, execute this following script in the terminal:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在终端中执行以下脚本：
- en: '[PRE5]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The complete installation documentation for Chocolatey is available at [https://chocolatey.org/install](https://chocolatey.org/install).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的 Chocolatey 安装文档可在 [https://chocolatey.org/install](https://chocolatey.org/install)
    上找到。
- en: How to do it…
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Perform the following steps:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: Open a PowerShell command-line terminal in administrator mode.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以管理员模式打开 PowerShell 命令行终端。
- en: 'Execute the following command:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下命令：
- en: '[PRE6]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following screenshot shows the execution of this command:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了执行该命令的结果：
- en: '![](img/69b6593e-4d4f-46b9-829d-a11250c1bcf4.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/69b6593e-4d4f-46b9-829d-a11250c1bcf4.png)'
- en: The `-y` option is optional. It allows us to accept the license agreement automatically.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`-y` 选项是可选的。它允许我们自动接受许可证协议。'
- en: How it works…
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: When Chocolatey installs the Terraform package, it executes the scripts in the
    package source code, available at [https://github.com/jamestoyer/chocolatey-packages/tree/master/terraform](https://github.com/jamestoyer/chocolatey-packages/tree/master/terraform).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Chocolatey 安装 Terraform 包时，它会执行包源代码中的脚本，源代码可在 [https://github.com/jamestoyer/chocolatey-packages/tree/master/terraform](https://github.com/jamestoyer/chocolatey-packages/tree/master/terraform)
    上找到。
- en: Then, by executing the script available at [https://github.com/jamestoyer/chocolatey-packages/blob/master/terraform/tools/chocolateyInstall.ps1](https://github.com/jamestoyer/chocolatey-packages/blob/master/terraform/tools/chocolateyInstall.ps1),
    Chocolatey downloads the Terraform ZIP file into the binary directory of Chocolatey's
    packages, which is already included in the `PATH` environment variable.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过执行 [https://github.com/jamestoyer/chocolatey-packages/blob/master/terraform/tools/chocolateyInstall.ps1](https://github.com/jamestoyer/chocolatey-packages/blob/master/terraform/tools/chocolateyInstall.ps1)
    中提供的脚本，Chocolatey 将 Terraform ZIP 文件下载到 Chocolatey 包的二进制目录中，该目录已包含在 `PATH` 环境变量中。
- en: There's more…
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: When upgrading Terraform, it is possible to upgrade it directly with Chocolatey
    by executing the `choco upgrade -y terraform` command.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级 Terraform 时，您可以通过执行 `choco upgrade -y terraform` 命令直接通过 Chocolatey 升级。
- en: 'By default, the `choco install` command installs the latest version of the
    mentioned package. It is also possible to specify a specific version by adding
    the `--version` option to the command, which in our case would give us, for example,
    the following:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`choco install` 命令会安装提到的包的最新版本。也可以通过在命令中添加 `--version` 选项来指定特定版本，例如，在我们的案例中，它将给出如下结果：
- en: '[PRE7]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In this example, we have specified that we want to install version `0.12.28`
    of Terraform and not the latest version.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在本示例中，我们指定要安装版本 `0.12.28` 的 Terraform，而不是最新版本。
- en: Be aware that the Terraform package from Chocolatey can have a time lag regarding
    the latest official version of Terraform, while in the Linux script, as shown
    in the *Installing Terraform on Linux *recipe, you can specify the latest version
    that has just been released.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Chocolatey 提供的 Terraform 包可能与 Terraform 最新的官方版本存在时间差，而在 Linux 脚本中，如 *在 Linux
    上安装 Terraform* 教程中，您可以指定刚发布的最新版本。
- en: See also
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: To learn about all the commands provided with Chocolatey, I suggest reading
    the following documentation: [https://chocolatey.org/docs/commands-reference#commands](https://chocolatey.org/docs/commands-reference#commands.)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解 Chocolatey 提供的所有命令，我建议阅读以下文档：[https://chocolatey.org/docs/commands-reference#commands](https://chocolatey.org/docs/commands-reference#commands)
- en: Executing Terraform in a Docker container
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Docker 容器中执行 Terraform
- en: In the previous recipes of this chapter, we discussed how to install Terraform
    locally, either manually or via a script, depending on the local operating system.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的前面几篇配方中，我们讨论了如何在本地安装 Terraform，可以通过手动安装或脚本安装，具体取决于本地操作系统。
- en: 'In this recipe, we will learn how to run Terraform in a Docker container, which
    will allow us to enjoy the following benefits:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将学习如何在 Docker 容器中运行 Terraform，这将使我们能够享受以下好处：
- en: There is no need to install Terraform locally.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需在本地安装 Terraform。
- en: We can have a Terraform runtime environment independent of the local operating
    system.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以拥有一个与本地操作系统独立的 Terraform 运行环境。
- en: We can test our Terraform configuration with different versions of Terraform.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以使用不同版本的 Terraform 来测试我们的 Terraform 配置。
- en: Let's get started!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Getting ready
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To complete this recipe, you'll need to know about Docker and its commands,
    as well as how to write Dockerfiles. Please read the documentation for more information: [https://docs.docker.com/get-started/overview/](https://docs.docker.com/get-started/overview/)
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个配方，你需要了解 Docker 及其命令，以及如何编写 Dockerfiles。请阅读文档以获取更多信息：[https://docs.docker.com/get-started/overview/](https://docs.docker.com/get-started/overview/)
- en: On our local computer, we installed Docker using a tool called Docker Desktop
    for Windows.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的本地计算机上，我们使用名为 Docker Desktop for Windows 的工具安装了 Docker。
- en: For Docker installation guides for other operating systems, please read the
    Docker installation documentation at [https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 关于其他操作系统的 Docker 安装指南，请阅读 Docker 安装文档：[https://docs.docker.com/get-docker/](https://docs.docker.com/get-docker/)。
- en: We also have a Terraform configuration file already written, which will not
    be detailed here. This will be executed in our Docker container.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经编写了一个 Terraform 配置文件，关于它的细节这里不做介绍。它将在我们的 Docker 容器中执行。
- en: You will also need the respective Terraform commands, `init`, `plan`, and `apply`,
    which will not be explained in the context of this recipe.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要相应的 Terraform 命令，`init`、`plan` 和 `apply`，这些命令在本配方中不会详细解释。
- en: How to do it…
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: 'At the root of the folder that contains the Terraform configuration, we need
    to create a Dockerfile that contains the following code:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在包含 Terraform 配置的文件夹根目录下，我们需要创建一个包含以下代码的 Dockerfile：
- en: '[PRE8]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This source code is also available at [https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/terraform-docker/Dockerfile](https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/terraform-docker/Dockerfile).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这段源代码也可以在[https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/terraform-docker/Dockerfile](https://github.com/PacktPublishing/Terraform-Cookbook/blob/master/CHAP01/terraform-docker/Dockerfile)中找到。
- en: 'Next, we need to create a new Docker image by executing the `docker build`
    command in a terminal:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要通过在终端中执行`docker build`命令来创建一个新的 Docker 镜像：
- en: '[PRE9]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, we need to instantiate a new container of this image. To do this, we
    will execute the `docker run` command:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们需要实例化这个镜像的新容器。为此，我们将执行`docker run`命令：
- en: '[PRE10]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, we can execute the Terraform commands in our container by using the following
    commands:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过以下命令在容器中执行 Terraform 命令：
- en: '[PRE11]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following screenshot shows a part of the output of executing these commands
    (`terraform plan`):'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了执行这些命令（`terraform plan`）后的一部分输出：
- en: '![](img/4f62c061-ebe1-45fb-8708-29bcbe3e179e.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4f62c061-ebe1-45fb-8708-29bcbe3e179e.png)'
- en: How it works…
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'In *step 1*, we write the composition of the Docker image in the Dockerfile.
    We do this as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第 1 步*中，我们编写了 Docker 镜像的组成，在 Dockerfile 中进行定义。我们这样做如下：
- en: We use a Golang base image.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用 Golang 基础镜像。
- en: We initialize the `TERRAFORM_VERSION` variable with the version of Terraform
    to be installed.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过初始化`TERRAFORM_VERSION`变量来指定要安装的 Terraform 版本。
- en: We write the same Terraform installation script we wrote in the *Installing
    Terraform on Linux* recipe.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们编写了与*在 Linux 上安装 Terraform* 配方中相同的 Terraform 安装脚本。
- en: We copy the Terraform configuration from our local file into a new folder located
    in the image.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将 Terraform 配置从本地文件复制到镜像中的新文件夹。
- en: We specify that our workspace will be our new folder.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们指定我们的工作空间将是我们的新文件夹。
- en: Then, in *steps 2* and *3*, we create a Docker `terraform-code` image with a `v1.0` tag.
    This tag is used to version our Terraform configuration. Then, we create a `tfapp`
    instance of this image, which runs with the bash tool.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在*第 2 步*和*第 3 步*中，我们创建了一个带有`v1.0`标签的 Docker `terraform-code` 镜像。这个标签用于对我们的
    Terraform 配置进行版本控制。接着，我们创建了一个名为`tfapp`的该镜像实例，并使用 bash 工具运行。
- en: Finally, in *step 4*, in the `tfapp` instance, we execute the Terraform commands
    in our container workspace.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在 *步骤 4* 中，我们在 `tfapp` 实例中执行 Terraform 命令，操作在我们的容器工作区内进行。
- en: There's more…
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: In this recipe, we studied how to write, build, and use a Docker image that
    contains the Terraform binary. With this, it is possible to complete this image
    with other tools such as **Terragrunt**, which are also used to develop the Terraform
    configuration file.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们学习了如何编写、构建并使用包含 Terraform 二进制文件的 Docker 镜像。通过这种方式，可以将其他工具，如 **Terragrunt**，集成到镜像中，这些工具也用于开发
    Terraform 配置文件。
- en: If you want to use just Terraform, you can use the official image provided by
    HashiCorp. This is public and available on Docker Hub at [https://hub.docker.com/r/hashicorp/terraform/](https://hub.docker.com/r/hashicorp/terraform/).
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 如果只使用 Terraform，您可以使用 HashiCorp 提供的官方镜像。该镜像是公开的，并且可以在 Docker Hub 上找到，网址为[https://hub.docker.com/r/hashicorp/terraform/](https://hub.docker.com/r/hashicorp/terraform/)。
- en: See also
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The full Docker commands documentation at [https://docs.docker.com/engine/reference/run/](https://docs.docker.com/engine/reference/run/).
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完整的 Docker 命令文档请参见[https://docs.docker.com/engine/reference/run/](https://docs.docker.com/engine/reference/run/)。
- en: For an introduction to Docker, please refer to the book *Learning DevOps*, which
    is available at [https://www.packtpub.com/cloud-networking/learning-devops](https://www.packtpub.com/cloud-networking/learning-devops).
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要了解 Docker 的介绍，请参考书籍 *Learning DevOps*，该书可以在[https://www.packtpub.com/cloud-networking/learning-devops](https://www.packtpub.com/cloud-networking/learning-devops)获取。
- en: Writing Terraform configuration in VS Code
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 VS Code 中编写 Terraform 配置
- en: Writing a Terraform configuration file does not require a special code editor.
    However, popular code editors have adapted and now offer plugins that simplify
    writing such a file.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 编写 Terraform 配置文件并不需要特殊的代码编辑器。然而，流行的代码编辑器已经适应并提供了插件，简化了编写此类文件的过程。
- en: 'In this recipe, we will focus on Visual Studio Code, which has the following
    benefits:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将重点介绍 Visual Studio Code，它具有以下优点：
- en: It's cross-platform, which means it can be installed on Windows, Linux, and
    macOS.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是跨平台的，这意味着可以在 Windows、Linux 和 macOS 上安装。
- en: It's free of charge.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是免费的。
- en: It has a multitude of extensions that cover all the needs of developers on a
    daily basis.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它拥有大量扩展，涵盖了开发人员日常工作的所有需求。
- en: In this recipe, we will learn how to configure Visual Studio Code so that we
    can write the Terraform configuration. We'll also see how much faster it is to
    write code in this way.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将学习如何配置 Visual Studio Code，以便编写 Terraform 配置文件。我们还将看到这种方式编写代码的速度有多快。
- en: Getting ready
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: For this recipe, you need to have Visual Studio Code installed on your local
    machine. You can install it by going to [https://code.visualstudio.com/](https://code.visualstudio.com/).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，您需要在本地机器上安装 Visual Studio Code。您可以通过访问[https://code.visualstudio.com/](https://code.visualstudio.com/)来安装它。
- en: How to do it…
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: To use Visual Studio Code with Terraform, we need to install the respective
    extension and configure it.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Visual Studio Code 中使用 Terraform，我们需要安装相应的扩展并进行配置。
- en: 'To install this extension, perform the following steps:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装此扩展，请执行以下步骤：
- en: 'Open Visual Studio Code and click on the extension tab. This can be found on
    the sidebar, on the left-hand side of the editor, as shown in the following screenshot:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Visual Studio Code，点击扩展标签。此标签可以在编辑器左侧的侧边栏中找到，如下图所示：
- en: '![](img/4d3aa041-07b5-4f8e-b8ac-f3400be70345.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4d3aa041-07b5-4f8e-b8ac-f3400be70345.png)'
- en: Then, we search for the extension by using the `Terraform` keyword.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们使用 `Terraform` 关键字搜索扩展。
- en: 'Install the first extension of the list, called Terraform. This is published by
    *HashiCorp*. Do this by clicking on the Install button of the extension:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装列表中的第一个扩展，名为 Terraform。它是由 *HashiCorp* 发布的。通过点击扩展的安装按钮进行安装：
- en: '![](img/2d837492-fb0d-4683-8eef-48aaf83799ea.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d837492-fb0d-4683-8eef-48aaf83799ea.png)'
- en: Reload Visual Studio Code to apply the extension.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新加载 Visual Studio Code 以应用扩展。
- en: How it works…
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In the first part of this recipe, we installed the Terraform extension for Visual
    Studio Code.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程的第一部分，我们为 Visual Studio Code 安装了 Terraform 扩展。
- en: When searching for Terraform extensions, several will appear, but the one we
    chose is one of the most powerful in my opinion.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在搜索 Terraform 扩展时，可能会出现多个选项，但我认为我们选择的这个是最强大的之一。
- en: Once installed, this extension offers a lot of functionalities for editing Terraform's
    configuration, such as autocompletion, validating the configuration, syntax for `tflint`,
    code formatting, links to the official documentation, and a module explorer.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，该扩展提供了许多编辑 Terraform 配置的功能，例如自动补全、配置验证、`tflint` 语法、代码格式化、官方文档链接以及模块浏览器。
- en: This component allows Visual Studio Code to function better with Terraform 0.12 –
    at least when it comes to the extension's functionalities.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 该组件使 Visual Studio Code 在使用 Terraform 0.12 时表现更好——至少在扩展功能方面是这样的。
- en: There's more…
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Once the extension has been installed and configured, we can write the Terraform
    configuration in our `main.tf` file. Here, we have some very useful features we
    can use to develop the Terraform configuration, some of which are as follows:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 安装并配置扩展后，我们可以在 `main.tf` 文件中编写 Terraform 配置。在这里，我们可以使用一些非常有用的功能来开发 Terraform
    配置，其中一些功能如下：
- en: 'Syntax highlighting:'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 语法高亮：
- en: '![](img/496f28aa-713f-4670-b687-a60c37cc0eaf.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/496f28aa-713f-4670-b687-a60c37cc0eaf.png)'
- en: 'Autocompletion for resources and properties:'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源和属性的自动补全：
- en: '![](img/7cca0dd5-3227-4dc2-afdc-be2fe4c97f8d.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7cca0dd5-3227-4dc2-afdc-be2fe4c97f8d.png)'
- en: 'Real-time code validation:'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时代码验证：
- en: '![](img/de926f81-05dc-46bf-b0ea-7ee31e2a20c6.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/de926f81-05dc-46bf-b0ea-7ee31e2a20c6.png)'
- en: 'The ability to display the number of references, along with a link to view
    them:'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示引用次数的功能，并提供一个链接查看这些引用：
- en: '![](img/2e9d332f-8f97-4bac-9e87-01fce98030f5.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e9d332f-8f97-4bac-9e87-01fce98030f5.png)'
- en: See also
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: To see the complete list of features for this extension, please refer to the
    following documentation: [https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform](https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform),
    and its change log: [https://marketplace.visualstudio.com/items/HashiCorp.terraform/changelog](https://marketplace.visualstudio.com/items/HashiCorp.terraform/changelog)[.](https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform)
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 若要查看该扩展的完整功能列表，请参考以下文档：[https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform](https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform)，以及其更新日志：[https://marketplace.visualstudio.com/items/HashiCorp.terraform/changelog](https://marketplace.visualstudio.com/items/HashiCorp.terraform/changelog)[.](https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform)
- en: All Visual Studio Code extensions related to Terraform can be found at [https://marketplace.visualstudio.com/search?term=terraform&target=VSCode&category=All%20categories&sortBy=Relevance](https://marketplace.visualstudio.com/search?term=terraform&target=VSCode&category=All%20categories&sortBy=Relevance).
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有与 Terraform 相关的 Visual Studio Code 扩展可以在以下网址找到：[https://marketplace.visualstudio.com/search?term=terraform&target=VSCode&category=All%20categories&sortBy=Relevance](https://marketplace.visualstudio.com/search?term=terraform&target=VSCode&category=All%20categories&sortBy=Relevance)。
- en: To read more about the support provided for this extension by HashiCorp, please
    go to [https://www.hashicorp.com/blog/supporting-the-hashicorp-terraform-extension-for-visual-studio-code/](https://www.hashicorp.com/blog/supporting-the-hashicorp-terraform-extension-for-visual-studio-code/).
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要了解 HashiCorp 为此扩展提供的支持，请访问：[https://www.hashicorp.com/blog/supporting-the-hashicorp-terraform-extension-for-visual-studio-code/](https://www.hashicorp.com/blog/supporting-the-hashicorp-terraform-extension-for-visual-studio-code/)。
- en: Migrating your Terraform configuration to Terraform 0.13
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将您的 Terraform 配置迁移到 Terraform 0.13
- en: Officially released in May 2019, version 0.12 of Terraform has brought many
    new features to the language, but also changes, and during this summer 2020, the
    new Terraform version 0.13 has been released, also providing new features and
    some changes.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: Terraform 0.12 版本于 2019 年 5 月正式发布，带来了许多新特性，也有一些变化；而在 2020 年夏季，新的 Terraform 版本
    0.13 发布，提供了新功能并进行了一些变化。
- en: We must take these changes into account before we upgrade the code.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们升级代码之前，必须考虑这些变更。
- en: In this recipe, we will discuss how to verify that our Terraform configuration
    is compatible with version 0.12\. After that, we will learn how to migrate our
    Terraform configuration from version 0.11 to version 0.12 and then to version
    0.13.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将讨论如何验证我们的 Terraform 配置是否与版本 0.12 兼容。之后，我们将学习如何将 Terraform 配置从版本 0.11
    迁移到版本 0.12，再迁移到版本 0.13。
- en: Getting ready
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before migrating your code  from version 0.11 to the latest version (currently
    0.13), you will need to have code that works with the latest version of Terraform
    0.11, which is 0.11.14\. You can download this version from [https://releases.hashicorp.com/terraform/0.11.14/](https://releases.hashicorp.com/terraform/0.11.14/).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在将代码从版本0.11迁移到最新版本（当前为0.13）之前，您需要确保代码可以与Terraform 0.11的最新版本兼容，即0.11.14。您可以从[https://releases.hashicorp.com/terraform/0.11.14/](https://releases.hashicorp.com/terraform/0.11.14/)下载此版本。
- en: It is important to know that if your Terraform configuration is in version 0.11,
    it is not possible to migrate it directly to 0.13\. You will first have to upgrade
    to 0.12 and then migrate to 0.13.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 需要知道的是，如果你的Terraform配置是版本0.11，无法直接迁移到0.13。你必须先升级到0.12，然后再迁移到0.13。
- en: In addition, before any migration, it is strongly advised to read the upgrade
    documentation provided by HashiCorp (here for 0.12, [https://www.terraform.io/upgrade-guides/0-12.html](https://www.terraform.io/upgrade-guides/0-12.html),
    and here for 0.13, [https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown](https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown)).
    This is because in the upgrade process, as we will study in this recipe, many
    elements are migrated automatically, but others will have to be done manually.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在进行任何迁移之前，强烈建议阅读HashiCorp提供的升级文档（这里是0.12版本的文档，[https://www.terraform.io/upgrade-guides/0-12.html](https://www.terraform.io/upgrade-guides/0-12.html)，这是0.13版本的文档，[https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown](https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown)）。这是因为在升级过程中，正如我们在本食谱中所学到的，许多元素会自动迁移，但其他的则需要手动迁移。
- en: Finally, it is also recommended by HashiCorp, before performing the migration
    process, to commit its code in a source code manager (for example, Git) in order
    to be able to visualize the code changes brought by the migration.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，HashiCorp还建议，在执行迁移过程之前，将代码提交到源代码管理器（例如Git），以便能够查看迁移所带来的代码变化。
- en: The code source (version 0.11) used for this recipe is available here: [https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01/tf011](https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01/tf011)
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 用于本食谱的代码源（版本0.11）可在此处获取：[https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01/tf011](https://github.com/PacktPublishing/Terraform-Cookbook/tree/master/CHAP01/tf011)
- en: How to do it…
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: The upgrade of the Terraform configuration from version 0.11 to version 0.13
    takes place in two steps, First the code has to be migrated to 0.12, and then
    be migrated to 0.13.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 将Terraform配置从版本0.11升级到0.13分为两步，首先必须将代码迁移到0.12，然后再迁移到0.13。
- en: 'To migrate our  Terraform configuration from version 0.11 to version 0.12,
    perform the following steps:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要将我们的Terraform配置从版本0.11迁移到版本0.12，请执行以下步骤：
- en: 'Before migrating this configuration to version 0.12, we must verify that it
    is compatible with this version. To do this, follow these steps:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在将此配置迁移到版本0.12之前，我们必须验证它是否与该版本兼容。为此，请按照以下步骤操作：
- en: 'Using Terraform 0.11.14, in a terminal, execute the following command:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Terraform 0.11.14，在终端中执行以下命令：
- en: '[PRE12]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following screenshot shows the output of executing the preceding command:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了执行前述命令后的输出：
- en: '![](img/8639a559-e442-4965-8adc-80b2409cca09.png)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8639a559-e442-4965-8adc-80b2409cca09.png)'
- en: As we can see, our Terraform configuration is compatible with Terraform version
    0.12\. Now, we can migrate it.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们的Terraform配置与Terraform版本0.12兼容。现在，我们可以进行迁移。
- en: Next, we need to install the latest version of Terraform 0.12 manually, as described
    in the *Downloading and installing Terraform manually* recipe. We can also do
    this via a script, according to our operating system, as shown in the *Installing
    Terraform on Linux* and *Installing Terraform using a script on Windows* recipes.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要手动安装Terraform 0.12的最新版本，如*手动下载并安装Terraform*食谱中所述。根据我们的操作系统，也可以通过脚本来安装，如*在Linux上安装Terraform*和*在Windows上使用脚本安装Terraform*食谱中所示。
- en: 'In the folder that contains our code, we execute the `init` command:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在包含我们代码的文件夹中，我们执行`init`命令：
- en: '[PRE13]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Then, we execute the following command:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们执行以下命令：
- en: '[PRE14]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Finally, we confirm the migration by answering `yes` when prompted to enter
    a value, as shown in the following screenshot:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在提示输入值时，我们通过回答`yes`来确认迁移，如下图所示：
- en: '![](img/ae9b39b4-a4af-4175-b198-e4821473d41e.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ae9b39b4-a4af-4175-b198-e4821473d41e.png)'
- en: 'Then, to migrate our Terraform configuration from version 0.12 to version 0.13,
    perform the following steps:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按照以下步骤将我们的 Terraform 配置从 0.12 版本迁移到 0.13 版本：
- en: Download and install the latest version of Terraform 0.13.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并安装最新版本的 Terraform 0.13。
- en: 'Exactly as before for 0.12, run the `terraform 0.13upgrade` command to upgrade
    the configuration to 0.13:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与 0.12 完全一样，运行`terraform 0.13upgrade`命令将配置升级到 0.13：
- en: '![](img/950b79fb-4466-4d12-8e78-a46e141905cb.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/950b79fb-4466-4d12-8e78-a46e141905cb.png)'
- en: How it works…
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In *step 1*, we verified that our Terraform configuration is compatible with
    the language evolution (HCL 2) included in Terraform 0.12.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第 1 步*中，我们验证了我们的 Terraform 配置与 Terraform 0.12 中包含的语言演进（HCL 2）兼容。
- en: Then, we installed Terraform 0.12 locally and started the migration process
    by executing the `terraform init` command, which is necessary to download the
    different providers that will be called in our code.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在本地安装了 Terraform 0.12，并通过执行`terraform init`命令开始迁移过程，该命令用于下载我们代码中将要调用的不同提供程序。
- en: We migrated the Terraform configuration to the 0.12 version using the `terraform
    0.12upgrade` command, which upgrades the Terraform configuration directly.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`terraform 0.12upgrade`命令将 Terraform 配置迁移到 0.12 版本，该命令直接升级 Terraform 配置。
- en: Finally, to upgrade the Terraform configuration to the 0.13 version, we installed
    the Terraform 0.13 binary and executed the command `terraform 0.13upgrade`.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，若要将 Terraform 配置升级到 0.13 版本，我们安装了 Terraform 0.13 二进制文件并执行了`terraform 0.13upgrade`命令。
- en: There's more…
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: Please note that the migration procedure only changes the current Terraform
    configuration. If our Terraform configuration calls for modules, it is necessary
    to migrate the code of the modules beforehand.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，迁移过程仅更改当前的 Terraform 配置。如果我们的 Terraform 配置调用了模块，则需要事先迁移模块的代码。
- en: See also
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: For more information on the migration procedure for Terraform to version 0.12,
    please refer to the technical documentation at [https://www.terraform.io/upgrade-guides/0-12.html](https://www.terraform.io/upgrade-guides/0-12.html).
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Terraform 迁移到 0.12 版本的程序的更多信息，请参考技术文档：[https://www.terraform.io/upgrade-guides/0-12.html](https://www.terraform.io/upgrade-guides/0-12.html)。
- en: 'To find out more about the evolution of Terraform and the changes that were
    made in this new major version, take a look at the following documentation and
    related articles:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 若想了解 Terraform 的演进及此新大版本中所做的更改，请查看以下文档和相关文章：
- en: '[https://www.hashicorp.com/resources/a-2nd-tour-of-terraform-0-12](https://www.hashicorp.com/resources/a-2nd-tour-of-terraform-0-12)'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.hashicorp.com/resources/a-2nd-tour-of-terraform-0-12](https://www.hashicorp.com/resources/a-2nd-tour-of-terraform-0-12)'
- en: '[https://www.hashicorp.com/blog/announcing-terraform-0-12/](https://www.hashicorp.com/blog/announcing-terraform-0-12/)'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.hashicorp.com/blog/announcing-terraform-0-12/](https://www.hashicorp.com/blog/announcing-terraform-0-12/)'
- en: Finally, the following is the official repository for Terraform: [https://github.com/hashicorp/terraform-guides/tree/master/infrastructure-as-code/terraform-0.12-examples](https://github.com/hashicorp/terraform-guides/tree/master/infrastructure-as-code/terraform-0.12-examples).
    It contains multiple code examples for Terraform 0.12, all of which we will look
    at throughout this book.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，以下是 Terraform 的官方仓库：[https://github.com/hashicorp/terraform-guides/tree/master/infrastructure-as-code/terraform-0-12-examples](https://github.com/hashicorp/terraform-guides/tree/master/infrastructure-as-code/terraform-0-12-examples)。其中包含多个
    Terraform 0.12 的代码示例，我们将在本书中逐一讲解。
- en: Regarding the Terraform 0.13, the upgrade guide is available here – [https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown](https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown),
    and the change log is available here – [https://github.com/hashicorp/terraform/blob/master/CHANGELOG.md](https://github.com/hashicorp/terraform/blob/master/CHANGELOG.md).
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Terraform 0.13，升级指南可以在这里找到 – [https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown](https://github.com/hashicorp/terraform/blob/master/website/upgrade-guides/0-13.html.markdown)，变更日志可以在这里找到 – [https://github.com/hashicorp/terraform/blob/master/CHANGELOG.md](https://github.com/hashicorp/terraform/blob/master/CHANGELOG.md)。
