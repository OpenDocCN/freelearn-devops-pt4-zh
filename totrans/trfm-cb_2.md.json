["```\nvariable \"resource_group_name\" {\n  default = \"rg_test\"\n}\nresource \"azurerm_resource_group\" \"rg\" {\n  name     = var.resource_group_name\n  location = \"West Europe\"\n}\nresource \"azurerm_public_ip\" \"pip\" {\n  name                         = \"bookip\"\n  location                     = \"West Europe\"\n  resource_group_name          = azurerm_resource_group.rg.name\n  public_ip_address_allocation = \"Dynamic\"\n  domain_name_label            = \"bookdevops\"\n}\n```", "```\nterraform {\n  required_version = \">= 0.13\"\n}\n```", "```\nterraform {\n  ...\n  required_providers {\n    azurerm = {\n      source = \"hashicorp/azurerm\"\n      version = \"2.10.0\"\n    }\n  }\n}\n```", "```\nresource \"azurerm_resource_group\" \"rg\" {\n  name     = \"My-RG\"\n  location = \"West Europe\"\n}\n```", "```\nvariable \"resource_group_name\" {\n  description =\"The name of the resource group\"\n}\nvariable \"location\" {\n  description =\"The name of the Azure location\"\n  default =\"West Europe\"\n}\n```", "```\nresource \"azurerm_resource_group\" \"rg\" {\n  name     = var.resource_group_name\n  location = var.location\n}\n```", "```\nresource_group_name = \"My-RG\"\nlocation            = \"westeurope\"\n```", "```\nterraform plan -var \"location=westus\"\n```", "```\nvariable \"location\" {\n  description =\"The name of the Azure location\"\n  default =\"West Europe\"\n  validation { # TF 0.13\n    condition = can(index([\"westeurope\",\"westus\"], var.location) >= 0)\n    error_message = \"The location must be westeurope or westus.\"\n  }\n}\n```", "```\nvariable \"application_name\" {\n  description = \"The name of application\"\n}\nvariable \"environment_name\" {\n  description = \"The name of environment\"\n}\nvariable \"country_code\" {\n  description = \"The country code (FR-US-...)\"\n}\nresource \"azurerm_resource_group\" \"rg\" {\n  name = \"XXXX\" # VARIABLE TO USE\n  location = \"West Europe\"\n}\nresource \"azurerm_public_ip\" \"pip\" {\n  name = \"XXXX\" # VARIABLE TO USE\n  location = \"West Europe\"\n  resource_group_name = azurerm_resource_group.rg.name\n  allocation_method = \"Dynamic\"\n  domain_name_label = \"mydomain\"\n}\n```", "```\nCodeAzureResource - Name Application - Environment name - Country Code\n```", "```\nlocals {\n  resource_name = \"${var.application_name}-${var.environment_name}-${var.country_code}\"\n}\n```", "```\nresource \"azurerm_resource_group\" \"rg\" {\n name = \"RG-${local.resource_name}\"\n location = \"West Europe\"\n}\nresource \"azurerm_public_ip\" \"pip\" {\n name = \"IP-${local.resource_name}\"\n location = \"West Europe\"\n resource_group_name = azurerm_resource_group.rg.name\n public_ip_address_allocation = \"Dynamic\"\n domain_name_label = \"mydomain\"\n}\n```", "```\n...\nresource \"azurerm_app_service\" \"app\" {\n  name                = \"${var.app_name}-${var.environment}\"\n  location            = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = azurerm_app_service_plan.plan-app.id\n}\n...\n```", "```\noutput \"webapp_name\" {\n  description = \"output Name of the webapp\"\n  value = azurerm_app_service.app.name\n}\n```", "```\nresource_group_name = \"RG-App\"\nservice_plan_name = \"Plan-App\"\nenvironment = \"DEV\" #name of the environment to change\n```", "```\nresource_group_name = \"RG-App\"\nservice_plan_name = \"Plan-App\"\nenvironment = \"DEV\" #name of the environment to change\n```", "```\nterraform init\nterraform plan -var-file=\"<environment folder>/terraform.tfvars\"\nterraform apply -var-file=\"<environment folder>/terraform.tfvars\"\n```", "```\ndata \"azurerm_app_service_plan\" \"myplan\" {\n  name                = \"app-service-plan\"\n  resource_group_name = \"rg-service_plan\"\n}\n```", "```\nresource \"azurerm_app_service\" \"app\" {\n  name                = \"${var.app_name}-${var.environement}\"\n  location            = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = data.azurerm_app_service_plan.myplan.id\n}\n```", "```\nresource \"azurerm_app_service_plan\" \"plan-app\" {\n  name = \"MyServicePlan\"\n  location = \"westeurope\"\n  resource_group_name = \"myrg\"\n    sku {\n     tier = \"Standard\"\n     size = \"S1\"\n     }\n}\n\noutput \"service_plan_id\" {\n  description = \"output Id of the service plan\"\n  value = azurerm_app_service_plan.plan-app.id\n}\n```", "```\ndata \"terraform_remote_state\" \"service_plan_tfstate\" {\n  backend = \"azurerm\"\n  config = {\n     resource_group_name = \"rg_tfstate\"\n     storage_account_name = \"storstate\"\n     container_name = \"tfbackends\"\n     key = \"serviceplan.tfstate\"\n  }\n}\n```", "```\nresource \"azurerm_app_service\" \"app\" {\n  name = \"${var.app_name}-${var.environement}\"\n  location = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = data.terraform_remote_state.service_plan_tfstate.service_plan_id\n}\n```", "```\n# Read the JSON payload from stdin\n$jsonpayload = [Console]::In.ReadLine()\n\n# Convert JSON to a string\n$json = ConvertFrom-Json $jsonpayload\n$environment = $json.environment\n\nif($environment -eq \"Production\"){\n $location=\"westeurope\"\n}else{\n $location=\"westus\"\n}\n\n# Write output to stdout\nWrite-Output \"{ \"\"location\"\" : \"\"$location\"\"}\"\n```", "```\ndata \"external\" \"getlocation\" {\n  program = [\"Powershell.exe\", \"./GetLocation.ps1\"]\n  query = {\n      environment = \"${var.environment_name}\"\n  }\n}\n```", "```\nresource \"azurerm_resource_group\" \"rg\" {\n  name = \"RG-${local.resource_name}\"\n  location = data.external.getlocation.result.location\n}\n```", "```\noutput \"locationname\" {\n  value = data.external.getlocation.result.location\n}\n```", "```\nRG-<APP NAME>-<ENVIRONMENT>\n```", "```\nvariable \"app_name\" {\n  description = \"Name of application\"\n}\nvariable \"environement\" {\n  description = \"Environement Name\"\n}\n```", "```\nresource \"azurerm_resource_group\" \"rg-app\" {\n  name     = upper(format(\"RG-%s-%s\",var.app-name,var.environement))\n  location = \"westeurope\"\n}\n```", "```\nresource \"azurerm_resource_group\" \"rg-app\" {\n    name = var.environment == \"Production\" ? upper(format(\"RG-%s\",var.app-name)) : upper(format(\"RG-%s-%s\",var.app-name,var.environment))\n    location = \"westeurope\"\n}\n```", "```\ncondition ? true assert : false assert\n```", "```\nresource \"local_file\" \"myfile\" {\n  content = \"This is my text\"\n  filename = \"../mytextfile.txt\"\n}\n```", "```\nterraform init\nterraform plan -out=\"app.tfplan\"\nterraform apply \"app.tfplan\"\n```", "```\ndata \"archive_file\" \"backup\" {\n  type = \"zip\"\n  source_file = \"../mytextfile.txt\"\n  output_path = \"${path.module}/archives/backup.zip\"\n}\n```", "```\nterraform init\nterraform plan\n```", "```\nresource \"null_resource\" \"readcontentfile\" {\n  provisioner \"local-exec\" {\n   command = \"Get-Content -Path ../mytextfile.txt\"\n   interpreter = [\"PowerShell\", \"-Command\"]\n  }\n}\n```", "```\nterraform init\nterraform plan -out=\"app.tfplan\"\nterraform apply \"app.tfplan\"\n```", "```\nresource \"null_resource\" \"readcontentfile\" {\n  provisioner \"local-exec\" {\n    command = \"myscript.ps1\"\n    interpreter = [\"PowerShell\", \"-Command\"]\n  }\n}\n```", "```\nresource \"null_resource\" \"readcontentfile\" {\n  triggers = {\n trigger = timestamp()\n }\n  provisioner \"local-exec\" {\n   command = \"Get-Content -Path ../mytextfile.txt\"\n   interpreter = [\"PowerShell\", \"-Command\"]\n  }\n}\n```", "```\nresource \"random_password\" \"password\" {\n  length = 16\n  special = true\n  override_special = \"_%@\"\n}\n```", "```\nresource \"azurerm_virtual_machine\" \"myterraformvm\" {\n  name = \"myVM\"\n  location = \"westeurope\"\n  resource_group_name = azurerm_resource_group.myterraformgroup.name\n  network_interface_ids = [azurerm_network_interface.myterraformnic.id]\n  vm_size = \"Standard_DS1_v2\"\n....\n  os_profile {\n     computer_name = \"vmdemo\"\n     admin_username = \"admin\"\n     admin_password = random_password.password.result\n  }\n....\n}\n```"]