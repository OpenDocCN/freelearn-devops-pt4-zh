["```\nresource \"azurerm_app_service\" \"app\" {\n  name                = \"${var.app_name}-${var.environement}\"\n  location            = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = azurerm_app_service_plan.plan-app.id\n}\n```", "```\nvariable \"nb_webapp\" {\n    description = \"Number of App Service to create\"\n}\n```", "```\nnb_webapp = 2\n```", "```\nresource \"azurerm_app_service\" \"app\" {\n  count = var.nb_webapp\n  name = \"${var.app_name}-${var.environement}-${count.index+1}\"\n  location = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = azurerm_app_service_plan.plan-app.id\n}\n```", "```\noutput \"app_service_names\"{\n value = azurerm_app_service.app[*].name\n}\n```", "```\nterraform plan -var \"nb_webapp=5\"\n```", "```\nresource \"azurerm_application_insights\" \"appinsight-app\" {\n  count = use_appinsight == true ? 1 : 0\n  ....\n}\n```", "```\nvariable \"tags\" {\n type = map(string)\n  description = \"Tags\"\n  default = {}\n}\n\nvariable \"app_settings\" {\n  type = map(string)\n  description = \"App settings of the App Service\"\n  default = {}\n}\n```", "```\ntags = {\n  ENV = \"DEV1\"\n  CODE_PROJECT = \"DEMO\"\n}\n\napp_settings = {\n  KEY1 = \"VAL1\"\n}\n```", "```\nresource \"azurerm_resource_group\" \"rg-app\" {\n  name = \"${var.resource_group_name}-${var.environement}\"\n  location = var.location\n  tags = var.tags\n}\n\nresource \"azurerm_app_service\" \"app\" {\n  name = \"${var.app_name}-${var.environement}\"\n  location = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = azurerm_app_service_plan.plan-app.id\n\n  site_config {\n    dotnet_framework_version = \"v4.0\"\n  }\n  app_settings = var.app_settings\n}\n```", "```\nvariable \"custom_app_settings\" {\n description = \"Custom app settings\"\n type = map(string)\n default = {}\n}\n```", "```\ncustom_app_settings = {\n CUSTOM_KEY1 = \"CUSTOM_VAL1\"\n}\n```", "```\nlocals {\n  default_app_settings = {\n  \"DEFAULT_KEY1\" = \"DEFAULT_VAL1\"\n  }\n}\n\nresource \"azurerm_app_service\" \"app\" {\n  name = \"${var.app_name}-${var.environement}\"\n  location = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = azurerm_app_service_plan.plan-app.id\n\n  site_config {\n    dotnet_framework_version = \"v4.0\"\n    scm_type = \"LocalGit\"\n  }\n\n app_settings = merge(local.default_app_settings,var.custom_app_settings)\n}\n```", "```\napp_settings = {\"KEY1\" = \"VAL1\", \"KEY2\" = \"VAL2\"}\n\n```", "```\nresource \"azurerm_app_service\" \"app\" {\n  name = \"${var.app_name}-${var.environement}\"\n  location = azurerm_resource_group.rg-app.location\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = azurerm_app_service_plan.plan-app.id\n}\n```", "```\nvariable \"web_apps\" {\n  description = \"List of App Service to create\"\n  type = any\n}\n```", "```\nweb_apps = {\n webapp1 = {\n \"name\" = \"webappdemobook1\"\n \"location\" = \"West Europe\"\n \"dotnet_framework_version\" = \"v4.0\"\n \"serverdatabase_name\" = \"server1\"\n },\n\n webapp2 = {\n \"name\" = \"webapptestbook2\"\n \"dotnet_framework_version\" = \"v4.0\"\n \"serverdatabase_name\" = \"server2\"\n }\n}\n```", "```\nresource \"azurerm_app_service\" \"app\" {\n for_each = var.web_apps\n  name = each.value[\"name\"]\n  location = lookup(each.value, \"location\", \"West Europe\")\n  resource_group_name = azurerm_resource_group.rg-app.name\n  app_service_plan_id = azurerm_app_service_plan.plan-app.id\n\n  site_config {\n   dotnet_framework_version = each.value[\"dotnet_framework_version\"]\n  }\n\n  connection_string {\n    name = \"DataBase\"\n    type = \"SQLServer\"\n    value = \"Server=${each.value[\"serverdatabase_name\"]};Integrated Security=SSPI\"\n  }\n}\n```", "```\noutput \"app_service_names\" {\n  value = [for app in azurerm_app_service.app : app.name]\n}\n```", "```\nvariable \"ngs_rules\" {\n description = \"List of NSG rules\"\n type = any\n}\n```", "```\nngs_rules = [\n {\n name = \"rule1\"\n priority = 100\n direction = \"Inbound\"\n access = \"Allow\"\n protocol = \"Tcp\"\n source_port_range = \"*\"\n destination_port_range = \"80\"\n source_address_prefix = \"*\"\n destination_address_prefix = \"*\"\n }, \n {\n name = \"rule\"\n priority = 110\n direction = \"Inbound\"\n access = \"Allow\"\n protocol = \"Tcp\"\n source_port_range = \"*\"\n destination_port_range = \"22\"\n source_address_prefix = \"*\"\n destination_address_prefix = \"*\"\n }\n]\n```", "```\nresource \"azurerm_network_security_group\" \"example\" {\n  name = \"acceptanceTestSecurityGroup1\"\n  location = azurerm_resource_group.rg.location\n  resource_group_name = azurerm_resource_group.rg.name\n\n dynamic \"security_rule\" {\n     for_each = var.ngs_rules\n     content {\n      name = security_rule.value[\"name\"]\n      priority = security_rule.value[\"priority\"]\n      direction = security_rule.value[\"direction\"]\n      access = security_rule.value[\"access\"]\n      protocol = security_rule.value[\"protocol\"]\n      source_port_range = security_rule.value[\"source_port_range\"]\n      destination_port_range = security_rule.value[\"destination_port_range\"]\n      source_address_prefix = security_rule.value[\"source_address_prefix\"]\n      destination_address_prefix = security_rule.value[\"destination_address_prefix\"]\n     }\n  }\n}\n```", "```\nresource \"azurerm_linux_virtual_machine\" \"virtual_machine\" {\n...\n  dynamic \"boot_diagnostics\" {\n     for_each = local.use_boot_diagnostics == true ? [1] : []\n     content {\n     storage_account_uri = \"https://storageboot.blob.core.windows.net/\"\n     }\n  }\n}\n```"]