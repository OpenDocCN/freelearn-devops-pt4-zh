["```\nterraform fmt\n```", "```\nterraform init\n```", "```\nterraform validate\n```", "```\n> terraform validate\n> $LASTEXITCODE\n```", "```\n> terraform init\n> terraform plan -out=\"app.tfplan\"\n> terraform apply \"app.tfplan\"\n```", "```\nterraform init\n```", "```\nterraform destroy\n```", "```\nterraform destroy -target azurerm_application_insights.appinsight-app\n```", "```\nresource \"azurerm_resource_group\" \"rg-app\" {\n  name     = \"RG-APP-${terraform.workspace}\"\n  location = \"westeurope\"\n}\n```", "```\nterraform workspace new dev\n```", "```\n> terraform init\n> terraform plan -out=\"outdev.tfplan\"\n> terraform apply \"outdev.tfplan\"\n```", "```\nterraform workspace new prod\n```", "```\n> terraform init\n> terraform plan -out=\"outprod.tfplan\"\n> terraform apply \"outprod.tfplan\"\n```", "```\nterraform workspace list\n```", "```\nterraform workspace select dev\n```", "```\nterraform workspace delete dev\n```", "```\nresource \"azurerm_resource_group\" \"rg-app\" {\n  name     = \"RG-APP-IMPORT\"\n  location = \"westeurope\"\n}\n```", "```\nterraform init\n```", "```\nterraform import azurerm_resource_group.rg-app /subscriptions/8a7aace5-xxxxx-xxx/resourceGroups/RG-APP-IMPORT\n```", "```\noutput \"app_service_urls\" {\n  value = {for x in azurerm_app_service.app :  x.name => x.default_site_hostname  }\n}\n```", "```\n> terraform init\n> terraform plan -out=\"app.tfplan\"\n> terraform apply \"app.tfplan\"\n```", "```\nterraform output\n```", "```\nurlwebapp1=$(terraform output -json | jq -r .app_service_urls.value.webappdemobook1) &&\ncurl -sL \"%{http_code}\" -I \"$urlwebapp1/hostingstart.html\"\n```", "```\nterraform output app_service_urls\n```", "```\nurlwebapp1=$(terraform output app_service_urls -json | jq -r .webappdemobook1) &&\ncurl -sL \"%{http_code}\" -I \"$urlwebapp1/hostingstart.html\"\n```", "```\nterraform taint azurerm_app_service.app\n```", "```\nterraform apply\n```", "```\nterraform state show azurerm_app_service.app\n```", "```\nterraform untaint azurerm_app_service.app\n```", "```\nterraform graph | dot -Tsvg > graph.svg\n```", "```\n$env:TF_LOG = \"TRACE\"\n```", "```\n> terraform init\n> terraform plan -out=app.tfplan\n> terraform apply app.tfplan\n```", "```\n$env:TF_LOG = \"\"\n```"]